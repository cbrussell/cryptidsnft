{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Cryptids.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum Cryptids.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/Cryptids.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Cryptids.sol",
    "exportedSymbols": {
      "Address": [
        2858
      ],
      "Context": [
        2402
      ],
      "Counters": [
        2287
      ],
      "Cryptids": [
        772
      ],
      "ERC165": [
        3085
      ],
      "ERC721": [
        1875
      ],
      "ERC721Enumerable": [
        2213
      ],
      "IERC165": [
        3128
      ],
      "IERC721": [
        2518
      ],
      "IERC721Enumerable": [
        3116
      ],
      "IERC721Metadata": [
        2563
      ],
      "IERC721Receiver": [
        2536
      ],
      "MerkleProof": [
        2380
      ],
      "Ownable": [
        877
      ],
      "Pausable": [
        969
      ],
      "ReentrancyGuard": [
        1009
      ],
      "Strings": [
        3061
      ]
    },
    "id": 773,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 1876,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 2214,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 878,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 1010,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 2288,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 970,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 2381,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1875,
              "src": "727:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "727:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2213,
              "src": "735:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "735:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 969,
              "src": "753:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "753:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 877,
              "src": "763:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "763:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1009,
              "src": "772:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "772:15:16"
          }
        ],
        "canonicalName": "Cryptids",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:216:16",
          "text": "@title Cryptids NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, send, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 772,
        "linearizedBaseContracts": [
          772,
          1009,
          877,
          969,
          2213,
          3116,
          1875,
          2563,
          2518,
          3085,
          3128,
          2402
        ],
        "name": "Cryptids",
        "nameLocation": "715:8:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3061,
              "src": "800:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "794:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "812:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2287,
              "src": "831:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "825:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2219,
                "src": "844:16:16"
              },
              "referencedDeclaration": 2219,
              "src": "844:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2219_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2380,
              "src": "872:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "866:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "888:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "888:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "Cryptids.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "925:4:16",
                "nodeType": "EnumValue",
                "src": "925:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "939:7:16",
                "nodeType": "EnumValue",
                "src": "939:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "956:9:16",
                "nodeType": "EnumValue",
                "src": "956:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "975:8:16",
                "nodeType": "EnumValue",
                "src": "975:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "993:10:16",
                "nodeType": "EnumValue",
                "src": "993:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "909:5:16",
            "nodeType": "EnumDefinition",
            "src": "904:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1040:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1015:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2219_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2219,
                "src": "1015:16:16"
              },
              "referencedDeclaration": 2219,
              "src": "1015:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2219_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1081:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1066:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1111:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1097:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1097:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1145:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1131:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1131:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1155:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1177:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1163:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1163:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1193:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 52,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1222:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1210:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1210:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1239:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 55,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1262:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1250:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 53,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1250:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1285:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 58,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1312:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1297:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1297:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1331:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 62,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1616:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1581:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1589:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1581:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1600:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 64,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1686:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1671:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 66,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1747:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1732:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1732:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 68,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1811:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1796:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1796:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 71,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1855:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "1842:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum Cryptids.Stage"
            },
            "typeName": {
              "id": 70,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1842:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1842:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum Cryptids.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "2070:158:16",
              "statements": [
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2080:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2097:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2080:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:32:16"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2122:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 93,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2140:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2122:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:34:16"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2166:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2176:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2166:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2166:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2194:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2219_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2245,
                      "src": "2194:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2219_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:27:16"
                }
              ]
            },
            "id": 106,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 84,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "2054:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 85,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "2061:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 86,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 83,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1875,
                  "src": "2047:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2047:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1902:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1888:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1931:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1917:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1917:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1962:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1948:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "1988:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1980:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2021:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "2013:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1878:166:16"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:16"
            },
            "scope": 772,
            "src": "1867:361:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2379:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum Cryptids.Stage"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2397:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 117,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2405:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum Cryptids.Stage)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2405:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "src": "2397:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2417:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2389:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 124,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "2458:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2458:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 126,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "2475:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2458:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 128,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "2489:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2458:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2506:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2450:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:101:16"
                },
                {
                  "body": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2603:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 144,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "2627:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 145,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "2631:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2219_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2231,
                                "src": "2631:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2219_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2631:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 143,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1504,
                              1533
                            ],
                            "referencedDeclaration": 1504,
                            "src": "2617:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "2617:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 150,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2671:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2219_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2245,
                            "src": "2671:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2219_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2671:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2671:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 137,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2581:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 138,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "2586:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2581:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "initializationExpression": {
                    "assignments": [
                      134
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2574:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "2566:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2566:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 136,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2578:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2566:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2598:3:16",
                      "subExpression": {
                        "id": 140,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2598:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 142,
                    "nodeType": "ExpressionStatement",
                    "src": "2598:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2561:148:16"
                }
              ]
            },
            "functionSelector": "ae7dd0a8",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 112,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "2364:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2364:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2268:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2300:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2292:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2329:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2321:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2282:55:16"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:16"
            },
            "scope": 772,
            "src": "2259:456:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2889:525:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum Cryptids.Stage"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 169,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2907:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 170,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2916:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum Cryptids.Stage)"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "2916:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "src": "2907:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2933:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2899:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 179,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3002:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 183,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3041:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3041:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 181,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3024:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3024:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3024:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 180,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3014:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3014:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 177,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2983:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2311,
                          "src": "2983:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2983:71:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3056:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2975:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 192,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "3102:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3102:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3119:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3102:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 196,
                            "name": "totalSaleSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "3124:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 197,
                            "name": "teamMintSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "3142:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3124:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3102:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e20657863656564732077686974656c69737420737570706c792e",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                          "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                        },
                        "value": "Transaction exceeds whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                          "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3094:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:104:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:104:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 204,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "3218:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 207,
                          "indexExpression": {
                            "expression": {
                              "id": 205,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3226:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3226:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3218:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3240:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3218:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3210:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3210:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:67:16"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 213,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3288:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 216,
                      "indexExpression": {
                        "expression": {
                          "id": 214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3296:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3296:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3288:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3311:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3288:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3288:24:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3332:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3332:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 223,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3344:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2219_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2231,
                          "src": "3344:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2219_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 220,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1533
                      ],
                      "referencedDeclaration": 1504,
                      "src": "3322:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3322:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 228,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3380:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2219_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2245,
                      "src": "3380:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2219_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 163,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1008,
                  "src": "2848:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2848:12:16"
              },
              {
                "id": 166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 925,
                  "src": "2870:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "2762:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "2804:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2785:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 159,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2785:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 160,
                    "nodeType": "ArrayTypeName",
                    "src": "2785:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2775:46:16"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2889:0:16"
            },
            "scope": 772,
            "src": "2753:661:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3541:573:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum Cryptids.Stage"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 242,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "3559:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 243,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3568:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum Cryptids.Stage)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3568:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "src": "3559:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3584:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3551:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 250,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3629:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3642:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3629:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3645:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3621:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3621:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3621:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 257,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3701:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 258,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3714:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3701:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 260,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "3731:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3701:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3747:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3693:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 266,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "3814:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3814:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 268,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3831:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3814:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 270,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3845:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3814:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3862:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3806:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:97:16"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 275,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3915:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "3932:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3915:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:27:16"
                },
                {
                  "body": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "3994:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 290,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4018:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4018:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 292,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4030:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2219_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 293,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2231,
                                "src": "4030:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2219_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4030:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 289,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1504,
                              1533
                            ],
                            "referencedDeclaration": 1504,
                            "src": "4008:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4008:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 296,
                        "nodeType": "ExpressionStatement",
                        "src": "4008:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 297,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4070:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2219_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2245,
                            "src": "4070:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2219_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4070:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "4070:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "3972:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 284,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "3977:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3972:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "initializationExpression": {
                    "assignments": [
                      280
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3965:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "3957:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3957:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 282,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3969:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3957:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3989:3:16",
                      "subExpression": {
                        "id": 286,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "3989:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 288,
                    "nodeType": "ExpressionStatement",
                    "src": "3989:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3952:156:16"
                }
              ]
            },
            "functionSelector": "2fbba115",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "3526:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3526:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3456:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3482:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3474:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3464:34:16"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3541:0:16"
            },
            "scope": 772,
            "src": "3447:667:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "4244:381:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum Cryptids.Stage"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 313,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "4262:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 314,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4271:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum Cryptids.Stage)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4271:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum Cryptids.Stage"
                          }
                        },
                        "src": "4262:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4289:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4254:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4254:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "4254:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 321,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "4336:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4336:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4353:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4336:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 325,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "4358:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4336:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4375:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4328:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:88:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4328:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 331,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "4434:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 334,
                          "indexExpression": {
                            "expression": {
                              "id": 332,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4442:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4442:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4434:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4456:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4434:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61782032204372797074696473207065722077616c6c65742e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4459:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_537b75a3a779372d0134caa41c1d616d655a7bcaaec1bd42dcea4efed6e7e640",
                          "typeString": "literal_string \"Max 2 Cryptids per wallet.\""
                        },
                        "value": "Max 2 Cryptids per wallet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_537b75a3a779372d0134caa41c1d616d655a7bcaaec1bd42dcea4efed6e7e640",
                          "typeString": "literal_string \"Max 2 Cryptids per wallet.\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4426:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4426:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4426:62:16"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 340,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4499:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "expression": {
                          "id": 341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4507:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4507:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4499:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4522:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4499:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:24:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4543:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4543:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 350,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "4555:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2219_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2231,
                          "src": "4555:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2219_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4555:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 347,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1533
                      ],
                      "referencedDeclaration": 1504,
                      "src": "4533:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 355,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "4591:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2219_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2245,
                      "src": "4591:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2219_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2219_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4591:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4591:27:16"
                }
              ]
            },
            "functionSelector": "26092b83",
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 307,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1008,
                  "src": "4202:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4202:12:16"
              },
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 925,
                  "src": "4224:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4224:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4158:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4168:7:16"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:0:16"
            },
            "scope": 772,
            "src": "4149:476:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "4689:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 366,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "4699:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 364,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 363,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "4679:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4679:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "4662:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:2:16"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4689:0:16"
            },
            "scope": 772,
            "src": "4653:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "4758:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 375,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "4768:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4768:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "4768:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 372,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "4748:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4748:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "4729:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4736:2:16"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4758:0:16"
            },
            "scope": 772,
            "src": "4720:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "4862:44:16",
              "statements": [
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 388,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4872:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 390,
                      "indexExpression": {
                        "id": 389,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "4880:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4872:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 391,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "4893:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4872:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4872:27:16"
                }
              ]
            },
            "functionSelector": "61aec1e0",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 385,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "4853:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4853:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "4800:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "4817:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4809:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4809:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4836:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4828:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4828:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4808:35:16"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4862:0:16"
            },
            "scope": 772,
            "src": "4791:115:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "4975:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4985:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "4998:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4985:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "4985:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 400,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 399,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "4965:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4965:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "4921:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "4943:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "4935:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4935:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4934:21:16"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4975:0:16"
            },
            "scope": 772,
            "src": "4912:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "5088:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5106:15:16",
                        "subExpression": {
                          "id": 415,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5107:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5123:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5098:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5098:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5098:46:16"
                },
                {
                  "expression": {
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 420,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5154:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 421,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "5164:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5154:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 411,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "5078:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5078:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5031:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5056:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "5042:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5041:27:16"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5088:0:16"
            },
            "scope": 772,
            "src": "5022:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "5237:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 433,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5261:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5255:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5255:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5255:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5255:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5279:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5255:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5282:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5247:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5327:15:16",
                        "subExpression": {
                          "id": 442,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5328:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5319:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5319:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "5319:54:16"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 447,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5383:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5400:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5383:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 427,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "5227:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5227:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5202:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5215:2:16"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5237:0:16"
            },
            "scope": 772,
            "src": "5193:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "5495:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 459,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "5505:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 460,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "5521:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5505:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "5505:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 457,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 456,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "5485:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5485:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "5426:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "5457:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "5443:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5443:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5442:33:16"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5495:0:16"
            },
            "scope": 772,
            "src": "5417:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "5628:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 474,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "5652:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5646:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 472,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5646:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5646:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5646:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5678:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5646:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5681:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5638:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "5638:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5741:21:16",
                        "subExpression": {
                          "id": 483,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5742:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5764:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5733:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5733:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "5733:60:16"
                },
                {
                  "expression": {
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 488,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "5803:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 489,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "5820:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5803:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "5803:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 469,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 468,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "5618:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5618:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "5560:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "5592:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "5578:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5577:31:16"
            },
            "returnParameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5628:0:16"
            },
            "scope": 772,
            "src": "5551:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "5899:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 501,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "5923:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5917:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 499,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5917:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5917:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5948:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5917:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5951:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5909:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5909:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "5909:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5999:21:16",
                        "subExpression": {
                          "id": 510,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6000:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6022:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5991:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5991:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "5991:68:16"
                },
                {
                  "expression": {
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 515,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "6069:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6092:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6069:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "6069:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 496,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 495,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "5889:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5889:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "5857:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5877:2:16"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5899:0:16"
            },
            "scope": 772,
            "src": "5848:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "6184:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 527,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6194:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 528,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "6213:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6194:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "6194:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "6174:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6174:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6118:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6146:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "6138:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6138:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6137:27:16"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6184:0:16"
            },
            "scope": 772,
            "src": "6109:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "6282:249:16",
              "statements": [
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6300:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "6292:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6292:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 541,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6318:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cryptids_$772",
                            "typeString": "contract Cryptids"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Cryptids_$772",
                            "typeString": "contract Cryptids"
                          }
                        ],
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6310:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6310:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6310:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6310:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6292:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 546,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "6349:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6359:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6349:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2062616c616e636520746f2077697468647261772e",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6362:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2653f3008bd39e1cfb6ca0ae06e6de69badbc33bb3d0f8838f3f90235d742b10",
                          "typeString": "literal_string \"No balance to withdraw.\""
                        },
                        "value": "No balance to withdraw."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2653f3008bd39e1cfb6ca0ae06e6de69badbc33bb3d0f8838f3f90235d742b10",
                          "typeString": "literal_string \"No balance to withdraw.\""
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6341:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:47:16"
                },
                {
                  "assignments": [
                    553,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6404:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "6399:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6399:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 563,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6464:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "6425:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6417:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 554,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6417:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6417:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6417:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 559,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "6455:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6417:46:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6417:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6398:69:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 565,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "6485:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2077697468647261772062616c616e63652e",
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6494:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0839c06bc9417f5c3087239c190f92896d6a9ff5f443ee8d1a064f99f9446bb9",
                          "typeString": "literal_string \"Failed to withdraw balance.\""
                        },
                        "value": "Failed to withdraw balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0839c06bc9417f5c3087239c190f92896d6a9ff5f443ee8d1a064f99f9446bb9",
                          "typeString": "literal_string \"Failed to withdraw balance.\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6477:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "6477:47:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "6272:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6272:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6252:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6260:2:16"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6282:0:16"
            },
            "scope": 772,
            "src": "6243:288:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "6588:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 579,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6606:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6630:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6606:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6636:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6598:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6598:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "6598:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 586,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6713:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6727:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6713:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6730:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6705:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6705:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:78:16"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 592,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "6793:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum Cryptids.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 593,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "6801:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum Cryptids.Stage"
                      }
                    },
                    "src": "6793:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum Cryptids.Stage"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "6793:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 576,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 575,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "6578:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6578:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "6546:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "6561:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "6555:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum Cryptids.Stage"
                  },
                  "typeName": {
                    "id": 572,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 571,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "6555:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "6555:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum Cryptids.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6554:14:16"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6588:0:16"
            },
            "scope": 772,
            "src": "6537:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "6909:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 603,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1964,
                          "src": "6934:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6934:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 602,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "6926:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6926:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 601,
                  "id": 606,
                  "nodeType": "Return",
                  "src": "6919:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "6860:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6875:2:16"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "6901:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6900:9:16"
            },
            "scope": 772,
            "src": "6851:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "7014:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 613,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1964,
                          "src": "7031:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7031:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 615,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7030:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 612,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "7024:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "6970:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6980:2:16"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "7006:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7006:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7005:9:16"
            },
            "scope": 772,
            "src": "6961:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1217
            ],
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "7146:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 628,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "7172:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 627,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "7164:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7164:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7182:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7156:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7156:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "7156:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 637,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "7274:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 638,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 620,
                                "src": "7283:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2943,
                              "src": "7283:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7283:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 641,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7303:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 635,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7257:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7257:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7257:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7250:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7250:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7250:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "7243:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7067:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 622,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7113:8:16"
            },
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7084:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7076:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7076:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7075:17:16"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7131:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7131:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7130:15:16"
            },
            "scope": 772,
            "src": "7058:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "7388:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 651,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "7405:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 652,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1964,
                        "src": "7423:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7423:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7405:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 650,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "7398:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "7340:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7353:2:16"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "7379:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7379:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7378:9:16"
            },
            "scope": 772,
            "src": "7331:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "7532:274:16",
              "statements": [
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "7550:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 704,
                      "src": "7542:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 665,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7542:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 668,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "7578:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 667,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1127,
                      "src": "7568:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7568:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7542:42:16"
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "7611:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 704,
                      "src": "7594:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7594:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 674,
                        "nodeType": "ArrayTypeName",
                        "src": "7594:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 679,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "7637:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7623:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 677,
                        "nodeType": "ArrayTypeName",
                        "src": "7627:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7623:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7594:59:16"
                },
                {
                  "body": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "7705:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 691,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "7719:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 693,
                            "indexExpression": {
                              "id": 692,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "7729:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7719:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 695,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 659,
                                "src": "7754:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 696,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "7761:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 694,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1953,
                              "src": "7734:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7734:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7719:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 699,
                        "nodeType": "ExpressionStatement",
                        "src": "7719:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 685,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "7679:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 686,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "7683:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7679:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 701,
                  "initializationExpression": {
                    "assignments": [
                      683
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7676:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "7668:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7668:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 684,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7668:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7700:3:16",
                      "subExpression": {
                        "id": 688,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "7700:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 690,
                    "nodeType": "ExpressionStatement",
                    "src": "7700:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "7663:111:16"
                },
                {
                  "expression": {
                    "id": 702,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 675,
                    "src": "7790:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 664,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "7783:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "7462:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7484:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7476:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7476:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7475:15:16"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7514:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 661,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7514:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 662,
                    "nodeType": "ArrayTypeName",
                    "src": "7514:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7513:18:16"
            },
            "scope": 772,
            "src": "7453:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "7906:148:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "7939:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 721,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "7978:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 719,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7961:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "7961:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7961:25:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 718,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7951:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7951:36:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 715,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "7920:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2311,
                      "src": "7920:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7920:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 728,
                  "nodeType": "IfStatement",
                  "src": "7916:110:16",
                  "trueBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "7990:36:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8011:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 714,
                        "id": 726,
                        "nodeType": "Return",
                        "src": "8004:11:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8042:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 714,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "8035:12:16"
                }
              ]
            },
            "functionSelector": "b76a0df4",
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "7821:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7836:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7828:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7828:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "7864:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7845:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 708,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7845:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 709,
                    "nodeType": "ArrayTypeName",
                    "src": "7845:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7827:49:16"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7900:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7900:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7899:6:16"
            },
            "scope": 772,
            "src": "7812:242:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1863,
              2051
            ],
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "8195:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "8232:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 750,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "8238:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 751,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "8242:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 746,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8205:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Cryptids_$772_$",
                          "typeString": "type(contract super Cryptids)"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2051,
                      "src": "8205:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8205:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8205:45:16"
                }
              ]
            },
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 740,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 925,
                  "src": "8146:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8146:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8073:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 744,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 742,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1875,
                  "src": "8169:6:16"
                },
                {
                  "id": 743,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2213,
                  "src": "8177:16:16"
                }
              ],
              "src": "8160:34:16"
            },
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8102:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "8094:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8094:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8116:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "8108:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8128:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "8120:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8093:43:16"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8195:0:16"
            },
            "scope": 772,
            "src": "8064:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1103,
              1925
            ],
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "8440:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 767,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "8481:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 765,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8457:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Cryptids_$772_$",
                          "typeString": "type(contract super Cryptids)"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1925,
                      "src": "8457:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8457:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 764,
                  "id": 769,
                  "nodeType": "Return",
                  "src": "8450:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8340:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 761,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 759,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1875,
                  "src": "8399:6:16"
                },
                {
                  "id": 760,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2213,
                  "src": "8407:16:16"
                }
              ],
              "src": "8390:34:16"
            },
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8365:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8358:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8358:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8357:20:16"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8434:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8434:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8433:6:16"
            },
            "scope": 772,
            "src": "8331:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 773,
        "src": "706:7797:16",
        "usedErrors": []
      }
    ],
    "src": "32:8472:16"
  },
  "bytecode": "",
  "bytecodeSha1": "a11effc0de57915c39225f8fae0e8fdc016db979",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Cryptids",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "198": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "200": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "197": [
            1643,
            1671,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "Cryptids.airdropCryptid": {
          "171": [
            2397,
            2415,
            true
          ],
          "172": [
            2458,
            2504,
            true
          ]
        },
        "Cryptids.freezeBaseURI": {
          "175": [
            5255,
            5280,
            true
          ],
          "176": [
            5327,
            5342,
            true
          ]
        },
        "Cryptids.freezeProvenanceHash": {
          "169": [
            5917,
            5949,
            true
          ],
          "170": [
            5999,
            6020,
            true
          ]
        },
        "Cryptids.publicMint": {
          "157": [
            4262,
            4287,
            true
          ],
          "158": [
            4336,
            4373,
            true
          ]
        },
        "Cryptids.setBaseURI": {
          "168": [
            5106,
            5121,
            true
          ]
        },
        "Cryptids.setProvenanceHash": {
          "155": [
            5646,
            5679,
            true
          ],
          "156": [
            5741,
            5762,
            true
          ]
        },
        "Cryptids.setStage": {
          "174": [
            6606,
            6634,
            true
          ]
        },
        "Cryptids.teamMint": {
          "159": [
            3559,
            3582,
            true
          ],
          "160": [
            3629,
            3643,
            true
          ],
          "161": [
            3701,
            3745,
            true
          ],
          "162": [
            3814,
            3860,
            true
          ]
        },
        "Cryptids.verify": {
          "173": [
            7920,
            7988,
            false
          ]
        },
        "Cryptids.whitelistMint": {
          "163": [
            2907,
            2931,
            true
          ],
          "164": [
            2983,
            3054,
            true
          ],
          "165": [
            3102,
            3156,
            true
          ]
        },
        "Cryptids.withdraw": {
          "166": [
            6349,
            6360,
            true
          ],
          "167": [
            6485,
            6492,
            true
          ]
        }
      },
      "2": {
        "Cryptids.whitelistMint": {
          "199": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "189": [
            9157,
            9173,
            true
          ]
        },
        "ERC721._safeMint": {
          "188": [
            8619,
            8673,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "187": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "186": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "184": [
            10579,
            10610,
            true
          ],
          "185": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "177": [
            3674,
            3685,
            true
          ],
          "178": [
            3755,
            3776,
            true
          ],
          "179": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "182": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "181": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "183": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.transferFrom": {
          "180": [
            4915,
            4956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "192": [
            2823,
            2841,
            false
          ],
          "193": [
            2918,
            2928,
            false
          ],
          "194": [
            3015,
            3031,
            false
          ],
          "195": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "196": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "191": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "190": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "107": [
            2378,
            2395
          ],
          "108": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "59": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "87": [
            1998,
            2071
          ],
          "88": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "109": [
            1922,
            1936
          ],
          "110": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "105": [
            2168,
            2183
          ],
          "106": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "23": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "25": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "116": [
            627,
            637
          ],
          "117": [
            743,
            751
          ],
          "118": [
            765,
            775
          ],
          "119": [
            877,
            888
          ],
          "120": [
            902,
            958
          ],
          "121": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "127": [
            1769,
            1826
          ],
          "128": [
            1943,
            2000
          ],
          "129": [
            1575,
            1578
          ]
        },
        "MerkleProof.verify": {
          "104": [
            999,
            1039
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "123": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "Cryptids._beforeTokenTransfer": {
          "124": [
            8205,
            8250
          ]
        },
        "Cryptids.airdropCryptid": {
          "67": [
            2389,
            2440
          ],
          "68": [
            2450,
            2551
          ],
          "69": [
            2617,
            2657
          ],
          "70": [
            2671,
            2698
          ],
          "71": [
            2598,
            2601
          ]
        },
        "Cryptids.freezeBaseURI": {
          "84": [
            5247,
            5309
          ],
          "85": [
            5319,
            5373
          ],
          "86": [
            5383,
            5404
          ]
        },
        "Cryptids.freezeProvenanceHash": {
          "61": [
            5909,
            5981
          ],
          "62": [
            5991,
            6059
          ],
          "63": [
            6069,
            6096
          ]
        },
        "Cryptids.getTokensLeft": {
          "83": [
            7398,
            7436
          ]
        },
        "Cryptids.lastMintAddress": {
          "56": [
            6919,
            6948
          ]
        },
        "Cryptids.lastMintID": {
          "81": [
            7024,
            7045
          ]
        },
        "Cryptids.pause": {
          "64": [
            4699,
            4707
          ]
        },
        "Cryptids.publicMint": {
          "18": [
            4254,
            4318
          ],
          "19": [
            4328,
            4416
          ],
          "20": [
            4426,
            4488
          ],
          "21": [
            4499,
            4523
          ],
          "22": [
            4533,
            4581
          ],
          "24": [
            4591,
            4618
          ]
        },
        "Cryptids.setBaseExtension": {
          "82": [
            5505,
            5538
          ]
        },
        "Cryptids.setBaseURI": {
          "52": [
            5098,
            5144
          ],
          "53": [
            5154,
            5175
          ]
        },
        "Cryptids.setClaim": {
          "54": [
            4872,
            4899
          ]
        },
        "Cryptids.setMerkleRoot": {
          "60": [
            4985,
            5009
          ]
        },
        "Cryptids.setProvenanceHash": {
          "13": [
            5638,
            5723
          ],
          "14": [
            5733,
            5793
          ],
          "15": [
            5803,
            5835
          ]
        },
        "Cryptids.setStage": {
          "78": [
            6598,
            6695
          ],
          "79": [
            6705,
            6783
          ],
          "80": [
            6793,
            6807
          ]
        },
        "Cryptids.setWithdrawlAddress": {
          "89": [
            6194,
            6230
          ]
        },
        "Cryptids.supportsInterface": {
          "4": [
            8450,
            8493
          ]
        },
        "Cryptids.teamMint": {
          "28": [
            3551,
            3611
          ],
          "29": [
            3621,
            3683
          ],
          "30": [
            3693,
            3793
          ],
          "31": [
            3806,
            3903
          ],
          "32": [
            3915,
            3942
          ],
          "33": [
            4008,
            4056
          ],
          "34": [
            4070,
            4097
          ],
          "35": [
            3989,
            3992
          ]
        },
        "Cryptids.tokenURI": {
          "76": [
            7156,
            7233
          ],
          "77": [
            7243,
            7318
          ]
        },
        "Cryptids.unpause": {
          "45": [
            4768,
            4778
          ]
        },
        "Cryptids.verify": {
          "72": [
            8004,
            8015
          ],
          "73": [
            8035,
            8047
          ]
        },
        "Cryptids.walletOfOwner": {
          "47": [
            7719,
            7763
          ],
          "48": [
            7700,
            7703
          ],
          "49": [
            7783,
            7799
          ]
        },
        "Cryptids.whitelistMint": {
          "36": [
            2899,
            2965
          ],
          "37": [
            2975,
            3084
          ],
          "38": [
            3094,
            3198
          ],
          "39": [
            3210,
            3277
          ],
          "40": [
            3288,
            3312
          ],
          "41": [
            3322,
            3370
          ],
          "42": [
            3380,
            3407
          ]
        },
        "Cryptids.withdraw": {
          "43": [
            6341,
            6388
          ],
          "44": [
            6477,
            6524
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "91": [
            11242,
            11271
          ],
          "92": [
            11281,
            11332
          ]
        },
        "ERC721._checkOnERC721Received": {
          "130": [
            12820,
            12880
          ],
          "131": [
            12654,
            12712
          ],
          "132": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "6": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "93": [
            7551,
            7624
          ],
          "94": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "139": [
            9149,
            9210
          ],
          "140": [
            9220,
            9278
          ],
          "141": [
            9289,
            9334
          ],
          "142": [
            9345,
            9363
          ],
          "143": [
            9373,
            9394
          ],
          "144": [
            9405,
            9443
          ]
        },
        "ERC721._safeMint": {
          "103": [
            8191,
            8217
          ],
          "125": [
            8570,
            8588
          ],
          "126": [
            8598,
            8749
          ]
        },
        "ERC721._safeTransfer": {
          "114": [
            6700,
            6728
          ],
          "115": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "111": [
            11607,
            11662
          ],
          "112": [
            11672,
            11718
          ],
          "113": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "95": [
            10571,
            10652
          ],
          "96": [
            10662,
            10727
          ],
          "97": [
            10738,
            10777
          ],
          "98": [
            10839,
            10868
          ],
          "99": [
            10879,
            10899
          ],
          "100": [
            10909,
            10927
          ],
          "101": [
            10937,
            10958
          ],
          "102": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "9": [
            3666,
            3723
          ],
          "11": [
            3734,
            3899
          ],
          "12": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "57": [
            2020,
            2094
          ],
          "58": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4094,
            4167
          ],
          "8": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "5": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "55": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "46": [
            5255,
            5294
          ],
          "74": [
            5528,
            5631
          ],
          "75": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "66": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "122": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "65": [
            2731,
            2745
          ]
        },
        "ERC721.transferFrom": {
          "16": [
            4907,
            5010
          ],
          "17": [
            5021,
            5049
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "134": [
            3978,
            4022
          ],
          "135": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "153": [
            3621,
            3655
          ],
          "154": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "133": [
            2857,
            2897
          ],
          "136": [
            2944,
            2991
          ],
          "137": [
            3047,
            3092
          ],
          "138": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "149": [
            6669,
            6705
          ],
          "150": [
            6773,
            6814
          ],
          "151": [
            6935,
            6966
          ],
          "152": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "145": [
            5269,
            5313
          ],
          "146": [
            5385,
            5428
          ],
          "147": [
            5559,
            5592
          ],
          "148": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "90": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "50": [
            1892,
            1987
          ],
          "51": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "26": [
            1407,
            1494
          ],
          "27": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103275760003560e01c806378231978116101b8578063c321458111610104578063da3ef23f116100a2578063e985e9c51161007c578063e985e9c514610656578063f2fde38b14610692578063f4efa3e6146106a5578063ffa9cd3b146106b857600080fd5b8063da3ef23f14610633578063de5f986614610646578063e7bc82081461064e57600080fd5b8063c87b56dd116100de578063c87b56dd146105e5578063c884ef83146105f8578063ce3cd99714610618578063d6d67a091461062b57600080fd5b8063c3214581146105cc578063c6682862146105d5578063c6ab67a3146105dd57600080fd5b80639a2a9c3d11610171578063b76a0df41161014b578063b76a0df41461057f578063b88d4fde14610592578063c040e6b8146105a5578063c29de630146105bf57600080fd5b80639a2a9c3d14610547578063a22cb46514610559578063ae7dd0a81461056c57600080fd5b806378231978146104fd5780637cb647591461050657806381c162f2146105195780638456cb59146105215780638da5cb5b1461052957806395d89b411461053f57600080fd5b80633ccfd60b116102775780635c975abb116102305780636c0360eb1161020a5780636c0360eb146104d25780636cbb8985146104da57806370a08231146104e2578063715018a6146104f557600080fd5b80635c975abb146104a157806361aec1e0146104ac5780636352211e146104bf57600080fd5b80633ccfd60b146104385780633f4ba83a1461044057806342842e0e14610448578063438b63001461045b5780634f6ccce71461047b57806355f804b31461048e57600080fd5b806318160ddd116102e45780632eb4a7ab116102be5780632eb4a7ab146103f65780632f745c59146103ff5780632fbba11514610412578063372f657c1461042557600080fd5b806318160ddd146103d357806323b872dd146103db57806326092b83146103ee57600080fd5b806301ffc9a71461032c57806306fdde0314610354578063081812fc14610369578063088139a614610394578063095ea7b3146103ab57806310969523146103c0575b600080fd5b61033f61033a366004612bbd565b6106d1565b60405190151581526020015b60405180910390f35b61035c6106e2565b60405161034b9190612c32565b61037c610377366004612c45565b610774565b6040516001600160a01b03909116815260200161034b565b61039d60145481565b60405190815260200161034b565b6103be6103b9366004612c7a565b61080e565b005b6103be6103ce366004612d30565b610924565b60085461039d565b6103be6103e9366004612d79565b610a24565b6103be610a55565b61039d600d5481565b61039d61040d366004612c7a565b610c11565b6103be610420366004612c45565b610ca7565b6103be610433366004612e01565b610e8f565b6103be611158565b6103be61127f565b6103be610456366004612d79565b6112b9565b61046e610469366004612e43565b6112d4565b60405161034b9190612e5e565b61039d610489366004612c45565b611376565b6103be61049c366004612d30565b611409565b600a5460ff1661033f565b6103be6104ba366004612c7a565b611494565b61037c6104cd366004612c45565b6114e0565b61035c611557565b61037c6115e5565b61039d6104f0366004612e43565b6115f8565b6103be61167f565b61039d60155481565b6103be610514366004612c45565b6116b9565b6103be6116ee565b6103be6117f0565b600a5461010090046001600160a01b031661037c565b61035c611828565b60115461033f90610100900460ff1681565b6103be610567366004612ea2565b611837565b6103be61057a366004612ede565b611842565b61033f61058d366004612f0a565b61197e565b6103be6105a0366004612f5d565b611a12565b6016546105b29060ff1681565b60405161034b9190612fef565b60115461033f9060ff1681565b61039d60135481565b61035c611a4a565b61035c611a57565b61035c6105f3366004612c45565b611a64565b61039d610606366004612e43565b60126020526000908152604090205481565b6103be610626366004613017565b611b19565b61039d611c5d565b6103be610641366004612d30565b611c68565b61039d611cab565b6103be611cc3565b61033f610664366004613038565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6103be6106a0366004612e43565b611db3565b6103be6106b3366004612e43565b611e54565b60115461037c906201000090046001600160a01b031681565b60006106dc82611eb7565b92915050565b6060600080546106f190613062565b80601f016020809104026020016040519081016040528092919081815260200182805461071d90613062565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107f25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610819826114e0565b9050806001600160a01b0316836001600160a01b031614156108875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107e9565b336001600160a01b03821614806108a357506108a38133610664565b6109155760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107e9565b61091f8383611edc565b505050565b600a546001600160a01b036101009091041633146109545760405162461bcd60e51b81526004016107e99061309d565b60008151116109b55760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b60648201526084016107e9565b601154610100900460ff1615610a0d5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e00000000000060448201526064016107e9565b8051610a2090600e906020840190612b0e565b5050565b610a2e3382611f4a565b610a4a5760405162461bcd60e51b81526004016107e9906130d2565b61091f838383612041565b6002600b541415610aa85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107e9565b6002600b55600a5460ff1615610ad05760405162461bcd60e51b81526004016107e990613123565b600460165460ff166004811115610ae957610ae9612fd9565b14610b365760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e00000000000060448201526064016107e9565b601554600854610b47906001613163565b1115610b655760405162461bcd60e51b81526004016107e99061317b565b33600090815260126020526040902054600211610bc45760405162461bcd60e51b815260206004820152601a60248201527f4d61782032204372797074696473207065722077616c6c65742e00000000000060448201526064016107e9565b336000908152601260205260408120805460019290610be4908490613163565b90915550610bfc905033610bf7600c5490565b6121e8565b610c0a600c80546001019055565b6001600b55565b6000610c1c836115f8565b8210610c7e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016107e9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610cd75760405162461bcd60e51b81526004016107e99061309d565b600360165460ff166004811115610cf057610cf0612fd9565b14610d3d5760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e000000000000000060448201526064016107e9565b60008111610d995760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b60648201526084016107e9565b601354601454610da99083613163565b1115610e0b5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b60648201526084016107e9565b60155481610e1860085490565b610e229190613163565b1115610e405760405162461bcd60e51b81526004016107e99061317b565b8060146000828254610e529190613163565b90915550600190505b818111610a2057610e6f33610bf7600c5490565b610e7d600c80546001019055565b80610e87816131c1565b915050610e5b565b6002600b541415610ee25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107e9565b6002600b55600a5460ff1615610f0a5760405162461bcd60e51b81526004016107e990613123565b600260165460ff166004811115610f2357610f23612fd9565b14610f705760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e00000060448201526064016107e9565b600d546040516bffffffffffffffffffffffff193360601b166020820152610fe99190603401604051602081830303815290604052805190602001208484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506122029050565b6110355760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e0000000000000060448201526064016107e9565b60135460155461104591906131dc565b600854611053906001613163565b11156110af5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e20657863656564732077686974656c6973742073756044820152643838363c9760d91b60648201526084016107e9565b3360009081526012602052604090205460011161110e5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e0060448201526064016107e9565b33600090815260126020526040812080546001929061112e908490613163565b90915550611141905033610bf7600c5490565b61114f600c80546001019055565b50506001600b55565b600a546001600160a01b036101009091041633146111885760405162461bcd60e51b81526004016107e99061309d565b47806111d65760405162461bcd60e51b815260206004820152601760248201527f4e6f2062616c616e636520746f2077697468647261772e00000000000000000060448201526064016107e9565b6011546040516000916201000090046001600160a01b03169083908381818185875af1925050503d8060008114611229576040519150601f19603f3d011682016040523d82523d6000602084013e61122e565b606091505b5050905080610a205760405162461bcd60e51b815260206004820152601b60248201527f4661696c656420746f2077697468647261772062616c616e63652e000000000060448201526064016107e9565b600a546001600160a01b036101009091041633146112af5760405162461bcd60e51b81526004016107e99061309d565b6112b7612218565b565b61091f83838360405180602001604052806000815250611a12565b606060006112e1836115f8565b905060008167ffffffffffffffff8111156112fe576112fe612ca4565b604051908082528060200260200182016040528015611327578160200160208202803683370190505b50905060005b8281101561136e5761133f8582610c11565b828281518110611351576113516131f3565b602090810291909101015280611366816131c1565b91505061132d565b509392505050565b600061138160085490565b82106113e45760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016107e9565b600882815481106113f7576113f76131f3565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146114395760405162461bcd60e51b81526004016107e99061309d565b60115460ff16156114815760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b60448201526064016107e9565b8051610a2090600f906020840190612b0e565b600a546001600160a01b036101009091041633146114c45760405162461bcd60e51b81526004016107e99061309d565b6001600160a01b03909116600090815260126020526040902055565b6000818152600260205260408120546001600160a01b0316806106dc5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107e9565b600f805461156490613062565b80601f016020809104026020016040519081016040528092919081815260200182805461159090613062565b80156115dd5780601f106115b2576101008083540402835291602001916115dd565b820191906000526020600020905b8154815290600101906020018083116115c057829003601f168201915b505050505081565b60006115f36104cd60085490565b905090565b60006001600160a01b0382166116635760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107e9565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146116af5760405162461bcd60e51b81526004016107e99061309d565b6112b760006122ab565b600a546001600160a01b036101009091041633146116e95760405162461bcd60e51b81526004016107e99061309d565b600d55565b600a546001600160a01b0361010090910416331461171e5760405162461bcd60e51b81526004016107e99061309d565b6000600e805461172d90613062565b90501161177c5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e000000000060448201526064016107e9565b601154610100900460ff16156117df5760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b60648201526084016107e9565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146118205760405162461bcd60e51b81526004016107e99061309d565b6112b7612305565b6060600180546106f190613062565b610a2033838361235d565b600a546001600160a01b036101009091041633146118725760405162461bcd60e51b81526004016107e99061309d565b600060165460ff16600481111561188b5761188b612fd9565b116118cf5760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b60448201526064016107e9565b601554826118dc60085490565b6118e69190613163565b11156119475760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b60648201526084016107e9565b60015b82811161091f5761195e82610bf7600c5490565b61196c600c80546001019055565b80611976816131c1565b91505061194a565b600d546040516bffffffffffffffffffffffff19606086901b1660208201526000916119fa91603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506122029050565b15611a0757506001611a0b565b5060005b9392505050565b611a1c3383611f4a565b611a385760405162461bcd60e51b81526004016107e9906130d2565b611a448484848461242c565b50505050565b6010805461156490613062565b600e805461156490613062565b6000818152600260205260409020546060906001600160a01b0316611ae45760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b60648201526084016107e9565b600f611aef8361245f565b6010604051602001611b03939291906132a3565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611b495760405162461bcd60e51b81526004016107e99061309d565b60115460ff610100909104161515600114611bcc5760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e000000000000000060648201526084016107e9565b600d54611c365760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b60648201526084016107e9565b6016805482919060ff19166001836004811115611c5557611c55612fd9565b021790555050565b60006115f360085490565b600a546001600160a01b03610100909104163314611c985760405162461bcd60e51b81526004016107e99061309d565b8051610a20906010906020840190612b0e565b6000611cb660085490565b6015546115f391906131dc565b600a546001600160a01b03610100909104163314611cf35760405162461bcd60e51b81526004016107e99061309d565b6000600f8054611d0290613062565b905011611d515760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e000000000000000060448201526064016107e9565b60115460ff1615611da45760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e00000000000060448201526064016107e9565b6011805460ff19166001179055565b600a546001600160a01b03610100909104163314611de35760405162461bcd60e51b81526004016107e99061309d565b6001600160a01b038116611e485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107e9565b611e51816122ab565b50565b600a546001600160a01b03610100909104163314611e845760405162461bcd60e51b81526004016107e99061309d565b601180546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b14806106dc57506106dc8261255d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611f11826114e0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611fc35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107e9565b6000611fce836114e0565b9050806001600160a01b0316846001600160a01b031614806120095750836001600160a01b0316611ffe84610774565b6001600160a01b0316145b8061203957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316612054826114e0565b6001600160a01b0316146120b85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107e9565b6001600160a01b03821661211a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107e9565b6121258383836125ad565b612130600082611edc565b6001600160a01b03831660009081526003602052604081208054600192906121599084906131dc565b90915550506001600160a01b0382166000908152600360205260408120805460019290612187908490613163565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610a208282604051806020016040528060008152506125db565b60008261220f858461260e565b14949350505050565b600a5460ff166122615760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107e9565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156123285760405162461bcd60e51b81526004016107e990613123565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861228e3390565b816001600160a01b0316836001600160a01b031614156123bf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107e9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612437848484612041565b6124438484848461267a565b611a445760405162461bcd60e51b81526004016107e9906132d6565b6060816124835750506040805180820190915260018152600360fc1b602082015290565b8160005b81156124ad5780612497816131c1565b91506124a69050600a8361333e565b9150612487565b60008167ffffffffffffffff8111156124c8576124c8612ca4565b6040519080825280601f01601f1916602001820160405280156124f2576020820181803683370190505b5090505b8415612039576125076001836131dc565b9150612514600a86613352565b61251f906030613163565b60f81b818381518110612534576125346131f3565b60200101906001600160f81b031916908160001a905350612556600a8661333e565b94506124f6565b60006001600160e01b031982166380ac58cd60e01b148061258e57506001600160e01b03198216635b5e139f60e01b145b806106dc57506301ffc9a760e01b6001600160e01b03198316146106dc565b600a5460ff16156125d05760405162461bcd60e51b81526004016107e990613123565b61091f838383612778565b6125e58383612830565b6125f2600084848461267a565b61091f5760405162461bcd60e51b81526004016107e9906132d6565b600081815b845181101561136e576000858281518110612630576126306131f3565b602002602001015190508083116126565760008381526020829052604090209250612667565b600081815260208490526040902092505b5080612672816131c1565b915050612613565b60006001600160a01b0384163b1561276d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126be903390899088908890600401613366565b6020604051808303816000875af19250505080156126f9575060408051601f3d908101601f191682019092526126f6918101906133a3565b60015b612753573d808015612727576040519150601f19603f3d011682016040523d82523d6000602084013e61272c565b606091505b50805161274b5760405162461bcd60e51b81526004016107e9906132d6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612039565b506001949350505050565b6001600160a01b0383166127d3576127ce81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6127f6565b816001600160a01b0316836001600160a01b0316146127f6576127f6838261297e565b6001600160a01b03821661280d5761091f81612a1b565b826001600160a01b0316826001600160a01b03161461091f5761091f8282612aca565b6001600160a01b0382166128865760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107e9565b6000818152600260205260409020546001600160a01b0316156128eb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107e9565b6128f7600083836125ad565b6001600160a01b0382166000908152600360205260408120805460019290612920908490613163565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161298b846115f8565b61299591906131dc565b6000838152600760205260409020549091508082146129e8576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612a2d906001906131dc565b60008381526009602052604081205460088054939450909284908110612a5557612a556131f3565b906000526020600020015490508060088381548110612a7657612a766131f3565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612aae57612aae6133c0565b6001900381819060005260206000200160009055905550505050565b6000612ad5836115f8565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612b1a90613062565b90600052602060002090601f016020900481019282612b3c5760008555612b82565b82601f10612b5557805160ff1916838001178555612b82565b82800160010185558215612b82579182015b82811115612b82578251825591602001919060010190612b67565b50612b8e929150612b92565b5090565b5b80821115612b8e5760008155600101612b93565b6001600160e01b031981168114611e5157600080fd5b600060208284031215612bcf57600080fd5b8135611a0b81612ba7565b60005b83811015612bf5578181015183820152602001612bdd565b83811115611a445750506000910152565b60008151808452612c1e816020860160208601612bda565b601f01601f19169290920160200192915050565b602081526000611a0b6020830184612c06565b600060208284031215612c5757600080fd5b5035919050565b80356001600160a01b0381168114612c7557600080fd5b919050565b60008060408385031215612c8d57600080fd5b612c9683612c5e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612cd557612cd5612ca4565b604051601f8501601f19908116603f01168101908282118183101715612cfd57612cfd612ca4565b81604052809350858152868686011115612d1657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215612d4257600080fd5b813567ffffffffffffffff811115612d5957600080fd5b8201601f81018413612d6a57600080fd5b61203984823560208401612cba565b600080600060608486031215612d8e57600080fd5b612d9784612c5e565b9250612da560208501612c5e565b9150604084013590509250925092565b60008083601f840112612dc757600080fd5b50813567ffffffffffffffff811115612ddf57600080fd5b6020830191508360208260051b8501011115612dfa57600080fd5b9250929050565b60008060208385031215612e1457600080fd5b823567ffffffffffffffff811115612e2b57600080fd5b612e3785828601612db5565b90969095509350505050565b600060208284031215612e5557600080fd5b611a0b82612c5e565b6020808252825182820181905260009190848201906040850190845b81811015612e9657835183529284019291840191600101612e7a565b50909695505050505050565b60008060408385031215612eb557600080fd5b612ebe83612c5e565b915060208301358015158114612ed357600080fd5b809150509250929050565b60008060408385031215612ef157600080fd5b82359150612f0160208401612c5e565b90509250929050565b600080600060408486031215612f1f57600080fd5b612f2884612c5e565b9250602084013567ffffffffffffffff811115612f4457600080fd5b612f5086828701612db5565b9497909650939450505050565b60008060008060808587031215612f7357600080fd5b612f7c85612c5e565b9350612f8a60208601612c5e565b925060408501359150606085013567ffffffffffffffff811115612fad57600080fd5b8501601f81018713612fbe57600080fd5b612fcd87823560208401612cba565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016005831061301157634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561302957600080fd5b813560058110611a0b57600080fd5b6000806040838503121561304b57600080fd5b61305483612c5e565b9150612f0160208401612c5e565b600181811c9082168061307657607f821691505b6020821081141561309757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156131765761317661314d565b500190565b60208082526026908201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736040820152653ab838363c9760d11b606082015260800190565b60006000198214156131d5576131d561314d565b5060010190565b6000828210156131ee576131ee61314d565b500390565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061322357607f831692505b602080841082141561324557634e487b7160e01b600052602260045260246000fd5b818015613259576001811461326a57613297565b60ff19861689528489019650613297565b60008881526020902060005b8681101561328f5781548b820152908501908301613276565b505084890196505b50505050505092915050565b60006132af8286613209565b84516132bf818360208901612bda565b6132cb81830186613209565b979650505050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261334d5761334d613328565b500490565b60008261336157613361613328565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061339990830184612c06565b9695505050505050565b6000602082840312156133b557600080fd5b8151611a0b81612ba7565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220583a252bb61bc66ae7045c0c9f559612ee8382d4df85b948a469e0eef88e2b8464736f6c634300080b0033",
  "deployedSourceMap": "706:7797:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8331:169;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;8331:169:16;;;;;;;;2488:98:3;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3999:217:3;1528:203:17;1732:28:16;;;;;;;;;1882:25:17;;;1870:2;1855:18;1732:28:16;1736:177:17;3537:401:3;;;;;;:::i;:::-;;:::i;:::-;;5551:291:16;;;;;;:::i;:::-;;:::i;1615:111:6:-;1702:10;:17;1615:111;;4726:330:3;;;;;;:::i;:::-;;:::i;4149:476:16:-;;;:::i;1066:25::-;;;;;;1291:253:6;;;;;;:::i;:::-;;:::i;3447:667:16:-;;;;;;:::i;:::-;;:::i;2753:661::-;;;;;;:::i;:::-;;:::i;6243:288::-;;;:::i;4720:65::-;;;:::i;5122:179:3:-;;;;;;:::i;:::-;;:::i;7453:353:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;:::i;:::-;;:::i;5022:160:16:-;;;;;;:::i;:::-;;:::i;1098:84:1:-;1168:7;;;;1098:84;;4791:115:16;;;;;;:::i;:::-;;:::i;2191:235:3:-;;;;;;:::i;:::-;;:::i;1131:26:16:-;;;:::i;6851:104::-;;;:::i;1929:205:3:-;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1796:30:16:-;;;;;;4912:104;;;;;;:::i;:::-;;:::i;5848:255::-;;;:::i;4653:61::-;;;:::i;1036:85:0:-;1108:6;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:3;;;:::i;1250:40:16:-;;;;;;;;;;;;4283:153:3;;;;;;:::i;:::-;;:::i;2259:456:16:-;;;;;;:::i;:::-;;:::i;7812:242::-;;;;;;:::i;:::-;;:::i;5367:320:3:-;;;;;;:::i;:::-;;:::i;1842:18:16:-;;;;;;;;;;;;;;;;:::i;1210:34::-;;;;;;;;;1671:29;;;;;;1163:37;;;:::i;1097:28::-;;;:::i;7058:267::-;;;;;;:::i;:::-;;:::i;1581:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6537:277;;;;;;:::i;:::-;;:::i;6961:91::-;;;:::i;5417:128::-;;;;;;:::i;:::-;;:::i;7331:112::-;;;:::i;5193:218::-;;;:::i;4502:162:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;:::i;:::-;;:::i;6109:128:16:-;;;;;;:::i;:::-;;:::i;1297:76::-;;;;;;;;-1:-1:-1;;;;;1297:76:16;;;8331:169;8434:4;8457:36;8481:11;8457:23;:36::i;:::-;8450:43;8331:169;-1:-1:-1;;8331:169:16:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;4094:73;;;;-1:-1:-1;;;4094:73:3;;9315:2:17;4094:73:3;;;9297:21:17;9354:2;9334:18;;;9327:30;9393:34;9373:18;;;9366:62;-1:-1:-1;;;9444:18:17;;;9437:42;9496:19;;4094:73:3;;;;;;;;;-1:-1:-1;4185:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:3;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:3;:2;-1:-1:-1;;;;;3674:11:3;;;3666:57;;;;-1:-1:-1;;;3666:57:3;;9728:2:17;3666:57:3;;;9710:21:17;9767:2;9747:18;;;9740:30;9806:34;9786:18;;;9779:62;-1:-1:-1;;;9857:18:17;;;9850:31;9898:19;;3666:57:3;9526:397:17;3666:57:3;719:10:10;-1:-1:-1;;;;;3755:21:3;;;;:62;;-1:-1:-1;3780:37:3;3797:5;719:10:10;4502:162:3;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:3;;10130:2:17;3734:165:3;;;10112:21:17;10169:2;10149:18;;;10142:30;10208:34;10188:18;;;10181:62;10279:26;10259:18;;;10252:54;10323:19;;3734:165:3;9928:420:17;3734:165:3;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;5551:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5678:1:16::1;5652:15;5646:29;:33;5638:85;;;::::0;-1:-1:-1;;;5638:85:16;;10916:2:17;5638:85:16::1;::::0;::::1;10898:21:17::0;10955:2;10935:18;;;10928:30;10994:34;10974:18;;;10967:62;-1:-1:-1;;;11045:18:17;;;11038:37;11092:19;;5638:85:16::1;10714:403:17::0;5638:85:16::1;5742:20;::::0;::::1;::::0;::::1;;;5741:21;5733:60;;;::::0;-1:-1:-1;;;5733:60:16;;11324:2:17;5733:60:16::1;::::0;::::1;11306:21:17::0;11363:2;11343:18;;;11336:30;11402:28;11382:18;;;11375:56;11448:18;;5733:60:16::1;11122:350:17::0;5733:60:16::1;5803:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;5551:291:::0;:::o;4726:330:3:-;4915:41;719:10:10;4948:7:3;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:3;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;4149:476:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12097:2:17;2317:63:2;;;12079:21:17;12136:2;12116:18;;;12109:30;12175:33;12155:18;;;12148:61;12226:18;;2317:63:2;11895:355:17;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;4271:16:16::2;4262:5;::::0;::::2;;:25;::::0;::::2;;;;;;:::i;:::-;;4254:64;;;::::0;-1:-1:-1;;;4254:64:16;;12802:2:17;4254:64:16::2;::::0;::::2;12784:21:17::0;12841:2;12821:18;;;12814:30;12880:28;12860:18;;;12853:56;12926:18;;4254:64:16::2;12600:350:17::0;4254:64:16::2;4358:15;::::0;1702:10:6;:17;4336:18:16::2;::::0;4353:1:::2;4336:18;:::i;:::-;:37;;4328:88;;;;-1:-1:-1::0;;;4328:88:16::2;;;;;;;:::i;:::-;4442:10;4434:19;::::0;;;:7:::2;:19;::::0;;;;;4456:1:::2;-1:-1:-1::0;4426:62:16::2;;;::::0;-1:-1:-1;;;4426:62:16;;13829:2:17;4426:62:16::2;::::0;::::2;13811:21:17::0;13868:2;13848:18;;;13841:30;13907:28;13887:18;;;13880:56;13953:18;;4426:62:16::2;13627:350:17::0;4426:62:16::2;4507:10;4499:19;::::0;;;:7:::2;:19;::::0;;;;:24;;4522:1:::2;::::0;4499:19;:24:::2;::::0;4522:1;;4499:24:::2;:::i;:::-;::::0;;;-1:-1:-1;4533:48:16::2;::::0;-1:-1:-1;4543:10:16::2;4555:25;:15;918:14:11::0;;827:112;4555:25:16::2;4533:9;:48::i;:::-;4591:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4591:27:16::2;1701:1:2::0;2628:7;:22;4149:476:16:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;14184:2:17;1407:87:6;;;14166:21:17;14223:2;14203:18;;;14196:30;14262:34;14242:18;;;14235:62;-1:-1:-1;;;14313:18:17;;;14306:41;14364:19;;1407:87:6;13982:407:17;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3447:667:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3568:14:16::1;3559:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3551:60;;;::::0;-1:-1:-1;;;3551:60:16;;14596:2:17;3551:60:16::1;::::0;::::1;14578:21:17::0;14635:2;14615:18;;;14608:30;14674:26;14654:18;;;14647:54;14718:18;;3551:60:16::1;14394:348:17::0;3551:60:16::1;3642:1;3629:10;:14;3621:62;;;::::0;-1:-1:-1;;;3621:62:16;;14949:2:17;3621:62:16::1;::::0;::::1;14931:21:17::0;14988:2;14968:18;;;14961:30;15027:34;15007:18;;;15000:62;-1:-1:-1;;;15078:18:17;;;15071:33;15121:19;;3621:62:16::1;14747:399:17::0;3621:62:16::1;3731:14;::::0;3714:13:::1;::::0;3701:26:::1;::::0;:10;:26:::1;:::i;:::-;:44;;3693:100;;;::::0;-1:-1:-1;;;3693:100:16;;15353:2:17;3693:100:16::1;::::0;::::1;15335:21:17::0;15392:2;15372:18;;;15365:30;15431:34;15411:18;;;15404:62;-1:-1:-1;;;15482:18:17;;;15475:41;15533:19;;3693:100:16::1;15151:407:17::0;3693:100:16::1;3845:15;;3831:10;3814:13;1702:10:6::0;:17;;1615:111;3814:13:16::1;:27;;;;:::i;:::-;:46;;3806:97;;;;-1:-1:-1::0;;;3806:97:16::1;;;;;;;:::i;:::-;3932:10;3915:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3969:1:16::1;::::0;-1:-1:-1;3952:156:16::1;3977:10;3972:1;:15;3952:156;;4008:48;4018:10;4030:25;:15;918:14:11::0;;827:112;4008:48:16::1;4070:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4070:27:16::1;3989:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3952:156;;2753:661:::0;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12097:2:17;2317:63:2;;;12079:21:17;12136:2;12116:18;;;12109:30;12175:33;12155:18;;;12148:61;12226:18;;2317:63:2;11895:355:17;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;2916:15:16::2;2907:5;::::0;::::2;;:24;::::0;::::2;;;;;;:::i;:::-;;2899:66;;;::::0;-1:-1:-1;;;2899:66:16;;15905:2:17;2899:66:16::2;::::0;::::2;15887:21:17::0;15944:2;15924:18;;;15917:30;15983:31;15963:18;;;15956:59;16032:18;;2899:66:16::2;15703:353:17::0;2899:66:16::2;3002:10;::::0;3024:28:::2;::::0;-1:-1:-1;;3041:10:16::2;16210:2:17::0;16206:15;16202:53;3024:28:16::2;::::0;::::2;16190:66:17::0;2983:71:16::2;::::0;3002:10;16272:12:17;;3024:28:16::2;;;;;;;;;;;;3014:39;;;;;;2983:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;2983:18:16;;:71;;-1:-1:-1;;2983:18:16::2;:71:::0;-1:-1:-1;2983:71:16:i:2;:::-;2975:109;;;::::0;-1:-1:-1;;;2975:109:16;;16497:2:17;2975:109:16::2;::::0;::::2;16479:21:17::0;16536:2;16516:18;;;16509:30;16575:27;16555:18;;;16548:55;16620:18;;2975:109:16::2;16295:349:17::0;2975:109:16::2;3142:14;;3124:15;;:32;;;;:::i;:::-;1702:10:6::0;:17;3102:18:16::2;::::0;3119:1:::2;3102:18;:::i;:::-;:54;;3094:104;;;::::0;-1:-1:-1;;;3094:104:16;;16981:2:17;3094:104:16::2;::::0;::::2;16963:21:17::0;17020:2;17000:18;;;16993:30;17059:34;17039:18;;;17032:62;-1:-1:-1;;;17110:18:17;;;17103:35;17155:19;;3094:104:16::2;16779:401:17::0;3094:104:16::2;3226:10;3218:19;::::0;;;:7:::2;:19;::::0;;;;;3240:1:::2;-1:-1:-1::0;3210:67:16::2;;;::::0;-1:-1:-1;;;3210:67:16;;17387:2:17;3210:67:16::2;::::0;::::2;17369:21:17::0;17426:2;17406:18;;;17399:30;17465:33;17445:18;;;17438:61;17516:18;;3210:67:16::2;17185:355:17::0;3210:67:16::2;3296:10;3288:19;::::0;;;:7:::2;:19;::::0;;;;:24;;3311:1:::2;::::0;3288:19;:24:::2;::::0;3311:1;;3288:24:::2;:::i;:::-;::::0;;;-1:-1:-1;3322:48:16::2;::::0;-1:-1:-1;3332:10:16::2;3344:25;:15;918:14:11::0;;827:112;3322:48:16::2;3380:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;3380:27:16::2;-1:-1:-1::0;;1701:1:2;2628:7;:22;2753:661:16:o;6243:288::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6310:21:16::1;6349:11:::0;6341:47:::1;;;::::0;-1:-1:-1;;;6341:47:16;;17747:2:17;6341:47:16::1;::::0;::::1;17729:21:17::0;17786:2;17766:18;;;17759:30;17825:25;17805:18;;;17798:53;17868:18;;6341:47:16::1;17545:347:17::0;6341:47:16::1;6425:16;::::0;6417:50:::1;::::0;6399:12:::1;::::0;6425:16;;::::1;-1:-1:-1::0;;;;;6425:16:16::1;::::0;6455:7;;6399:12;6417:50;6399:12;6417:50;6455:7;6425:16;6417:50:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6398:69;;;6485:7;6477:47;;;::::0;-1:-1:-1;;;6477:47:16;;18309:2:17;6477:47:16::1;::::0;::::1;18291:21:17::0;18348:2;18328:18;;;18321:30;18387:29;18367:18;;;18360:57;18434:18;;6477:47:16::1;18107:351:17::0;4720:65:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4768:10:16::1;:8;:10::i;:::-;4720:65::o:0;5122:179:3:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;7453:353:16:-;7514:16;7542:23;7568:16;7578:5;7568:9;:16::i;:::-;7542:42;;7594:26;7637:15;7623:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7623:30:16;;7594:59;;7668:9;7663:111;7683:15;7679:1;:19;7663:111;;;7734:29;7754:5;7761:1;7734:19;:29::i;:::-;7719:9;7729:1;7719:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;7700:3;;;;:::i;:::-;;;;7663:111;;;-1:-1:-1;7790:9:16;7453:353;-1:-1:-1;;;7453:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;18797:2:17;1892:95:6;;;18779:21:17;18836:2;18816:18;;;18809:30;18875:34;18855:18;;;18848:62;-1:-1:-1;;;18926:18:17;;;18919:42;18978:19;;1892:95:6;18595:408:17;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5022:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5107:14:16::1;::::0;::::1;;5106:15;5098:46;;;::::0;-1:-1:-1;;;5098:46:16;;19210:2:17;5098:46:16::1;::::0;::::1;19192:21:17::0;19249:2;19229:18;;;19222:30;-1:-1:-1;;;19268:18:17;;;19261:48;19326:18;;5098:46:16::1;19008:342:17::0;5098:46:16::1;5154:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;4791:115::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4872:18:16;;::::1;;::::0;;;:7:::1;:18;::::0;;;;:27;4791:115::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:3;;19557:2:17;2324:73:3;;;19539:21:17;19596:2;19576:18;;;19569:30;19635:34;19615:18;;;19608:62;-1:-1:-1;;;19686:18:17;;;19679:39;19735:19;;2324:73:3;19355:405:17;1131:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6851:104::-;6901:7;6926:22;6934:13;1702:10:6;:17;;1615:111;6926:22:16;6919:29;;6851:104;:::o;1929:205:3:-;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;19967:2:17;2020:74:3;;;19949:21:17;20006:2;19986:18;;;19979:30;20045:34;20025:18;;;20018:62;-1:-1:-1;;;20096:18:17;;;20089:40;20146:19;;2020:74:3;19765:406:17;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;4912:104:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4985:10:16::1;:24:::0;4912:104::o;5848:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5948:1:16::1;5923:14;5917:28;;;;;:::i;:::-;;;:32;5909:72;;;::::0;-1:-1:-1;;;5909:72:16;;20378:2:17;5909:72:16::1;::::0;::::1;20360:21:17::0;20417:2;20397:18;;;20390:30;20456:29;20436:18;;;20429:57;20503:18;;5909:72:16::1;20176:351:17::0;5909:72:16::1;6000:20;::::0;::::1;::::0;::::1;;;5999:21;5991:68;;;::::0;-1:-1:-1;;;5991:68:16;;20734:2:17;5991:68:16::1;::::0;::::1;20716:21:17::0;20773:2;20753:18;;;20746:30;20812:34;20792:18;;;20785:62;-1:-1:-1;;;20863:18:17;;;20856:32;20905:19;;5991:68:16::1;20532:398:17::0;5991:68:16::1;6069:20;:27:::0;;-1:-1:-1;;6069:27:16::1;;;::::0;;5848:255::o;4653:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4699:8:16::1;:6;:8::i;2650:102:3:-:0;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:10;4410:8:3;4420;4377:18;:52::i;2259:456:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2405:10:16::1;2397:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;2389:51;;;::::0;-1:-1:-1;;;2389:51:16;;21137:2:17;2389:51:16::1;::::0;::::1;21119:21:17::0;21176:2;21156:18;;;21149:30;-1:-1:-1;;;21195:18:17;;;21188:50;21255:18;;2389:51:16::1;20935:344:17::0;2389:51:16::1;2489:15;;2475:10;2458:13;1702:10:6::0;:17;;1615:111;2458:13:16::1;:27;;;;:::i;:::-;:46;;2450:101;;;::::0;-1:-1:-1;;;2450:101:16;;21486:2:17;2450:101:16::1;::::0;::::1;21468:21:17::0;21525:2;21505:18;;;21498:30;21564:34;21544:18;;;21537:62;-1:-1:-1;;;21615:18:17;;;21608:40;21665:19;;2450:101:16::1;21284:406:17::0;2450:101:16::1;2578:1;2561:148;2586:10;2581:1;:15;2561:148;;2617:40;2627:2;2631:25;:15;918:14:11::0;;827:112;2617:40:16::1;2671:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2671:27:16::1;2598:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2561:148;;7812:242:::0;7939:10;;7961:25;;-1:-1:-1;;16210:2:17;16206:15;;;16202:53;7961:25:16;;;16190:66:17;7900:4:16;;7920:68;;16272:12:17;;7961:25:16;;;;;;;;;;;;7951:36;;;;;;7920:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7920:18:16;;:68;;-1:-1:-1;;7920:18:16;:68;-1:-1:-1;7920:68:16:i;:::-;7916:110;;;-1:-1:-1;8011:4:16;8004:11;;7916:110;-1:-1:-1;8042:5:16;7812:242;;;;;;:::o;5367:320:3:-;5536:41;719:10:10;5569:7:3;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:3;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;1163:37:16:-;;;;;;;:::i;1097:28::-;;;;;;;:::i;7058:267::-;7224:4:3;7247:16;;;:7;:16;;;;;;7131:13:16;;-1:-1:-1;;;;;7247:16:3;7156:77:16;;;;-1:-1:-1;;;7156:77:16;;21897:2:17;7156:77:16;;;21879:21:17;21936:2;21916:18;;;21909:30;21975:34;21955:18;;;21948:62;-1:-1:-1;;;22026:18:17;;;22019:46;22082:19;;7156:77:16;21695:412:17;7156:77:16;7274:7;7283:18;:7;:16;:18::i;:::-;7303:13;7257:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7243:75;;7058:267;;;:::o;6537:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6606:20:16::1;::::0;::::1;;::::0;;::::1;;:28;;:20;:28;6598:97;;;::::0;-1:-1:-1;;;6598:97:16;;23879:2:17;6598:97:16::1;::::0;::::1;23861:21:17::0;23918:2;23898:18;;;23891:30;23957:34;23937:18;;;23930:62;24028:26;24008:18;;;24001:54;24072:19;;6598:97:16::1;23677:420:17::0;6598:97:16::1;6713:10;::::0;6705:78:::1;;;::::0;-1:-1:-1;;;6705:78:16;;24304:2:17;6705:78:16::1;::::0;::::1;24286:21:17::0;24343:2;24323:18;;;24316:30;24382:34;24362:18;;;24355:62;-1:-1:-1;;;24433:18:17;;;24426:48;24491:19;;6705:78:16::1;24102:414:17::0;6705:78:16::1;6793:5;:14:::0;;6801:6;;6793:5;-1:-1:-1;;6793:14:16::1;::::0;6801:6;6793:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;6537:277:::0;:::o;6961:91::-;7006:7;7031:13;1702:10:6;:17;;1615:111;5417:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5505:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;7331:112::-:0;7379:7;7423:13;1702:10:6;:17;;1615:111;7423:13:16;7405:15;;:31;;;;:::i;5193:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5279:1:16::1;5261:7;5255:21;;;;;:::i;:::-;;;:25;5247:62;;;::::0;-1:-1:-1;;;5247:62:16;;24723:2:17;5247:62:16::1;::::0;::::1;24705:21:17::0;24762:2;24742:18;;;24735:30;24801:26;24781:18;;;24774:54;24845:18;;5247:62:16::1;24521:348:17::0;5247:62:16::1;5328:14;::::0;::::1;;5327:15;5319:54;;;::::0;-1:-1:-1;;;5319:54:16;;25076:2:17;5319:54:16::1;::::0;::::1;25058:21:17::0;25115:2;25095:18;;;25088:30;25154:28;25134:18;;;25127:56;25200:18;;5319:54:16::1;24874:350:17::0;5319:54:16::1;5383:14;:21:::0;;-1:-1:-1;;5383:21:16::1;5400:4;5383:21;::::0;;5193:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25431:2:17;1998:73:0::1;::::0;::::1;25413:21:17::0;25470:2;25450:18;;;25443:30;25509:34;25489:18;;;25482:62;-1:-1:-1;;;25560:18:17;;;25553:36;25606:19;;1998:73:0::1;25229:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6109:128:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6194:16:16::1;:36:::0;;-1:-1:-1;;;;;6194:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6194:36:16;;::::1;::::0;;;::::1;::::0;;6109:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;11168:171:3:-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:3;-1:-1:-1;;;;;11242:29:3;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:3;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;7551:73;;;;-1:-1:-1;;;7551:73:3;;25838:2:17;7551:73:3;;;25820:21:17;25877:2;25857:18;;;25850:30;25916:34;25896:18;;;25889:62;-1:-1:-1;;;25967:18:17;;;25960:42;26019:19;;7551:73:3;25636:408:17;7551:73:3;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:3;:7;-1:-1:-1;;;;;7691:16:3;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:3;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:3;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;7683:96;7442:344;-1:-1:-1;;;;7442:344:3:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:3;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:3;;10571:81;;;;-1:-1:-1;;;10571:81:3;;26251:2:17;10571:81:3;;;26233:21:17;26290:2;26270:18;;;26263:30;26329:34;26309:18;;;26302:62;-1:-1:-1;;;26380:18:17;;;26373:35;26425:19;;10571:81:3;26049:401:17;10571:81:3;-1:-1:-1;;;;;10670:16:3;;10662:65;;;;-1:-1:-1;;;10662:65:3;;26657:2:17;10662:65:3;;;26639:21:17;26696:2;26676:18;;;26669:30;26735:34;26715:18;;;26708:62;-1:-1:-1;;;26786:18:17;;;26779:34;26830:19;;10662:65:3;26455:400:17;10662:65:3;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:3;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:3;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:3;-1:-1:-1;;;;;10937:21:3;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;8116:108::-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;862:184:13:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:13:o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;27062:2:17;1669:41:1;;;27044:21:17;27101:2;27081:18;;;27074:30;-1:-1:-1;;;27120:18:17;;;27113:50;27180:18;;1669:41:1;26860:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11474:307:3;11624:8;-1:-1:-1;;;;;11615:17:3;:5;-1:-1:-1;;;;;11615:17:3;;;11607:55;;;;-1:-1:-1;;;11607:55:3;;27411:2:17;11607:55:3;;;27393:21:17;27450:2;27430:18;;;27423:30;27489:27;27469:18;;;27462:55;27534:18;;11607:55:3;27209:349:17;11607:55:3;-1:-1:-1;;;;;11672:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:3;;;;;;;;;;11733:41;;540::17;;;11733::3;;513:18:17;11733:41:3;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1570:300:3;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:3;829:155:14;8064:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8205:45:16::1;8232:4;8238:2;8242:7;8205:26;:45::i;8445:311:3:-:0;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:3;;;;;;;:::i;1398:662:13:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:13;;;;:::i;:::-;;;;1537:488;;12334:778:3;12484:4;-1:-1:-1;;;;;12504:13:3;;1465:19:9;:23;12500:606:3;;12539:72;;-1:-1:-1;;;12539:72:3;;-1:-1:-1;;;;;12539:36:3;;;;;:72;;719:10:10;;12590:4:3;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:3;;;;;;;;-1:-1:-1;;12539:72:3;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:3;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:3;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:3;-1:-1:-1;;;12661:51:3;;-1:-1:-1;12654:58:3;;12500:606;-1:-1:-1;13091:4:3;12334:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9078:427:3:-;-1:-1:-1;;;;;9157:16:3;;9149:61;;;;-1:-1:-1;;;9149:61:3;;29306:2:17;9149:61:3;;;29288:21:17;;;29325:18;;;29318:30;29384:34;29364:18;;;29357:62;29436:18;;9149:61:3;29104:356:17;9149:61:3;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;:30;9220:58;;;;-1:-1:-1;;;9220:58:3;;29667:2:17;9220:58:3;;;29649:21:17;29706:2;29686:18;;;29679:30;29745;29725:18;;;29718:58;29793:18;;9220:58:3;29465:352:17;9220:58:3;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:3;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:3;-1:-1:-1;;;;;9373:21:3;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;5803:32:16::1;5551:291:::0;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:367::-;4158:8;4168:6;4222:3;4215:4;4207:6;4203:17;4199:27;4189:55;;4240:1;4237;4230:12;4189:55;-1:-1:-1;4263:20:17;;4306:18;4295:30;;4292:50;;;4338:1;4335;4328:12;4292:50;4375:4;4367:6;4363:17;4351:29;;4435:3;4428:4;4418:6;4415:1;4411:14;4403:6;4399:27;4395:38;4392:47;4389:67;;;4452:1;4449;4442:12;4389:67;4095:367;;;;;:::o;4467:437::-;4553:6;4561;4614:2;4602:9;4593:7;4589:23;4585:32;4582:52;;;4630:1;4627;4620:12;4582:52;4670:9;4657:23;4703:18;4695:6;4692:30;4689:50;;;4735:1;4732;4725:12;4689:50;4774:70;4836:7;4827:6;4816:9;4812:22;4774:70;:::i;:::-;4863:8;;4748:96;;-1:-1:-1;4467:437:17;-1:-1:-1;;;;4467:437:17:o;4909:186::-;4968:6;5021:2;5009:9;5000:7;4996:23;4992:32;4989:52;;;5037:1;5034;5027:12;4989:52;5060:29;5079:9;5060:29;:::i;5100:632::-;5271:2;5323:21;;;5393:13;;5296:18;;;5415:22;;;5242:4;;5271:2;5494:15;;;;5468:2;5453:18;;;5242:4;5537:169;5551:6;5548:1;5545:13;5537:169;;;5612:13;;5600:26;;5681:15;;;;5646:12;;;;5573:1;5566:9;5537:169;;;-1:-1:-1;5723:3:17;;5100:632;-1:-1:-1;;;;;;5100:632:17:o;5922:347::-;5987:6;5995;6048:2;6036:9;6027:7;6023:23;6019:32;6016:52;;;6064:1;6061;6054:12;6016:52;6087:29;6106:9;6087:29;:::i;:::-;6077:39;;6166:2;6155:9;6151:18;6138:32;6213:5;6206:13;6199:21;6192:5;6189:32;6179:60;;6235:1;6232;6225:12;6179:60;6258:5;6248:15;;;5922:347;;;;;:::o;6274:254::-;6342:6;6350;6403:2;6391:9;6382:7;6378:23;6374:32;6371:52;;;6419:1;6416;6409:12;6371:52;6455:9;6442:23;6432:33;;6484:38;6518:2;6507:9;6503:18;6484:38;:::i;:::-;6474:48;;6274:254;;;;;:::o;6533:511::-;6628:6;6636;6644;6697:2;6685:9;6676:7;6672:23;6668:32;6665:52;;;6713:1;6710;6703:12;6665:52;6736:29;6755:9;6736:29;:::i;:::-;6726:39;;6816:2;6805:9;6801:18;6788:32;6843:18;6835:6;6832:30;6829:50;;;6875:1;6872;6865:12;6829:50;6914:70;6976:7;6967:6;6956:9;6952:22;6914:70;:::i;:::-;6533:511;;7003:8;;-1:-1:-1;6888:96:17;;-1:-1:-1;;;;6533:511:17:o;7049:667::-;7144:6;7152;7160;7168;7221:3;7209:9;7200:7;7196:23;7192:33;7189:53;;;7238:1;7235;7228:12;7189:53;7261:29;7280:9;7261:29;:::i;:::-;7251:39;;7309:38;7343:2;7332:9;7328:18;7309:38;:::i;:::-;7299:48;;7394:2;7383:9;7379:18;7366:32;7356:42;;7449:2;7438:9;7434:18;7421:32;7476:18;7468:6;7465:30;7462:50;;;7508:1;7505;7498:12;7462:50;7531:22;;7584:4;7576:13;;7572:27;-1:-1:-1;7562:55:17;;7613:1;7610;7603:12;7562:55;7636:74;7702:7;7697:2;7684:16;7679:2;7675;7671:11;7636:74;:::i;:::-;7626:84;;;7049:667;;;;;;;:::o;7721:127::-;7782:10;7777:3;7773:20;7770:1;7763:31;7813:4;7810:1;7803:15;7837:4;7834:1;7827:15;7853:336;7993:2;7978:18;;8026:1;8015:13;;8005:144;;8071:10;8066:3;8062:20;8059:1;8052:31;8106:4;8103:1;8096:15;8134:4;8131:1;8124:15;8005:144;8158:25;;;7853:336;:::o;8194:264::-;8261:6;8314:2;8302:9;8293:7;8289:23;8285:32;8282:52;;;8330:1;8327;8320:12;8282:52;8369:9;8356:23;8408:1;8401:5;8398:12;8388:40;;8424:1;8421;8414:12;8463:260;8531:6;8539;8592:2;8580:9;8571:7;8567:23;8563:32;8560:52;;;8608:1;8605;8598:12;8560:52;8631:29;8650:9;8631:29;:::i;:::-;8621:39;;8679:38;8713:2;8702:9;8698:18;8679:38;:::i;8728:380::-;8807:1;8803:12;;;;8850;;;8871:61;;8925:4;8917:6;8913:17;8903:27;;8871:61;8978:2;8970:6;8967:14;8947:18;8944:38;8941:161;;;9024:10;9019:3;9015:20;9012:1;9005:31;9059:4;9056:1;9049:15;9087:4;9084:1;9077:15;8941:161;;8728:380;;;:::o;10353:356::-;10555:2;10537:21;;;10574:18;;;10567:30;10633:34;10628:2;10613:18;;10606:62;10700:2;10685:18;;10353:356::o;11477:413::-;11679:2;11661:21;;;11718:2;11698:18;;;11691:30;11757:34;11752:2;11737:18;;11730:62;-1:-1:-1;;;11823:2:17;11808:18;;11801:47;11880:3;11865:19;;11477:413::o;12255:340::-;12457:2;12439:21;;;12496:2;12476:18;;;12469:30;-1:-1:-1;;;12530:2:17;12515:18;;12508:46;12586:2;12571:18;;12255:340::o;12955:127::-;13016:10;13011:3;13007:20;13004:1;12997:31;13047:4;13044:1;13037:15;13071:4;13068:1;13061:15;13087:128;13127:3;13158:1;13154:6;13151:1;13148:13;13145:39;;;13164:18;;:::i;:::-;-1:-1:-1;13200:9:17;;13087:128::o;13220:402::-;13422:2;13404:21;;;13461:2;13441:18;;;13434:30;13500:34;13495:2;13480:18;;13473:62;-1:-1:-1;;;13566:2:17;13551:18;;13544:36;13612:3;13597:19;;13220:402::o;15563:135::-;15602:3;-1:-1:-1;;15623:17:17;;15620:43;;;15643:18;;:::i;:::-;-1:-1:-1;15690:1:17;15679:13;;15563:135::o;16649:125::-;16689:4;16717:1;16714;16711:8;16708:34;;;16722:18;;:::i;:::-;-1:-1:-1;16759:9:17;;16649:125::o;18463:127::-;18524:10;18519:3;18515:20;18512:1;18505:31;18555:4;18552:1;18545:15;18579:4;18576:1;18569:15;22238:973;22323:12;;22288:3;;22378:1;22398:18;;;;22451;;;;22478:61;;22532:4;22524:6;22520:17;22510:27;;22478:61;22558:2;22606;22598:6;22595:14;22575:18;22572:38;22569:161;;;22652:10;22647:3;22643:20;22640:1;22633:31;22687:4;22684:1;22677:15;22715:4;22712:1;22705:15;22569:161;22746:18;22773:104;;;;22891:1;22886:319;;;;22739:466;;22773:104;-1:-1:-1;;22806:24:17;;22794:37;;22851:16;;;;-1:-1:-1;22773:104:17;;22886:319;22185:1;22178:14;;;22222:4;22209:18;;22980:1;22994:165;23008:6;23005:1;23002:13;22994:165;;;23086:14;;23073:11;;;23066:35;23129:16;;;;23023:10;;22994:165;;;22998:3;;23188:6;23183:3;23179:16;23172:23;;22739:466;;;;;;;22238:973;;;;:::o;23216:456::-;23437:3;23465:38;23499:3;23491:6;23465:38;:::i;:::-;23532:6;23526:13;23548:52;23593:6;23589:2;23582:4;23574:6;23570:17;23548:52;:::i;:::-;23616:50;23658:6;23654:2;23650:15;23642:6;23616:50;:::i;:::-;23609:57;23216:456;-1:-1:-1;;;;;;;23216:456:17:o;27563:414::-;27765:2;27747:21;;;27804:2;27784:18;;;27777:30;27843:34;27838:2;27823:18;;27816:62;-1:-1:-1;;;27909:2:17;27894:18;;27887:48;27967:3;27952:19;;27563:414::o;27982:127::-;28043:10;28038:3;28034:20;28031:1;28024:31;28074:4;28071:1;28064:15;28098:4;28095:1;28088:15;28114:120;28154:1;28180;28170:35;;28185:18;;:::i;:::-;-1:-1:-1;28219:9:17;;28114:120::o;28239:112::-;28271:1;28297;28287:35;;28302:18;;:::i;:::-;-1:-1:-1;28336:9:17;;28239:112::o;28356:489::-;-1:-1:-1;;;;;28625:15:17;;;28607:34;;28677:15;;28672:2;28657:18;;28650:43;28724:2;28709:18;;28702:34;;;28772:3;28767:2;28752:18;;28745:31;;;28550:4;;28793:46;;28819:19;;28811:6;28793:46;:::i;:::-;28785:54;28356:489;-1:-1:-1;;;;;;28356:489:17:o;28850:249::-;28919:6;28972:2;28960:9;28951:7;28947:23;28943:32;28940:52;;;28988:1;28985;28978:12;28940:52;29020:9;29014:16;29039:30;29063:5;29039:30;:::i;29822:127::-;29883:10;29878:3;29874:20;29871:1;29864:31;29914:4;29911:1;29904:15;29938:4;29935:1;29928:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, send, and interact with CRYPTIDS",
    "title": "Cryptids NFT Contract",
    "version": 1
  },
  "offset": [
    706,
    8503
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78231978 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xC3214581 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDA3EF23F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3214581 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xB76A0DF4 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xB76A0DF4 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xAE7DD0A8 EQ PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78231978 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x6C0360EB GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x61AEC1E0 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x2FBBA115 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x3C0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2BBD JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x39D PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C7A JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x39D PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C7A JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x127F JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E43 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH2 0x39D PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x1409 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x33F JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2C7A JUMP JUMPDEST PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E43 JUMP JUMPDEST PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x167F JUMP JUMPDEST PUSH2 0x39D PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37C JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x33F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EDE JUMP JUMPDEST PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0A JUMP JUMPDEST PUSH2 0x197E JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x5A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F5D JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x5B2 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x33F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x39D PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x5F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x606 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x641 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x3038 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E43 JUMP JUMPDEST PUSH2 0x1DB3 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x6B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E43 JUMP JUMPDEST PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x37C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DC DUP3 PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x3062 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71D SWAP1 PUSH2 0x3062 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP3 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x8A3 JUMPI POP PUSH2 0x8A3 DUP2 CALLER PUSH2 0x664 JUMP JUMPDEST PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x91F DUP4 DUP4 PUSH2 0x1EDC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA20 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA2E CALLER DUP3 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH2 0x91F DUP4 DUP4 DUP4 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x2FD9 JUMP JUMPDEST EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x8 SLOAD PUSH2 0xB47 SWAP1 PUSH1 0x1 PUSH2 0x3163 JUMP JUMPDEST GT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x317B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 GT PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782032204372797074696473207065722077616C6C65742E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xBE4 SWAP1 DUP5 SWAP1 PUSH2 0x3163 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBFC SWAP1 POP CALLER PUSH2 0xBF7 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21E8 JUMP JUMPDEST PUSH2 0xC0A PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP4 PUSH2 0x15F8 JUMP JUMPDEST DUP3 LT PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCF0 PUSH2 0x2FD9 JUMP JUMPDEST EQ PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH2 0xDA9 SWAP1 DUP4 PUSH2 0x3163 JUMP JUMPDEST GT ISZERO PUSH2 0xE0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 PUSH2 0xE18 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST GT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x317B JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 DUP2 GT PUSH2 0xA20 JUMPI PUSH2 0xE6F CALLER PUSH2 0xBF7 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE7D PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0xE87 DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF23 JUMPI PUSH2 0xF23 PUSH2 0x2FD9 JUMP JUMPDEST EQ PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFE9 SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x2202 SWAP1 POP JUMP JUMPDEST PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1053 SWAP1 PUSH1 0x1 PUSH2 0x3163 JUMP JUMPDEST GT ISZERO PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20657863656564732077686974656C697374207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3838363C97 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 GT PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x112E SWAP1 DUP5 SWAP1 PUSH2 0x3163 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1141 SWAP1 POP CALLER PUSH2 0xBF7 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114F PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x11D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062616C616E636520746F2077697468647261772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1229 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x122E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2077697468647261772062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x2218 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x91F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12E1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x2CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1327 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x136E JUMPI PUSH2 0x133F DUP6 DUP3 PUSH2 0xC11 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1351 JUMPI PUSH2 0x1351 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1366 DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x132D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1381 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13F7 JUMPI PUSH2 0x13F7 PUSH2 0x31F3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA20 SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B0E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1564 SWAP1 PUSH2 0x3062 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1590 SWAP1 PUSH2 0x3062 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F3 PUSH2 0x4CD PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x12B7 PUSH1 0x0 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x171E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x172D SWAP1 PUSH2 0x3062 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x3062 JUMP JUMPDEST PUSH2 0xA20 CALLER DUP4 DUP4 PUSH2 0x235D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x188B JUMPI PUSH2 0x188B PUSH2 0x2FD9 JUMP JUMPDEST GT PUSH2 0x18CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP3 PUSH2 0x18DC PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18E6 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST GT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x91F JUMPI PUSH2 0x195E DUP3 PUSH2 0xBF7 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x196C PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1976 DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x194A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x19FA SWAP2 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x2202 SWAP1 POP JUMP JUMPDEST ISZERO PUSH2 0x1A07 JUMPI POP PUSH1 0x1 PUSH2 0x1A0B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A1C CALLER DUP4 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1A38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH2 0x1A44 DUP5 DUP5 DUP5 DUP5 PUSH2 0x242C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x1564 SWAP1 PUSH2 0x3062 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x1564 SWAP1 PUSH2 0x3062 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xF PUSH2 0x1AEF DUP4 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1BCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1C36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C55 PUSH2 0x2FD9 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F3 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1C98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA20 SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1CF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x1D02 SWAP1 PUSH2 0x3062 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1DE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x22AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6DC JUMPI POP PUSH2 0x6DC DUP3 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1F11 DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCE DUP4 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2009 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FFE DUP5 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2039 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2054 DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x211A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x2125 DUP4 DUP4 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x2130 PUSH1 0x0 DUP3 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2159 SWAP1 DUP5 SWAP1 PUSH2 0x31DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2187 SWAP1 DUP5 SWAP1 PUSH2 0x3163 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xA20 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x25DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x220F DUP6 DUP5 PUSH2 0x260E JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x2261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x228E CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x23BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2437 DUP5 DUP5 DUP5 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x2443 DUP5 DUP5 DUP5 DUP5 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x1A44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x32D6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2483 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x24AD JUMPI DUP1 PUSH2 0x2497 DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x24A6 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x333E JUMP JUMPDEST SWAP2 POP PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24C8 JUMPI PUSH2 0x24C8 PUSH2 0x2CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24F2 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2039 JUMPI PUSH2 0x2507 PUSH1 0x1 DUP4 PUSH2 0x31DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2514 PUSH1 0xA DUP7 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x251F SWAP1 PUSH1 0x30 PUSH2 0x3163 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2534 JUMPI PUSH2 0x2534 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2556 PUSH1 0xA DUP7 PUSH2 0x333E JUMP JUMPDEST SWAP5 POP PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x258E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6DC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6DC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x3123 JUMP JUMPDEST PUSH2 0x91F DUP4 DUP4 DUP4 PUSH2 0x2778 JUMP JUMPDEST PUSH2 0x25E5 DUP4 DUP4 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x25F2 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x32D6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2630 JUMPI PUSH2 0x2630 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2656 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2672 DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2613 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x26BE SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3366 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26F9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26F6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2753 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2727 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x274B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x32D6 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2039 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x27D3 JUMPI PUSH2 0x27CE DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x27F6 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27F6 JUMPI PUSH2 0x27F6 DUP4 DUP3 PUSH2 0x297E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x280D JUMPI PUSH2 0x91F DUP2 PUSH2 0x2A1B JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH2 0x91F DUP3 DUP3 PUSH2 0x2ACA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x28EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x28F7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2920 SWAP1 DUP5 SWAP1 PUSH2 0x3163 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x298B DUP5 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x2995 SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x29E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2A2D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2A55 JUMPI PUSH2 0x2A55 PUSH2 0x31F3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A76 JUMPI PUSH2 0x2A76 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2AAE JUMPI PUSH2 0x2AAE PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2B1A SWAP1 PUSH2 0x3062 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B3C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2B82 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B55 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2B82 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2B82 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B82 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B67 JUMP JUMPDEST POP PUSH2 0x2B8E SWAP3 SWAP2 POP PUSH2 0x2B92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2B8E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A0B DUP2 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BF5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BDD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A44 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2C1E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2BDA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C96 DUP4 PUSH2 0x2C5E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2CD5 JUMPI PUSH2 0x2CD5 PUSH2 0x2CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2CFD JUMPI PUSH2 0x2CFD PUSH2 0x2CA4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x2D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2039 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D97 DUP5 PUSH2 0x2C5E JUMP JUMPDEST SWAP3 POP PUSH2 0x2DA5 PUSH1 0x20 DUP6 ADD PUSH2 0x2C5E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E37 DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A0B DUP3 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E96 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2E7A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EBE DUP4 PUSH2 0x2C5E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2ED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2F01 PUSH1 0x20 DUP5 ADD PUSH2 0x2C5E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F28 DUP5 PUSH2 0x2C5E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F50 DUP7 DUP3 DUP8 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F7C DUP6 PUSH2 0x2C5E JUMP JUMPDEST SWAP4 POP PUSH2 0x2F8A PUSH1 0x20 DUP7 ADD PUSH2 0x2C5E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FCD DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x3011 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x304B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3054 DUP4 PUSH2 0x2C5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2F01 PUSH1 0x20 DUP5 ADD PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3076 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3097 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3176 JUMPI PUSH2 0x3176 PUSH2 0x314D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x31D5 JUMPI PUSH2 0x31D5 PUSH2 0x314D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x31EE JUMPI PUSH2 0x31EE PUSH2 0x314D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3223 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3259 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x326A JUMPI PUSH2 0x3297 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x328F JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3276 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AF DUP3 DUP7 PUSH2 0x3209 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x32BF DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x2BDA JUMP JUMPDEST PUSH2 0x32CB DUP2 DUP4 ADD DUP7 PUSH2 0x3209 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x334D JUMPI PUSH2 0x334D PUSH2 0x3328 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3361 JUMPI PUSH2 0x3361 PUSH2 0x3328 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3399 SWAP1 DUP4 ADD DUP5 PUSH2 0x2C06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A0B DUP2 PUSH2 0x2BA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC GASPRICE 0x25 0x2B 0xB6 SHL 0xC6 PUSH11 0xE7045C0C9F559612EE8382 0xD4 0xDF DUP6 0xB9 BASEFEE LOG4 PUSH10 0xE0EEF88E2B8464736F6C PUSH4 0x4300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x327"
    },
    "25": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "38": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "49": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "60": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "71": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x656"
    },
    "86": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x692"
    },
    "97": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "104": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A5"
    },
    "108": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "115": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "116": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B8"
    },
    "119": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "120": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "131": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x633"
    },
    "135": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "142": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x646"
    },
    "146": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "153": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "154": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64E"
    },
    "157": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "158": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "163": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "169": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "180": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E5"
    },
    "184": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "191": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F8"
    },
    "195": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "202": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x618"
    },
    "206": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "213": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "214": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62B"
    },
    "217": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "224": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "229": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CC"
    },
    "233": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "234": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "235": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "240": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "241": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D5"
    },
    "244": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "245": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "246": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "251": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "252": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DD"
    },
    "255": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "256": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "261": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "262": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "267": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "272": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "273": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB76A0DF4"
    },
    "278": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "283": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "284": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB76A0DF4"
    },
    "289": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "290": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57F"
    },
    "293": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "294": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "295": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "300": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "301": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x592"
    },
    "304": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "305": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "311": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "312": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A5"
    },
    "315": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "316": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "317": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "322": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "323": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5BF"
    },
    "326": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "327": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "332": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "333": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "338": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x547"
    },
    "342": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "343": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "344": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "349": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "350": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x559"
    },
    "353": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "354": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "355": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAE7DD0A8"
    },
    "360": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "361": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56C"
    },
    "364": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "365": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "371": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "376": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FD"
    },
    "380": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "381": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "382": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "387": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "388": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x506"
    },
    "391": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "392": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "393": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "398": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "399": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x519"
    },
    "402": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "403": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "404": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "409": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "410": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x521"
    },
    "413": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "414": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "415": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "420": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "421": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x529"
    },
    "424": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "425": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "426": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "431": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "432": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53F"
    },
    "435": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "436": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "441": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "442": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "447": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "448": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x277"
    },
    "451": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "452": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "453": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "458": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "459": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "463": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "469": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "470": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "474": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "480": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "481": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D2"
    },
    "484": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "485": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "486": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "491": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "492": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DA"
    },
    "495": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "496": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "497": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "502": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "503": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E2"
    },
    "506": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "507": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "508": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "513": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "514": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F5"
    },
    "517": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "518": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "523": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "524": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "529": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "530": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A1"
    },
    "533": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "534": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "535": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x61AEC1E0"
    },
    "540": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "541": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AC"
    },
    "544": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "545": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "546": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "551": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "552": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BF"
    },
    "555": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "556": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "561": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "562": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "567": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "568": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x438"
    },
    "571": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "572": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "573": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "578": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "579": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x440"
    },
    "582": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "583": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "584": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "589": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "590": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x448"
    },
    "593": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "594": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "595": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "600": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "601": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45B"
    },
    "604": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "605": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "606": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "611": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "612": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47B"
    },
    "615": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "616": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "617": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "622": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "623": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x48E"
    },
    "626": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "627": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "629": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "632": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "633": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "638": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "639": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E4"
    },
    "642": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "643": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "644": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "649": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "GT",
      "path": "16"
    },
    "650": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "654": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "655": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "660": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "661": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F6"
    },
    "664": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "665": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "671": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "672": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FF"
    },
    "675": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "676": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "677": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2FBBA115"
    },
    "682": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "683": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x412"
    },
    "686": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "687": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "688": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "693": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "694": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x425"
    },
    "697": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "698": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "701": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "703": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "704": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "709": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "710": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D3"
    },
    "713": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "714": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "715": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "720": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "721": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "724": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "725": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "726": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x26092B83"
    },
    "731": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "732": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3EE"
    },
    "735": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "736": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "738": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "741": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "742": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "747": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "748": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32C"
    },
    "751": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "752": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "753": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "758": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "759": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x354"
    },
    "762": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "763": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "764": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "769": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "770": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x369"
    },
    "773": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "774": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "775": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "780": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "781": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x394"
    },
    "784": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "785": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "786": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "791": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "792": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AB"
    },
    "795": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "796": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "797": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "802": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "EQ",
      "path": "16"
    },
    "803": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C0"
    },
    "806": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "807": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "808": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "810": {
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "DUP1",
      "path": "16"
    },
    "811": {
      "first_revert": true,
      "fn": null,
      "offset": [
        706,
        8503
      ],
      "op": "REVERT",
      "path": "16"
    },
    "812": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "813": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33F"
    },
    "816": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A"
    },
    "819": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "820": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "822": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BBD"
    },
    "825": {
      "fn": "Cryptids.supportsInterface",
      "jump": "i",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "826": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "827": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D1"
    },
    "830": {
      "fn": "Cryptids.supportsInterface",
      "jump": "i",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "831": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "832": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "834": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "835": {
      "op": "SWAP1"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "ISZERO"
    },
    "838": {
      "op": "DUP2"
    },
    "839": {
      "op": "MSTORE"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "844": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "846": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "847": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "DUP1",
      "path": "16"
    },
    "848": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "849": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "SUB",
      "path": "16"
    },
    "850": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "851": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "RETURN",
      "path": "16"
    },
    "852": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "853": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35C"
    },
    "856": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E2"
    },
    "859": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "860": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "861": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "863": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "864": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "867": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "868": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "869": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C32"
    },
    "872": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "873": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "874": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "877": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x377"
    },
    "880": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "881": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "883": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C45"
    },
    "886": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "887": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "888": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x774"
    },
    "891": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "892": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "893": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "895": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "op": "SWAP1"
    },
    "905": {
      "op": "SWAP2"
    },
    "906": {
      "op": "AND"
    },
    "907": {
      "op": "DUP2"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "915": {
      "op": "JUMP"
    },
    "916": {
      "offset": [
        1732,
        1760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "923": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "924": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "JUMP",
      "path": "16"
    },
    "925": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "926": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "928": {
      "fn": "ERC721.getApproved",
      "offset": [
        1732,
        1760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "DUP2"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "offset": [
        1732,
        1760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B"
    },
    "938": {
      "op": "JUMP"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B9"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "949": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7A"
    },
    "952": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "953": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "954": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80E"
    },
    "957": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "959": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "3"
    },
    "960": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "961": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "964": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CE"
    },
    "967": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "968": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "970": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D30"
    },
    "973": {
      "fn": "Cryptids.setProvenanceHash",
      "jump": "i",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "974": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "975": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x924"
    },
    "978": {
      "fn": "Cryptids.setProvenanceHash",
      "jump": "i",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "979": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "980": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "982": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "983": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39D"
    },
    "986": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "987": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE"
    },
    "991": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E9"
    },
    "994": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "995": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "997": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D79"
    },
    "1000": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1002": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA24"
    },
    "1005": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1006": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4149,
        4625
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1007": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4149,
        4625
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1010": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4149,
        4625
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA55"
    },
    "1013": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4149,
        4625
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1014": {
      "offset": [
        1066,
        1091
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1015": {
      "fn": "Cryptids.publicMint",
      "offset": [
        1066,
        1091
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1018": {
      "fn": "Cryptids.publicMint",
      "offset": [
        1066,
        1091
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1020": {
      "fn": "Cryptids.publicMint",
      "offset": [
        1066,
        1091
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1021": {
      "fn": "Cryptids.publicMint",
      "offset": [
        1066,
        1091
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1022": {
      "fn": "Cryptids.publicMint",
      "offset": [
        1066,
        1091
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1023": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1024": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39D"
    },
    "1027": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40D"
    },
    "1030": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1031": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1033": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C7A"
    },
    "1036": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1037": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1038": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC11"
    },
    "1041": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1042": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1043": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1046": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "1049": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1050": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1052": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C45"
    },
    "1055": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3447,
        4114
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1056": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1057": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA7"
    },
    "1060": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3447,
        4114
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1061": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1062": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1065": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x433"
    },
    "1068": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1069": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1071": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E01"
    },
    "1074": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1075": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1076": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8F"
    },
    "1079": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1080": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6243,
        6531
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1081": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6243,
        6531
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1084": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6243,
        6531
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1158"
    },
    "1087": {
      "fn": "Cryptids.withdraw",
      "jump": "i",
      "offset": [
        6243,
        6531
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1088": {
      "fn": "Cryptids.unpause",
      "offset": [
        4720,
        4785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1089": {
      "fn": "Cryptids.unpause",
      "offset": [
        4720,
        4785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1092": {
      "fn": "Cryptids.unpause",
      "offset": [
        4720,
        4785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x127F"
    },
    "1095": {
      "fn": "Cryptids.unpause",
      "jump": "i",
      "offset": [
        4720,
        4785
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1096": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1097": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE"
    },
    "1100": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x456"
    },
    "1103": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1104": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D79"
    },
    "1109": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1110": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B9"
    },
    "1114": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1115": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1116": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46E"
    },
    "1119": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x469"
    },
    "1122": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1123": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1125": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E43"
    },
    "1128": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1129": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1130": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12D4"
    },
    "1133": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1134": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1135": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1137": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1138": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B"
    },
    "1141": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1142": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1143": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E5E"
    },
    "1146": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1147": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1148": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39D"
    },
    "1151": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x489"
    },
    "1154": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1155": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1157": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C45"
    },
    "1160": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1161": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1162": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1376"
    },
    "1165": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1166": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1167": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1170": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49C"
    },
    "1173": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1174": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1176": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D30"
    },
    "1179": {
      "fn": "Cryptids.setBaseURI",
      "jump": "i",
      "offset": [
        5022,
        5182
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1180": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1181": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1409"
    },
    "1184": {
      "fn": "Cryptids.setBaseURI",
      "jump": "i",
      "offset": [
        5022,
        5182
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1185": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1186": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1188": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1189": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1191": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1192": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33F"
    },
    "1195": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1196": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1197": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1200": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BA"
    },
    "1203": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1204": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1206": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C7A"
    },
    "1209": {
      "fn": "Cryptids.setClaim",
      "jump": "i",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1210": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1211": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1494"
    },
    "1214": {
      "fn": "Cryptids.setClaim",
      "jump": "i",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1215": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1216": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "1219": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CD"
    },
    "1222": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1225": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C45"
    },
    "1228": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1229": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1230": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E0"
    },
    "1233": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1234": {
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1235": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35C"
    },
    "1238": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1557"
    },
    "1241": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1242": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6851,
        6955
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1243": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6851,
        6955
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37C"
    },
    "1246": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6851,
        6955
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15E5"
    },
    "1249": {
      "fn": "Cryptids.lastMintAddress",
      "jump": "i",
      "offset": [
        6851,
        6955
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1250": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1251": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "1254": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F0"
    },
    "1257": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1258": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E43"
    },
    "1263": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1264": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1265": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F8"
    },
    "1268": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE"
    },
    "1273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167F"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1277": {
      "offset": [
        1796,
        1826
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1826
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1826
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1826
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1826
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1826
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1286": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1287": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1290": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x514"
    },
    "1293": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1294": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1296": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C45"
    },
    "1299": {
      "fn": "Cryptids.setMerkleRoot",
      "jump": "i",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1300": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1301": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16B9"
    },
    "1304": {
      "fn": "Cryptids.setMerkleRoot",
      "jump": "i",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1305": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5848,
        6103
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1306": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5848,
        6103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1309": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5848,
        6103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16EE"
    },
    "1312": {
      "fn": "Cryptids.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        5848,
        6103
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1313": {
      "fn": "Cryptids.pause",
      "offset": [
        4653,
        4714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1314": {
      "fn": "Cryptids.pause",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1317": {
      "fn": "Cryptids.pause",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17F0"
    },
    "1320": {
      "fn": "Cryptids.pause",
      "jump": "i",
      "offset": [
        4653,
        4714
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1321": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1322": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1324": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1328": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "op": "SUB"
    },
    "1338": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1339": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "1342": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1343": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1344": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35C"
    },
    "1347": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1828"
    },
    "1350": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1351": {
      "offset": [
        1250,
        1290
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1352": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1354": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1355": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33F"
    },
    "1358": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1359": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1362": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1363": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "DIV",
      "path": "16"
    },
    "1364": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1366": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "AND",
      "path": "16"
    },
    "1367": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1368": {
      "fn": "ERC721.symbol",
      "offset": [
        1250,
        1290
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE"
    },
    "1373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x567"
    },
    "1376": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1377": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EA2"
    },
    "1382": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1384": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1837"
    },
    "1387": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1388": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1389": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1392": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57A"
    },
    "1395": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1396": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1398": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2EDE"
    },
    "1401": {
      "fn": "Cryptids.airdropCryptid",
      "jump": "i",
      "offset": [
        2259,
        2715
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1402": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1403": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1842"
    },
    "1406": {
      "fn": "Cryptids.airdropCryptid",
      "jump": "i",
      "offset": [
        2259,
        2715
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1407": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1408": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33F"
    },
    "1411": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58D"
    },
    "1414": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1415": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1417": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F0A"
    },
    "1420": {
      "fn": "Cryptids.verify",
      "jump": "i",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1421": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1422": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x197E"
    },
    "1425": {
      "fn": "Cryptids.verify",
      "jump": "i",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1427": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE"
    },
    "1430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A0"
    },
    "1433": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1436": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5D"
    },
    "1439": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1440": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1441": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A12"
    },
    "1444": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1445": {
      "offset": [
        1842,
        1860
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1446": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1449": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1453": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "AND",
      "path": "16"
    },
    "1456": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1457": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1459": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B"
    },
    "1465": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1842,
        1860
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FEF"
    },
    "1470": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1842,
        1860
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1471": {
      "offset": [
        1210,
        1244
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1474": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1475": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33F"
    },
    "1478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1479": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1481": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "AND",
      "path": "16"
    },
    "1482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1210,
        1244
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1484": {
      "offset": [
        1671,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1485": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1671,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1671,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1671,
        1700
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1491": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1671,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1492": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1671,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1493": {
      "offset": [
        1163,
        1200
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1494": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35C"
    },
    "1497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A4A"
    },
    "1500": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1163,
        1200
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1501": {
      "offset": [
        1097,
        1125
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35C"
    },
    "1505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A57"
    },
    "1508": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1097,
        1125
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1509": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1510": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35C"
    },
    "1513": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F3"
    },
    "1516": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1517": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1519": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C45"
    },
    "1522": {
      "fn": "Cryptids.tokenURI",
      "jump": "i",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1523": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1524": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A64"
    },
    "1527": {
      "fn": "Cryptids.tokenURI",
      "jump": "i",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1528": {
      "offset": [
        1581,
        1623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1529": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1532": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x606"
    },
    "1535": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1536": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1538": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E43"
    },
    "1541": {
      "fn": "Cryptids.tokenURI",
      "jump": "i",
      "offset": [
        1581,
        1623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1542": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1543": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1545": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1547": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1548": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1550": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1551": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1552": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1553": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1555": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1556": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1557": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1558": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1559": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        1581,
        1623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1560": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1561": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1564": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x626"
    },
    "1567": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1568": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1570": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3017"
    },
    "1573": {
      "fn": "Cryptids.setStage",
      "jump": "i",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1574": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1575": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B19"
    },
    "1578": {
      "fn": "Cryptids.setStage",
      "jump": "i",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1579": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        6961,
        7052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1580": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        6961,
        7052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1583": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        6961,
        7052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C5D"
    },
    "1586": {
      "fn": "Cryptids.lastMintID",
      "jump": "i",
      "offset": [
        6961,
        7052
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1587": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1588": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1591": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x641"
    },
    "1594": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1595": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1597": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D30"
    },
    "1600": {
      "fn": "Cryptids.setBaseExtension",
      "jump": "i",
      "offset": [
        5417,
        5545
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1601": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1602": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C68"
    },
    "1605": {
      "fn": "Cryptids.setBaseExtension",
      "jump": "i",
      "offset": [
        5417,
        5545
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1606": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7331,
        7443
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1607": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7331,
        7443
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "1610": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7331,
        7443
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CAB"
    },
    "1613": {
      "fn": "Cryptids.getTokensLeft",
      "jump": "i",
      "offset": [
        7331,
        7443
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1614": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5193,
        5411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1615": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5193,
        5411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1618": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5193,
        5411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CC3"
    },
    "1621": {
      "fn": "Cryptids.freezeBaseURI",
      "jump": "i",
      "offset": [
        5193,
        5411
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1622": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1623": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33F"
    },
    "1626": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x664"
    },
    "1629": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1630": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1632": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3038"
    },
    "1635": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1636": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "op": "SUB"
    },
    "1645": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "1646": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1647": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "1648": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1651": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1652": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1653": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1655": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1658": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1659": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1660": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1663": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1664": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1665": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1666": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1667": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1668": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "1669": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1670": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1671": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1672": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1673": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1674": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1675": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1676": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1677": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1679": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "1680": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1681": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE"
    },
    "1686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "1689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E43"
    },
    "1695": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB3"
    },
    "1700": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1701": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1702": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "1705": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B3"
    },
    "1708": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1709": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1711": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E43"
    },
    "1714": {
      "fn": "Cryptids.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1715": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1716": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E54"
    },
    "1719": {
      "fn": "Cryptids.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1720": {
      "offset": [
        1297,
        1373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1721": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1723": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1724": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37C"
    },
    "1727": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1728": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "1732": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1733": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "DIV",
      "path": "16"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "offset": [
        1297,
        1373
      ],
      "op": "AND",
      "path": "16"
    },
    "1743": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1744": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        1297,
        1373
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1745": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1746": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8434,
        8438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1748": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8457,
        8493
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0x6DC"
    },
    "1751": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8481,
        8492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1752": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8457,
        8480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EB7"
    },
    "1755": {
      "fn": "Cryptids.supportsInterface",
      "jump": "i",
      "offset": [
        8457,
        8493
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1756": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8457,
        8493
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1757": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8450,
        8493
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1758": {
      "fn": "Cryptids.supportsInterface",
      "offset": [
        8331,
        8500
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "fn": "Cryptids.supportsInterface",
      "jump": "o",
      "offset": [
        8331,
        8500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1762": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1763": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1765": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "1767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F1"
    },
    "1772": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1773": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3062"
    },
    "1776": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1777": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1778": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1779": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1781": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1782": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1784": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1785": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1786": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "1787": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "1788": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1790": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1791": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1793": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1794": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1795": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1796": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1797": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1799": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1800": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1801": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1802": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1803": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1804": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1805": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1806": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1807": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1809": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1810": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1811": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1812": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1813": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71D"
    },
    "1816": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1817": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3062"
    },
    "1820": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1821": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1822": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1823": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1824": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76A"
    },
    "1827": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1828": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1829": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1831": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "3"
    },
    "1832": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73F"
    },
    "1835": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1836": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1839": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1840": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1841": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1842": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "1843": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "1844": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1845": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1846": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1847": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1849": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1850": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1851": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76A"
    },
    "1854": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1855": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1856": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1857": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1858": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1859": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1860": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1862": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1863": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1865": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1867": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1868": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1869": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1870": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1871": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1872": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1873": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1874": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1875": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1877": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1878": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1879": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1881": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1882": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1883": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1884": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "3"
    },
    "1885": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74D"
    },
    "1888": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1889": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1890": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1891": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "3"
    },
    "1892": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1894": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "3"
    },
    "1895": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1896": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "1897": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1898": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1899": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1900": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1901": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1902": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1903": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1904": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1905": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "1906": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1907": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1908": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1909": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1911": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "1912": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1913": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1914": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1916": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1918": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1919": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1921": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1922": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1923": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "1933": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0x7F2"
    },
    "1936": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1937": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1939": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1940": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1948": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1951": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1953": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1954": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "3"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1960": {
      "op": "DUP3"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "MSTORE"
    },
    "1963": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1998": {
      "op": "DUP3"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "op": "MSTORE"
    },
    "2001": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2016": {
      "op": "SHL"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2019": {
      "op": "DUP3"
    },
    "2020": {
      "op": "ADD"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2026": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2028": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2029": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2030": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2031": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "3"
    },
    "2032": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2033": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2034": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2038": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2039": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2040": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2041": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2043": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2045": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2046": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2048": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2049": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2050": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "3"
    },
    "2060": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2061": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2062": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2063": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2065": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x819"
    },
    "2068": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2069": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E0"
    },
    "2072": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2073": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2074": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2075": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "3"
    },
    "2076": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "op": "SUB"
    },
    "2085": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2086": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2096": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "3"
    },
    "2097": {
      "branch": 177,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2098": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x887"
    },
    "2101": {
      "branch": 177,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2102": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2104": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2113": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2116": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2118": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2119": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "3"
    },
    "2120": {
      "op": "MSTORE"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2125": {
      "op": "DUP3"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2170": {
      "op": "SHL"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2173": {
      "op": "DUP3"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "MSTORE"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "2182": {
      "op": "JUMP"
    },
    "2183": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2184": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "op": "SUB"
    },
    "2193": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "2194": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "3"
    },
    "2195": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "3"
    },
    "2196": {
      "branch": 178,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2197": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A3"
    },
    "2200": {
      "branch": 178,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2201": {
      "op": "POP"
    },
    "2202": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A3"
    },
    "2205": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2206": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2207": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x664"
    },
    "2210": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2211": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2212": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x915"
    },
    "2215": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2216": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2218": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2227": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2230": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2232": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2233": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "3"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2239": {
      "op": "DUP3"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "2324": {
      "op": "JUMP"
    },
    "2325": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2326": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x91F"
    },
    "2329": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2330": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2331": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EDC"
    },
    "2334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2335": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2336": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "2337": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "2338": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "2339": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2340": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2341": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2343": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2350": {
      "op": "SHL"
    },
    "2351": {
      "op": "SUB"
    },
    "2352": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2355": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2357": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "2358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2360": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2361": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x954"
    },
    "2364": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "2383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "2387": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2389": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5678,
        5679
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "2391": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5652,
        5667
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2392": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5646,
        5675
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2393": {
      "branch": 155,
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5646,
        5679
      ],
      "op": "GT",
      "path": "16"
    },
    "2394": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B5"
    },
    "2397": {
      "branch": 155,
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2398": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2400": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2409": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2412": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2414": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2415": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "ADD",
      "path": "16"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2459": {
      "op": "DUP3"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2475": {
      "op": "DUP3"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "2484": {
      "op": "JUMP"
    },
    "2485": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5638,
        5723
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2486": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x11"
    },
    "2488": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2489": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2492": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2493": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "DIV",
      "path": "16"
    },
    "2494": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2496": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5742,
        5762
      ],
      "op": "AND",
      "path": "16"
    },
    "2497": {
      "branch": 156,
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5741,
        5762
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2498": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0D"
    },
    "2501": {
      "branch": 156,
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2502": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2504": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2511": {
      "op": "SHL"
    },
    "2512": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2513": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2516": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2518": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2519": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "ADD",
      "path": "16"
    },
    "2520": {
      "op": "MSTORE"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2525": {
      "op": "DUP3"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "op": "MSTORE"
    },
    "2528": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2563": {
      "op": "DUP3"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "op": "MSTORE"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2568": {
      "op": "ADD"
    },
    "2569": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "2572": {
      "op": "JUMP"
    },
    "2573": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5733,
        5793
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2574": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "2575": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2576": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "2579": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2580": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5817
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "2582": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5817
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2583": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2585": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2586": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "ADD",
      "path": "16"
    },
    "2587": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2588": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B0E"
    },
    "2591": {
      "fn": "Cryptids.setProvenanceHash",
      "jump": "i",
      "offset": [
        5803,
        5835
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2592": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2593": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "POP",
      "path": "16"
    },
    "2594": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "POP",
      "path": "16"
    },
    "2595": {
      "fn": "Cryptids.setProvenanceHash",
      "jump": "o",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0xA2E"
    },
    "2600": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F4A"
    },
    "2605": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2606": {
      "branch": 180,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4A"
    },
    "2610": {
      "branch": 180,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2611": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2613": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2623": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "3"
    },
    "2626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "2629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30D2"
    },
    "2633": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0x91F"
    },
    "2638": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2639": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2640": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2641": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2041"
    },
    "2644": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2645": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4149,
        4625
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2646": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2648": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2650": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2651": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "2652": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2653": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA8"
    },
    "2656": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2657": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2659": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2668": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2671": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2673": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2674": {
      "fn": "Cryptids.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "2675": {
      "op": "MSTORE"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2680": {
      "op": "DUP3"
    },
    "2681": {
      "op": "ADD"
    },
    "2682": {
      "op": "MSTORE"
    },
    "2683": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "ADD"
    },
    "2720": {
      "op": "MSTORE"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E9"
    },
    "2727": {
      "op": "JUMP"
    },
    "2728": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2729": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2731": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2733": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2734": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2736": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2737": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2739": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "2740": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2741": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD0"
    },
    "2744": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2745": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2747": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2756": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2757": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2759": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "2760": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "2763": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2764": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3123"
    },
    "2767": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2768": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2769": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4271,
        4287
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 18,
      "value": "0x4"
    },
    "2771": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "2773": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4267
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2774": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2776": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4267
      ],
      "op": "AND",
      "path": "16"
    },
    "2777": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2779": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2780": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "GT",
      "path": "16"
    },
    "2781": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2782": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE9"
    },
    "2785": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2786": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE9"
    },
    "2789": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD9"
    },
    "2792": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4262,
        4287
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2793": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2794": {
      "branch": 157,
      "fn": "Cryptids.publicMint",
      "offset": [
        4262,
        4287
      ],
      "op": "EQ",
      "path": "16"
    },
    "2795": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB36"
    },
    "2798": {
      "branch": 157,
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2799": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2801": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2810": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2813": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2815": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2816": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "ADD",
      "path": "16"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2822": {
      "op": "DUP3"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2860": {
      "op": "DUP3"
    },
    "2861": {
      "op": "ADD"
    },
    "2862": {
      "op": "MSTORE"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2865": {
      "op": "ADD"
    },
    "2866": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "2869": {
      "op": "JUMP"
    },
    "2870": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4254,
        4318
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2871": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4358,
        4373
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x15"
    },
    "2873": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4358,
        4373
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2874": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2876": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2877": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB47"
    },
    "2880": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2881": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4353,
        4354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2883": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "2886": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4336,
        4354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2887": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2888": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4373
      ],
      "op": "GT",
      "path": "16"
    },
    "2889": {
      "branch": 158,
      "fn": "Cryptids.publicMint",
      "offset": [
        4336,
        4373
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2890": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB65"
    },
    "2893": {
      "branch": 158,
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2894": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2896": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2903": {
      "op": "SHL"
    },
    "2904": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2905": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2906": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2908": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "ADD",
      "path": "16"
    },
    "2909": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "2912": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2913": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x317B"
    },
    "2916": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4328,
        4416
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2917": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4328,
        4416
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2918": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4442,
        4452
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 20
    },
    "2919": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2921": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2922": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2923": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2924": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "2926": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2928": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2929": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2931": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2932": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2933": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4434,
        4453
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2934": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4456,
        4457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2936": {
      "op": "GT"
    },
    "2937": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBC4"
    },
    "2940": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2941": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2943": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2952": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2955": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2957": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2958": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "ADD",
      "path": "16"
    },
    "2959": {
      "op": "MSTORE"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2964": {
      "op": "DUP3"
    },
    "2965": {
      "op": "ADD"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH32",
      "value": "0x4D61782032204372797074696473207065722077616C6C65742E000000000000"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3002": {
      "op": "DUP3"
    },
    "3003": {
      "op": "ADD"
    },
    "3004": {
      "op": "MSTORE"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3011": {
      "op": "JUMP"
    },
    "3012": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4426,
        4488
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3013": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4507,
        4517
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 21
    },
    "3014": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3016": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3017": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3018": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3019": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "3021": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3023": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3024": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3026": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3027": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3028": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3029": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3030": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4522,
        4523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3032": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4522,
        4523
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3033": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4518
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3034": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE4"
    },
    "3037": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3038": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4522,
        4523
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3039": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4522,
        4523
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3040": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "3043": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4499,
        4523
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3044": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3045": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3046": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3047": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4499,
        4523
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4533,
        4581
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 22,
      "value": "0xBFC"
    },
    "3052": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4533,
        4581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4543,
        4553
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3055": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4555,
        4580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF7"
    },
    "3058": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4555,
        4570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3060": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 23
    },
    "3061": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3062": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3063": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4555,
        4580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3064": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4533,
        4542
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E8"
    },
    "3067": {
      "fn": "Cryptids.publicMint",
      "jump": "i",
      "offset": [
        4533,
        4581
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3068": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4533,
        4581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3069": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4591,
        4618
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 24,
      "value": "0xC0A"
    },
    "3072": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4591,
        4606
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3074": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 25
    },
    "3075": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3076": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3078": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "3079": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3080": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3081": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3082": {
      "fn": "Cryptids.publicMint",
      "offset": [
        4591,
        4618
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3083": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3085": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3087": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3088": {
      "fn": "Cryptids.publicMint",
      "jump": "o",
      "offset": [
        4149,
        4625
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3089": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3090": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3092": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 26,
      "value": "0xC1C"
    },
    "3095": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3096": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F8"
    },
    "3099": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3100": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3101": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3102": {
      "branch": 190,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "3103": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7E"
    },
    "3106": {
      "branch": 190,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3107": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3109": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3118": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3121": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3123": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3124": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "3125": {
      "op": "MSTORE"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3130": {
      "op": "DUP3"
    },
    "3131": {
      "op": "ADD"
    },
    "3132": {
      "op": "MSTORE"
    },
    "3133": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3168": {
      "op": "DUP3"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3188": {
      "op": "DUP3"
    },
    "3189": {
      "op": "ADD"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3193": {
      "op": "ADD"
    },
    "3194": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E9"
    },
    "3197": {
      "op": "JUMP"
    },
    "3198": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "op": "SUB"
    },
    "3208": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 27
    },
    "3209": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3210": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3211": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "3212": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3214": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3215": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3216": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3217": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3219": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3221": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3222": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3223": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3224": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3226": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3227": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3228": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3229": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3230": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3231": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3232": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3233": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3234": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3235": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3236": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3237": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3238": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3239": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3447,
        4114
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3240": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3242": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3254": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3255": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3256": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3257": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3258": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3259": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3260": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD7"
    },
    "3263": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3264": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3266": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3279": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3283": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "3286": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3288": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3568,
        3582
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0x3"
    },
    "3290": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3564
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "3292": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3564
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3293": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3564
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3295": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3564
      ],
      "op": "AND",
      "path": "16"
    },
    "3296": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3298": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3299": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "GT",
      "path": "16"
    },
    "3300": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3301": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF0"
    },
    "3304": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3305": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF0"
    },
    "3308": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD9"
    },
    "3311": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3312": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3313": {
      "branch": 159,
      "fn": "Cryptids.teamMint",
      "offset": [
        3559,
        3582
      ],
      "op": "EQ",
      "path": "16"
    },
    "3314": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD3D"
    },
    "3317": {
      "branch": 159,
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3318": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3320": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3329": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3332": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3334": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3335": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "ADD",
      "path": "16"
    },
    "3336": {
      "op": "MSTORE"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3341": {
      "op": "DUP3"
    },
    "3342": {
      "op": "ADD"
    },
    "3343": {
      "op": "MSTORE"
    },
    "3344": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3379": {
      "op": "DUP3"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "op": "MSTORE"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3388": {
      "op": "JUMP"
    },
    "3389": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3551,
        3611
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3390": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3642,
        3643
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x0"
    },
    "3392": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3629,
        3639
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3393": {
      "branch": 160,
      "fn": "Cryptids.teamMint",
      "offset": [
        3629,
        3643
      ],
      "op": "GT",
      "path": "16"
    },
    "3394": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD99"
    },
    "3397": {
      "branch": 160,
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3398": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3400": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3409": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3412": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3414": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3415": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "ADD",
      "path": "16"
    },
    "3416": {
      "op": "MSTORE"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3459": {
      "op": "DUP3"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "MSTORE"
    },
    "3462": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "3468": {
      "op": "SHL"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3471": {
      "op": "DUP3"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "op": "MSTORE"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3480": {
      "op": "JUMP"
    },
    "3481": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3621,
        3683
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3482": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3731,
        3745
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x13"
    },
    "3484": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3731,
        3745
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3485": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3714,
        3727
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "3487": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3714,
        3727
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3488": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDA9"
    },
    "3491": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3727
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3492": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3711
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3493": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "3496": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3701,
        3727
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3497": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3727
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3498": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3745
      ],
      "op": "GT",
      "path": "16"
    },
    "3499": {
      "branch": 161,
      "fn": "Cryptids.teamMint",
      "offset": [
        3701,
        3745
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3500": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE0B"
    },
    "3503": {
      "branch": 161,
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3504": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3506": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3515": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3518": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3520": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3521": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "ADD",
      "path": "16"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3527": {
      "op": "DUP3"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "MSTORE"
    },
    "3530": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "ADD"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "3582": {
      "op": "SHL"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3594": {
      "op": "JUMP"
    },
    "3595": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3693,
        3793
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3596": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3845,
        3860
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x15"
    },
    "3598": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3845,
        3860
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3599": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3831,
        3841
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3600": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE18"
    },
    "3603": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3605": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3606": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3607": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3608": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3827
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3609": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE22"
    },
    "3612": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3841
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3613": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3841
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3614": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "3617": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3814,
        3841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3618": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3619": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3860
      ],
      "op": "GT",
      "path": "16"
    },
    "3620": {
      "branch": 162,
      "fn": "Cryptids.teamMint",
      "offset": [
        3814,
        3860
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3621": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE40"
    },
    "3624": {
      "branch": 162,
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3625": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3627": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3634": {
      "op": "SHL"
    },
    "3635": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3636": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3637": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3639": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "ADD",
      "path": "16"
    },
    "3640": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3643": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3644": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x317B"
    },
    "3647": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3806,
        3903
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3648": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3806,
        3903
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3649": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3932,
        3942
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 32
    },
    "3650": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3928
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "3652": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3928
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3654": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3655": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3656": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3657": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE52"
    },
    "3660": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3661": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3662": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "3665": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3915,
        3942
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3666": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3667": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3668": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3669": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3915,
        3942
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3670": {
      "op": "POP"
    },
    "3671": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3969,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3673": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3969,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3952,
        4108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3676": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3977,
        3987
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3677": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3972,
        3973
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3678": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3972,
        3987
      ],
      "op": "GT",
      "path": "16"
    },
    "3679": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3952,
        4108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "3682": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3952,
        4108
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3683": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4008,
        4056
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 33,
      "value": "0xE6F"
    },
    "3686": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4018,
        4028
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3687": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4030,
        4055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF7"
    },
    "3690": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4030,
        4045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3692": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3693": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3694": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3695": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4008,
        4056
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3696": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4070,
        4097
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 34,
      "value": "0xE7D"
    },
    "3699": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4070,
        4085
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3701": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3702": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3703": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3705": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "3706": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3707": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3708": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3709": {
      "fn": "Cryptids.teamMint",
      "offset": [
        4070,
        4097
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3710": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 35
    },
    "3711": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE87"
    },
    "3714": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3715": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31C1"
    },
    "3718": {
      "fn": "Cryptids.teamMint",
      "jump": "i",
      "offset": [
        3989,
        3992
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3719": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3720": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3721": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "POP",
      "path": "16"
    },
    "3722": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3989,
        3992
      ],
      "op": "POP",
      "path": "16"
    },
    "3723": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3952,
        4108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE5B"
    },
    "3726": {
      "fn": "Cryptids.teamMint",
      "offset": [
        3952,
        4108
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3727": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3728": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3730": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3732": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3733": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "3734": {
      "branch": 199,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3735": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE2"
    },
    "3738": {
      "branch": 199,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3739": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3741": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3748": {
      "op": "SHL"
    },
    "3749": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3750": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3753": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3755": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3756": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "3757": {
      "op": "MSTORE"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3762": {
      "op": "DUP3"
    },
    "3763": {
      "op": "ADD"
    },
    "3764": {
      "op": "MSTORE"
    },
    "3765": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3800": {
      "op": "DUP3"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "op": "MSTORE"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3805": {
      "op": "ADD"
    },
    "3806": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E9"
    },
    "3809": {
      "op": "JUMP"
    },
    "3810": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3811": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3813": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3815": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3816": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3818": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3819": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3821": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "3822": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3823": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF0A"
    },
    "3826": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3827": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3829": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3838": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3839": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3841": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3842": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "3845": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3846": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3123"
    },
    "3849": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3850": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3851": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2916,
        2931
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 36,
      "value": "0x2"
    },
    "3853": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "3855": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2912
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3856": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3858": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2912
      ],
      "op": "AND",
      "path": "16"
    },
    "3859": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3861": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3862": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "GT",
      "path": "16"
    },
    "3863": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3864": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF23"
    },
    "3867": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3868": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF23"
    },
    "3871": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD9"
    },
    "3874": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        2907,
        2931
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3875": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3876": {
      "branch": 163,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2907,
        2931
      ],
      "op": "EQ",
      "path": "16"
    },
    "3877": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF70"
    },
    "3880": {
      "branch": 163,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3881": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3883": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3892": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3897": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3898": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "ADD",
      "path": "16"
    },
    "3899": {
      "op": "MSTORE"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "MSTORE"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "3951": {
      "op": "JUMP"
    },
    "3952": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2899,
        2965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3953": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3002,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 37,
      "value": "0xD"
    },
    "3955": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3002,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3956": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3958": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3959": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3972": {
      "op": "NOT"
    },
    "3973": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3041,
        3051
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3976": {
      "op": "SHL"
    },
    "3977": {
      "op": "AND"
    },
    "3978": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3980": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3981": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "ADD",
      "path": "16"
    },
    "3982": {
      "op": "MSTORE"
    },
    "3983": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE9"
    },
    "3986": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3987": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3002,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3993": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3994": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3996": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3997": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3998": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "SUB",
      "path": "16"
    },
    "3999": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "SUB",
      "path": "16"
    },
    "4000": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4001": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4002": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4003": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4005": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3024,
        3052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4006": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4007": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4008": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4009": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4011": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "ADD",
      "path": "16"
    },
    "4012": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3014,
        3053
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4013": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        2994
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4014": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        2994
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4015": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4016": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4017": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4019": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MUL",
      "path": "16"
    },
    "4020": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4022": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "ADD",
      "path": "16"
    },
    "4023": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4025": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4026": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4027": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4028": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "ADD",
      "path": "16"
    },
    "4029": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4031": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4032": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4033": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4034": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4035": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4036": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4037": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4038": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4039": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4040": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4042": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "ADD",
      "path": "16"
    },
    "4043": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4044": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4045": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4047": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MUL",
      "path": "16"
    },
    "4048": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4049": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4050": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4051": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4052": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4054": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4055": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "ADD",
      "path": "16"
    },
    "4056": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4057": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4058": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4059": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4060": {
      "op": "POP"
    },
    "4061": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4062": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4063": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4064": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3001
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2202"
    },
    "4070": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        2983,
        3054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4073": {
      "branch": 164,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2983,
        3054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4074": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1035"
    },
    "4077": {
      "branch": 164,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4078": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4080": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4089": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4094": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4095": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "ADD",
      "path": "16"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "ADD"
    },
    "4103": {
      "op": "MSTORE"
    },
    "4104": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4139": {
      "op": "DUP3"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4144": {
      "op": "ADD"
    },
    "4145": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "4148": {
      "op": "JUMP"
    },
    "4149": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        2975,
        3084
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4150": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3142,
        3156
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 38,
      "value": "0x13"
    },
    "4152": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3142,
        3156
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4153": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3139
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "4155": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3139
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4156": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3156
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1045"
    },
    "4159": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3156
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4160": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3156
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4161": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3156
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31DC"
    },
    "4164": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        3124,
        3156
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4165": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3124,
        3156
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4166": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "4168": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4169": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1053"
    },
    "4172": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4173": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3119,
        3120
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4175": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "4178": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        3102,
        3120
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4179": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3120
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4180": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3156
      ],
      "op": "GT",
      "path": "16"
    },
    "4181": {
      "branch": 165,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3102,
        3156
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4182": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10AF"
    },
    "4185": {
      "branch": 165,
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4186": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4188": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4195": {
      "op": "SHL"
    },
    "4196": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4197": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4200": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4202": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4203": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "ADD",
      "path": "16"
    },
    "4204": {
      "op": "MSTORE"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4209": {
      "op": "DUP3"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20657863656564732077686974656C697374207375"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH5",
      "value": "0x3838363C97"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4261": {
      "op": "DUP3"
    },
    "4262": {
      "op": "ADD"
    },
    "4263": {
      "op": "MSTORE"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "4270": {
      "op": "JUMP"
    },
    "4271": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3094,
        3198
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4272": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3226,
        3236
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 39
    },
    "4273": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4275": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4276": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4277": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4278": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3225
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "4280": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4282": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4283": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4285": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4286": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4287": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3218,
        3237
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4288": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3240,
        3241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4290": {
      "op": "GT"
    },
    "4291": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110E"
    },
    "4294": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4295": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4297": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4306": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4309": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4311": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4312": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "ADD",
      "path": "16"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "ADD"
    },
    "4320": {
      "op": "MSTORE"
    },
    "4321": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "ADD"
    },
    "4358": {
      "op": "MSTORE"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "4365": {
      "op": "JUMP"
    },
    "4366": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3210,
        3277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4367": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3296,
        3306
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 40
    },
    "4368": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4370": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4371": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4372": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4373": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "4375": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4377": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4378": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4380": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4381": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4382": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4383": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4384": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3311,
        3312
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4386": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3311,
        3312
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4387": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4388": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x112E"
    },
    "4391": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4392": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3311,
        3312
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4393": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3311,
        3312
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4394": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "4397": {
      "fn": "Cryptids.whitelistMint",
      "jump": "i",
      "offset": [
        3288,
        3312
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4398": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4399": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4400": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4401": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3288,
        3312
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3322,
        3370
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 41,
      "value": "0x1141"
    },
    "4406": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3322,
        3370
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3332,
        3342
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4409": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3344,
        3369
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF7"
    },
    "4412": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3344,
        3359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4414": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4415": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4416": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4417": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3322,
        3370
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4418": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3380,
        3407
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 42,
      "value": "0x114F"
    },
    "4421": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3380,
        3395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4423": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4424": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4425": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4427": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4428": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4429": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4430": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4431": {
      "fn": "Cryptids.whitelistMint",
      "offset": [
        3380,
        3407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4432": {
      "op": "POP"
    },
    "4433": {
      "op": "POP"
    },
    "4434": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4436": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4438": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4439": {
      "fn": "Cryptids.whitelistMint",
      "jump": "o",
      "offset": [
        2753,
        3414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4440": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6243,
        6531
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4443": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4450": {
      "op": "SHL"
    },
    "4451": {
      "op": "SUB"
    },
    "4452": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4456": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4458": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4459": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4460": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4461": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1188"
    },
    "4464": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "4483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4484": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "4487": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4488": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4489": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6310,
        6331
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4490": {
      "branch": 166,
      "fn": "Cryptids.withdraw",
      "offset": [
        6349,
        6360
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 43
    },
    "4491": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11D6"
    },
    "4494": {
      "branch": 166,
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4495": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4497": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4506": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4509": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4511": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4512": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "ADD",
      "path": "16"
    },
    "4513": {
      "op": "MSTORE"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4518": {
      "op": "DUP3"
    },
    "4519": {
      "op": "ADD"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "PUSH32",
      "value": "0x4E6F2062616C616E636520746F2077697468647261772E000000000000000000"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4556": {
      "op": "DUP3"
    },
    "4557": {
      "op": "ADD"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "4565": {
      "op": "JUMP"
    },
    "4566": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6341,
        6388
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4567": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "4569": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4570": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4572": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4573": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6399,
        6411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4575": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6399,
        6411
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4576": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "4580": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4581": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "DIV",
      "path": "16"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "AND",
      "path": "16"
    },
    "4591": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4592": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6455,
        6462
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4593": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6455,
        6462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4594": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6399,
        6411
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4595": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4596": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6399,
        6411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4597": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4598": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6455,
        6462
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4599": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6425,
        6441
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4600": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "GAS",
      "path": "16"
    },
    "4601": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "CALL",
      "path": "16"
    },
    "4602": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4603": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4604": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4605": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4606": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4607": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4608": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4610": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4611": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "EQ",
      "path": "16"
    },
    "4612": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1229"
    },
    "4615": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4616": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4618": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4619": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4620": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4621": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4623": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "NOT",
      "path": "16"
    },
    "4624": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4626": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4627": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "ADD",
      "path": "16"
    },
    "4628": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "AND",
      "path": "16"
    },
    "4629": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4630": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "ADD",
      "path": "16"
    },
    "4631": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4633": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4634": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4635": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4636": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4637": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4638": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4640": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4642": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4643": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "ADD",
      "path": "16"
    },
    "4644": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4645": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x122E"
    },
    "4648": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4649": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4650": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4652": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4653": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4654": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4655": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6417,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4656": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6398,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4657": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6398,
        6467
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4658": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6398,
        6467
      ],
      "op": "POP",
      "path": "16"
    },
    "4659": {
      "branch": 167,
      "fn": "Cryptids.withdraw",
      "offset": [
        6485,
        6492
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 44
    },
    "4660": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "4663": {
      "branch": 167,
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4664": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4666": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4675": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4678": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4680": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4681": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "ADD",
      "path": "16"
    },
    "4682": {
      "op": "MSTORE"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "ADD"
    },
    "4689": {
      "op": "MSTORE"
    },
    "4690": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2077697468647261772062616C616E63652E0000000000"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4725": {
      "op": "DUP3"
    },
    "4726": {
      "op": "ADD"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4730": {
      "op": "ADD"
    },
    "4731": {
      "fn": "Cryptids.withdraw",
      "offset": [
        6477,
        6524
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "4734": {
      "op": "JUMP"
    },
    "4735": {
      "fn": "Cryptids.unpause",
      "offset": [
        4720,
        4785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4736": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4738": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "op": "SUB"
    },
    "4747": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4750": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4751": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4752": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4753": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4754": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4755": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4756": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AF"
    },
    "4759": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4771": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4772": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "4778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "4782": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4784": {
      "fn": "Cryptids.unpause",
      "offset": [
        4768,
        4778
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 45,
      "value": "0x12B7"
    },
    "4787": {
      "fn": "Cryptids.unpause",
      "offset": [
        4768,
        4776
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2218"
    },
    "4790": {
      "fn": "Cryptids.unpause",
      "jump": "i",
      "offset": [
        4768,
        4778
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4791": {
      "fn": "Cryptids.unpause",
      "offset": [
        4768,
        4778
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4792": {
      "fn": "Cryptids.unpause",
      "jump": "o",
      "offset": [
        4720,
        4785
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4793": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4794": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 46,
      "value": "0x91F"
    },
    "4797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4800": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4802": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "3"
    },
    "4807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4809": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4810": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4811": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4813": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4815": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "3"
    },
    "4816": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A12"
    },
    "4819": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4820": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4821": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7514,
        7530
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4823": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7542,
        7565
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4825": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7568,
        7584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12E1"
    },
    "4828": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7578,
        7583
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4829": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7568,
        7577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15F8"
    },
    "4832": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7568,
        7584
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4833": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7568,
        7584
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4834": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7542,
        7584
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4835": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7542,
        7584
      ],
      "op": "POP",
      "path": "16"
    },
    "4836": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7594,
        7620
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4838": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7637,
        7652
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4839": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4848": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4849": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "GT",
      "path": "16"
    },
    "4850": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4851": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12FE"
    },
    "4854": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4855": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12FE"
    },
    "4858": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CA4"
    },
    "4861": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7623,
        7653
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4862": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4863": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4865": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4866": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4867": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4868": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4869": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4870": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4871": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4873": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "MUL",
      "path": "16"
    },
    "4874": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4876": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ADD",
      "path": "16"
    },
    "4877": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4878": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ADD",
      "path": "16"
    },
    "4879": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4881": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4882": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4883": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4884": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1327"
    },
    "4887": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4888": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4889": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4891": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ADD",
      "path": "16"
    },
    "4892": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4894": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4895": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "MUL",
      "path": "16"
    },
    "4896": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4897": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "4898": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4899": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4900": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "ADD",
      "path": "16"
    },
    "4901": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4902": {
      "op": "POP"
    },
    "4903": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4904": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7623,
        7653
      ],
      "op": "POP",
      "path": "16"
    },
    "4905": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7594,
        7653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4906": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7594,
        7653
      ],
      "op": "POP",
      "path": "16"
    },
    "4907": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7668,
        7677
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4909": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4910": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7683,
        7698
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4911": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7679,
        7680
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4912": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7679,
        7698
      ],
      "op": "LT",
      "path": "16"
    },
    "4913": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4914": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x136E"
    },
    "4917": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4918": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7734,
        7763
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 47,
      "value": "0x133F"
    },
    "4921": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7754,
        7759
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4922": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7761,
        7762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4923": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7734,
        7753
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC11"
    },
    "4926": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7734,
        7763
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4927": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7734,
        7763
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4928": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7728
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4929": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7729,
        7730
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4930": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4931": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4932": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4933": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "LT",
      "path": "16"
    },
    "4934": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1351"
    },
    "4937": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4938": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1351"
    },
    "4941": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31F3"
    },
    "4944": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7719,
        7731
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4945": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4946": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4948": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4949": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4950": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "MUL",
      "path": "16"
    },
    "4951": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4952": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4953": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4954": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "ADD",
      "path": "16"
    },
    "4955": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7731
      ],
      "op": "ADD",
      "path": "16"
    },
    "4956": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7719,
        7763
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4957": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 48
    },
    "4958": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1366"
    },
    "4961": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4962": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31C1"
    },
    "4965": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "i",
      "offset": [
        7700,
        7703
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4966": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4967": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4968": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "POP",
      "path": "16"
    },
    "4969": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7700,
        7703
      ],
      "op": "POP",
      "path": "16"
    },
    "4970": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x132D"
    },
    "4973": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4974": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7663,
        7774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7790,
        7799
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 49
    },
    "4977": {
      "fn": "Cryptids.walletOfOwner",
      "offset": [
        7453,
        7806
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "fn": "Cryptids.walletOfOwner",
      "jump": "o",
      "offset": [
        7453,
        7806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4982": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4983": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4985": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 50,
      "value": "0x1381"
    },
    "4988": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "4990": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4991": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4992": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4993": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4994": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4995": {
      "branch": 191,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "4996": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "4999": {
      "branch": 191,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5000": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5002": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5009": {
      "op": "SHL"
    },
    "5010": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5011": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5014": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5016": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5017": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5018": {
      "op": "MSTORE"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5023": {
      "op": "DUP3"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "MSTORE"
    },
    "5026": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5061": {
      "op": "DUP3"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5082": {
      "op": "DUP3"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "op": "MSTORE"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E9"
    },
    "5091": {
      "op": "JUMP"
    },
    "5092": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5093": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x8"
    },
    "5095": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5096": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5097": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5098": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5099": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5100": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F7"
    },
    "5103": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5104": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F7"
    },
    "5107": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F3"
    },
    "5110": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5111": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5112": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5113": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5115": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5116": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5118": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5120": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5121": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5122": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5123": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5124": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5125": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5126": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5127": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5128": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5129": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5022,
        5182
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5130": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5132": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5139": {
      "op": "SHL"
    },
    "5140": {
      "op": "SUB"
    },
    "5141": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5144": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5145": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5146": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5147": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5148": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5149": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5150": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1439"
    },
    "5153": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5156": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5163": {
      "op": "SHL"
    },
    "5164": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5165": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5166": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5168": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5169": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "5172": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "5176": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5178": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5107,
        5121
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 52,
      "value": "0x11"
    },
    "5180": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5107,
        5121
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5181": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5107,
        5121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5183": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5107,
        5121
      ],
      "op": "AND",
      "path": "16"
    },
    "5184": {
      "branch": 168,
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5106,
        5121
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5185": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1481"
    },
    "5188": {
      "branch": 168,
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5189": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5191": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5198": {
      "op": "SHL"
    },
    "5199": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5200": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5203": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5205": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5206": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "ADD",
      "path": "16"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "op": "MSTORE"
    },
    "5215": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5236": {
      "op": "SHL"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5239": {
      "op": "DUP3"
    },
    "5240": {
      "op": "ADD"
    },
    "5241": {
      "op": "MSTORE"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "5248": {
      "op": "JUMP"
    },
    "5249": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5098,
        5144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5250": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 53
    },
    "5251": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5252": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "5255": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5256": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5258": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5259": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5261": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5262": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "ADD",
      "path": "16"
    },
    "5263": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5264": {
      "fn": "Cryptids.setBaseURI",
      "offset": [
        5154,
        5175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B0E"
    },
    "5267": {
      "fn": "Cryptids.setBaseURI",
      "jump": "i",
      "offset": [
        5154,
        5175
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5268": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5269": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5271": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5278": {
      "op": "SHL"
    },
    "5279": {
      "op": "SUB"
    },
    "5280": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5283": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5285": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5287": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5288": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5289": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "5292": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5295": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5302": {
      "op": "SHL"
    },
    "5303": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "5311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5312": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "5315": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5316": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5323": {
      "op": "SHL"
    },
    "5324": {
      "op": "SUB"
    },
    "5325": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 54
    },
    "5326": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5327": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "AND",
      "path": "16"
    },
    "5328": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5330": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5331": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5332": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5333": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4879
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "5335": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5337": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5338": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5340": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5341": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4890
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5342": {
      "fn": "Cryptids.setClaim",
      "offset": [
        4872,
        4899
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5343": {
      "fn": "Cryptids.setClaim",
      "jump": "o",
      "offset": [
        4791,
        4906
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5344": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5345": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5347": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5348": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5349": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5350": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5354": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5357": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5359": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5366": {
      "op": "SHL"
    },
    "5367": {
      "op": "SUB"
    },
    "5368": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "3"
    },
    "5369": {
      "branch": 181,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 55
    },
    "5370": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DC"
    },
    "5373": {
      "branch": 181,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5374": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5383": {
      "op": "SHL"
    },
    "5384": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5388": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5391": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5392": {
      "op": "MSTORE"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5397": {
      "op": "DUP3"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "MSTORE"
    },
    "5400": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5435": {
      "op": "DUP3"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "MSTORE"
    },
    "5438": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5450": {
      "op": "SHL"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5453": {
      "op": "DUP3"
    },
    "5454": {
      "op": "ADD"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "5462": {
      "op": "JUMP"
    },
    "5463": {
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5464": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5466": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5467": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5468": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1564"
    },
    "5471": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5472": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "5475": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5476": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5477": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5478": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5480": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5481": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5483": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5484": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5485": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DIV",
      "path": "16"
    },
    "5486": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MUL",
      "path": "16"
    },
    "5487": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5489": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5490": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5492": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5493": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5494": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5495": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5496": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5498": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5499": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5500": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5501": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5502": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5503": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5504": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5505": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5506": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5508": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5509": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5510": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5511": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5512": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1590"
    },
    "5515": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5516": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "5519": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5520": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5521": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5522": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5523": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15DD"
    },
    "5526": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5527": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5528": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5530": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "LT",
      "path": "16"
    },
    "5531": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15B2"
    },
    "5534": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5535": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5538": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5539": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5540": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DIV",
      "path": "16"
    },
    "5542": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MUL",
      "path": "16"
    },
    "5543": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5544": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5545": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5546": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5548": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5549": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5550": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15DD"
    },
    "5553": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5555": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5556": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5558": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5559": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5562": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5566": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5569": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5571": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5572": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "GT",
      "path": "16"
    },
    "5584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15C0"
    },
    "5587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SUB",
      "path": "16"
    },
    "5591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "AND",
      "path": "16"
    },
    "5594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "ADD",
      "path": "16"
    },
    "5596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "POP",
      "path": "16"
    },
    "5599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "POP",
      "path": "16"
    },
    "5600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "POP",
      "path": "16"
    },
    "5601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "POP",
      "path": "16"
    },
    "5602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "POP",
      "path": "16"
    },
    "5603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1131,
        1157
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5604": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1131,
        1157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5605": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6851,
        6955
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5606": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6901,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5608": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6926,
        6948
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 56,
      "value": "0x15F3"
    },
    "5611": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6934,
        6947
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4CD"
    },
    "5614": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5616": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5617": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5618": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5619": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6926,
        6948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5620": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6919,
        6948
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5621": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6919,
        6948
      ],
      "op": "POP",
      "path": "16"
    },
    "5622": {
      "fn": "Cryptids.lastMintAddress",
      "offset": [
        6851,
        6955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5623": {
      "fn": "Cryptids.lastMintAddress",
      "jump": "o",
      "offset": [
        6851,
        6955
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5624": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5625": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5633": {
      "op": "SHL"
    },
    "5634": {
      "op": "SUB"
    },
    "5635": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 57
    },
    "5636": {
      "branch": 182,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "5637": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1663"
    },
    "5640": {
      "branch": 182,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5641": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5643": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5652": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5657": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "3"
    },
    "5659": {
      "op": "MSTORE"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5664": {
      "op": "DUP3"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "MSTORE"
    },
    "5667": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "ADD"
    },
    "5704": {
      "op": "MSTORE"
    },
    "5705": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5718": {
      "op": "SHL"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5721": {
      "op": "DUP3"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5726": {
      "op": "ADD"
    },
    "5727": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "5730": {
      "op": "JUMP"
    },
    "5731": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5739": {
      "op": "SHL"
    },
    "5740": {
      "op": "SUB"
    },
    "5741": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "3",
      "statement": 58
    },
    "5742": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5744": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5745": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5746": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5747": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5749": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5751": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5752": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5754": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5755": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5756": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5757": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5758": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5760": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5762": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5769": {
      "op": "SHL"
    },
    "5770": {
      "op": "SUB"
    },
    "5771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5774": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5776": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5777": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5778": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5779": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5780": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "5783": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5786": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5793": {
      "op": "SHL"
    },
    "5794": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "5802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "5806": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 59,
      "value": "0x12B7"
    },
    "5811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22AB"
    },
    "5816": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5817": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5818": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5820": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5827": {
      "op": "SHL"
    },
    "5828": {
      "op": "SUB"
    },
    "5829": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5836": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5837": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5838": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E9"
    },
    "5841": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5842": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5851": {
      "op": "SHL"
    },
    "5852": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5854": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "5860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "5864": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5866": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4985,
        4995
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0xD"
    },
    "5868": {
      "fn": "Cryptids.setMerkleRoot",
      "offset": [
        4985,
        5009
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5869": {
      "fn": "Cryptids.setMerkleRoot",
      "jump": "o",
      "offset": [
        4912,
        5016
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5870": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5848,
        6103
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5873": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5880": {
      "op": "SHL"
    },
    "5881": {
      "op": "SUB"
    },
    "5882": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5885": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5886": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5888": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5889": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5890": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5891": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171E"
    },
    "5894": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5895": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5904": {
      "op": "SHL"
    },
    "5905": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5906": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5910": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "5913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5914": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "5917": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5919": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5948,
        5949
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x0"
    },
    "5921": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5923,
        5937
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5923": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5924": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5925": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x172D"
    },
    "5928": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5929": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "5932": {
      "fn": "Cryptids.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        5917,
        5945
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5933": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5934": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5935": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5945
      ],
      "op": "POP",
      "path": "16"
    },
    "5936": {
      "branch": 169,
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5917,
        5949
      ],
      "op": "GT",
      "path": "16"
    },
    "5937": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x177C"
    },
    "5940": {
      "branch": 169,
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5941": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5943": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5950": {
      "op": "SHL"
    },
    "5951": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5952": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5955": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5957": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5958": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "ADD",
      "path": "16"
    },
    "5959": {
      "op": "MSTORE"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5964": {
      "op": "DUP3"
    },
    "5965": {
      "op": "ADD"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6002": {
      "op": "DUP3"
    },
    "6003": {
      "op": "ADD"
    },
    "6004": {
      "op": "MSTORE"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6007": {
      "op": "ADD"
    },
    "6008": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "6011": {
      "op": "JUMP"
    },
    "6012": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5909,
        5981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6013": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x11"
    },
    "6015": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6016": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6019": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6020": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "DIV",
      "path": "16"
    },
    "6021": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6023": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6000,
        6020
      ],
      "op": "AND",
      "path": "16"
    },
    "6024": {
      "branch": 170,
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5999,
        6020
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6025": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17DF"
    },
    "6028": {
      "branch": 170,
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6029": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6031": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6038": {
      "op": "SHL"
    },
    "6039": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6040": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6043": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6045": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6046": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "ADD",
      "path": "16"
    },
    "6047": {
      "op": "MSTORE"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6052": {
      "op": "DUP3"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "MSTORE"
    },
    "6055": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6090": {
      "op": "DUP3"
    },
    "6091": {
      "op": "ADD"
    },
    "6092": {
      "op": "MSTORE"
    },
    "6093": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6098": {
      "op": "SHL"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6101": {
      "op": "DUP3"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6106": {
      "op": "ADD"
    },
    "6107": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "6110": {
      "op": "JUMP"
    },
    "6111": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        5991,
        6059
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6112": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6089
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0x11"
    },
    "6114": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6115": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6116": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6119": {
      "op": "NOT"
    },
    "6120": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "AND",
      "path": "16"
    },
    "6121": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6124": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "OR",
      "path": "16"
    },
    "6125": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6126": {
      "fn": "Cryptids.freezeProvenanceHash",
      "offset": [
        6069,
        6096
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6127": {
      "fn": "Cryptids.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        5848,
        6103
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6128": {
      "fn": "Cryptids.pause",
      "offset": [
        4653,
        4714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6129": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6131": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6138": {
      "op": "SHL"
    },
    "6139": {
      "op": "SUB"
    },
    "6140": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6143": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6144": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6145": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6146": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6147": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6148": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6149": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1820"
    },
    "6152": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6153": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6155": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6162": {
      "op": "SHL"
    },
    "6163": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6164": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6165": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6167": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6168": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "6171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6172": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "6175": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6177": {
      "fn": "Cryptids.pause",
      "offset": [
        4699,
        4707
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 64,
      "value": "0x12B7"
    },
    "6180": {
      "fn": "Cryptids.pause",
      "offset": [
        4699,
        4705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2305"
    },
    "6183": {
      "fn": "Cryptids.pause",
      "jump": "i",
      "offset": [
        4699,
        4707
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6184": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6185": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6187": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x1"
    },
    "6189": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6190": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6191": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F1"
    },
    "6194": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6195": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3062"
    },
    "6198": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6199": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6200": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 66,
      "value": "0xA20"
    },
    "6203": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6206": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235D"
    },
    "6209": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6210": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2259,
        2715
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6213": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6220": {
      "op": "SHL"
    },
    "6221": {
      "op": "SUB"
    },
    "6222": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6225": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6226": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6227": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6228": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6229": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6230": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6231": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1872"
    },
    "6234": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6244": {
      "op": "SHL"
    },
    "6245": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6249": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "6253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "6257": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6259": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2405,
        2415
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 67,
      "value": "0x0"
    },
    "6261": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2402
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "6263": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2402
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6264": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2402
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6266": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2402
      ],
      "op": "AND",
      "path": "16"
    },
    "6267": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6269": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6270": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "GT",
      "path": "16"
    },
    "6271": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6272": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188B"
    },
    "6275": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6276": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188B"
    },
    "6279": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD9"
    },
    "6282": {
      "fn": "Cryptids.airdropCryptid",
      "jump": "i",
      "offset": [
        2397,
        2415
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6283": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6284": {
      "branch": 171,
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2397,
        2415
      ],
      "op": "GT",
      "path": "16"
    },
    "6285": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18CF"
    },
    "6288": {
      "branch": 171,
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6289": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6291": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6298": {
      "op": "SHL"
    },
    "6299": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6300": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6303": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6305": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6306": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "ADD",
      "path": "16"
    },
    "6307": {
      "op": "MSTORE"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6312": {
      "op": "DUP3"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "op": "MSTORE"
    },
    "6315": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "6338": {
      "op": "SHL"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6341": {
      "op": "DUP3"
    },
    "6342": {
      "op": "ADD"
    },
    "6343": {
      "op": "MSTORE"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6346": {
      "op": "ADD"
    },
    "6347": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "6350": {
      "op": "JUMP"
    },
    "6351": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2389,
        2440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6352": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2489,
        2504
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 68,
      "value": "0x15"
    },
    "6354": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2489,
        2504
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6355": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2475,
        2485
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6356": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2471
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18DC"
    },
    "6359": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6361": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6362": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6363": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6364": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2471
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6365": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18E6"
    },
    "6368": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2485
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6369": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2485
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6370": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3163"
    },
    "6373": {
      "fn": "Cryptids.airdropCryptid",
      "jump": "i",
      "offset": [
        2458,
        2485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6374": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6375": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2504
      ],
      "op": "GT",
      "path": "16"
    },
    "6376": {
      "branch": 172,
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2458,
        2504
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6377": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1947"
    },
    "6380": {
      "branch": 172,
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6381": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6383": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6390": {
      "op": "SHL"
    },
    "6391": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6392": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6395": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6397": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6398": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "ADD",
      "path": "16"
    },
    "6399": {
      "op": "MSTORE"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6404": {
      "op": "DUP3"
    },
    "6405": {
      "op": "ADD"
    },
    "6406": {
      "op": "MSTORE"
    },
    "6407": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6442": {
      "op": "DUP3"
    },
    "6443": {
      "op": "ADD"
    },
    "6444": {
      "op": "MSTORE"
    },
    "6445": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "6458": {
      "op": "SHL"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6461": {
      "op": "DUP3"
    },
    "6462": {
      "op": "ADD"
    },
    "6463": {
      "op": "MSTORE"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "6470": {
      "op": "JUMP"
    },
    "6471": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2450,
        2551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6472": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2578,
        2579
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6474": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2561,
        2709
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6475": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2586,
        2596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6476": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2581,
        2582
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6477": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2581,
        2596
      ],
      "op": "GT",
      "path": "16"
    },
    "6478": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2561,
        2709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91F"
    },
    "6481": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2561,
        2709
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6482": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2617,
        2657
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 69,
      "value": "0x195E"
    },
    "6485": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2627,
        2629
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6486": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2631,
        2656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF7"
    },
    "6489": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2631,
        2646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6491": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6492": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6493": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6494": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2617,
        2657
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6495": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 70,
      "value": "0x196C"
    },
    "6498": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2671,
        2686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6500": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6501": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6502": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6504": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6505": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6506": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6507": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6508": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6509": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 71
    },
    "6510": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1976"
    },
    "6513": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6514": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31C1"
    },
    "6517": {
      "fn": "Cryptids.airdropCryptid",
      "jump": "i",
      "offset": [
        2598,
        2601
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6518": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6519": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6520": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "POP",
      "path": "16"
    },
    "6521": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2598,
        2601
      ],
      "op": "POP",
      "path": "16"
    },
    "6522": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2561,
        2709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x194A"
    },
    "6525": {
      "fn": "Cryptids.airdropCryptid",
      "offset": [
        2561,
        2709
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6526": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6527": {
      "fn": "Cryptids.verify",
      "offset": [
        7939,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "6529": {
      "fn": "Cryptids.verify",
      "offset": [
        7939,
        7949
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6530": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6532": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6533": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "6546": {
      "op": "NOT"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6549": {
      "op": "DUP7"
    },
    "6550": {
      "op": "SWAP1"
    },
    "6551": {
      "op": "SHL"
    },
    "6552": {
      "op": "AND"
    },
    "6553": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6555": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6556": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "ADD",
      "path": "16"
    },
    "6557": {
      "op": "MSTORE"
    },
    "6558": {
      "fn": "Cryptids.verify",
      "offset": [
        7900,
        7904
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6560": {
      "fn": "Cryptids.verify",
      "offset": [
        7900,
        7904
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6561": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19FA"
    },
    "6564": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "6567": {
      "op": "ADD"
    },
    "6568": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6570": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6571": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6573": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6574": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6575": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "SUB",
      "path": "16"
    },
    "6576": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "SUB",
      "path": "16"
    },
    "6577": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6578": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6579": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6580": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6582": {
      "fn": "Cryptids.verify",
      "offset": [
        7961,
        7986
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6583": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6584": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6585": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6586": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6588": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "ADD",
      "path": "16"
    },
    "6589": {
      "fn": "Cryptids.verify",
      "offset": [
        7951,
        7987
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6590": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7931
      ],
      "op": "DUP6",
      "path": "16"
    },
    "6591": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7931
      ],
      "op": "DUP6",
      "path": "16"
    },
    "6592": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6593": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6594": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6596": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MUL",
      "path": "16"
    },
    "6597": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6599": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "ADD",
      "path": "16"
    },
    "6600": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6602": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6603": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6604": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6605": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "ADD",
      "path": "16"
    },
    "6606": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6608": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6609": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6610": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6611": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6612": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6613": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6614": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6615": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6616": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6617": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6619": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "ADD",
      "path": "16"
    },
    "6620": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6621": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6622": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6624": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MUL",
      "path": "16"
    },
    "6625": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6626": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6627": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6628": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "6629": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6631": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6632": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "ADD",
      "path": "16"
    },
    "6633": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6634": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6635": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6636": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6639": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "6640": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6641": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6642": {
      "op": "POP"
    },
    "6643": {
      "op": "POP"
    },
    "6644": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7938
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2202"
    },
    "6647": {
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6648": {
      "op": "POP"
    },
    "6649": {
      "fn": "Cryptids.verify",
      "jump": "i",
      "offset": [
        7920,
        7988
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6650": {
      "branch": 173,
      "fn": "Cryptids.verify",
      "offset": [
        7920,
        7988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6651": {
      "fn": "Cryptids.verify",
      "offset": [
        7916,
        8026
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6652": {
      "fn": "Cryptids.verify",
      "offset": [
        7916,
        8026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A07"
    },
    "6655": {
      "branch": 173,
      "fn": "Cryptids.verify",
      "offset": [
        7916,
        8026
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6656": {
      "op": "POP"
    },
    "6657": {
      "fn": "Cryptids.verify",
      "offset": [
        8011,
        8015
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 72,
      "value": "0x1"
    },
    "6659": {
      "fn": "Cryptids.verify",
      "offset": [
        8004,
        8015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A0B"
    },
    "6662": {
      "fn": "Cryptids.verify",
      "offset": [
        8004,
        8015
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6663": {
      "fn": "Cryptids.verify",
      "offset": [
        7916,
        8026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6664": {
      "op": "POP"
    },
    "6665": {
      "fn": "Cryptids.verify",
      "offset": [
        8042,
        8047
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 73,
      "value": "0x0"
    },
    "6667": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6668": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6669": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6670": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "POP",
      "path": "16"
    },
    "6671": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "POP",
      "path": "16"
    },
    "6672": {
      "fn": "Cryptids.verify",
      "offset": [
        7812,
        8054
      ],
      "op": "POP",
      "path": "16"
    },
    "6673": {
      "fn": "Cryptids.verify",
      "jump": "o",
      "offset": [
        7812,
        8054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6675": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 74,
      "value": "0x1A1C"
    },
    "6678": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6679": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6680": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F4A"
    },
    "6683": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6684": {
      "branch": 183,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A38"
    },
    "6688": {
      "branch": 183,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6698": {
      "op": "SHL"
    },
    "6699": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "3"
    },
    "6704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "6707": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6708": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30D2"
    },
    "6711": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x1A44"
    },
    "6716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x242C"
    },
    "6723": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "6726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "6727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "6728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "6729": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6730": {
      "offset": [
        1163,
        1200
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "6733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6734": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6735": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1564"
    },
    "6738": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6739": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1163,
        1200
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "6742": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1163,
        1200
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6743": {
      "offset": [
        1097,
        1125
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6744": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6746": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6747": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6748": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1564"
    },
    "6751": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6752": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1097,
        1125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "6755": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        1097,
        1125
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6756": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6757": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6759": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6760": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6761": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6762": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6764": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6766": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6767": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6769": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6770": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6771": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6772": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7131,
        7144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "6774": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7131,
        7144
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "op": "SUB"
    },
    "6783": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "6784": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 76,
      "value": "0x1AE4"
    },
    "6787": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6788": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6790": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6797": {
      "op": "SHL"
    },
    "6798": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6799": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6802": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6804": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6805": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "ADD",
      "path": "16"
    },
    "6806": {
      "op": "MSTORE"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6811": {
      "op": "DUP3"
    },
    "6812": {
      "op": "ADD"
    },
    "6813": {
      "op": "MSTORE"
    },
    "6814": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6849": {
      "op": "DUP3"
    },
    "6850": {
      "op": "ADD"
    },
    "6851": {
      "op": "MSTORE"
    },
    "6852": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "6871": {
      "op": "SHL"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6874": {
      "op": "DUP3"
    },
    "6875": {
      "op": "ADD"
    },
    "6876": {
      "op": "MSTORE"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "6883": {
      "op": "JUMP"
    },
    "6884": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7156,
        7233
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6885": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7274,
        7281
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 77,
      "value": "0xF"
    },
    "6887": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7283,
        7301
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AEF"
    },
    "6890": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7283,
        7290
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6891": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7283,
        7299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x245F"
    },
    "6894": {
      "fn": "Cryptids.tokenURI",
      "jump": "i",
      "offset": [
        7283,
        7301
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6895": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7283,
        7301
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6896": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7303,
        7316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "6898": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6900": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6901": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6903": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "ADD",
      "path": "16"
    },
    "6904": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B03"
    },
    "6907": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6908": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6909": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6910": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6911": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A3"
    },
    "6914": {
      "fn": "Cryptids.tokenURI",
      "jump": "i",
      "offset": [
        7257,
        7317
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6915": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6916": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6918": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6919": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6921": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6922": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6923": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SUB",
      "path": "16"
    },
    "6924": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SUB",
      "path": "16"
    },
    "6925": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6926": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6927": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6928": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6930": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7257,
        7317
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6931": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7243,
        7318
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6932": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7243,
        7318
      ],
      "op": "POP",
      "path": "16"
    },
    "6933": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6934": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6935": {
      "fn": "Cryptids.tokenURI",
      "offset": [
        7058,
        7325
      ],
      "op": "POP",
      "path": "16"
    },
    "6936": {
      "fn": "Cryptids.tokenURI",
      "jump": "o",
      "offset": [
        7058,
        7325
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6937": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6938": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6940": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6947": {
      "op": "SHL"
    },
    "6948": {
      "op": "SUB"
    },
    "6949": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6952": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6953": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6954": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6955": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6956": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6957": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6958": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B49"
    },
    "6961": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6962": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6971": {
      "op": "SHL"
    },
    "6972": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6974": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6976": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6977": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "6980": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6981": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "6984": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6985": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6986": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 78,
      "value": "0x11"
    },
    "6988": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6989": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6991": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6994": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6995": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6996": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "DIV",
      "path": "16"
    },
    "6997": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "AND",
      "path": "16"
    },
    "6998": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6634
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6999": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6634
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7000": {
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6626
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7002": {
      "branch": 174,
      "fn": "Cryptids.setStage",
      "offset": [
        6606,
        6634
      ],
      "op": "EQ",
      "path": "16"
    },
    "7003": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BCC"
    },
    "7006": {
      "branch": 174,
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7007": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7009": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7018": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7021": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7023": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7024": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "ADD",
      "path": "16"
    },
    "7025": {
      "op": "MSTORE"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7030": {
      "op": "DUP3"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "MSTORE"
    },
    "7033": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7068": {
      "op": "DUP3"
    },
    "7069": {
      "op": "ADD"
    },
    "7070": {
      "op": "MSTORE"
    },
    "7071": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7106": {
      "op": "DUP3"
    },
    "7107": {
      "op": "ADD"
    },
    "7108": {
      "op": "MSTORE"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7111": {
      "op": "ADD"
    },
    "7112": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "7115": {
      "op": "JUMP"
    },
    "7116": {
      "fn": "Cryptids.setStage",
      "offset": [
        6598,
        6695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7117": {
      "fn": "Cryptids.setStage",
      "offset": [
        6713,
        6723
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 79,
      "value": "0xD"
    },
    "7119": {
      "fn": "Cryptids.setStage",
      "offset": [
        6713,
        6723
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7120": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C36"
    },
    "7123": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7124": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7126": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7133": {
      "op": "SHL"
    },
    "7134": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7135": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7138": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7140": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7141": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "ADD",
      "path": "16"
    },
    "7142": {
      "op": "MSTORE"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7147": {
      "op": "DUP3"
    },
    "7148": {
      "op": "ADD"
    },
    "7149": {
      "op": "MSTORE"
    },
    "7150": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "op": "MSTORE"
    },
    "7188": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "7209": {
      "op": "SHL"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7212": {
      "op": "DUP3"
    },
    "7213": {
      "op": "ADD"
    },
    "7214": {
      "op": "MSTORE"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7217": {
      "op": "ADD"
    },
    "7218": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "7221": {
      "op": "JUMP"
    },
    "7222": {
      "fn": "Cryptids.setStage",
      "offset": [
        6705,
        6783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7223": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6798
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0x16"
    },
    "7225": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7226": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7227": {
      "fn": "Cryptids.setStage",
      "offset": [
        6801,
        6807
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7228": {
      "fn": "Cryptids.setStage",
      "offset": [
        6801,
        6807
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7229": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6798
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7232": {
      "op": "NOT"
    },
    "7233": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "AND",
      "path": "16"
    },
    "7234": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7236": {
      "fn": "Cryptids.setStage",
      "offset": [
        6801,
        6807
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7237": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7239": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7240": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "GT",
      "path": "16"
    },
    "7241": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7242": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C55"
    },
    "7245": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7246": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C55"
    },
    "7249": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD9"
    },
    "7252": {
      "fn": "Cryptids.setStage",
      "jump": "i",
      "offset": [
        6793,
        6807
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7253": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7254": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "MUL",
      "path": "16"
    },
    "7255": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "OR",
      "path": "16"
    },
    "7256": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7257": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7258": {
      "fn": "Cryptids.setStage",
      "offset": [
        6793,
        6807
      ],
      "op": "POP",
      "path": "16"
    },
    "7259": {
      "fn": "Cryptids.setStage",
      "offset": [
        6537,
        6814
      ],
      "op": "POP",
      "path": "16"
    },
    "7260": {
      "fn": "Cryptids.setStage",
      "jump": "o",
      "offset": [
        6537,
        6814
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7261": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        6961,
        7052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7262": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        7006,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7264": {
      "fn": "Cryptids.lastMintID",
      "offset": [
        7031,
        7044
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 81,
      "value": "0x15F3"
    },
    "7267": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7269": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7270": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7271": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7272": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5417,
        5545
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7273": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7275": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7282": {
      "op": "SHL"
    },
    "7283": {
      "op": "SUB"
    },
    "7284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7287": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7288": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7289": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7290": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7291": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7292": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7293": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C98"
    },
    "7296": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7306": {
      "op": "SHL"
    },
    "7307": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7309": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7312": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "7315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7316": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "7319": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7320": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7321": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 82
    },
    "7322": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7323": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "7326": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7327": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5518
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7329": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5518
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7330": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7332": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7333": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "ADD",
      "path": "16"
    },
    "7334": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7335": {
      "fn": "Cryptids.setBaseExtension",
      "offset": [
        5505,
        5538
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B0E"
    },
    "7338": {
      "fn": "Cryptids.setBaseExtension",
      "jump": "i",
      "offset": [
        5505,
        5538
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7339": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7331,
        7443
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7340": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7379,
        7386
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7342": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7423,
        7436
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 83,
      "value": "0x1CB6"
    },
    "7345": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7347": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7348": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7349": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7350": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7423,
        7436
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7351": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7420
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "7353": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7420
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7354": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15F3"
    },
    "7357": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7436
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7358": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7436
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7359": {
      "fn": "Cryptids.getTokensLeft",
      "offset": [
        7405,
        7436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31DC"
    },
    "7362": {
      "fn": "Cryptids.getTokensLeft",
      "jump": "i",
      "offset": [
        7405,
        7436
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7363": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5193,
        5411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7364": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7366": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7373": {
      "op": "SHL"
    },
    "7374": {
      "op": "SUB"
    },
    "7375": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7378": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7380": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7381": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7382": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7383": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7384": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF3"
    },
    "7387": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7397": {
      "op": "SHL"
    },
    "7398": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7400": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7402": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "7406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7407": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "7410": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7412": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5279,
        5280
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 84,
      "value": "0x0"
    },
    "7414": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5261,
        5268
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "7416": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7417": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7418": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D02"
    },
    "7421": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7422": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3062"
    },
    "7425": {
      "fn": "Cryptids.freezeBaseURI",
      "jump": "i",
      "offset": [
        5255,
        5276
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7426": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7427": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7428": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5276
      ],
      "op": "POP",
      "path": "16"
    },
    "7429": {
      "branch": 175,
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5255,
        5280
      ],
      "op": "GT",
      "path": "16"
    },
    "7430": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D51"
    },
    "7433": {
      "branch": 175,
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7434": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7436": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7443": {
      "op": "SHL"
    },
    "7444": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7445": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7448": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7450": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7451": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "ADD",
      "path": "16"
    },
    "7452": {
      "op": "MSTORE"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7457": {
      "op": "DUP3"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "MSTORE"
    },
    "7460": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7495": {
      "op": "DUP3"
    },
    "7496": {
      "op": "ADD"
    },
    "7497": {
      "op": "MSTORE"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7500": {
      "op": "ADD"
    },
    "7501": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "7504": {
      "op": "JUMP"
    },
    "7505": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5247,
        5309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7506": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5328,
        5342
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 85,
      "value": "0x11"
    },
    "7508": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5328,
        5342
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7509": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5328,
        5342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7511": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5328,
        5342
      ],
      "op": "AND",
      "path": "16"
    },
    "7512": {
      "branch": 176,
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5327,
        5342
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7513": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DA4"
    },
    "7516": {
      "branch": 176,
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7517": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7519": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7526": {
      "op": "SHL"
    },
    "7527": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7528": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7531": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7533": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7534": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "ADD",
      "path": "16"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7540": {
      "op": "DUP3"
    },
    "7541": {
      "op": "ADD"
    },
    "7542": {
      "op": "MSTORE"
    },
    "7543": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7578": {
      "op": "DUP3"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "MSTORE"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7583": {
      "op": "ADD"
    },
    "7584": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "7587": {
      "op": "JUMP"
    },
    "7588": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5319,
        5373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7589": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5397
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0x11"
    },
    "7591": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7592": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7595": {
      "op": "NOT"
    },
    "7596": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "AND",
      "path": "16"
    },
    "7597": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5400,
        5404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7599": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "OR",
      "path": "16"
    },
    "7600": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7601": {
      "fn": "Cryptids.freezeBaseURI",
      "offset": [
        5383,
        5404
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7602": {
      "fn": "Cryptids.freezeBaseURI",
      "jump": "o",
      "offset": [
        5193,
        5411
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7604": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7606": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7613": {
      "op": "SHL"
    },
    "7614": {
      "op": "SUB"
    },
    "7615": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7618": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7620": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7622": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7623": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7624": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE3"
    },
    "7627": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7637": {
      "op": "SHL"
    },
    "7638": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "7646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "7650": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7658": {
      "op": "SHL"
    },
    "7659": {
      "op": "SUB"
    },
    "7660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 87
    },
    "7661": {
      "branch": 198,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "7662": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E48"
    },
    "7665": {
      "branch": 198,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7666": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "7684": {
      "op": "MSTORE"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7689": {
      "op": "DUP3"
    },
    "7690": {
      "op": "ADD"
    },
    "7691": {
      "op": "MSTORE"
    },
    "7692": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7727": {
      "op": "DUP3"
    },
    "7728": {
      "op": "ADD"
    },
    "7729": {
      "op": "MSTORE"
    },
    "7730": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7739": {
      "op": "SHL"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7742": {
      "op": "DUP3"
    },
    "7743": {
      "op": "ADD"
    },
    "7744": {
      "op": "MSTORE"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7747": {
      "op": "ADD"
    },
    "7748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "7751": {
      "op": "JUMP"
    },
    "7752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 88,
      "value": "0x1E51"
    },
    "7756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22AB"
    },
    "7760": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "7763": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7764": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7765": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7767": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7774": {
      "op": "SHL"
    },
    "7775": {
      "op": "SUB"
    },
    "7776": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7779": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7781": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7782": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7783": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7784": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7785": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E84"
    },
    "7788": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7789": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7798": {
      "op": "SHL"
    },
    "7799": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7800": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "7807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309D"
    },
    "7811": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7813": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6210
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 89,
      "value": "0x11"
    },
    "7815": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7816": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7823": {
      "op": "SHL"
    },
    "7824": {
      "op": "SUB"
    },
    "7825": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7826": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7827": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "AND",
      "path": "16"
    },
    "7828": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "7832": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "MUL",
      "path": "16"
    },
    "7833": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7841": {
      "op": "SHL"
    },
    "7842": {
      "op": "SUB"
    },
    "7843": {
      "op": "NOT"
    },
    "7844": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7845": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7846": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "AND",
      "path": "16"
    },
    "7847": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7848": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7849": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7850": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "OR",
      "path": "16"
    },
    "7851": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7852": {
      "fn": "Cryptids.setWithdrawlAddress",
      "offset": [
        6194,
        6230
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7853": {
      "fn": "Cryptids.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6109,
        6237
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7854": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7855": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7856": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7857": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7859": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7860": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7861": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7862": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7863": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7864": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7872": {
      "op": "SHL"
    },
    "7873": {
      "op": "SUB"
    },
    "7874": {
      "op": "NOT"
    },
    "7875": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 90
    },
    "7876": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "7877": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7884": {
      "op": "SHL"
    },
    "7885": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "7886": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7887": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DC"
    },
    "7890": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7891": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "7892": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DC"
    },
    "7895": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7896": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x255D"
    },
    "7899": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7900": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7901": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 91,
      "value": "0x0"
    },
    "7903": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7904": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7905": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7906": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7908": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7910": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7911": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7913": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7914": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7915": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7916": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7923": {
      "op": "SHL"
    },
    "7924": {
      "op": "SUB"
    },
    "7925": {
      "op": "NOT"
    },
    "7926": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7933": {
      "op": "SHL"
    },
    "7934": {
      "op": "SUB"
    },
    "7935": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7936": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "7937": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7938": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7939": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "3"
    },
    "7940": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7941": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7942": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7943": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7944": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7945": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 92,
      "value": "0x1F11"
    },
    "7948": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7949": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E0"
    },
    "7952": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7953": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "op": "SUB"
    },
    "7962": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "3"
    },
    "7963": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7996": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7998": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7999": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8001": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8002": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8003": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8004": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "3"
    },
    "8005": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8006": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "3"
    },
    "8007": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8008": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8009": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8010": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8011": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8013": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8014": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8015": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8016": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8018": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8020": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8021": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8023": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8024": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8025": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8032": {
      "op": "SHL"
    },
    "8033": {
      "op": "SUB"
    },
    "8034": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "8035": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x1FC3"
    },
    "8038": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8039": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8041": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8048": {
      "op": "SHL"
    },
    "8049": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8050": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8053": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8055": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8056": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "3"
    },
    "8057": {
      "op": "MSTORE"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8062": {
      "op": "DUP3"
    },
    "8063": {
      "op": "ADD"
    },
    "8064": {
      "op": "MSTORE"
    },
    "8065": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8100": {
      "op": "DUP3"
    },
    "8101": {
      "op": "ADD"
    },
    "8102": {
      "op": "MSTORE"
    },
    "8103": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8118": {
      "op": "SHL"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8121": {
      "op": "DUP3"
    },
    "8122": {
      "op": "ADD"
    },
    "8123": {
      "op": "MSTORE"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8126": {
      "op": "ADD"
    },
    "8127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "8130": {
      "op": "JUMP"
    },
    "8131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FCE"
    },
    "8137": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8138": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E0"
    },
    "8141": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8142": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8143": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "3"
    },
    "8145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 94
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8152": {
      "op": "SHL"
    },
    "8153": {
      "op": "SUB"
    },
    "8154": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "8155": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8162": {
      "op": "SHL"
    },
    "8163": {
      "op": "SUB"
    },
    "8164": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "8165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "3"
    },
    "8166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8167": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2009"
    },
    "8170": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8171": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "3"
    },
    "8172": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8179": {
      "op": "SHL"
    },
    "8180": {
      "op": "SUB"
    },
    "8181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "8182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FFE"
    },
    "8185": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8186": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x774"
    },
    "8189": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8190": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8197": {
      "op": "SHL"
    },
    "8198": {
      "op": "SUB"
    },
    "8199": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "8200": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "3"
    },
    "8201": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8202": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8203": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2039"
    },
    "8206": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8207": {
      "op": "POP"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8214": {
      "op": "SHL"
    },
    "8215": {
      "op": "SUB"
    },
    "8216": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8217": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8218": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "8219": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8221": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8222": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8223": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8224": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "8226": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8228": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8229": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8230": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8231": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8233": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8234": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8235": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8236": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8237": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8238": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "8239": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8240": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8241": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8242": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8243": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8244": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8245": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "8248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "8249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8250": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7683,
        7779
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8252": {
      "op": "POP"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "op": "POP"
    },
    "8255": {
      "op": "POP"
    },
    "8256": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8257": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8258": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 95
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8265": {
      "op": "SHL"
    },
    "8266": {
      "op": "SUB"
    },
    "8267": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "8268": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2054"
    },
    "8271": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8272": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E0"
    },
    "8275": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8276": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8283": {
      "op": "SHL"
    },
    "8284": {
      "op": "SUB"
    },
    "8285": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "8286": {
      "branch": 184,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "3"
    },
    "8287": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20B8"
    },
    "8290": {
      "branch": 184,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8291": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8293": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8300": {
      "op": "SHL"
    },
    "8301": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8302": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8305": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8307": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8308": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "3"
    },
    "8309": {
      "op": "MSTORE"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8314": {
      "op": "DUP3"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8352": {
      "op": "DUP3"
    },
    "8353": {
      "op": "ADD"
    },
    "8354": {
      "op": "MSTORE"
    },
    "8355": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "8361": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8363": {
      "op": "SHL"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8366": {
      "op": "DUP3"
    },
    "8367": {
      "op": "ADD"
    },
    "8368": {
      "op": "MSTORE"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "8375": {
      "op": "JUMP"
    },
    "8376": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8383": {
      "op": "SHL"
    },
    "8384": {
      "op": "SUB"
    },
    "8385": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 96
    },
    "8386": {
      "branch": 185,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "3"
    },
    "8387": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x211A"
    },
    "8390": {
      "branch": 185,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8391": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8393": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8400": {
      "op": "SHL"
    },
    "8401": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8402": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8405": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8407": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8408": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "3"
    },
    "8409": {
      "op": "MSTORE"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8412": {
      "op": "DUP1"
    },
    "8413": {
      "op": "DUP3"
    },
    "8414": {
      "op": "ADD"
    },
    "8415": {
      "op": "MSTORE"
    },
    "8416": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8451": {
      "op": "DUP3"
    },
    "8452": {
      "op": "ADD"
    },
    "8453": {
      "op": "MSTORE"
    },
    "8454": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8461": {
      "op": "SHL"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8464": {
      "op": "DUP3"
    },
    "8465": {
      "op": "ADD"
    },
    "8466": {
      "op": "MSTORE"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8469": {
      "op": "ADD"
    },
    "8470": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "8473": {
      "op": "JUMP"
    },
    "8474": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8475": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 97,
      "value": "0x2125"
    },
    "8478": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8479": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8480": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8481": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25AD"
    },
    "8484": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8485": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8486": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 98,
      "value": "0x2130"
    },
    "8489": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8491": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8492": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EDC"
    },
    "8495": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8496": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8503": {
      "op": "SHL"
    },
    "8504": {
      "op": "SUB"
    },
    "8505": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 99
    },
    "8506": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "3"
    },
    "8507": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8509": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8510": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8511": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8512": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "8514": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8516": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8517": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8519": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8520": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8521": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8522": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8523": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8525": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8526": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8527": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2159"
    },
    "8530": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8531": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8532": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8533": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31DC"
    },
    "8536": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8537": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8538": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8539": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8540": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8541": {
      "op": "POP"
    },
    "8542": {
      "op": "POP"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8549": {
      "op": "SHL"
    },
    "8550": {
      "op": "SUB"
    },
    "8551": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 100
    },
    "8552": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "3"
    },
    "8553": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8555": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8556": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8557": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8558": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "8560": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8562": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8563": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8565": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8566": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8567": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8568": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8569": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8571": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8572": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8573": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2187"
    },
    "8576": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8577": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8578": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8579": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3163"
    },
    "8582": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8583": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8584": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8585": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8586": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8587": {
      "op": "POP"
    },
    "8588": {
      "op": "POP"
    },
    "8589": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 101,
      "value": "0x0"
    },
    "8591": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8592": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8593": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8594": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8596": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8598": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8599": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8601": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8602": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8603": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8604": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8605": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8612": {
      "op": "SHL"
    },
    "8613": {
      "op": "SUB"
    },
    "8614": {
      "op": "NOT"
    },
    "8615": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8622": {
      "op": "SHL"
    },
    "8623": {
      "op": "SUB"
    },
    "8624": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8625": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8626": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "8627": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8628": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8629": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "3"
    },
    "8630": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8631": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8632": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8633": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 102
    },
    "8634": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8635": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8636": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8637": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8638": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8639": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "3"
    },
    "8640": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8641": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8674": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8675": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "3"
    },
    "8676": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "8677": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "8678": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "8679": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8680": {
      "fn": "ERC721._safeMint",
      "offset": [
        8116,
        8224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8681": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 103,
      "value": "0xA20"
    },
    "8684": {
      "fn": "ERC721._safeMint",
      "offset": [
        8201,
        8203
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8685": {
      "fn": "ERC721._safeMint",
      "offset": [
        8205,
        8212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8686": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8688": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8689": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8690": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8692": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "ADD",
      "path": "3"
    },
    "8693": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8695": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8696": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8697": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8699": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8700": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8701": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "POP",
      "path": "3"
    },
    "8702": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25DB"
    },
    "8705": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8191,
        8217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8706": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8707": {
      "fn": "MerkleProof.verify",
      "offset": [
        983,
        987
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8709": {
      "fn": "MerkleProof.verify",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 104
    },
    "8710": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220F"
    },
    "8713": {
      "fn": "MerkleProof.verify",
      "offset": [
        1019,
        1024
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8714": {
      "fn": "MerkleProof.verify",
      "offset": [
        1026,
        1030
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8715": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x260E"
    },
    "8718": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8719": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8720": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "EQ",
      "path": "13"
    },
    "8721": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "8722": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "8723": {
      "op": "POP"
    },
    "8724": {
      "op": "POP"
    },
    "8725": {
      "op": "POP"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        862,
        1046
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8728": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8729": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "8731": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8732": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8734": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "8735": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2261"
    },
    "8738": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8739": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8741": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8748": {
      "op": "SHL"
    },
    "8749": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8750": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8753": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8755": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8756": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "8757": {
      "op": "MSTORE"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8762": {
      "op": "DUP3"
    },
    "8763": {
      "op": "ADD"
    },
    "8764": {
      "op": "MSTORE"
    },
    "8765": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "8788": {
      "op": "SHL"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8791": {
      "op": "DUP3"
    },
    "8792": {
      "op": "ADD"
    },
    "8793": {
      "op": "MSTORE"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "8800": {
      "op": "JUMP"
    },
    "8801": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8802": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 105,
      "value": "0xA"
    },
    "8804": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8805": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8808": {
      "op": "NOT"
    },
    "8809": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "8810": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8811": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8812": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 106,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "8845": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8846": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8847": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8849": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "SUB"
    },
    "8858": {
      "op": "SWAP1"
    },
    "8859": {
      "op": "SWAP2"
    },
    "8860": {
      "op": "AND"
    },
    "8861": {
      "op": "DUP2"
    },
    "8862": {
      "op": "MSTORE"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8865": {
      "op": "ADD"
    },
    "8866": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8868": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8869": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8870": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8871": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "8872": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8873": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "8874": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8875": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8876": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8878": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8879": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8886": {
      "op": "SHL"
    },
    "8887": {
      "op": "SUB"
    },
    "8888": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 107
    },
    "8889": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8890": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8891": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8894": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "8897": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8904": {
      "op": "SHL"
    },
    "8905": {
      "op": "SUB"
    },
    "8906": {
      "op": "NOT"
    },
    "8907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8908": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8909": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8910": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "8912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 108,
      "value": "0x40"
    },
    "8915": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8919": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "8920": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8921": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8923": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8957": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8958": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8960": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8961": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8962": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8963": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8964": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8965": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8966": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "8968": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8969": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8971": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "8972": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8973": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2328"
    },
    "8976": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8977": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8979": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8986": {
      "op": "SHL"
    },
    "8987": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8988": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8989": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8991": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "8992": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "8995": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8996": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3123"
    },
    "8999": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9000": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9001": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 109,
      "value": "0xA"
    },
    "9003": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9004": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9007": {
      "op": "NOT"
    },
    "9008": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "9009": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9011": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "9012": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9013": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9014": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 110,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "9047": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x228E"
    },
    "9050": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9051": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9052": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9053": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9054": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 111
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9061": {
      "op": "SHL"
    },
    "9062": {
      "op": "SUB"
    },
    "9063": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "9064": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9071": {
      "op": "SHL"
    },
    "9072": {
      "op": "SUB"
    },
    "9073": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "9074": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "3"
    },
    "9075": {
      "branch": 186,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9076": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23BF"
    },
    "9079": {
      "branch": 186,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9080": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9082": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9089": {
      "op": "SHL"
    },
    "9090": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9091": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9094": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9096": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9097": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "3"
    },
    "9098": {
      "op": "MSTORE"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9103": {
      "op": "DUP3"
    },
    "9104": {
      "op": "ADD"
    },
    "9105": {
      "op": "MSTORE"
    },
    "9106": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9141": {
      "op": "DUP3"
    },
    "9142": {
      "op": "ADD"
    },
    "9143": {
      "op": "MSTORE"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9146": {
      "op": "ADD"
    },
    "9147": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "9150": {
      "op": "JUMP"
    },
    "9151": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9158": {
      "op": "SHL"
    },
    "9159": {
      "op": "SUB"
    },
    "9160": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 112
    },
    "9161": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9162": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "3"
    },
    "9163": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9165": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9166": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9167": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9170": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9172": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9173": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9174": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9175": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9177": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9178": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9179": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9180": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9181": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9182": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "3"
    },
    "9183": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9184": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9185": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9186": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9187": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9188": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9189": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9190": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9191": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9192": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9193": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9194": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9197": {
      "op": "NOT"
    },
    "9198": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "3"
    },
    "9199": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9200": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9201": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9202": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9203": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9204": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "3"
    },
    "9205": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9206": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9207": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9208": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 113
    },
    "9209": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9210": {
      "op": "SWAP2"
    },
    "9211": {
      "op": "DUP3"
    },
    "9212": {
      "op": "MSTORE"
    },
    "9213": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "9246": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9247": {
      "op": "ADD"
    },
    "9248": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9250": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9251": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9252": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9253": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "3"
    },
    "9254": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9255": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "3"
    },
    "9256": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "9257": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "9258": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "9259": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9260": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9261": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 114,
      "value": "0x2437"
    },
    "9264": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9265": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9266": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9267": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2041"
    },
    "9270": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9271": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9272": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 115,
      "value": "0x2443"
    },
    "9275": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9276": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9277": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9278": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9279": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267A"
    },
    "9282": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9283": {
      "branch": 187,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9284": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A44"
    },
    "9287": {
      "branch": 187,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9288": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9290": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9297": {
      "op": "SHL"
    },
    "9298": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9299": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9300": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9302": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "3"
    },
    "9303": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "9306": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9307": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32D6"
    },
    "9310": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9311": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9312": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "9314": {
      "branch": 200,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9315": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2483"
    },
    "9318": {
      "branch": 200,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "op": "POP"
    },
    "9321": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 116,
      "value": "0x40"
    },
    "9323": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9324": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9325": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9326": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9327": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "9328": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9329": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9330": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9331": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9333": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9334": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "9339": {
      "op": "SHL"
    },
    "9340": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9342": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9343": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "9344": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9345": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9346": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9347": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9348": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9349": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9351": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9352": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9353": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9354": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24AD"
    },
    "9357": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9358": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 117
    },
    "9359": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2497"
    },
    "9362": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9363": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31C1"
    },
    "9366": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9367": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9368": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9369": {
      "op": "POP"
    },
    "9370": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 118,
      "value": "0x24A6"
    },
    "9373": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9377": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9378": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x333E"
    },
    "9381": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9382": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9383": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9384": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "9385": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2487"
    },
    "9388": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9389": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9390": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9392": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9393": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9402": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9403": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "9404": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9405": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24C8"
    },
    "9408": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9409": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24C8"
    },
    "9412": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CA4"
    },
    "9415": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9416": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9417": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9419": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9420": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9421": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9422": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9423": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9424": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9425": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9427": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9428": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9430": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "9431": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "9432": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9434": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9435": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9436": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9437": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9439": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9440": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9441": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9442": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "9445": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9446": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9448": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9449": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9450": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9451": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9452": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "9453": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9454": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "9455": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9456": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9457": {
      "op": "POP"
    },
    "9458": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9459": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "9460": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9461": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "9462": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9463": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9464": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9465": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2039"
    },
    "9468": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9469": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 119,
      "value": "0x2507"
    },
    "9472": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9474": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9475": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31DC"
    },
    "9478": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9479": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9480": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9481": {
      "op": "POP"
    },
    "9482": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x2514"
    },
    "9485": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9487": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9488": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3352"
    },
    "9491": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9492": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9493": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x251F"
    },
    "9496": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9497": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "9499": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3163"
    },
    "9502": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9503": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9504": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "9506": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "9507": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9508": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9509": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9510": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9511": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9512": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "9513": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2534"
    },
    "9516": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9517": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2534"
    },
    "9520": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31F3"
    },
    "9523": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9524": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9525": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9527": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "9528": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "9529": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9536": {
      "op": "SHL"
    },
    "9537": {
      "op": "SUB"
    },
    "9538": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "9539": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "9540": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9541": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9542": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9544": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "9545": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9546": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "9547": {
      "op": "POP"
    },
    "9548": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x2556"
    },
    "9551": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9553": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9554": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x333E"
    },
    "9557": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9558": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9559": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "9560": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "9561": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F6"
    },
    "9564": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9566": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9574": {
      "op": "SHL"
    },
    "9575": {
      "op": "SUB"
    },
    "9576": {
      "op": "NOT"
    },
    "9577": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 122
    },
    "9578": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "9579": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9586": {
      "op": "SHL"
    },
    "9587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "9588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9589": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258E"
    },
    "9592": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9593": {
      "op": "POP"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9600": {
      "op": "SHL"
    },
    "9601": {
      "op": "SUB"
    },
    "9602": {
      "op": "NOT"
    },
    "9603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9604": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "9605": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9612": {
      "op": "SHL"
    },
    "9613": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "9614": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9615": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9616": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DC"
    },
    "9619": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9620": {
      "op": "POP"
    },
    "9621": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9628": {
      "op": "SHL"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9635": {
      "op": "SHL"
    },
    "9636": {
      "op": "SUB"
    },
    "9637": {
      "op": "NOT"
    },
    "9638": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 123
    },
    "9639": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "9640": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "9641": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DC"
    },
    "9644": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9645": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8064,
        8257
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9646": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9648": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9649": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9651": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9652": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9653": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25D0"
    },
    "9656": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9657": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9659": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9666": {
      "op": "SHL"
    },
    "9667": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9668": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9669": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9671": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "9672": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "9675": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9676": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3123"
    },
    "9679": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9680": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9681": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8205,
        8250
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 124,
      "value": "0x91F"
    },
    "9684": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8232,
        8236
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9685": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8238,
        8240
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9686": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8242,
        8249
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9687": {
      "fn": "Cryptids._beforeTokenTransfer",
      "offset": [
        8205,
        8231
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2778"
    },
    "9690": {
      "fn": "Cryptids._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8205,
        8250
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9691": {
      "fn": "ERC721._safeMint",
      "offset": [
        8445,
        8756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9692": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 125,
      "value": "0x25E5"
    },
    "9695": {
      "fn": "ERC721._safeMint",
      "offset": [
        8576,
        8578
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9696": {
      "fn": "ERC721._safeMint",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9697": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2830"
    },
    "9700": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9701": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9702": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 126,
      "value": "0x25F2"
    },
    "9705": {
      "fn": "ERC721._safeMint",
      "offset": [
        8650,
        8651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9707": {
      "fn": "ERC721._safeMint",
      "offset": [
        8654,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9708": {
      "fn": "ERC721._safeMint",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9709": {
      "fn": "ERC721._safeMint",
      "offset": [
        8667,
        8672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9710": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267A"
    },
    "9713": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9714": {
      "branch": 188,
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9715": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91F"
    },
    "9718": {
      "branch": 188,
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9719": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9721": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9728": {
      "op": "SHL"
    },
    "9729": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9730": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9731": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9733": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "ADD",
      "path": "3"
    },
    "9734": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "9737": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9738": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32D6"
    },
    "9741": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9742": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1398,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9743": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9745": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1523,
        1527
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9746": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9747": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9748": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1566
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9749": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9750": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9751": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1573
      ],
      "op": "LT",
      "path": "13"
    },
    "9752": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "9753": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x136E"
    },
    "9756": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "9757": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1614
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9759": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1622
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9760": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1623,
        1624
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9761": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9762": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9763": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9764": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "LT",
      "path": "13"
    },
    "9765": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2630"
    },
    "9768": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "9769": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2630"
    },
    "9772": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31F3"
    },
    "9775": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9776": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9777": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9779": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MUL",
      "path": "13"
    },
    "9780": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9782": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "9783": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "9784": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9785": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9786": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "POP",
      "path": "13"
    },
    "9787": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1659,
        1671
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9788": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "9789": {
      "branch": 197,
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1671
      ],
      "op": "GT",
      "path": "13"
    },
    "9790": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2656"
    },
    "9793": {
      "branch": 197,
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "9794": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9796": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP4",
      "path": "13"
    },
    "9797": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9798": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9799": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9801": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9802": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9803": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9804": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9806": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9807": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "9808": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 127
    },
    "9809": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "POP",
      "path": "13"
    },
    "9810": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2667"
    },
    "9813": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9814": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9815": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9817": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9818": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9819": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9820": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9822": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9823": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9824": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9825": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9827": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9828": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "9829": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 128
    },
    "9830": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "POP",
      "path": "13"
    },
    "9831": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9832": {
      "op": "POP"
    },
    "9833": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 129
    },
    "9834": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2672"
    },
    "9837": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9838": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31C1"
    },
    "9841": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9842": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9843": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "9844": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "9845": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "9846": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2613"
    },
    "9849": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9859": {
      "op": "SHL"
    },
    "9860": {
      "op": "SUB"
    },
    "9861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "9863": {
      "op": "EXTCODESIZE"
    },
    "9864": {
      "op": "ISZERO"
    },
    "9865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x276D"
    },
    "9868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9872": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9879": {
      "op": "SHL"
    },
    "9880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9888": {
      "op": "SHL"
    },
    "9889": {
      "op": "SUB"
    },
    "9890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "3"
    },
    "9892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "9898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26BE"
    },
    "9902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9903": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9904": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "9906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "9914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3366"
    },
    "9917": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "3"
    },
    "9927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "3"
    },
    "9932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "3"
    },
    "9933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "9935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "9936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "9937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F9"
    },
    "9942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9943": {
      "op": "POP"
    },
    "9944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9956": {
      "op": "NOT"
    },
    "9957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "3"
    },
    "9958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "9960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F6"
    },
    "9966": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "9969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33A3"
    },
    "9973": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2753"
    },
    "9981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2727"
    },
    "9989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "9995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "3"
    },
    "9998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "10000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "3"
    },
    "10003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10016": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "10019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x272C"
    },
    "10022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "10026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "10028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10029": {
      "op": "POP"
    },
    "10030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274B"
    },
    "10035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 130,
      "value": "0x40"
    },
    "10038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "10051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "10054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32D6"
    },
    "10058": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "3"
    },
    "10066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "3"
    },
    "10067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10074": {
      "op": "SHL"
    },
    "10075": {
      "op": "SUB"
    },
    "10076": {
      "op": "NOT"
    },
    "10077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "3",
      "statement": 131
    },
    "10078": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10085": {
      "op": "SHL"
    },
    "10086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "3"
    },
    "10087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10088": {
      "op": "POP"
    },
    "10089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2039"
    },
    "10092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10094": {
      "op": "POP"
    },
    "10095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 132,
      "value": "0x1"
    },
    "10097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "10100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "10101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "10102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "10103": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10104": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10111": {
      "op": "SHL"
    },
    "10112": {
      "op": "SUB"
    },
    "10113": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10114": {
      "branch": 192,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "10115": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D3"
    },
    "10118": {
      "branch": 192,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10119": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 133,
      "value": "0x27CE"
    },
    "10122": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10123": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 134,
      "value": "0x8"
    },
    "10125": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10126": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10127": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10129": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10130": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10131": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10132": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "10134": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10136": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10137": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10139": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10140": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10141": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10142": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10143": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10144": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 135,
      "value": "0x1"
    },
    "10146": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10147": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "10148": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10149": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10150": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10151": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10152": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10153": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10154": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "10187": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "10188": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10189": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10190": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10191": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F6"
    },
    "10194": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10195": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10196": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10203": {
      "op": "SHL"
    },
    "10204": {
      "op": "SUB"
    },
    "10205": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "10206": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10213": {
      "op": "SHL"
    },
    "10214": {
      "op": "SUB"
    },
    "10215": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "10216": {
      "branch": 193,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "10217": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F6"
    },
    "10220": {
      "branch": 193,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10221": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 136,
      "value": "0x27F6"
    },
    "10224": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10225": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10226": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x297E"
    },
    "10229": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10230": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10237": {
      "op": "SHL"
    },
    "10238": {
      "op": "SUB"
    },
    "10239": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10240": {
      "branch": 194,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "10241": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x280D"
    },
    "10244": {
      "branch": 194,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10245": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 137,
      "value": "0x91F"
    },
    "10248": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10249": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1B"
    },
    "10252": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10253": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10254": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10261": {
      "op": "SHL"
    },
    "10262": {
      "op": "SUB"
    },
    "10263": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "10264": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10271": {
      "op": "SHL"
    },
    "10272": {
      "op": "SUB"
    },
    "10273": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "10274": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "10275": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91F"
    },
    "10278": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10279": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 138,
      "value": "0x91F"
    },
    "10282": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10283": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10284": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ACA"
    },
    "10287": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10288": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10295": {
      "op": "SHL"
    },
    "10296": {
      "op": "SUB"
    },
    "10297": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 139
    },
    "10298": {
      "branch": 189,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "3"
    },
    "10299": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2886"
    },
    "10302": {
      "branch": 189,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10303": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10305": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10312": {
      "op": "SHL"
    },
    "10313": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10314": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10317": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10319": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10320": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "3"
    },
    "10321": {
      "op": "DUP2"
    },
    "10322": {
      "op": "SWAP1"
    },
    "10323": {
      "op": "MSTORE"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10326": {
      "op": "DUP3"
    },
    "10327": {
      "op": "ADD"
    },
    "10328": {
      "op": "MSTORE"
    },
    "10329": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10364": {
      "op": "DUP3"
    },
    "10365": {
      "op": "ADD"
    },
    "10366": {
      "op": "MSTORE"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10369": {
      "op": "ADD"
    },
    "10370": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "10373": {
      "op": "JUMP"
    },
    "10374": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10375": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10377": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10378": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10379": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10380": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10382": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10384": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10385": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10387": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10388": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10389": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10396": {
      "op": "SHL"
    },
    "10397": {
      "op": "SUB"
    },
    "10398": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "10399": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10400": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 140,
      "value": "0x28EB"
    },
    "10403": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10404": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10406": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10413": {
      "op": "SHL"
    },
    "10414": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10415": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10418": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10420": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10421": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "3"
    },
    "10422": {
      "op": "MSTORE"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10427": {
      "op": "DUP3"
    },
    "10428": {
      "op": "ADD"
    },
    "10429": {
      "op": "MSTORE"
    },
    "10430": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "MSTORE"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10470": {
      "op": "ADD"
    },
    "10471": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "10474": {
      "op": "JUMP"
    },
    "10475": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10476": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 141,
      "value": "0x28F7"
    },
    "10479": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10481": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10482": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10483": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25AD"
    },
    "10486": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10487": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10494": {
      "op": "SHL"
    },
    "10495": {
      "op": "SUB"
    },
    "10496": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 142
    },
    "10497": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "3"
    },
    "10498": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10500": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10501": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10502": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10503": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10505": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10507": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10508": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10510": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10511": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10512": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10513": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10514": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10516": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10517": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10518": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2920"
    },
    "10521": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10522": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10523": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10524": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3163"
    },
    "10527": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10528": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10529": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10530": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10531": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10532": {
      "op": "POP"
    },
    "10533": {
      "op": "POP"
    },
    "10534": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 143,
      "value": "0x0"
    },
    "10536": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10537": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10538": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10539": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10541": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10543": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10544": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10546": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10547": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10548": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10549": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10550": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10557": {
      "op": "SHL"
    },
    "10558": {
      "op": "SUB"
    },
    "10559": {
      "op": "NOT"
    },
    "10560": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10567": {
      "op": "SHL"
    },
    "10568": {
      "op": "SUB"
    },
    "10569": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10570": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "10571": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10572": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10573": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "3"
    },
    "10574": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10575": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10576": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10577": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 144
    },
    "10578": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10579": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10580": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10581": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10582": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10615": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10616": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10617": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10618": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "3"
    },
    "10619": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5803,
        5835
      ],
      "op": "POP",
      "path": "16"
    },
    "10620": {
      "fn": "Cryptids.setProvenanceHash",
      "offset": [
        5551,
        5842
      ],
      "op": "POP",
      "path": "16"
    },
    "10621": {
      "fn": "Cryptids.setProvenanceHash",
      "jump": "o",
      "offset": [
        5551,
        5842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10622": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10623": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10625": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10627": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x298B"
    },
    "10630": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10631": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F8"
    },
    "10634": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10635": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10636": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2995"
    },
    "10639": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10640": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10641": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31DC"
    },
    "10644": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10645": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10646": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10649": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10651": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10658": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10659": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10660": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10661": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10662": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10663": {
      "op": "POP"
    },
    "10664": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10665": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10666": {
      "branch": 196,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "10667": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29E8"
    },
    "10670": {
      "branch": 196,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10677": {
      "op": "SHL"
    },
    "10678": {
      "op": "SUB"
    },
    "10679": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10680": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "10681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10683": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10684": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10685": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10686": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10688": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10690": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10691": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10692": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10693": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10695": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10696": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10697": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10698": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10699": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10702": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10703": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10704": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10706": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10707": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 145
    },
    "10708": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 146
    },
    "10717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10729": {
      "op": "POP"
    },
    "10730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 147,
      "value": "0x0"
    },
    "10732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10734": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10735": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10739": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10740": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10741": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10744": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10748": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10756": {
      "op": "SHL"
    },
    "10757": {
      "op": "SUB"
    },
    "10758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 148
    },
    "10759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "10760": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "10761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10768": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10770": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10772": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10773": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10776": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10779": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10780": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10782": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10783": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10785": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10786": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A2D"
    },
    "10789": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10790": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10792": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10793": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31DC"
    },
    "10796": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10797": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10798": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10800": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10801": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10802": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10803": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "10805": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10812": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10813": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10816": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10818": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "10819": {
      "op": "POP"
    },
    "10820": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10821": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10823": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10824": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10825": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "10826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A55"
    },
    "10829": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A55"
    },
    "10833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F3"
    },
    "10836": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10838": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10839": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10844": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10846": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "10848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10850": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "10851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 149
    },
    "10852": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "10859": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A76"
    },
    "10862": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A76"
    },
    "10866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F3"
    },
    "10869": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10870": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "10884": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 150
    },
    "10889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "10893": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 151
    },
    "10905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10909": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 152,
      "value": "0x8"
    },
    "10912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AAE"
    },
    "10918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AAE"
    },
    "10922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33C0"
    },
    "10925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10930": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "10931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10933": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10942": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "10943": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10945": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "10950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "10951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "10952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "10953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10954": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10955": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10957": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AD5"
    },
    "10960": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10961": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F8"
    },
    "10964": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10965": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10972": {
      "op": "SHL"
    },
    "10973": {
      "op": "SUB"
    },
    "10974": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 153
    },
    "10975": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10976": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "10977": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10979": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10980": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10981": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10982": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10984": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10986": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10987": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10988": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10989": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10991": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10992": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10993": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10994": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "10995": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10996": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10997": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10998": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10999": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11000": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11001": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11002": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11003": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11004": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11005": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 154
    },
    "11006": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11007": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11008": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11010": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11011": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11012": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11013": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11014": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11015": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11016": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11017": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11018": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11019": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11020": {
      "op": "POP"
    },
    "11021": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11022": {
      "op": "JUMPDEST"
    },
    "11023": {
      "op": "DUP3"
    },
    "11024": {
      "op": "DUP1"
    },
    "11025": {
      "op": "SLOAD"
    },
    "11026": {
      "op": "PUSH2",
      "value": "0x2B1A"
    },
    "11029": {
      "op": "SWAP1"
    },
    "11030": {
      "op": "PUSH2",
      "value": "0x3062"
    },
    "11033": {
      "jump": "i",
      "op": "JUMP"
    },
    "11034": {
      "op": "JUMPDEST"
    },
    "11035": {
      "op": "SWAP1"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11038": {
      "op": "MSTORE"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11043": {
      "op": "KECCAK256"
    },
    "11044": {
      "op": "SWAP1"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11047": {
      "op": "ADD"
    },
    "11048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11050": {
      "op": "SWAP1"
    },
    "11051": {
      "op": "DIV"
    },
    "11052": {
      "op": "DUP2"
    },
    "11053": {
      "op": "ADD"
    },
    "11054": {
      "op": "SWAP3"
    },
    "11055": {
      "op": "DUP3"
    },
    "11056": {
      "op": "PUSH2",
      "value": "0x2B3C"
    },
    "11059": {
      "op": "JUMPI"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11062": {
      "op": "DUP6"
    },
    "11063": {
      "op": "SSTORE"
    },
    "11064": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "11067": {
      "op": "JUMP"
    },
    "11068": {
      "op": "JUMPDEST"
    },
    "11069": {
      "op": "DUP3"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11072": {
      "op": "LT"
    },
    "11073": {
      "op": "PUSH2",
      "value": "0x2B55"
    },
    "11076": {
      "op": "JUMPI"
    },
    "11077": {
      "op": "DUP1"
    },
    "11078": {
      "op": "MLOAD"
    },
    "11079": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11081": {
      "op": "NOT"
    },
    "11082": {
      "op": "AND"
    },
    "11083": {
      "op": "DUP4"
    },
    "11084": {
      "op": "DUP1"
    },
    "11085": {
      "op": "ADD"
    },
    "11086": {
      "op": "OR"
    },
    "11087": {
      "op": "DUP6"
    },
    "11088": {
      "op": "SSTORE"
    },
    "11089": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "11092": {
      "op": "JUMP"
    },
    "11093": {
      "op": "JUMPDEST"
    },
    "11094": {
      "op": "DUP3"
    },
    "11095": {
      "op": "DUP1"
    },
    "11096": {
      "op": "ADD"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11099": {
      "op": "ADD"
    },
    "11100": {
      "op": "DUP6"
    },
    "11101": {
      "op": "SSTORE"
    },
    "11102": {
      "op": "DUP3"
    },
    "11103": {
      "op": "ISZERO"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "11107": {
      "op": "JUMPI"
    },
    "11108": {
      "op": "SWAP2"
    },
    "11109": {
      "op": "DUP3"
    },
    "11110": {
      "op": "ADD"
    },
    "11111": {
      "op": "JUMPDEST"
    },
    "11112": {
      "op": "DUP3"
    },
    "11113": {
      "op": "DUP2"
    },
    "11114": {
      "op": "GT"
    },
    "11115": {
      "op": "ISZERO"
    },
    "11116": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "11119": {
      "op": "JUMPI"
    },
    "11120": {
      "op": "DUP3"
    },
    "11121": {
      "op": "MLOAD"
    },
    "11122": {
      "op": "DUP3"
    },
    "11123": {
      "op": "SSTORE"
    },
    "11124": {
      "op": "SWAP2"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11127": {
      "op": "ADD"
    },
    "11128": {
      "op": "SWAP2"
    },
    "11129": {
      "op": "SWAP1"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11132": {
      "op": "ADD"
    },
    "11133": {
      "op": "SWAP1"
    },
    "11134": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11137": {
      "op": "JUMP"
    },
    "11138": {
      "op": "JUMPDEST"
    },
    "11139": {
      "op": "POP"
    },
    "11140": {
      "op": "PUSH2",
      "value": "0x2B8E"
    },
    "11143": {
      "op": "SWAP3"
    },
    "11144": {
      "op": "SWAP2"
    },
    "11145": {
      "op": "POP"
    },
    "11146": {
      "op": "PUSH2",
      "value": "0x2B92"
    },
    "11149": {
      "jump": "i",
      "op": "JUMP"
    },
    "11150": {
      "op": "JUMPDEST"
    },
    "11151": {
      "op": "POP"
    },
    "11152": {
      "op": "SWAP1"
    },
    "11153": {
      "jump": "o",
      "op": "JUMP"
    },
    "11154": {
      "op": "JUMPDEST"
    },
    "11155": {
      "op": "JUMPDEST"
    },
    "11156": {
      "op": "DUP1"
    },
    "11157": {
      "op": "DUP3"
    },
    "11158": {
      "op": "GT"
    },
    "11159": {
      "op": "ISZERO"
    },
    "11160": {
      "op": "PUSH2",
      "value": "0x2B8E"
    },
    "11163": {
      "op": "JUMPI"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11166": {
      "op": "DUP2"
    },
    "11167": {
      "op": "SSTORE"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11170": {
      "op": "ADD"
    },
    "11171": {
      "op": "PUSH2",
      "value": "0x2B93"
    },
    "11174": {
      "op": "JUMP"
    },
    "11175": {
      "op": "JUMPDEST"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11182": {
      "op": "SHL"
    },
    "11183": {
      "op": "SUB"
    },
    "11184": {
      "op": "NOT"
    },
    "11185": {
      "op": "DUP2"
    },
    "11186": {
      "op": "AND"
    },
    "11187": {
      "op": "DUP2"
    },
    "11188": {
      "op": "EQ"
    },
    "11189": {
      "op": "PUSH2",
      "value": "0x1E51"
    },
    "11192": {
      "op": "JUMPI"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11195": {
      "op": "DUP1"
    },
    "11196": {
      "op": "REVERT"
    },
    "11197": {
      "op": "JUMPDEST"
    },
    "11198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11202": {
      "op": "DUP3"
    },
    "11203": {
      "op": "DUP5"
    },
    "11204": {
      "op": "SUB"
    },
    "11205": {
      "op": "SLT"
    },
    "11206": {
      "op": "ISZERO"
    },
    "11207": {
      "op": "PUSH2",
      "value": "0x2BCF"
    },
    "11210": {
      "op": "JUMPI"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11213": {
      "op": "DUP1"
    },
    "11214": {
      "op": "REVERT"
    },
    "11215": {
      "op": "JUMPDEST"
    },
    "11216": {
      "op": "DUP2"
    },
    "11217": {
      "op": "CALLDATALOAD"
    },
    "11218": {
      "op": "PUSH2",
      "value": "0x1A0B"
    },
    "11221": {
      "op": "DUP2"
    },
    "11222": {
      "op": "PUSH2",
      "value": "0x2BA7"
    },
    "11225": {
      "jump": "i",
      "op": "JUMP"
    },
    "11226": {
      "op": "JUMPDEST"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11229": {
      "op": "JUMPDEST"
    },
    "11230": {
      "op": "DUP4"
    },
    "11231": {
      "op": "DUP2"
    },
    "11232": {
      "op": "LT"
    },
    "11233": {
      "op": "ISZERO"
    },
    "11234": {
      "op": "PUSH2",
      "value": "0x2BF5"
    },
    "11237": {
      "op": "JUMPI"
    },
    "11238": {
      "op": "DUP2"
    },
    "11239": {
      "op": "DUP2"
    },
    "11240": {
      "op": "ADD"
    },
    "11241": {
      "op": "MLOAD"
    },
    "11242": {
      "op": "DUP4"
    },
    "11243": {
      "op": "DUP3"
    },
    "11244": {
      "op": "ADD"
    },
    "11245": {
      "op": "MSTORE"
    },
    "11246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11248": {
      "op": "ADD"
    },
    "11249": {
      "op": "PUSH2",
      "value": "0x2BDD"
    },
    "11252": {
      "op": "JUMP"
    },
    "11253": {
      "op": "JUMPDEST"
    },
    "11254": {
      "op": "DUP4"
    },
    "11255": {
      "op": "DUP2"
    },
    "11256": {
      "op": "GT"
    },
    "11257": {
      "op": "ISZERO"
    },
    "11258": {
      "op": "PUSH2",
      "value": "0x1A44"
    },
    "11261": {
      "op": "JUMPI"
    },
    "11262": {
      "op": "POP"
    },
    "11263": {
      "op": "POP"
    },
    "11264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11266": {
      "op": "SWAP2"
    },
    "11267": {
      "op": "ADD"
    },
    "11268": {
      "op": "MSTORE"
    },
    "11269": {
      "jump": "o",
      "op": "JUMP"
    },
    "11270": {
      "op": "JUMPDEST"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11273": {
      "op": "DUP2"
    },
    "11274": {
      "op": "MLOAD"
    },
    "11275": {
      "op": "DUP1"
    },
    "11276": {
      "op": "DUP5"
    },
    "11277": {
      "op": "MSTORE"
    },
    "11278": {
      "op": "PUSH2",
      "value": "0x2C1E"
    },
    "11281": {
      "op": "DUP2"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11284": {
      "op": "DUP7"
    },
    "11285": {
      "op": "ADD"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11288": {
      "op": "DUP7"
    },
    "11289": {
      "op": "ADD"
    },
    "11290": {
      "op": "PUSH2",
      "value": "0x2BDA"
    },
    "11293": {
      "jump": "i",
      "op": "JUMP"
    },
    "11294": {
      "op": "JUMPDEST"
    },
    "11295": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11297": {
      "op": "ADD"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11300": {
      "op": "NOT"
    },
    "11301": {
      "op": "AND"
    },
    "11302": {
      "op": "SWAP3"
    },
    "11303": {
      "op": "SWAP1"
    },
    "11304": {
      "op": "SWAP3"
    },
    "11305": {
      "op": "ADD"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11308": {
      "op": "ADD"
    },
    "11309": {
      "op": "SWAP3"
    },
    "11310": {
      "op": "SWAP2"
    },
    "11311": {
      "op": "POP"
    },
    "11312": {
      "op": "POP"
    },
    "11313": {
      "jump": "o",
      "op": "JUMP"
    },
    "11314": {
      "op": "JUMPDEST"
    },
    "11315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11317": {
      "op": "DUP2"
    },
    "11318": {
      "op": "MSTORE"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11321": {
      "op": "PUSH2",
      "value": "0x1A0B"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11326": {
      "op": "DUP4"
    },
    "11327": {
      "op": "ADD"
    },
    "11328": {
      "op": "DUP5"
    },
    "11329": {
      "op": "PUSH2",
      "value": "0x2C06"
    },
    "11332": {
      "jump": "i",
      "op": "JUMP"
    },
    "11333": {
      "op": "JUMPDEST"
    },
    "11334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11338": {
      "op": "DUP3"
    },
    "11339": {
      "op": "DUP5"
    },
    "11340": {
      "op": "SUB"
    },
    "11341": {
      "op": "SLT"
    },
    "11342": {
      "op": "ISZERO"
    },
    "11343": {
      "op": "PUSH2",
      "value": "0x2C57"
    },
    "11346": {
      "op": "JUMPI"
    },
    "11347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11349": {
      "op": "DUP1"
    },
    "11350": {
      "op": "REVERT"
    },
    "11351": {
      "op": "JUMPDEST"
    },
    "11352": {
      "op": "POP"
    },
    "11353": {
      "op": "CALLDATALOAD"
    },
    "11354": {
      "op": "SWAP2"
    },
    "11355": {
      "op": "SWAP1"
    },
    "11356": {
      "op": "POP"
    },
    "11357": {
      "jump": "o",
      "op": "JUMP"
    },
    "11358": {
      "op": "JUMPDEST"
    },
    "11359": {
      "op": "DUP1"
    },
    "11360": {
      "op": "CALLDATALOAD"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11367": {
      "op": "SHL"
    },
    "11368": {
      "op": "SUB"
    },
    "11369": {
      "op": "DUP2"
    },
    "11370": {
      "op": "AND"
    },
    "11371": {
      "op": "DUP2"
    },
    "11372": {
      "op": "EQ"
    },
    "11373": {
      "op": "PUSH2",
      "value": "0x2C75"
    },
    "11376": {
      "op": "JUMPI"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11379": {
      "op": "DUP1"
    },
    "11380": {
      "op": "REVERT"
    },
    "11381": {
      "op": "JUMPDEST"
    },
    "11382": {
      "op": "SWAP2"
    },
    "11383": {
      "op": "SWAP1"
    },
    "11384": {
      "op": "POP"
    },
    "11385": {
      "jump": "o",
      "op": "JUMP"
    },
    "11386": {
      "op": "JUMPDEST"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11389": {
      "op": "DUP1"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11392": {
      "op": "DUP4"
    },
    "11393": {
      "op": "DUP6"
    },
    "11394": {
      "op": "SUB"
    },
    "11395": {
      "op": "SLT"
    },
    "11396": {
      "op": "ISZERO"
    },
    "11397": {
      "op": "PUSH2",
      "value": "0x2C8D"
    },
    "11400": {
      "op": "JUMPI"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11403": {
      "op": "DUP1"
    },
    "11404": {
      "op": "REVERT"
    },
    "11405": {
      "op": "JUMPDEST"
    },
    "11406": {
      "op": "PUSH2",
      "value": "0x2C96"
    },
    "11409": {
      "op": "DUP4"
    },
    "11410": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "11413": {
      "jump": "i",
      "op": "JUMP"
    },
    "11414": {
      "op": "JUMPDEST"
    },
    "11415": {
      "op": "SWAP5"
    },
    "11416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11418": {
      "op": "SWAP4"
    },
    "11419": {
      "op": "SWAP1"
    },
    "11420": {
      "op": "SWAP4"
    },
    "11421": {
      "op": "ADD"
    },
    "11422": {
      "op": "CALLDATALOAD"
    },
    "11423": {
      "op": "SWAP4"
    },
    "11424": {
      "op": "POP"
    },
    "11425": {
      "op": "POP"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "jump": "o",
      "op": "JUMP"
    },
    "11428": {
      "op": "JUMPDEST"
    },
    "11429": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11436": {
      "op": "SHL"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11439": {
      "op": "MSTORE"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11444": {
      "op": "MSTORE"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11449": {
      "op": "REVERT"
    },
    "11450": {
      "op": "JUMPDEST"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11453": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11462": {
      "op": "DUP1"
    },
    "11463": {
      "op": "DUP5"
    },
    "11464": {
      "op": "GT"
    },
    "11465": {
      "op": "ISZERO"
    },
    "11466": {
      "op": "PUSH2",
      "value": "0x2CD5"
    },
    "11469": {
      "op": "JUMPI"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x2CD5"
    },
    "11473": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11476": {
      "jump": "i",
      "op": "JUMP"
    },
    "11477": {
      "op": "JUMPDEST"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11480": {
      "op": "MLOAD"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11483": {
      "op": "DUP6"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11487": {
      "op": "NOT"
    },
    "11488": {
      "op": "SWAP1"
    },
    "11489": {
      "op": "DUP2"
    },
    "11490": {
      "op": "AND"
    },
    "11491": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11493": {
      "op": "ADD"
    },
    "11494": {
      "op": "AND"
    },
    "11495": {
      "op": "DUP2"
    },
    "11496": {
      "op": "ADD"
    },
    "11497": {
      "op": "SWAP1"
    },
    "11498": {
      "op": "DUP3"
    },
    "11499": {
      "op": "DUP3"
    },
    "11500": {
      "op": "GT"
    },
    "11501": {
      "op": "DUP2"
    },
    "11502": {
      "op": "DUP4"
    },
    "11503": {
      "op": "LT"
    },
    "11504": {
      "op": "OR"
    },
    "11505": {
      "op": "ISZERO"
    },
    "11506": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11509": {
      "op": "JUMPI"
    },
    "11510": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11513": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11516": {
      "jump": "i",
      "op": "JUMP"
    },
    "11517": {
      "op": "JUMPDEST"
    },
    "11518": {
      "op": "DUP2"
    },
    "11519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11521": {
      "op": "MSTORE"
    },
    "11522": {
      "op": "DUP1"
    },
    "11523": {
      "op": "SWAP4"
    },
    "11524": {
      "op": "POP"
    },
    "11525": {
      "op": "DUP6"
    },
    "11526": {
      "op": "DUP2"
    },
    "11527": {
      "op": "MSTORE"
    },
    "11528": {
      "op": "DUP7"
    },
    "11529": {
      "op": "DUP7"
    },
    "11530": {
      "op": "DUP7"
    },
    "11531": {
      "op": "ADD"
    },
    "11532": {
      "op": "GT"
    },
    "11533": {
      "op": "ISZERO"
    },
    "11534": {
      "op": "PUSH2",
      "value": "0x2D16"
    },
    "11537": {
      "op": "JUMPI"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11540": {
      "op": "DUP1"
    },
    "11541": {
      "op": "REVERT"
    },
    "11542": {
      "op": "JUMPDEST"
    },
    "11543": {
      "op": "DUP6"
    },
    "11544": {
      "op": "DUP6"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11547": {
      "op": "DUP4"
    },
    "11548": {
      "op": "ADD"
    },
    "11549": {
      "op": "CALLDATACOPY"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11554": {
      "op": "DUP8"
    },
    "11555": {
      "op": "DUP4"
    },
    "11556": {
      "op": "ADD"
    },
    "11557": {
      "op": "ADD"
    },
    "11558": {
      "op": "MSTORE"
    },
    "11559": {
      "op": "POP"
    },
    "11560": {
      "op": "POP"
    },
    "11561": {
      "op": "POP"
    },
    "11562": {
      "op": "SWAP4"
    },
    "11563": {
      "op": "SWAP3"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "POP"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "jump": "o",
      "op": "JUMP"
    },
    "11568": {
      "op": "JUMPDEST"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11573": {
      "op": "DUP3"
    },
    "11574": {
      "op": "DUP5"
    },
    "11575": {
      "op": "SUB"
    },
    "11576": {
      "op": "SLT"
    },
    "11577": {
      "op": "ISZERO"
    },
    "11578": {
      "op": "PUSH2",
      "value": "0x2D42"
    },
    "11581": {
      "op": "JUMPI"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11584": {
      "op": "DUP1"
    },
    "11585": {
      "op": "REVERT"
    },
    "11586": {
      "op": "JUMPDEST"
    },
    "11587": {
      "op": "DUP2"
    },
    "11588": {
      "op": "CALLDATALOAD"
    },
    "11589": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11598": {
      "op": "DUP2"
    },
    "11599": {
      "op": "GT"
    },
    "11600": {
      "op": "ISZERO"
    },
    "11601": {
      "op": "PUSH2",
      "value": "0x2D59"
    },
    "11604": {
      "op": "JUMPI"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11607": {
      "op": "DUP1"
    },
    "11608": {
      "op": "REVERT"
    },
    "11609": {
      "op": "JUMPDEST"
    },
    "11610": {
      "op": "DUP3"
    },
    "11611": {
      "op": "ADD"
    },
    "11612": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11614": {
      "op": "DUP2"
    },
    "11615": {
      "op": "ADD"
    },
    "11616": {
      "op": "DUP5"
    },
    "11617": {
      "op": "SGT"
    },
    "11618": {
      "op": "PUSH2",
      "value": "0x2D6A"
    },
    "11621": {
      "op": "JUMPI"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11624": {
      "op": "DUP1"
    },
    "11625": {
      "op": "REVERT"
    },
    "11626": {
      "op": "JUMPDEST"
    },
    "11627": {
      "op": "PUSH2",
      "value": "0x2039"
    },
    "11630": {
      "op": "DUP5"
    },
    "11631": {
      "op": "DUP3"
    },
    "11632": {
      "op": "CALLDATALOAD"
    },
    "11633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11635": {
      "op": "DUP5"
    },
    "11636": {
      "op": "ADD"
    },
    "11637": {
      "op": "PUSH2",
      "value": "0x2CBA"
    },
    "11640": {
      "jump": "i",
      "op": "JUMP"
    },
    "11641": {
      "op": "JUMPDEST"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11644": {
      "op": "DUP1"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11649": {
      "op": "DUP5"
    },
    "11650": {
      "op": "DUP7"
    },
    "11651": {
      "op": "SUB"
    },
    "11652": {
      "op": "SLT"
    },
    "11653": {
      "op": "ISZERO"
    },
    "11654": {
      "op": "PUSH2",
      "value": "0x2D8E"
    },
    "11657": {
      "op": "JUMPI"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11660": {
      "op": "DUP1"
    },
    "11661": {
      "op": "REVERT"
    },
    "11662": {
      "op": "JUMPDEST"
    },
    "11663": {
      "op": "PUSH2",
      "value": "0x2D97"
    },
    "11666": {
      "op": "DUP5"
    },
    "11667": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "11670": {
      "jump": "i",
      "op": "JUMP"
    },
    "11671": {
      "op": "JUMPDEST"
    },
    "11672": {
      "op": "SWAP3"
    },
    "11673": {
      "op": "POP"
    },
    "11674": {
      "op": "PUSH2",
      "value": "0x2DA5"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11679": {
      "op": "DUP6"
    },
    "11680": {
      "op": "ADD"
    },
    "11681": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "11684": {
      "jump": "i",
      "op": "JUMP"
    },
    "11685": {
      "op": "JUMPDEST"
    },
    "11686": {
      "op": "SWAP2"
    },
    "11687": {
      "op": "POP"
    },
    "11688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11690": {
      "op": "DUP5"
    },
    "11691": {
      "op": "ADD"
    },
    "11692": {
      "op": "CALLDATALOAD"
    },
    "11693": {
      "op": "SWAP1"
    },
    "11694": {
      "op": "POP"
    },
    "11695": {
      "op": "SWAP3"
    },
    "11696": {
      "op": "POP"
    },
    "11697": {
      "op": "SWAP3"
    },
    "11698": {
      "op": "POP"
    },
    "11699": {
      "op": "SWAP3"
    },
    "11700": {
      "jump": "o",
      "op": "JUMP"
    },
    "11701": {
      "op": "JUMPDEST"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11704": {
      "op": "DUP1"
    },
    "11705": {
      "op": "DUP4"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11708": {
      "op": "DUP5"
    },
    "11709": {
      "op": "ADD"
    },
    "11710": {
      "op": "SLT"
    },
    "11711": {
      "op": "PUSH2",
      "value": "0x2DC7"
    },
    "11714": {
      "op": "JUMPI"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11717": {
      "op": "DUP1"
    },
    "11718": {
      "op": "REVERT"
    },
    "11719": {
      "op": "JUMPDEST"
    },
    "11720": {
      "op": "POP"
    },
    "11721": {
      "op": "DUP2"
    },
    "11722": {
      "op": "CALLDATALOAD"
    },
    "11723": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11732": {
      "op": "DUP2"
    },
    "11733": {
      "op": "GT"
    },
    "11734": {
      "op": "ISZERO"
    },
    "11735": {
      "op": "PUSH2",
      "value": "0x2DDF"
    },
    "11738": {
      "op": "JUMPI"
    },
    "11739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11741": {
      "op": "DUP1"
    },
    "11742": {
      "op": "REVERT"
    },
    "11743": {
      "op": "JUMPDEST"
    },
    "11744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11746": {
      "op": "DUP4"
    },
    "11747": {
      "op": "ADD"
    },
    "11748": {
      "op": "SWAP2"
    },
    "11749": {
      "op": "POP"
    },
    "11750": {
      "op": "DUP4"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11753": {
      "op": "DUP3"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11756": {
      "op": "SHL"
    },
    "11757": {
      "op": "DUP6"
    },
    "11758": {
      "op": "ADD"
    },
    "11759": {
      "op": "ADD"
    },
    "11760": {
      "op": "GT"
    },
    "11761": {
      "op": "ISZERO"
    },
    "11762": {
      "op": "PUSH2",
      "value": "0x2DFA"
    },
    "11765": {
      "op": "JUMPI"
    },
    "11766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11768": {
      "op": "DUP1"
    },
    "11769": {
      "op": "REVERT"
    },
    "11770": {
      "op": "JUMPDEST"
    },
    "11771": {
      "op": "SWAP3"
    },
    "11772": {
      "op": "POP"
    },
    "11773": {
      "op": "SWAP3"
    },
    "11774": {
      "op": "SWAP1"
    },
    "11775": {
      "op": "POP"
    },
    "11776": {
      "jump": "o",
      "op": "JUMP"
    },
    "11777": {
      "op": "JUMPDEST"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11780": {
      "op": "DUP1"
    },
    "11781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11783": {
      "op": "DUP4"
    },
    "11784": {
      "op": "DUP6"
    },
    "11785": {
      "op": "SUB"
    },
    "11786": {
      "op": "SLT"
    },
    "11787": {
      "op": "ISZERO"
    },
    "11788": {
      "op": "PUSH2",
      "value": "0x2E14"
    },
    "11791": {
      "op": "JUMPI"
    },
    "11792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11794": {
      "op": "DUP1"
    },
    "11795": {
      "op": "REVERT"
    },
    "11796": {
      "op": "JUMPDEST"
    },
    "11797": {
      "op": "DUP3"
    },
    "11798": {
      "op": "CALLDATALOAD"
    },
    "11799": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11808": {
      "op": "DUP2"
    },
    "11809": {
      "op": "GT"
    },
    "11810": {
      "op": "ISZERO"
    },
    "11811": {
      "op": "PUSH2",
      "value": "0x2E2B"
    },
    "11814": {
      "op": "JUMPI"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11817": {
      "op": "DUP1"
    },
    "11818": {
      "op": "REVERT"
    },
    "11819": {
      "op": "JUMPDEST"
    },
    "11820": {
      "op": "PUSH2",
      "value": "0x2E37"
    },
    "11823": {
      "op": "DUP6"
    },
    "11824": {
      "op": "DUP3"
    },
    "11825": {
      "op": "DUP7"
    },
    "11826": {
      "op": "ADD"
    },
    "11827": {
      "op": "PUSH2",
      "value": "0x2DB5"
    },
    "11830": {
      "jump": "i",
      "op": "JUMP"
    },
    "11831": {
      "op": "JUMPDEST"
    },
    "11832": {
      "op": "SWAP1"
    },
    "11833": {
      "op": "SWAP7"
    },
    "11834": {
      "op": "SWAP1"
    },
    "11835": {
      "op": "SWAP6"
    },
    "11836": {
      "op": "POP"
    },
    "11837": {
      "op": "SWAP4"
    },
    "11838": {
      "op": "POP"
    },
    "11839": {
      "op": "POP"
    },
    "11840": {
      "op": "POP"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "jump": "o",
      "op": "JUMP"
    },
    "11843": {
      "op": "JUMPDEST"
    },
    "11844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11848": {
      "op": "DUP3"
    },
    "11849": {
      "op": "DUP5"
    },
    "11850": {
      "op": "SUB"
    },
    "11851": {
      "op": "SLT"
    },
    "11852": {
      "op": "ISZERO"
    },
    "11853": {
      "op": "PUSH2",
      "value": "0x2E55"
    },
    "11856": {
      "op": "JUMPI"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11859": {
      "op": "DUP1"
    },
    "11860": {
      "op": "REVERT"
    },
    "11861": {
      "op": "JUMPDEST"
    },
    "11862": {
      "op": "PUSH2",
      "value": "0x1A0B"
    },
    "11865": {
      "op": "DUP3"
    },
    "11866": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "11869": {
      "jump": "i",
      "op": "JUMP"
    },
    "11870": {
      "op": "JUMPDEST"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11873": {
      "op": "DUP1"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "MSTORE"
    },
    "11876": {
      "op": "DUP3"
    },
    "11877": {
      "op": "MLOAD"
    },
    "11878": {
      "op": "DUP3"
    },
    "11879": {
      "op": "DUP3"
    },
    "11880": {
      "op": "ADD"
    },
    "11881": {
      "op": "DUP2"
    },
    "11882": {
      "op": "SWAP1"
    },
    "11883": {
      "op": "MSTORE"
    },
    "11884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11886": {
      "op": "SWAP2"
    },
    "11887": {
      "op": "SWAP1"
    },
    "11888": {
      "op": "DUP5"
    },
    "11889": {
      "op": "DUP3"
    },
    "11890": {
      "op": "ADD"
    },
    "11891": {
      "op": "SWAP1"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11894": {
      "op": "DUP6"
    },
    "11895": {
      "op": "ADD"
    },
    "11896": {
      "op": "SWAP1"
    },
    "11897": {
      "op": "DUP5"
    },
    "11898": {
      "op": "JUMPDEST"
    },
    "11899": {
      "op": "DUP2"
    },
    "11900": {
      "op": "DUP2"
    },
    "11901": {
      "op": "LT"
    },
    "11902": {
      "op": "ISZERO"
    },
    "11903": {
      "op": "PUSH2",
      "value": "0x2E96"
    },
    "11906": {
      "op": "JUMPI"
    },
    "11907": {
      "op": "DUP4"
    },
    "11908": {
      "op": "MLOAD"
    },
    "11909": {
      "op": "DUP4"
    },
    "11910": {
      "op": "MSTORE"
    },
    "11911": {
      "op": "SWAP3"
    },
    "11912": {
      "op": "DUP5"
    },
    "11913": {
      "op": "ADD"
    },
    "11914": {
      "op": "SWAP3"
    },
    "11915": {
      "op": "SWAP2"
    },
    "11916": {
      "op": "DUP5"
    },
    "11917": {
      "op": "ADD"
    },
    "11918": {
      "op": "SWAP2"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11921": {
      "op": "ADD"
    },
    "11922": {
      "op": "PUSH2",
      "value": "0x2E7A"
    },
    "11925": {
      "op": "JUMP"
    },
    "11926": {
      "op": "JUMPDEST"
    },
    "11927": {
      "op": "POP"
    },
    "11928": {
      "op": "SWAP1"
    },
    "11929": {
      "op": "SWAP7"
    },
    "11930": {
      "op": "SWAP6"
    },
    "11931": {
      "op": "POP"
    },
    "11932": {
      "op": "POP"
    },
    "11933": {
      "op": "POP"
    },
    "11934": {
      "op": "POP"
    },
    "11935": {
      "op": "POP"
    },
    "11936": {
      "op": "POP"
    },
    "11937": {
      "jump": "o",
      "op": "JUMP"
    },
    "11938": {
      "op": "JUMPDEST"
    },
    "11939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11941": {
      "op": "DUP1"
    },
    "11942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11944": {
      "op": "DUP4"
    },
    "11945": {
      "op": "DUP6"
    },
    "11946": {
      "op": "SUB"
    },
    "11947": {
      "op": "SLT"
    },
    "11948": {
      "op": "ISZERO"
    },
    "11949": {
      "op": "PUSH2",
      "value": "0x2EB5"
    },
    "11952": {
      "op": "JUMPI"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11955": {
      "op": "DUP1"
    },
    "11956": {
      "op": "REVERT"
    },
    "11957": {
      "op": "JUMPDEST"
    },
    "11958": {
      "op": "PUSH2",
      "value": "0x2EBE"
    },
    "11961": {
      "op": "DUP4"
    },
    "11962": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "11965": {
      "jump": "i",
      "op": "JUMP"
    },
    "11966": {
      "op": "JUMPDEST"
    },
    "11967": {
      "op": "SWAP2"
    },
    "11968": {
      "op": "POP"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11971": {
      "op": "DUP4"
    },
    "11972": {
      "op": "ADD"
    },
    "11973": {
      "op": "CALLDATALOAD"
    },
    "11974": {
      "op": "DUP1"
    },
    "11975": {
      "op": "ISZERO"
    },
    "11976": {
      "op": "ISZERO"
    },
    "11977": {
      "op": "DUP2"
    },
    "11978": {
      "op": "EQ"
    },
    "11979": {
      "op": "PUSH2",
      "value": "0x2ED3"
    },
    "11982": {
      "op": "JUMPI"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11985": {
      "op": "DUP1"
    },
    "11986": {
      "op": "REVERT"
    },
    "11987": {
      "op": "JUMPDEST"
    },
    "11988": {
      "op": "DUP1"
    },
    "11989": {
      "op": "SWAP2"
    },
    "11990": {
      "op": "POP"
    },
    "11991": {
      "op": "POP"
    },
    "11992": {
      "op": "SWAP3"
    },
    "11993": {
      "op": "POP"
    },
    "11994": {
      "op": "SWAP3"
    },
    "11995": {
      "op": "SWAP1"
    },
    "11996": {
      "op": "POP"
    },
    "11997": {
      "jump": "o",
      "op": "JUMP"
    },
    "11998": {
      "op": "JUMPDEST"
    },
    "11999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12001": {
      "op": "DUP1"
    },
    "12002": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12004": {
      "op": "DUP4"
    },
    "12005": {
      "op": "DUP6"
    },
    "12006": {
      "op": "SUB"
    },
    "12007": {
      "op": "SLT"
    },
    "12008": {
      "op": "ISZERO"
    },
    "12009": {
      "op": "PUSH2",
      "value": "0x2EF1"
    },
    "12012": {
      "op": "JUMPI"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12015": {
      "op": "DUP1"
    },
    "12016": {
      "op": "REVERT"
    },
    "12017": {
      "op": "JUMPDEST"
    },
    "12018": {
      "op": "DUP3"
    },
    "12019": {
      "op": "CALLDATALOAD"
    },
    "12020": {
      "op": "SWAP2"
    },
    "12021": {
      "op": "POP"
    },
    "12022": {
      "op": "PUSH2",
      "value": "0x2F01"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12027": {
      "op": "DUP5"
    },
    "12028": {
      "op": "ADD"
    },
    "12029": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12032": {
      "jump": "i",
      "op": "JUMP"
    },
    "12033": {
      "op": "JUMPDEST"
    },
    "12034": {
      "op": "SWAP1"
    },
    "12035": {
      "op": "POP"
    },
    "12036": {
      "op": "SWAP3"
    },
    "12037": {
      "op": "POP"
    },
    "12038": {
      "op": "SWAP3"
    },
    "12039": {
      "op": "SWAP1"
    },
    "12040": {
      "op": "POP"
    },
    "12041": {
      "jump": "o",
      "op": "JUMP"
    },
    "12042": {
      "op": "JUMPDEST"
    },
    "12043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12045": {
      "op": "DUP1"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12050": {
      "op": "DUP5"
    },
    "12051": {
      "op": "DUP7"
    },
    "12052": {
      "op": "SUB"
    },
    "12053": {
      "op": "SLT"
    },
    "12054": {
      "op": "ISZERO"
    },
    "12055": {
      "op": "PUSH2",
      "value": "0x2F1F"
    },
    "12058": {
      "op": "JUMPI"
    },
    "12059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12061": {
      "op": "DUP1"
    },
    "12062": {
      "op": "REVERT"
    },
    "12063": {
      "op": "JUMPDEST"
    },
    "12064": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12067": {
      "op": "DUP5"
    },
    "12068": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12071": {
      "jump": "i",
      "op": "JUMP"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "SWAP3"
    },
    "12074": {
      "op": "POP"
    },
    "12075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12077": {
      "op": "DUP5"
    },
    "12078": {
      "op": "ADD"
    },
    "12079": {
      "op": "CALLDATALOAD"
    },
    "12080": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12089": {
      "op": "DUP2"
    },
    "12090": {
      "op": "GT"
    },
    "12091": {
      "op": "ISZERO"
    },
    "12092": {
      "op": "PUSH2",
      "value": "0x2F44"
    },
    "12095": {
      "op": "JUMPI"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12098": {
      "op": "DUP1"
    },
    "12099": {
      "op": "REVERT"
    },
    "12100": {
      "op": "JUMPDEST"
    },
    "12101": {
      "op": "PUSH2",
      "value": "0x2F50"
    },
    "12104": {
      "op": "DUP7"
    },
    "12105": {
      "op": "DUP3"
    },
    "12106": {
      "op": "DUP8"
    },
    "12107": {
      "op": "ADD"
    },
    "12108": {
      "op": "PUSH2",
      "value": "0x2DB5"
    },
    "12111": {
      "jump": "i",
      "op": "JUMP"
    },
    "12112": {
      "op": "JUMPDEST"
    },
    "12113": {
      "op": "SWAP5"
    },
    "12114": {
      "op": "SWAP8"
    },
    "12115": {
      "op": "SWAP1"
    },
    "12116": {
      "op": "SWAP7"
    },
    "12117": {
      "op": "POP"
    },
    "12118": {
      "op": "SWAP4"
    },
    "12119": {
      "op": "SWAP5"
    },
    "12120": {
      "op": "POP"
    },
    "12121": {
      "op": "POP"
    },
    "12122": {
      "op": "POP"
    },
    "12123": {
      "op": "POP"
    },
    "12124": {
      "jump": "o",
      "op": "JUMP"
    },
    "12125": {
      "op": "JUMPDEST"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12128": {
      "op": "DUP1"
    },
    "12129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12131": {
      "op": "DUP1"
    },
    "12132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12134": {
      "op": "DUP6"
    },
    "12135": {
      "op": "DUP8"
    },
    "12136": {
      "op": "SUB"
    },
    "12137": {
      "op": "SLT"
    },
    "12138": {
      "op": "ISZERO"
    },
    "12139": {
      "op": "PUSH2",
      "value": "0x2F73"
    },
    "12142": {
      "op": "JUMPI"
    },
    "12143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12145": {
      "op": "DUP1"
    },
    "12146": {
      "op": "REVERT"
    },
    "12147": {
      "op": "JUMPDEST"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F7C"
    },
    "12151": {
      "op": "DUP6"
    },
    "12152": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12155": {
      "jump": "i",
      "op": "JUMP"
    },
    "12156": {
      "op": "JUMPDEST"
    },
    "12157": {
      "op": "SWAP4"
    },
    "12158": {
      "op": "POP"
    },
    "12159": {
      "op": "PUSH2",
      "value": "0x2F8A"
    },
    "12162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12164": {
      "op": "DUP7"
    },
    "12165": {
      "op": "ADD"
    },
    "12166": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12169": {
      "jump": "i",
      "op": "JUMP"
    },
    "12170": {
      "op": "JUMPDEST"
    },
    "12171": {
      "op": "SWAP3"
    },
    "12172": {
      "op": "POP"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12175": {
      "op": "DUP6"
    },
    "12176": {
      "op": "ADD"
    },
    "12177": {
      "op": "CALLDATALOAD"
    },
    "12178": {
      "op": "SWAP2"
    },
    "12179": {
      "op": "POP"
    },
    "12180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12182": {
      "op": "DUP6"
    },
    "12183": {
      "op": "ADD"
    },
    "12184": {
      "op": "CALLDATALOAD"
    },
    "12185": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12194": {
      "op": "DUP2"
    },
    "12195": {
      "op": "GT"
    },
    "12196": {
      "op": "ISZERO"
    },
    "12197": {
      "op": "PUSH2",
      "value": "0x2FAD"
    },
    "12200": {
      "op": "JUMPI"
    },
    "12201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12203": {
      "op": "DUP1"
    },
    "12204": {
      "op": "REVERT"
    },
    "12205": {
      "op": "JUMPDEST"
    },
    "12206": {
      "op": "DUP6"
    },
    "12207": {
      "op": "ADD"
    },
    "12208": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12210": {
      "op": "DUP2"
    },
    "12211": {
      "op": "ADD"
    },
    "12212": {
      "op": "DUP8"
    },
    "12213": {
      "op": "SGT"
    },
    "12214": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "12217": {
      "op": "JUMPI"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12220": {
      "op": "DUP1"
    },
    "12221": {
      "op": "REVERT"
    },
    "12222": {
      "op": "JUMPDEST"
    },
    "12223": {
      "op": "PUSH2",
      "value": "0x2FCD"
    },
    "12226": {
      "op": "DUP8"
    },
    "12227": {
      "op": "DUP3"
    },
    "12228": {
      "op": "CALLDATALOAD"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12231": {
      "op": "DUP5"
    },
    "12232": {
      "op": "ADD"
    },
    "12233": {
      "op": "PUSH2",
      "value": "0x2CBA"
    },
    "12236": {
      "jump": "i",
      "op": "JUMP"
    },
    "12237": {
      "op": "JUMPDEST"
    },
    "12238": {
      "op": "SWAP2"
    },
    "12239": {
      "op": "POP"
    },
    "12240": {
      "op": "POP"
    },
    "12241": {
      "op": "SWAP3"
    },
    "12242": {
      "op": "SWAP6"
    },
    "12243": {
      "op": "SWAP2"
    },
    "12244": {
      "op": "SWAP5"
    },
    "12245": {
      "op": "POP"
    },
    "12246": {
      "op": "SWAP3"
    },
    "12247": {
      "op": "POP"
    },
    "12248": {
      "jump": "o",
      "op": "JUMP"
    },
    "12249": {
      "op": "JUMPDEST"
    },
    "12250": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12255": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12257": {
      "op": "SHL"
    },
    "12258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12260": {
      "op": "MSTORE"
    },
    "12261": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12263": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12265": {
      "op": "MSTORE"
    },
    "12266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12270": {
      "op": "REVERT"
    },
    "12271": {
      "op": "JUMPDEST"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12274": {
      "op": "DUP2"
    },
    "12275": {
      "op": "ADD"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12278": {
      "op": "DUP4"
    },
    "12279": {
      "op": "LT"
    },
    "12280": {
      "op": "PUSH2",
      "value": "0x3011"
    },
    "12283": {
      "op": "JUMPI"
    },
    "12284": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12291": {
      "op": "SHL"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12294": {
      "op": "MSTORE"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12299": {
      "op": "MSTORE"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12304": {
      "op": "REVERT"
    },
    "12305": {
      "op": "JUMPDEST"
    },
    "12306": {
      "op": "SWAP2"
    },
    "12307": {
      "op": "SWAP1"
    },
    "12308": {
      "op": "MSTORE"
    },
    "12309": {
      "op": "SWAP1"
    },
    "12310": {
      "jump": "o",
      "op": "JUMP"
    },
    "12311": {
      "op": "JUMPDEST"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12316": {
      "op": "DUP3"
    },
    "12317": {
      "op": "DUP5"
    },
    "12318": {
      "op": "SUB"
    },
    "12319": {
      "op": "SLT"
    },
    "12320": {
      "op": "ISZERO"
    },
    "12321": {
      "op": "PUSH2",
      "value": "0x3029"
    },
    "12324": {
      "op": "JUMPI"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12327": {
      "op": "DUP1"
    },
    "12328": {
      "op": "REVERT"
    },
    "12329": {
      "op": "JUMPDEST"
    },
    "12330": {
      "op": "DUP2"
    },
    "12331": {
      "op": "CALLDATALOAD"
    },
    "12332": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12334": {
      "op": "DUP2"
    },
    "12335": {
      "op": "LT"
    },
    "12336": {
      "op": "PUSH2",
      "value": "0x1A0B"
    },
    "12339": {
      "op": "JUMPI"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12342": {
      "op": "DUP1"
    },
    "12343": {
      "op": "REVERT"
    },
    "12344": {
      "op": "JUMPDEST"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12347": {
      "op": "DUP1"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12350": {
      "op": "DUP4"
    },
    "12351": {
      "op": "DUP6"
    },
    "12352": {
      "op": "SUB"
    },
    "12353": {
      "op": "SLT"
    },
    "12354": {
      "op": "ISZERO"
    },
    "12355": {
      "op": "PUSH2",
      "value": "0x304B"
    },
    "12358": {
      "op": "JUMPI"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12361": {
      "op": "DUP1"
    },
    "12362": {
      "op": "REVERT"
    },
    "12363": {
      "op": "JUMPDEST"
    },
    "12364": {
      "op": "PUSH2",
      "value": "0x3054"
    },
    "12367": {
      "op": "DUP4"
    },
    "12368": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12371": {
      "jump": "i",
      "op": "JUMP"
    },
    "12372": {
      "op": "JUMPDEST"
    },
    "12373": {
      "op": "SWAP2"
    },
    "12374": {
      "op": "POP"
    },
    "12375": {
      "op": "PUSH2",
      "value": "0x2F01"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12380": {
      "op": "DUP5"
    },
    "12381": {
      "op": "ADD"
    },
    "12382": {
      "op": "PUSH2",
      "value": "0x2C5E"
    },
    "12385": {
      "jump": "i",
      "op": "JUMP"
    },
    "12386": {
      "op": "JUMPDEST"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12389": {
      "op": "DUP2"
    },
    "12390": {
      "op": "DUP2"
    },
    "12391": {
      "op": "SHR"
    },
    "12392": {
      "op": "SWAP1"
    },
    "12393": {
      "op": "DUP3"
    },
    "12394": {
      "op": "AND"
    },
    "12395": {
      "op": "DUP1"
    },
    "12396": {
      "op": "PUSH2",
      "value": "0x3076"
    },
    "12399": {
      "op": "JUMPI"
    },
    "12400": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12402": {
      "op": "DUP3"
    },
    "12403": {
      "op": "AND"
    },
    "12404": {
      "op": "SWAP2"
    },
    "12405": {
      "op": "POP"
    },
    "12406": {
      "op": "JUMPDEST"
    },
    "12407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12409": {
      "op": "DUP3"
    },
    "12410": {
      "op": "LT"
    },
    "12411": {
      "op": "DUP2"
    },
    "12412": {
      "op": "EQ"
    },
    "12413": {
      "op": "ISZERO"
    },
    "12414": {
      "op": "PUSH2",
      "value": "0x3097"
    },
    "12417": {
      "op": "JUMPI"
    },
    "12418": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12425": {
      "op": "SHL"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12428": {
      "op": "MSTORE"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12433": {
      "op": "MSTORE"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12438": {
      "op": "REVERT"
    },
    "12439": {
      "op": "JUMPDEST"
    },
    "12440": {
      "op": "POP"
    },
    "12441": {
      "op": "SWAP2"
    },
    "12442": {
      "op": "SWAP1"
    },
    "12443": {
      "op": "POP"
    },
    "12444": {
      "jump": "o",
      "op": "JUMP"
    },
    "12445": {
      "op": "JUMPDEST"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12448": {
      "op": "DUP1"
    },
    "12449": {
      "op": "DUP3"
    },
    "12450": {
      "op": "MSTORE"
    },
    "12451": {
      "op": "DUP2"
    },
    "12452": {
      "op": "DUP2"
    },
    "12453": {
      "op": "ADD"
    },
    "12454": {
      "op": "MSTORE"
    },
    "12455": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12490": {
      "op": "DUP3"
    },
    "12491": {
      "op": "ADD"
    },
    "12492": {
      "op": "MSTORE"
    },
    "12493": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12495": {
      "op": "ADD"
    },
    "12496": {
      "op": "SWAP1"
    },
    "12497": {
      "jump": "o",
      "op": "JUMP"
    },
    "12498": {
      "op": "JUMPDEST"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12501": {
      "op": "DUP1"
    },
    "12502": {
      "op": "DUP3"
    },
    "12503": {
      "op": "MSTORE"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12506": {
      "op": "SWAP1"
    },
    "12507": {
      "op": "DUP3"
    },
    "12508": {
      "op": "ADD"
    },
    "12509": {
      "op": "MSTORE"
    },
    "12510": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12545": {
      "op": "DUP3"
    },
    "12546": {
      "op": "ADD"
    },
    "12547": {
      "op": "MSTORE"
    },
    "12548": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "12568": {
      "op": "SHL"
    },
    "12569": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12571": {
      "op": "DUP3"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "op": "MSTORE"
    },
    "12574": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12576": {
      "op": "ADD"
    },
    "12577": {
      "op": "SWAP1"
    },
    "12578": {
      "jump": "o",
      "op": "JUMP"
    },
    "12579": {
      "op": "JUMPDEST"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12582": {
      "op": "DUP1"
    },
    "12583": {
      "op": "DUP3"
    },
    "12584": {
      "op": "MSTORE"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "12587": {
      "op": "SWAP1"
    },
    "12588": {
      "op": "DUP3"
    },
    "12589": {
      "op": "ADD"
    },
    "12590": {
      "op": "MSTORE"
    },
    "12591": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "12608": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "12610": {
      "op": "SHL"
    },
    "12611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12613": {
      "op": "DUP3"
    },
    "12614": {
      "op": "ADD"
    },
    "12615": {
      "op": "MSTORE"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12618": {
      "op": "ADD"
    },
    "12619": {
      "op": "SWAP1"
    },
    "12620": {
      "jump": "o",
      "op": "JUMP"
    },
    "12621": {
      "op": "JUMPDEST"
    },
    "12622": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12629": {
      "op": "SHL"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12632": {
      "op": "MSTORE"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12635": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12637": {
      "op": "MSTORE"
    },
    "12638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12642": {
      "op": "REVERT"
    },
    "12643": {
      "op": "JUMPDEST"
    },
    "12644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12646": {
      "op": "DUP3"
    },
    "12647": {
      "op": "NOT"
    },
    "12648": {
      "op": "DUP3"
    },
    "12649": {
      "op": "GT"
    },
    "12650": {
      "op": "ISZERO"
    },
    "12651": {
      "op": "PUSH2",
      "value": "0x3176"
    },
    "12654": {
      "op": "JUMPI"
    },
    "12655": {
      "op": "PUSH2",
      "value": "0x3176"
    },
    "12658": {
      "op": "PUSH2",
      "value": "0x314D"
    },
    "12661": {
      "jump": "i",
      "op": "JUMP"
    },
    "12662": {
      "op": "JUMPDEST"
    },
    "12663": {
      "op": "POP"
    },
    "12664": {
      "op": "ADD"
    },
    "12665": {
      "op": "SWAP1"
    },
    "12666": {
      "jump": "o",
      "op": "JUMP"
    },
    "12667": {
      "op": "JUMPDEST"
    },
    "12668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12670": {
      "op": "DUP1"
    },
    "12671": {
      "op": "DUP3"
    },
    "12672": {
      "op": "MSTORE"
    },
    "12673": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "12675": {
      "op": "SWAP1"
    },
    "12676": {
      "op": "DUP3"
    },
    "12677": {
      "op": "ADD"
    },
    "12678": {
      "op": "MSTORE"
    },
    "12679": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12714": {
      "op": "DUP3"
    },
    "12715": {
      "op": "ADD"
    },
    "12716": {
      "op": "MSTORE"
    },
    "12717": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "12726": {
      "op": "SHL"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12729": {
      "op": "DUP3"
    },
    "12730": {
      "op": "ADD"
    },
    "12731": {
      "op": "MSTORE"
    },
    "12732": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12734": {
      "op": "ADD"
    },
    "12735": {
      "op": "SWAP1"
    },
    "12736": {
      "jump": "o",
      "op": "JUMP"
    },
    "12737": {
      "op": "JUMPDEST"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12742": {
      "op": "NOT"
    },
    "12743": {
      "op": "DUP3"
    },
    "12744": {
      "op": "EQ"
    },
    "12745": {
      "op": "ISZERO"
    },
    "12746": {
      "op": "PUSH2",
      "value": "0x31D5"
    },
    "12749": {
      "op": "JUMPI"
    },
    "12750": {
      "op": "PUSH2",
      "value": "0x31D5"
    },
    "12753": {
      "op": "PUSH2",
      "value": "0x314D"
    },
    "12756": {
      "jump": "i",
      "op": "JUMP"
    },
    "12757": {
      "op": "JUMPDEST"
    },
    "12758": {
      "op": "POP"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12761": {
      "op": "ADD"
    },
    "12762": {
      "op": "SWAP1"
    },
    "12763": {
      "jump": "o",
      "op": "JUMP"
    },
    "12764": {
      "op": "JUMPDEST"
    },
    "12765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12767": {
      "op": "DUP3"
    },
    "12768": {
      "op": "DUP3"
    },
    "12769": {
      "op": "LT"
    },
    "12770": {
      "op": "ISZERO"
    },
    "12771": {
      "op": "PUSH2",
      "value": "0x31EE"
    },
    "12774": {
      "op": "JUMPI"
    },
    "12775": {
      "op": "PUSH2",
      "value": "0x31EE"
    },
    "12778": {
      "op": "PUSH2",
      "value": "0x314D"
    },
    "12781": {
      "jump": "i",
      "op": "JUMP"
    },
    "12782": {
      "op": "JUMPDEST"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "op": "SUB"
    },
    "12785": {
      "op": "SWAP1"
    },
    "12786": {
      "jump": "o",
      "op": "JUMP"
    },
    "12787": {
      "op": "JUMPDEST"
    },
    "12788": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12795": {
      "op": "SHL"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12798": {
      "op": "MSTORE"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12803": {
      "op": "MSTORE"
    },
    "12804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12808": {
      "op": "REVERT"
    },
    "12809": {
      "op": "JUMPDEST"
    },
    "12810": {
      "op": "DUP1"
    },
    "12811": {
      "op": "SLOAD"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12814": {
      "op": "SWAP1"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12817": {
      "op": "DUP2"
    },
    "12818": {
      "op": "DUP2"
    },
    "12819": {
      "op": "SHR"
    },
    "12820": {
      "op": "SWAP1"
    },
    "12821": {
      "op": "DUP1"
    },
    "12822": {
      "op": "DUP4"
    },
    "12823": {
      "op": "AND"
    },
    "12824": {
      "op": "DUP1"
    },
    "12825": {
      "op": "PUSH2",
      "value": "0x3223"
    },
    "12828": {
      "op": "JUMPI"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12831": {
      "op": "DUP4"
    },
    "12832": {
      "op": "AND"
    },
    "12833": {
      "op": "SWAP3"
    },
    "12834": {
      "op": "POP"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12838": {
      "op": "DUP1"
    },
    "12839": {
      "op": "DUP5"
    },
    "12840": {
      "op": "LT"
    },
    "12841": {
      "op": "DUP3"
    },
    "12842": {
      "op": "EQ"
    },
    "12843": {
      "op": "ISZERO"
    },
    "12844": {
      "op": "PUSH2",
      "value": "0x3245"
    },
    "12847": {
      "op": "JUMPI"
    },
    "12848": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12855": {
      "op": "SHL"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12858": {
      "op": "MSTORE"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12861": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12863": {
      "op": "MSTORE"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12868": {
      "op": "REVERT"
    },
    "12869": {
      "op": "JUMPDEST"
    },
    "12870": {
      "op": "DUP2"
    },
    "12871": {
      "op": "DUP1"
    },
    "12872": {
      "op": "ISZERO"
    },
    "12873": {
      "op": "PUSH2",
      "value": "0x3259"
    },
    "12876": {
      "op": "JUMPI"
    },
    "12877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12879": {
      "op": "DUP2"
    },
    "12880": {
      "op": "EQ"
    },
    "12881": {
      "op": "PUSH2",
      "value": "0x326A"
    },
    "12884": {
      "op": "JUMPI"
    },
    "12885": {
      "op": "PUSH2",
      "value": "0x3297"
    },
    "12888": {
      "op": "JUMP"
    },
    "12889": {
      "op": "JUMPDEST"
    },
    "12890": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12892": {
      "op": "NOT"
    },
    "12893": {
      "op": "DUP7"
    },
    "12894": {
      "op": "AND"
    },
    "12895": {
      "op": "DUP10"
    },
    "12896": {
      "op": "MSTORE"
    },
    "12897": {
      "op": "DUP5"
    },
    "12898": {
      "op": "DUP10"
    },
    "12899": {
      "op": "ADD"
    },
    "12900": {
      "op": "SWAP7"
    },
    "12901": {
      "op": "POP"
    },
    "12902": {
      "op": "PUSH2",
      "value": "0x3297"
    },
    "12905": {
      "op": "JUMP"
    },
    "12906": {
      "op": "JUMPDEST"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12909": {
      "op": "DUP9"
    },
    "12910": {
      "op": "DUP2"
    },
    "12911": {
      "op": "MSTORE"
    },
    "12912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12914": {
      "op": "SWAP1"
    },
    "12915": {
      "op": "KECCAK256"
    },
    "12916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12918": {
      "op": "JUMPDEST"
    },
    "12919": {
      "op": "DUP7"
    },
    "12920": {
      "op": "DUP2"
    },
    "12921": {
      "op": "LT"
    },
    "12922": {
      "op": "ISZERO"
    },
    "12923": {
      "op": "PUSH2",
      "value": "0x328F"
    },
    "12926": {
      "op": "JUMPI"
    },
    "12927": {
      "op": "DUP2"
    },
    "12928": {
      "op": "SLOAD"
    },
    "12929": {
      "op": "DUP12"
    },
    "12930": {
      "op": "DUP3"
    },
    "12931": {
      "op": "ADD"
    },
    "12932": {
      "op": "MSTORE"
    },
    "12933": {
      "op": "SWAP1"
    },
    "12934": {
      "op": "DUP6"
    },
    "12935": {
      "op": "ADD"
    },
    "12936": {
      "op": "SWAP1"
    },
    "12937": {
      "op": "DUP4"
    },
    "12938": {
      "op": "ADD"
    },
    "12939": {
      "op": "PUSH2",
      "value": "0x3276"
    },
    "12942": {
      "op": "JUMP"
    },
    "12943": {
      "op": "JUMPDEST"
    },
    "12944": {
      "op": "POP"
    },
    "12945": {
      "op": "POP"
    },
    "12946": {
      "op": "DUP5"
    },
    "12947": {
      "op": "DUP10"
    },
    "12948": {
      "op": "ADD"
    },
    "12949": {
      "op": "SWAP7"
    },
    "12950": {
      "op": "POP"
    },
    "12951": {
      "op": "JUMPDEST"
    },
    "12952": {
      "op": "POP"
    },
    "12953": {
      "op": "POP"
    },
    "12954": {
      "op": "POP"
    },
    "12955": {
      "op": "POP"
    },
    "12956": {
      "op": "POP"
    },
    "12957": {
      "op": "POP"
    },
    "12958": {
      "op": "SWAP3"
    },
    "12959": {
      "op": "SWAP2"
    },
    "12960": {
      "op": "POP"
    },
    "12961": {
      "op": "POP"
    },
    "12962": {
      "jump": "o",
      "op": "JUMP"
    },
    "12963": {
      "op": "JUMPDEST"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12966": {
      "op": "PUSH2",
      "value": "0x32AF"
    },
    "12969": {
      "op": "DUP3"
    },
    "12970": {
      "op": "DUP7"
    },
    "12971": {
      "op": "PUSH2",
      "value": "0x3209"
    },
    "12974": {
      "jump": "i",
      "op": "JUMP"
    },
    "12975": {
      "op": "JUMPDEST"
    },
    "12976": {
      "op": "DUP5"
    },
    "12977": {
      "op": "MLOAD"
    },
    "12978": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "12981": {
      "op": "DUP2"
    },
    "12982": {
      "op": "DUP4"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12985": {
      "op": "DUP10"
    },
    "12986": {
      "op": "ADD"
    },
    "12987": {
      "op": "PUSH2",
      "value": "0x2BDA"
    },
    "12990": {
      "jump": "i",
      "op": "JUMP"
    },
    "12991": {
      "op": "JUMPDEST"
    },
    "12992": {
      "op": "PUSH2",
      "value": "0x32CB"
    },
    "12995": {
      "op": "DUP2"
    },
    "12996": {
      "op": "DUP4"
    },
    "12997": {
      "op": "ADD"
    },
    "12998": {
      "op": "DUP7"
    },
    "12999": {
      "op": "PUSH2",
      "value": "0x3209"
    },
    "13002": {
      "jump": "i",
      "op": "JUMP"
    },
    "13003": {
      "op": "JUMPDEST"
    },
    "13004": {
      "op": "SWAP8"
    },
    "13005": {
      "op": "SWAP7"
    },
    "13006": {
      "op": "POP"
    },
    "13007": {
      "op": "POP"
    },
    "13008": {
      "op": "POP"
    },
    "13009": {
      "op": "POP"
    },
    "13010": {
      "op": "POP"
    },
    "13011": {
      "op": "POP"
    },
    "13012": {
      "op": "POP"
    },
    "13013": {
      "jump": "o",
      "op": "JUMP"
    },
    "13014": {
      "op": "JUMPDEST"
    },
    "13015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13017": {
      "op": "DUP1"
    },
    "13018": {
      "op": "DUP3"
    },
    "13019": {
      "op": "MSTORE"
    },
    "13020": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13022": {
      "op": "SWAP1"
    },
    "13023": {
      "op": "DUP3"
    },
    "13024": {
      "op": "ADD"
    },
    "13025": {
      "op": "MSTORE"
    },
    "13026": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13061": {
      "op": "DUP3"
    },
    "13062": {
      "op": "ADD"
    },
    "13063": {
      "op": "MSTORE"
    },
    "13064": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13083": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13085": {
      "op": "SHL"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13088": {
      "op": "DUP3"
    },
    "13089": {
      "op": "ADD"
    },
    "13090": {
      "op": "MSTORE"
    },
    "13091": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13093": {
      "op": "ADD"
    },
    "13094": {
      "op": "SWAP1"
    },
    "13095": {
      "jump": "o",
      "op": "JUMP"
    },
    "13096": {
      "op": "JUMPDEST"
    },
    "13097": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13104": {
      "op": "SHL"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13107": {
      "op": "MSTORE"
    },
    "13108": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13110": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13112": {
      "op": "MSTORE"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13117": {
      "op": "REVERT"
    },
    "13118": {
      "op": "JUMPDEST"
    },
    "13119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13121": {
      "op": "DUP3"
    },
    "13122": {
      "op": "PUSH2",
      "value": "0x334D"
    },
    "13125": {
      "op": "JUMPI"
    },
    "13126": {
      "op": "PUSH2",
      "value": "0x334D"
    },
    "13129": {
      "op": "PUSH2",
      "value": "0x3328"
    },
    "13132": {
      "jump": "i",
      "op": "JUMP"
    },
    "13133": {
      "op": "JUMPDEST"
    },
    "13134": {
      "op": "POP"
    },
    "13135": {
      "op": "DIV"
    },
    "13136": {
      "op": "SWAP1"
    },
    "13137": {
      "jump": "o",
      "op": "JUMP"
    },
    "13138": {
      "op": "JUMPDEST"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13141": {
      "op": "DUP3"
    },
    "13142": {
      "op": "PUSH2",
      "value": "0x3361"
    },
    "13145": {
      "op": "JUMPI"
    },
    "13146": {
      "op": "PUSH2",
      "value": "0x3361"
    },
    "13149": {
      "op": "PUSH2",
      "value": "0x3328"
    },
    "13152": {
      "jump": "i",
      "op": "JUMP"
    },
    "13153": {
      "op": "JUMPDEST"
    },
    "13154": {
      "op": "POP"
    },
    "13155": {
      "op": "MOD"
    },
    "13156": {
      "op": "SWAP1"
    },
    "13157": {
      "jump": "o",
      "op": "JUMP"
    },
    "13158": {
      "op": "JUMPDEST"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13165": {
      "op": "SHL"
    },
    "13166": {
      "op": "SUB"
    },
    "13167": {
      "op": "DUP6"
    },
    "13168": {
      "op": "DUP2"
    },
    "13169": {
      "op": "AND"
    },
    "13170": {
      "op": "DUP3"
    },
    "13171": {
      "op": "MSTORE"
    },
    "13172": {
      "op": "DUP5"
    },
    "13173": {
      "op": "AND"
    },
    "13174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13176": {
      "op": "DUP3"
    },
    "13177": {
      "op": "ADD"
    },
    "13178": {
      "op": "MSTORE"
    },
    "13179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13181": {
      "op": "DUP2"
    },
    "13182": {
      "op": "ADD"
    },
    "13183": {
      "op": "DUP4"
    },
    "13184": {
      "op": "SWAP1"
    },
    "13185": {
      "op": "MSTORE"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13190": {
      "op": "DUP3"
    },
    "13191": {
      "op": "ADD"
    },
    "13192": {
      "op": "DUP2"
    },
    "13193": {
      "op": "SWAP1"
    },
    "13194": {
      "op": "MSTORE"
    },
    "13195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13197": {
      "op": "SWAP1"
    },
    "13198": {
      "op": "PUSH2",
      "value": "0x3399"
    },
    "13201": {
      "op": "SWAP1"
    },
    "13202": {
      "op": "DUP4"
    },
    "13203": {
      "op": "ADD"
    },
    "13204": {
      "op": "DUP5"
    },
    "13205": {
      "op": "PUSH2",
      "value": "0x2C06"
    },
    "13208": {
      "jump": "i",
      "op": "JUMP"
    },
    "13209": {
      "op": "JUMPDEST"
    },
    "13210": {
      "op": "SWAP7"
    },
    "13211": {
      "op": "SWAP6"
    },
    "13212": {
      "op": "POP"
    },
    "13213": {
      "op": "POP"
    },
    "13214": {
      "op": "POP"
    },
    "13215": {
      "op": "POP"
    },
    "13216": {
      "op": "POP"
    },
    "13217": {
      "op": "POP"
    },
    "13218": {
      "jump": "o",
      "op": "JUMP"
    },
    "13219": {
      "op": "JUMPDEST"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13224": {
      "op": "DUP3"
    },
    "13225": {
      "op": "DUP5"
    },
    "13226": {
      "op": "SUB"
    },
    "13227": {
      "op": "SLT"
    },
    "13228": {
      "op": "ISZERO"
    },
    "13229": {
      "op": "PUSH2",
      "value": "0x33B5"
    },
    "13232": {
      "op": "JUMPI"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13235": {
      "op": "DUP1"
    },
    "13236": {
      "op": "REVERT"
    },
    "13237": {
      "op": "JUMPDEST"
    },
    "13238": {
      "op": "DUP2"
    },
    "13239": {
      "op": "MLOAD"
    },
    "13240": {
      "op": "PUSH2",
      "value": "0x1A0B"
    },
    "13243": {
      "op": "DUP2"
    },
    "13244": {
      "op": "PUSH2",
      "value": "0x2BA7"
    },
    "13247": {
      "jump": "i",
      "op": "JUMP"
    },
    "13248": {
      "op": "JUMPDEST"
    },
    "13249": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13256": {
      "op": "SHL"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13259": {
      "op": "MSTORE"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13264": {
      "op": "MSTORE"
    },
    "13265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13269": {
      "op": "REVERT"
    }
  },
  "sha1": "434430bf1c8dfe644d7d4f2694c2f496ec8bd56a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title Cryptids NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, send, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract Cryptids is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";    \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)                   \n    mapping(address => uint256) public claimed;          \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply\n\n    )   ERC721(_name, _symbol) {\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint256 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        require(totalSupply()  + 1 <= totalSaleSupply - teamMintSupply, \"Transaction exceeds whitelist supply.\");  \n        require(claimed[msg.sender] < 1, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] += 1;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint256 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");   \n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");  \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n    ) \n        external\n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(totalSupply()  + 1 <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(claimed[msg.sender] < 2, \"Max 2 Cryptids per wallet.\"); \n        claimed[msg.sender] += 1;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function setClaim(address wlAddress, uint256 amount) external onlyOwner{\n        claimed[wlAddress] = amount;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function withdraw() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No balance to withdraw.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: balance}(\"\");\n        require(success, \"Failed to withdraw balance.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n\n    function verify(address account, bytes32[] calldata merkleProof) external view returns (bool) {\n        if (merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(account)))) {\n            return true;\n        }\n        return false;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n} ",
  "sourceMap": "1131:26:16:-:0;706:7797;1131:26;;;-1:-1:-1;706:7797:16;1131:26;;;;;;;;:::i;:::-;-1:-1:-1;1163:37:16;;;;;;;;;;;;;-1:-1:-1;;;1163:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1210:34:16;;;-1:-1:-1;;;;;;1297:76:16;;;;;1867:361;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:3;;2054:5:16;;2061:7;;1456:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2080:14:16::1;:32:::0;;;2122:15:::1;:34:::0;;;2166:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2194:27;:15;:25;;;;;:27;;:::i;:::-;1867:361:::0;;;;;706:7797;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;706:7797:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;706:7797:16;;;-1:-1:-1;706:7797:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:890::-;1172:6;1180;1188;1196;1204;1257:3;1245:9;1236:7;1232:23;1228:33;1225:53;;;1274:1;1271;1264:12;1225:53;1301:16;;-1:-1:-1;;;;;1366:14:17;;;1363:34;;;1393:1;1390;1383:12;1363:34;1416:61;1469:7;1460:6;1449:9;1445:22;1416:61;:::i;:::-;1406:71;;1523:2;1512:9;1508:18;1502:25;1486:41;;1552:2;1542:8;1539:16;1536:36;;;1568:1;1565;1558:12;1536:36;1591:63;1646:7;1635:8;1624:9;1620:24;1591:63;:::i;:::-;1581:73;;1700:2;1689:9;1685:18;1679:25;1663:41;;1729:2;1719:8;1716:16;1713:36;;;1745:1;1742;1735:12;1713:36;;1768:63;1823:7;1812:8;1801:9;1797:24;1768:63;:::i;:::-;1871:2;1856:18;;1850:25;1915:3;1900:19;;;1894:26;1036:890;;;;-1:-1:-1;1758:73:17;1850:25;1894:26;1036:890;-1:-1:-1;;;;1036:890:17:o;1931:380::-;2010:1;2006:12;;;;2053;;;2074:61;;2128:4;2120:6;2116:17;2106:27;;2074:61;2181:2;2173:6;2170:14;2150:18;2147:38;2144:161;;;2227:10;2222:3;2218:20;2215:1;2208:31;2262:4;2259:1;2252:15;2290:4;2287:1;2280:15;2144:161;;1931:380;;;:::o;:::-;706:7797:16;;;;;;",
  "sourcePath": "contracts/Cryptids.sol",
  "type": "contract"
}