{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "undoClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2939
      ],
      "Context": [
        2483
      ],
      "Counters": [
        2368
      ],
      "CryptidToken": [
        769
      ],
      "ERC165": [
        3166
      ],
      "ERC721": [
        1956
      ],
      "ERC721Enumerable": [
        2294
      ],
      "IERC165": [
        3209
      ],
      "IERC721": [
        2599
      ],
      "IERC721Enumerable": [
        3197
      ],
      "IERC721Metadata": [
        2644
      ],
      "IERC721Receiver": [
        2617
      ],
      "MerkleProof": [
        2461
      ],
      "Ownable": [
        958
      ],
      "Pausable": [
        1050
      ],
      "ReentrancyGuard": [
        1090
      ],
      "Strings": [
        3142
      ]
    },
    "id": 770,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 1957,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 2295,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 959,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 1091,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 2369,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 1051,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 2462,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1956,
              "src": "735:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "735:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2294,
              "src": "743:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "743:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1050,
              "src": "761:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 958,
              "src": "771:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "771:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1090,
              "src": "780:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "780:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:220:16",
          "text": "@title CryptidToken NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, sent, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 769,
        "linearizedBaseContracts": [
          769,
          1090,
          958,
          1050,
          2294,
          3197,
          1956,
          2644,
          2599,
          3166,
          3209,
          2483
        ],
        "name": "CryptidToken",
        "nameLocation": "719:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3142,
              "src": "808:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "802:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2368,
              "src": "839:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "833:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2300,
                "src": "852:16:16"
              },
              "referencedDeclaration": 2300,
              "src": "852:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2300_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2461,
              "src": "880:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "874:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "896:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "933:4:16",
                "nodeType": "EnumValue",
                "src": "933:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "947:7:16",
                "nodeType": "EnumValue",
                "src": "947:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "964:9:16",
                "nodeType": "EnumValue",
                "src": "964:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "983:8:16",
                "nodeType": "EnumValue",
                "src": "983:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "1001:10:16",
                "nodeType": "EnumValue",
                "src": "1001:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "917:5:16",
            "nodeType": "EnumDefinition",
            "src": "912:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1048:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1023:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2300_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2300,
                "src": "1023:16:16"
              },
              "referencedDeclaration": 2300,
              "src": "1023:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2300_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1089:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1074:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1119:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1105:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1105:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1153:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1139:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1139:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1163:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1185:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1171:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1201:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1227:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1214:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 50,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1214:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1262:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1250:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1250:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1279:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1302:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1290:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1290:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1325:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1352:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1337:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1371:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 62,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1617:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1602:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1602:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 66,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1693:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1661:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1661:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1680:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1767:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1752:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 70,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1828:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1813:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1813:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 72,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1892:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1877:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1877:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 75,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1937:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1922:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1922:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1949:9:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 78,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1980:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "1967:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1967:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1967:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2258:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2268:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2286:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2268:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:34:16"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2312:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2329:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2312:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:32:16"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "2354:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2372:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2354:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:34:16"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2398:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2413:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2398:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:28:16"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2436:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2446:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2436:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 119,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2464:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2300_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2326,
                      "src": "2464:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2300_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:27:16"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 95,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "2242:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 96,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "2249:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 97,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 94,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1956,
                  "src": "2235:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2235:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2027:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2013:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2056:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2042:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2087:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2073:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2113:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2105:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2147:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2139:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2180:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2172:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2212:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2206:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:229:16"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2258:0:16"
            },
            "scope": 769,
            "src": "1992:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2647:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 135,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2665:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 136,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2673:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2673:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "2665:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2685:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2657:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2657:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 143,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "2726:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2726:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 145,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2743:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2726:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 147,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "2757:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2726:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2718:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:101:16"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "2871:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 163,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "2895:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 164,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "2899:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2312,
                                "src": "2899:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2300_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2899:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 162,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1585,
                              1614
                            ],
                            "referencedDeclaration": 1585,
                            "src": "2885:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2885:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2885:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 169,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2939:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2326,
                            "src": "2939:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2300_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2939:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 156,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "2849:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 157,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2854:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2849:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      153
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2842:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "2834:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2834:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 155,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2846:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2834:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2866:3:16",
                      "subExpression": {
                        "id": 159,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2866:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 161,
                    "nodeType": "ExpressionStatement",
                    "src": "2866:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2829:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "2632:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2632:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2538:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2568:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2562:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2597:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2589:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2552:53:16"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:0:16"
            },
            "scope": 769,
            "src": "2529:454:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3174:482:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 188,
                          "name": "salePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3192:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 189,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3205:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3205:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3192:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3216:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3184:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3184:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 196,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3262:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 197,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3271:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "3271:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3262:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3288:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3254:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 206,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3357:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 210,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3396:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3396:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 208,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3379:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3379:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3379:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 207,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3369:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3369:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 204,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "3338:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2392,
                          "src": "3338:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3338:71:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3411:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3330:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3330:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3330:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 219,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3457:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "expression": {
                              "id": 220,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3465:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3465:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3457:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3480:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3457:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3487:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3449:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:72:16"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 228,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3532:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "expression": {
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3540:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3540:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3532:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3554:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3532:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3532:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3574:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3574:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 238,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3586:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2300_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2312,
                          "src": "3586:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2300_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3586:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "3568:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:44:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 243,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3622:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2300_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2326,
                      "src": "3622:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2300_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3622:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1089,
                  "src": "3133:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3133:12:16"
              },
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1006,
                  "src": "3155:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3155:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3030:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3072:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3053:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 178,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3053:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 179,
                    "nodeType": "ArrayTypeName",
                    "src": "3053:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3043:46:16"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3174:0:16"
            },
            "scope": 769,
            "src": "3021:635:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3781:394:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 257,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3799:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 258,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3808:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3808:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3799:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3824:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3791:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3791:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 265,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3869:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 266,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3882:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3869:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 268,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3899:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3869:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3915:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3861:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3861:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3861:100:16"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3976:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3993:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3976:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:27:16"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "4055:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 288,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4079:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4079:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 290,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4091:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2312,
                                "src": "4091:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2300_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4091:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 287,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1585,
                              1614
                            ],
                            "referencedDeclaration": 1585,
                            "src": "4069:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4069:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "4069:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 295,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4131:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2326,
                            "src": "4131:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2300_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4131:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "4131:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4033:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 282,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "4038:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4033:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "initializationExpression": {
                    "assignments": [
                      278
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4026:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "4018:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4018:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 280,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4030:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4018:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4050:3:16",
                      "subExpression": {
                        "id": 284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4050:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 286,
                    "nodeType": "ExpressionStatement",
                    "src": "4050:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4013:156:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "3766:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3766:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3698:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3722:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3716:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3706:32:16"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3781:0:16"
            },
            "scope": 769,
            "src": "3689:486:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4349:529:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 313,
                            "name": "salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "4367:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 314,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4379:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4367:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 316,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4393:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4393:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4367:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4404:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4359:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4359:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:73:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 323,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4450:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 324,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4459:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4459:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4450:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4477:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4442:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4442:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 331,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "4524:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4524:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 333,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4541:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4524:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 335,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4555:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4524:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4572:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4516:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 341,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4631:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 342,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4645:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4631:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4659:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4623:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4623:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4623:81:16"
                },
                {
                  "body": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "4758:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4782:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4782:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 360,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4794:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 361,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2312,
                                "src": "4794:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2300_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4794:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 357,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1585,
                              1614
                            ],
                            "referencedDeclaration": 1585,
                            "src": "4772:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4772:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "4772:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 365,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4834:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2300_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2326,
                            "src": "4834:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2300_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2300_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4834:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "4834:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 351,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "4736:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 352,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4741:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4736:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "initializationExpression": {
                    "assignments": [
                      348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4729:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "4721:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4721:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 350,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4733:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4721:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4753:3:16",
                      "subExpression": {
                        "id": 354,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4753:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "4753:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4716:156:16"
                }
              ]
            },
            "functionSelector": "2db11544",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 307,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1089,
                  "src": "4307:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4307:12:16"
              },
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1006,
                  "src": "4329:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4329:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4219:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4247:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "4239:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:34:16"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4349:0:16"
            },
            "scope": 769,
            "src": "4210:668:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "4942:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 378,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "4952:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4952:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4952:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 375,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "4932:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4932:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "4915:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:16"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4942:0:16"
            },
            "scope": 769,
            "src": "4906:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "5011:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 387,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "5021:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5021:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "5021:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5001:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5001:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "4982:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4989:2:16"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:0:16"
            },
            "scope": 769,
            "src": "4973:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5144:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5154:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "id": 399,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "5162:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5154:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5175:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5154:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:25:16"
                }
              ]
            },
            "functionSelector": "bb31b77b",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 395,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5135:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5135:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "5098:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5115:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5107:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5106:19:16"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5144:0:16"
            },
            "scope": 769,
            "src": "5089:97:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "5286:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 412,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5296:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "id": 413,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "5304:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5296:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5317:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5296:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5296:26:16"
                }
              ]
            },
            "functionSelector": "57ed9e4e",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5277:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5277:9:16"
              }
            ],
            "name": "undoClaim",
            "nameLocation": "5239:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5257:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "5249:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5249:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5248:19:16"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5286:0:16"
            },
            "scope": 769,
            "src": "5230:99:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "5398:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 426,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "5408:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 427,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "5421:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5408:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5408:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 423,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5388:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5388:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5344:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5366:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "5358:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5358:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5357:21:16"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5398:0:16"
            },
            "scope": 769,
            "src": "5335:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "5511:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5529:15:16",
                        "subExpression": {
                          "id": 439,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5530:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5546:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5521:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5521:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "5521:46:16"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5577:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5587:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5577:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "5577:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5501:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5501:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5454:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5479:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "5465:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:27:16"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5511:0:16"
            },
            "scope": 769,
            "src": "5445:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5660:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 457,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5684:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5678:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 455,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5678:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5678:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5678:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5702:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5678:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5705:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5670:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5750:15:16",
                        "subExpression": {
                          "id": 466,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5751:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5767:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5742:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5742:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "5742:54:16"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5806:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5823:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5806:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "5806:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 451,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5650:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5650:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5625:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5638:2:16"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5660:0:16"
            },
            "scope": 769,
            "src": "5616:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "5918:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 483,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "5928:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 484,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5944:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5928:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 480,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "5908:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5908:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "5849:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "5880:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "5866:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5866:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5865:33:16"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5918:0:16"
            },
            "scope": 769,
            "src": "5840:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "6051:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 498,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "6075:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6069:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 496,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6069:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6069:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6069:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6101:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6069:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6104:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6061:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6061:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6164:21:16",
                        "subExpression": {
                          "id": 507,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6165:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6187:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6156:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6156:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6156:60:16"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 512,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6226:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 513,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "6243:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6226:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 493,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 492,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "6041:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6041:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "5983:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6015:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "6001:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6001:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6000:31:16"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6051:0:16"
            },
            "scope": 769,
            "src": "5974:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "6322:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 525,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6346:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6340:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 523,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6340:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6340:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6340:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6371:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6340:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6374:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6332:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6332:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "6332:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6422:21:16",
                        "subExpression": {
                          "id": 534,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6423:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6445:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6414:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "6414:68:16"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 539,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "6492:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6515:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6492:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "6492:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 519,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "6312:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6312:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6280:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6300:2:16"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6322:0:16"
            },
            "scope": 769,
            "src": "6271:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "6607:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6617:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 552,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6636:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6617:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 548,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "6597:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6597:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6541:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6569:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "6561:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6561:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6560:27:16"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6607:0:16"
            },
            "scope": 769,
            "src": "6532:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "6713:217:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 564,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6739:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$769",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$769",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6731:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 562,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6731:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6731:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6731:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6755:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6731:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6758:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6723:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:60:16"
                },
                {
                  "assignments": [
                    573,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6799:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "6794:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6794:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 587,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6873:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 576,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "6820:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6812:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 574,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6812:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6812:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6812:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 581,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6858:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$769",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$769",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6850:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6850:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6850:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6850:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6812:60:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6812:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6793:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 589,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "6894:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776c206661696c65642e",
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6903:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        },
                        "value": "Withdrawl failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6886:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6886:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "6886:37:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 558,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "6703:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6703:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6675:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6683:2:16"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6713:0:16"
            },
            "scope": 769,
            "src": "6666:264:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "6987:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 603,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7005:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7029:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7005:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7035:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6997:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6997:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 610,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7112:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7126:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7112:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7129:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7104:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7104:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7104:78:16"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 616,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "7192:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7200:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7192:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7192:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 600,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 599,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 900,
                  "src": "6977:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6977:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "6945:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "6960:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "6954:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 595,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "6954:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "6954:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6953:14:16"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6987:0:16"
            },
            "scope": 769,
            "src": "6936:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "7308:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 627,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2045,
                          "src": "7333:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7333:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "7325:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7325:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 630,
                  "nodeType": "Return",
                  "src": "7318:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7259:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7274:2:16"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "7300:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7300:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7299:9:16"
            },
            "scope": 769,
            "src": "7250:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "7413:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 637,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2045,
                          "src": "7430:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7430:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 639,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7429:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 636,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "7423:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7369:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:2:16"
            },
            "returnParameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "7405:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7404:9:16"
            },
            "scope": 769,
            "src": "7360:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1298
            ],
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "7545:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 652,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "7571:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 651,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1529,
                          "src": "7563:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7563:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7581:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7555:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7555:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "7555:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 661,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "7673:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 662,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 644,
                                "src": "7682:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3024,
                              "src": "7682:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7682:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 665,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7702:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 659,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7656:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7656:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7656:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7649:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 657,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7649:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7649:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 649,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "7642:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7466:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7512:8:16"
            },
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7483:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "7475:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7475:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7474:17:16"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "7530:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7530:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7529:15:16"
            },
            "scope": 769,
            "src": "7457:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "7787:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 675,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7804:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 676,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "7822:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7822:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7804:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "7797:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "7739:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7752:2:16"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7778:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7778:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7777:9:16"
            },
            "scope": 769,
            "src": "7730:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 728,
              "nodeType": "Block",
              "src": "7931:274:16",
              "statements": [
                {
                  "assignments": [
                    690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 690,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "7949:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 728,
                      "src": "7941:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7941:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 692,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "7977:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 691,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "7967:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7967:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7941:42:16"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8010:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 728,
                      "src": "7993:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 697,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7993:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 698,
                        "nodeType": "ArrayTypeName",
                        "src": "7993:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 703,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "8036:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8022:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8026:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ArrayTypeName",
                        "src": "8026:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7993:59:16"
                },
                {
                  "body": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "8104:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 715,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "8118:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 717,
                            "indexExpression": {
                              "id": 716,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "8128:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8118:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 719,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "8153:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 720,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "8160:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 718,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2034,
                              "src": "8133:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8133:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8118:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "8118:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 709,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "8078:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 710,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "8082:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8078:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "initializationExpression": {
                    "assignments": [
                      707
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8075:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "8067:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8067:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 708,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8067:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8099:3:16",
                      "subExpression": {
                        "id": 712,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "8099:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 714,
                    "nodeType": "ExpressionStatement",
                    "src": "8099:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8062:111:16"
                },
                {
                  "expression": {
                    "id": 726,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 699,
                    "src": "8189:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 688,
                  "id": 727,
                  "nodeType": "Return",
                  "src": "8182:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "7861:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7883:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "7875:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7875:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7874:15:16"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "7913:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 685,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7913:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 686,
                    "nodeType": "ArrayTypeName",
                    "src": "7913:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7912:18:16"
            },
            "scope": 769,
            "src": "7852:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1944,
              2132
            ],
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "8346:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 746,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "8383:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 747,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "8389:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 748,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "8393:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 743,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8356:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$769_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2132,
                      "src": "8356:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8356:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "8356:45:16"
                }
              ]
            },
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 737,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1006,
                  "src": "8297:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8297:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8224:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 741,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 739,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1956,
                  "src": "8320:6:16"
                },
                {
                  "id": 740,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2294,
                  "src": "8328:16:16"
                }
              ],
              "src": "8311:34:16"
            },
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8253:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "8245:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8245:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8267:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "8259:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8259:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8279:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "8271:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8271:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8244:43:16"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8346:0:16"
            },
            "scope": 769,
            "src": "8215:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1184,
              2006
            ],
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "8591:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 764,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "8632:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 762,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8608:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$769_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2006,
                      "src": "8608:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8608:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 761,
                  "id": 766,
                  "nodeType": "Return",
                  "src": "8601:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8491:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 756,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1956,
                  "src": "8550:6:16"
                },
                {
                  "id": 757,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2294,
                  "src": "8558:16:16"
                }
              ],
              "src": "8541:34:16"
            },
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8516:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "8509:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8509:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8508:20:16"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "8585:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8585:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8584:6:16"
            },
            "scope": 769,
            "src": "8482:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 770,
        "src": "710:7944:16",
        "usedErrors": []
      }
    ],
    "src": "32:8622:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001b8565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001b8565b5060118054610100600160b81b0319167612b58f5331a6dc897932aa7fb5101667acdf03e200000017905567016345785d8a00006017553480156200008e57600080fd5b5060405162003ac938038062003ac9833981016040819052620000b1916200032b565b865187908790620000ca906000906020850190620001b8565b508051620000e0906001906020840190620001b8565b5050600a805460ff1916905550620000f83362000155565b6001600b556012849055601483905560168290556011805460ff191660ff831617905584516200013090600f906020880190620001b8565b5062000148600c620001af60201b620021901760201c565b5050505050505062000432565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001c690620003f5565b90600052602060002090601f016020900481019282620001ea576000855562000235565b82601f106200020557805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023557825182559160200191906001019062000218565b506200024392915062000247565b5090565b5b8082111562000243576000815560010162000248565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028657600080fd5b81516001600160401b0380821115620002a357620002a36200025e565b604051601f8301601f19908116603f01168101908282118183101715620002ce57620002ce6200025e565b81604052838152602092508683858801011115620002eb57600080fd5b600091505b838210156200030f5785820183015181830184015290820190620002f0565b83821115620003215760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200034757600080fd5b87516001600160401b03808211156200035f57600080fd5b6200036d8b838c0162000274565b985060208a01519150808211156200038457600080fd5b620003928b838c0162000274565b975060408a0151915080821115620003a957600080fd5b50620003b88a828b0162000274565b955050606088015193506080880151925060a0880151915060c088015160ff81168114620003e557600080fd5b8091505092959891949750929550565b600181811c908216806200040a57607f821691505b602082108114156200042c57634e487b7160e01b600052602260045260246000fd5b50919050565b61368780620004426000396000f3fe60806040526004361061036b5760003560e01c80637cb64759116101c6578063c6ab67a3116100f7578063de7fcb1d11610095578063f2fde38b1161006f578063f2fde38b1461098f578063f4efa3e6146109af578063f51f96dd146109cf578063ffa9cd3b146109e557600080fd5b8063de7fcb1d14610905578063e7bc820814610931578063e985e9c51461094657600080fd5b8063ce3cd997116100d1578063ce3cd9971461089b578063d6d67a09146108bb578063da3ef23f146108d0578063de5f9866146108f057600080fd5b8063c6ab67a314610836578063c87b56dd1461084b578063c884ef831461086b57600080fd5b8063b3caad0111610164578063c040e6b81161013e578063c040e6b8146107c5578063c29de630146107ec578063c32145811461080b578063c66828621461082157600080fd5b8063b3caad0114610765578063b88d4fde14610785578063bb31b77b146107a557600080fd5b80638da5cb5b116101a05780638da5cb5b146106ed57806395d89b41146107105780639a2a9c3d14610725578063a22cb4651461074557600080fd5b80637cb64759146106a357806381c162f2146106c35780638456cb59146106d857600080fd5b80633f4ba83a116102a05780636352211e1161023e57806370a082311161021857806370a0823114610638578063715018a614610658578063782319781461066d5780637b6717801461068357600080fd5b80636352211e146105ee5780636c0360eb1461060e5780636cbb89851461062357600080fd5b80634f6ccce71161027a5780634f6ccce71461057657806355f804b31461059657806357ed9e4e146105b65780635c975abb146105d657600080fd5b80633f4ba83a1461051457806342842e0e14610529578063438b63001461054957600080fd5b806323b872dd1161030d5780632f745c59116102e75780632f745c59146104c357806333e61413146104e3578063372f657c146104f95780633ccfd60b1461050c57600080fd5b806323b872dd1461047a5780632db115441461049a5780632eb4a7ab146104ad57600080fd5b8063088139a611610349578063088139a6146103ff578063095ea7b314610423578063109695231461044557806318160ddd1461046557600080fd5b806301ffc9a71461037057806306fdde03146103a5578063081812fc146103c7575b600080fd5b34801561037c57600080fd5b5061039061038b366004612e9f565b610a0c565b60405190151581526020015b60405180910390f35b3480156103b157600080fd5b506103ba610a1d565b60405161039c9190612f1b565b3480156103d357600080fd5b506103e76103e2366004612f2e565b610aaf565b6040516001600160a01b03909116815260200161039c565b34801561040b57600080fd5b5061041560155481565b60405190815260200161039c565b34801561042f57600080fd5b5061044361043e366004612f63565b610b49565b005b34801561045157600080fd5b50610443610460366004613019565b610c5f565b34801561047157600080fd5b50600854610415565b34801561048657600080fd5b50610443610495366004613062565b610d60565b6104436104a8366004612f2e565b610d91565b3480156104b957600080fd5b50610415600d5481565b3480156104cf57600080fd5b506104156104de366004612f63565b610feb565b3480156104ef57600080fd5b5061041560125481565b61044361050736600461309e565b611081565b61044361130e565b34801561052057600080fd5b50610443611428565b34801561053557600080fd5b50610443610544366004613062565b611462565b34801561055557600080fd5b50610569610564366004613113565b61147d565b60405161039c919061312e565b34801561058257600080fd5b50610415610591366004612f2e565b61151f565b3480156105a257600080fd5b506104436105b1366004613019565b6115b2565b3480156105c257600080fd5b506104436105d1366004613113565b611642565b3480156105e257600080fd5b50600a5460ff16610390565b3480156105fa57600080fd5b506103e7610609366004612f2e565b611693565b34801561061a57600080fd5b506103ba61170a565b34801561062f57600080fd5b506103e7611798565b34801561064457600080fd5b50610415610653366004613113565b6117ab565b34801561066457600080fd5b50610443611832565b34801561067957600080fd5b5061041560165481565b34801561068f57600080fd5b5061044361069e366004613183565b61186c565b3480156106af57600080fd5b506104436106be366004612f2e565b6119cc565b3480156106cf57600080fd5b50610443611a01565b3480156106e457600080fd5b50610443611b06565b3480156106f957600080fd5b50600a5461010090046001600160a01b03166103e7565b34801561071c57600080fd5b506103ba611b3e565b34801561073157600080fd5b506011546103909062010000900460ff1681565b34801561075157600080fd5b5061044361076036600461319e565b611b4d565b34801561077157600080fd5b506104436107803660046131da565b611b58565b34801561079157600080fd5b506104436107a036600461320d565b611c9a565b3480156107b157600080fd5b506104436107c0366004613113565b611cd2565b3480156107d157600080fd5b506018546107df9060ff1681565b60405161039c919061329f565b3480156107f857600080fd5b5060115461039090610100900460ff1681565b34801561081757600080fd5b5061041560145481565b34801561082d57600080fd5b506103ba611d26565b34801561084257600080fd5b506103ba611d33565b34801561085757600080fd5b506103ba610866366004612f2e565b611d40565b34801561087757600080fd5b50610390610886366004613113565b60136020526000908152604090205460ff1681565b3480156108a757600080fd5b506104436108b63660046132c7565b611df5565b3480156108c757600080fd5b50610415611f39565b3480156108dc57600080fd5b506104436108eb366004613019565b611f44565b3480156108fc57600080fd5b50610415611f87565b34801561091157600080fd5b5060115461091f9060ff1681565b60405160ff909116815260200161039c565b34801561093d57600080fd5b50610443611f9f565b34801561095257600080fd5b506103906109613660046132e8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561099b57600080fd5b506104436109aa366004613113565b612096565b3480156109bb57600080fd5b506104436109ca366004613113565b612134565b3480156109db57600080fd5b5061041560175481565b3480156109f157600080fd5b506011546103e790630100000090046001600160a01b031681565b6000610a1782612199565b92915050565b606060008054610a2c90613304565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890613304565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b2d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b5482611693565b9050806001600160a01b0316836001600160a01b03161415610bc25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b24565b336001600160a01b0382161480610bde5750610bde8133610961565b610c505760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b24565b610c5a83836121be565b505050565b600a546001600160a01b03610100909104163314610c8f5760405162461bcd60e51b8152600401610b249061333f565b6000815111610cf05760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b24565b60115462010000900460ff1615610d495760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b24565b8051610d5c90600e906020840190612df0565b5050565b610d6a338261222c565b610d865760405162461bcd60e51b8152600401610b2490613374565b610c5a838383612323565b6002600b541415610de45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b24565b6002600b55600a5460ff1615610e0c5760405162461bcd60e51b8152600401610b24906133c5565b3481601754610e1b9190613405565b14610e645760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b24565b600460185460ff166004811115610e7d57610e7d613289565b14610eca5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b24565b60165481610ed760085490565b610ee19190613424565b1115610f3e5760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b24565b60115460ff16811115610fa65760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b24565b60015b818111610fe257610fc233610fbd600c5490565b6124ca565b610fd0600c80546001019055565b80610fda8161343c565b915050610fa9565b50506001600b55565b6000610ff6836117ab565b82106110585760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b24565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b5414156110d45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b24565b6002600b55600a5460ff16156110fc5760405162461bcd60e51b8152600401610b24906133c5565b34601754146111495760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b24565b600260185460ff16600481111561116257611162613289565b146111af5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b24565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112289190603401604051602081830303815290604052805190602001208484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506124e49050565b6112745760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b24565b3360009081526013602052604090205460ff16156112d45760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b24565b336000818152601360205260409020805460ff19166001179055611300906112fb600c5490565b6124fa565b610fe2600c80546001019055565b600a546001600160a01b0361010090910416331461133e5760405162461bcd60e51b8152600401610b249061333f565b600047116113875760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b24565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d80600081146113db576040519150601f19603f3d011682016040523d82523d6000602084013e6113e0565b606091505b50509050806114255760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b24565b50565b600a546001600160a01b036101009091041633146114585760405162461bcd60e51b8152600401610b249061333f565b611460612648565b565b610c5a83838360405180602001604052806000815250611c9a565b6060600061148a836117ab565b905060008167ffffffffffffffff8111156114a7576114a7612f8d565b6040519080825280602002602001820160405280156114d0578160200160208202803683370190505b50905060005b82811015611517576114e88582610feb565b8282815181106114fa576114fa613457565b60209081029190910101528061150f8161343c565b9150506114d6565b509392505050565b600061152a60085490565b821061158d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b24565b600882815481106115a0576115a0613457565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146115e25760405162461bcd60e51b8152600401610b249061333f565b601154610100900460ff161561162f5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b24565b8051610d5c90600f906020840190612df0565b600a546001600160a01b036101009091041633146116725760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03166000908152601360205260409020805460ff19169055565b6000818152600260205260408120546001600160a01b031680610a175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b24565b600f805461171790613304565b80601f016020809104026020016040519081016040528092919081815260200182805461174390613304565b80156117905780601f1061176557610100808354040283529160200191611790565b820191906000526020600020905b81548152906001019060200180831161177357829003601f168201915b505050505081565b60006117a661060960085490565b905090565b60006001600160a01b0382166118165760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b24565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118625760405162461bcd60e51b8152600401610b249061333f565b61146060006126db565b600a546001600160a01b0361010090910416331461189c5760405162461bcd60e51b8152600401610b249061333f565b600360185460ff1660048111156118b5576118b5613289565b146119025760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b24565b6014546015546119159060ff8416613424565b11156119775760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b24565b8060ff166015600082825461198c9190613424565b90915550600190505b8160ff168111610d5c576119ac33610fbd600c5490565b6119ba600c80546001019055565b806119c48161343c565b915050611995565b600a546001600160a01b036101009091041633146119fc5760405162461bcd60e51b8152600401610b249061333f565b600d55565b600a546001600160a01b03610100909104163314611a315760405162461bcd60e51b8152600401610b249061333f565b6000600e8054611a4090613304565b905011611a8f5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b24565b60115462010000900460ff1615611af35760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b24565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611b365760405162461bcd60e51b8152600401610b249061333f565b611460612735565b606060018054610a2c90613304565b610d5c33838361278d565b600a546001600160a01b03610100909104163314611b885760405162461bcd60e51b8152600401610b249061333f565b600060185460ff166004811115611ba157611ba1613289565b11611be55760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b24565b6016548260ff16611bf560085490565b611bff9190613424565b1115611c605760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b24565b60015b8260ff168111610c5a57611c7a82610fbd600c5490565b611c88600c80546001019055565b80611c928161343c565b915050611c63565b611ca4338361222c565b611cc05760405162461bcd60e51b8152600401610b2490613374565b611ccc8484848461285c565b50505050565b600a546001600160a01b03610100909104163314611d025760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b6010805461171790613304565b600e805461171790613304565b6000818152600260205260409020546060906001600160a01b0316611dc05760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b24565b600f611dcb8361288f565b6010604051602001611ddf93929190613507565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611e255760405162461bcd60e51b8152600401610b249061333f565b60115462010000900460ff161515600114611ea85760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b24565b600d54611f125760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b24565b6018805482919060ff19166001836004811115611f3157611f31613289565b021790555050565b60006117a660085490565b600a546001600160a01b03610100909104163314611f745760405162461bcd60e51b8152600401610b249061333f565b8051610d5c906010906020840190612df0565b6000611f9260085490565b6016546117a6919061353a565b600a546001600160a01b03610100909104163314611fcf5760405162461bcd60e51b8152600401610b249061333f565b6000600f8054611fde90613304565b90501161202d5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b24565b601154610100900460ff16156120855760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b24565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146120c65760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03811661212b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b24565b611425816126db565b600a546001600160a01b036101009091041633146121645760405162461bcd60e51b8152600401610b249061333f565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a175750610a178261298d565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906121f382611693565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166122a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b24565b60006122b083611693565b9050806001600160a01b0316846001600160a01b031614806122eb5750836001600160a01b03166122e084610aaf565b6001600160a01b0316145b8061231b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661233682611693565b6001600160a01b03161461239a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b24565b6001600160a01b0382166123fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b24565b6124078383836129dd565b6124126000826121be565b6001600160a01b038316600090815260036020526040812080546001929061243b90849061353a565b90915550506001600160a01b0382166000908152600360205260408120805460019290612469908490613424565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d5c828260405180602001604052806000815250612a0b565b6000826124f18584612a3e565b14949350505050565b6001600160a01b0382166125505760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b24565b6000818152600260205260409020546001600160a01b0316156125b55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b24565b6125c1600083836129dd565b6001600160a01b03821660009081526003602052604081208054600192906125ea908490613424565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a5460ff166126915760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b24565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127585760405162461bcd60e51b8152600401610b24906133c5565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126be3390565b816001600160a01b0316836001600160a01b031614156127ef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b24565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612867848484612323565b61287384848484612aaa565b611ccc5760405162461bcd60e51b8152600401610b2490613551565b6060816128b35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128dd57806128c78161343c565b91506128d69050600a836135b9565b91506128b7565b60008167ffffffffffffffff8111156128f8576128f8612f8d565b6040519080825280601f01601f191660200182016040528015612922576020820181803683370190505b5090505b841561231b5761293760018361353a565b9150612944600a866135cd565b61294f906030613424565b60f81b81838151811061296457612964613457565b60200101906001600160f81b031916908160001a905350612986600a866135b9565b9450612926565b60006001600160e01b031982166380ac58cd60e01b14806129be57506001600160e01b03198216635b5e139f60e01b145b80610a1757506301ffc9a760e01b6001600160e01b0319831614610a17565b600a5460ff1615612a005760405162461bcd60e51b8152600401610b24906133c5565b610c5a838383612ba8565b612a1583836124fa565b612a226000848484612aaa565b610c5a5760405162461bcd60e51b8152600401610b2490613551565b600081815b8451811015611517576000858281518110612a6057612a60613457565b60200260200101519050808311612a865760008381526020829052604090209250612a97565b600081815260208490526040902092505b5080612aa28161343c565b915050612a43565b60006001600160a01b0384163b15612b9d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612aee9033908990889088906004016135e1565b6020604051808303816000875af1925050508015612b29575060408051601f3d908101601f19168201909252612b269181019061361e565b60015b612b83573d808015612b57576040519150601f19603f3d011682016040523d82523d6000602084013e612b5c565b606091505b508051612b7b5760405162461bcd60e51b8152600401610b2490613551565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061231b565b506001949350505050565b6001600160a01b038316612c0357612bfe81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c26565b816001600160a01b0316836001600160a01b031614612c2657612c268382612c60565b6001600160a01b038216612c3d57610c5a81612cfd565b826001600160a01b0316826001600160a01b031614610c5a57610c5a8282612dac565b60006001612c6d846117ab565b612c77919061353a565b600083815260076020526040902054909150808214612cca576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612d0f9060019061353a565b60008381526009602052604081205460088054939450909284908110612d3757612d37613457565b906000526020600020015490508060088381548110612d5857612d58613457565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612d9057612d9061363b565b6001900381819060005260206000200160009055905550505050565b6000612db7836117ab565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612dfc90613304565b90600052602060002090601f016020900481019282612e1e5760008555612e64565b82601f10612e3757805160ff1916838001178555612e64565b82800160010185558215612e64579182015b82811115612e64578251825591602001919060010190612e49565b50612e70929150612e74565b5090565b5b80821115612e705760008155600101612e75565b6001600160e01b03198116811461142557600080fd5b600060208284031215612eb157600080fd5b8135612ebc81612e89565b9392505050565b60005b83811015612ede578181015183820152602001612ec6565b83811115611ccc5750506000910152565b60008151808452612f07816020860160208601612ec3565b601f01601f19169290920160200192915050565b602081526000612ebc6020830184612eef565b600060208284031215612f4057600080fd5b5035919050565b80356001600160a01b0381168114612f5e57600080fd5b919050565b60008060408385031215612f7657600080fd5b612f7f83612f47565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612fbe57612fbe612f8d565b604051601f8501601f19908116603f01168101908282118183101715612fe657612fe6612f8d565b81604052809350858152868686011115612fff57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561302b57600080fd5b813567ffffffffffffffff81111561304257600080fd5b8201601f8101841361305357600080fd5b61231b84823560208401612fa3565b60008060006060848603121561307757600080fd5b61308084612f47565b925061308e60208501612f47565b9150604084013590509250925092565b600080602083850312156130b157600080fd5b823567ffffffffffffffff808211156130c957600080fd5b818501915085601f8301126130dd57600080fd5b8135818111156130ec57600080fd5b8660208260051b850101111561310157600080fd5b60209290920196919550909350505050565b60006020828403121561312557600080fd5b612ebc82612f47565b6020808252825182820181905260009190848201906040850190845b818110156131665783518352928401929184019160010161314a565b50909695505050505050565b803560ff81168114612f5e57600080fd5b60006020828403121561319557600080fd5b612ebc82613172565b600080604083850312156131b157600080fd5b6131ba83612f47565b9150602083013580151581146131cf57600080fd5b809150509250929050565b600080604083850312156131ed57600080fd5b6131f683613172565b915061320460208401612f47565b90509250929050565b6000806000806080858703121561322357600080fd5b61322c85612f47565b935061323a60208601612f47565b925060408501359150606085013567ffffffffffffffff81111561325d57600080fd5b8501601f8101871361326e57600080fd5b61327d87823560208401612fa3565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106132c157634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156132d957600080fd5b813560058110612ebc57600080fd5b600080604083850312156132fb57600080fd5b6131f683612f47565b600181811c9082168061331857607f821691505b6020821081141561333957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561341f5761341f6133ef565b500290565b60008219821115613437576134376133ef565b500190565b6000600019821415613450576134506133ef565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061348757607f831692505b60208084108214156134a957634e487b7160e01b600052602260045260246000fd5b8180156134bd57600181146134ce576134fb565b60ff198616895284890196506134fb565b60008881526020902060005b868110156134f35781548b8201529085019083016134da565b505084890196505b50505050505092915050565b6000613513828661346d565b8451613523818360208901612ec3565b61352f8183018661346d565b979650505050505050565b60008282101561354c5761354c6133ef565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826135c8576135c86135a3565b500490565b6000826135dc576135dc6135a3565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061361490830184612eef565b9695505050505050565b60006020828403121561363057600080fd5b8151612ebc81612e89565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f1318d3810776d82a79c22d722f44e8b4a545769e7a32a26f4f5d661abd4c0c964736f6c634300080b0033",
  "bytecodeSha1": "585cb46d221fd046df72c6ffecb243a4d17c407e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "196": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "198": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "195": [
            1643,
            1671,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "170": [
            2665,
            2683,
            true
          ],
          "171": [
            2726,
            2772,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "173": [
            5678,
            5703,
            true
          ],
          "174": [
            5750,
            5765,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "168": [
            6340,
            6372,
            true
          ],
          "169": [
            6422,
            6443,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "155": [
            4367,
            4402,
            true
          ],
          "156": [
            4450,
            4475,
            true
          ],
          "157": [
            4524,
            4570,
            true
          ],
          "158": [
            4631,
            4657,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "165": [
            5529,
            5544,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "153": [
            6069,
            6102,
            true
          ],
          "154": [
            6164,
            6185,
            true
          ]
        },
        "CryptidToken.setStage": {
          "172": [
            7005,
            7033,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "166": [
            3799,
            3822,
            true
          ],
          "167": [
            3869,
            3913,
            true
          ]
        },
        "CryptidToken.whitelistMint": {
          "159": [
            3192,
            3214,
            true
          ],
          "160": [
            3262,
            3286,
            true
          ],
          "161": [
            3338,
            3409,
            true
          ],
          "162": [
            3457,
            3485,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "163": [
            6731,
            6756,
            true
          ],
          "164": [
            6894,
            6901,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.whitelistMint": {
          "197": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "184": [
            9157,
            9173,
            true
          ]
        },
        "ERC721._safeMint": {
          "187": [
            8619,
            8673,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "186": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "185": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "182": [
            10579,
            10610,
            true
          ],
          "183": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "175": [
            3674,
            3685,
            true
          ],
          "176": [
            3755,
            3776,
            true
          ],
          "177": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "180": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "179": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "181": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.transferFrom": {
          "178": [
            4915,
            4956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "190": [
            2823,
            2841,
            false
          ],
          "191": [
            2918,
            2928,
            false
          ],
          "192": [
            3015,
            3031,
            false
          ],
          "193": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "194": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "189": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "188": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "111": [
            2378,
            2395
          ],
          "112": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "52": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "85": [
            1998,
            2071
          ],
          "86": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "113": [
            1922,
            1936
          ],
          "114": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "109": [
            2168,
            2183
          ],
          "110": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "23": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "25": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "120": [
            627,
            637
          ],
          "121": [
            743,
            751
          ],
          "122": [
            765,
            775
          ],
          "123": [
            877,
            888
          ],
          "124": [
            902,
            958
          ],
          "125": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "131": [
            1769,
            1826
          ],
          "132": [
            1943,
            2000
          ],
          "133": [
            1575,
            1578
          ]
        },
        "MerkleProof.verify": {
          "102": [
            999,
            1039
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "127": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "128": [
            8356,
            8401
          ]
        },
        "CryptidToken.airdropCryptid": {
          "66": [
            2657,
            2708
          ],
          "67": [
            2718,
            2819
          ],
          "68": [
            2885,
            2925
          ],
          "69": [
            2939,
            2966
          ],
          "70": [
            2866,
            2869
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "82": [
            5670,
            5732
          ],
          "83": [
            5742,
            5796
          ],
          "84": [
            5806,
            5827
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "60": [
            6332,
            6404
          ],
          "61": [
            6414,
            6482
          ],
          "62": [
            6492,
            6519
          ]
        },
        "CryptidToken.getTokensLeft": {
          "81": [
            7797,
            7835
          ]
        },
        "CryptidToken.lastMintAddress": {
          "49": [
            7318,
            7347
          ]
        },
        "CryptidToken.lastMintID": {
          "79": [
            7423,
            7444
          ]
        },
        "CryptidToken.pause": {
          "63": [
            4952,
            4960
          ]
        },
        "CryptidToken.publicMint": {
          "18": [
            4359,
            4432
          ],
          "19": [
            4442,
            4506
          ],
          "20": [
            4516,
            4613
          ],
          "21": [
            4623,
            4704
          ],
          "22": [
            4772,
            4820
          ],
          "24": [
            4834,
            4861
          ],
          "26": [
            4753,
            4756
          ]
        },
        "CryptidToken.setBaseExtension": {
          "80": [
            5928,
            5961
          ]
        },
        "CryptidToken.setBaseURI": {
          "45": [
            5521,
            5567
          ],
          "46": [
            5577,
            5598
          ]
        },
        "CryptidToken.setClaim": {
          "73": [
            5154,
            5179
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "59": [
            5408,
            5432
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "13": [
            6061,
            6146
          ],
          "14": [
            6156,
            6216
          ],
          "15": [
            6226,
            6258
          ]
        },
        "CryptidToken.setStage": {
          "76": [
            6997,
            7094
          ],
          "77": [
            7104,
            7182
          ],
          "78": [
            7192,
            7206
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "87": [
            6617,
            6653
          ]
        },
        "CryptidToken.supportsInterface": {
          "4": [
            8601,
            8644
          ]
        },
        "CryptidToken.teamMint": {
          "53": [
            3791,
            3851
          ],
          "54": [
            3861,
            3961
          ],
          "55": [
            3976,
            4003
          ],
          "56": [
            4069,
            4117
          ],
          "57": [
            4131,
            4158
          ],
          "58": [
            4050,
            4053
          ]
        },
        "CryptidToken.tokenURI": {
          "74": [
            7555,
            7632
          ],
          "75": [
            7642,
            7717
          ]
        },
        "CryptidToken.undoClaim": {
          "47": [
            5296,
            5322
          ]
        },
        "CryptidToken.unpause": {
          "38": [
            5021,
            5031
          ]
        },
        "CryptidToken.walletOfOwner": {
          "40": [
            8118,
            8162
          ],
          "41": [
            8099,
            8102
          ],
          "42": [
            8182,
            8198
          ]
        },
        "CryptidToken.whitelistMint": {
          "29": [
            3184,
            3244
          ],
          "30": [
            3254,
            3320
          ],
          "31": [
            3330,
            3439
          ],
          "32": [
            3449,
            3521
          ],
          "33": [
            3532,
            3558
          ],
          "34": [
            3568,
            3612
          ],
          "35": [
            3622,
            3649
          ]
        },
        "CryptidToken.withdraw": {
          "36": [
            6723,
            6783
          ],
          "37": [
            6886,
            6923
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "89": [
            11242,
            11271
          ],
          "90": [
            11281,
            11332
          ]
        },
        "ERC721._checkOnERC721Received": {
          "134": [
            12820,
            12880
          ],
          "135": [
            12654,
            12712
          ],
          "136": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "6": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "91": [
            7551,
            7624
          ],
          "92": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "103": [
            9149,
            9210
          ],
          "104": [
            9220,
            9278
          ],
          "105": [
            9289,
            9334
          ],
          "106": [
            9345,
            9363
          ],
          "107": [
            9373,
            9394
          ],
          "108": [
            9405,
            9443
          ]
        },
        "ERC721._safeMint": {
          "101": [
            8191,
            8217
          ],
          "129": [
            8570,
            8588
          ],
          "130": [
            8598,
            8749
          ]
        },
        "ERC721._safeTransfer": {
          "118": [
            6700,
            6728
          ],
          "119": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "115": [
            11607,
            11662
          ],
          "116": [
            11672,
            11718
          ],
          "117": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "93": [
            10571,
            10652
          ],
          "94": [
            10662,
            10727
          ],
          "95": [
            10738,
            10777
          ],
          "96": [
            10839,
            10868
          ],
          "97": [
            10879,
            10899
          ],
          "98": [
            10909,
            10927
          ],
          "99": [
            10937,
            10958
          ],
          "100": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "9": [
            3666,
            3723
          ],
          "11": [
            3734,
            3899
          ],
          "12": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "50": [
            2020,
            2094
          ],
          "51": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4094,
            4167
          ],
          "8": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "5": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "48": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "39": [
            5255,
            5294
          ],
          "71": [
            5528,
            5631
          ],
          "72": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "65": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "126": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "64": [
            2731,
            2745
          ]
        },
        "ERC721.transferFrom": {
          "16": [
            4907,
            5010
          ],
          "17": [
            5021,
            5049
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "138": [
            3978,
            4022
          ],
          "139": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "151": [
            3621,
            3655
          ],
          "152": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "137": [
            2857,
            2897
          ],
          "140": [
            2944,
            2991
          ],
          "141": [
            3047,
            3092
          ],
          "142": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "147": [
            6669,
            6705
          ],
          "148": [
            6773,
            6814
          ],
          "149": [
            6935,
            6966
          ],
          "150": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "143": [
            5269,
            5313
          ],
          "144": [
            5385,
            5428
          ],
          "145": [
            5559,
            5592
          ],
          "146": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "88": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "43": [
            1892,
            1987
          ],
          "44": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "27": [
            1407,
            1494
          ],
          "28": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "60806040526004361061036b5760003560e01c80637cb64759116101c6578063c6ab67a3116100f7578063de7fcb1d11610095578063f2fde38b1161006f578063f2fde38b1461098f578063f4efa3e6146109af578063f51f96dd146109cf578063ffa9cd3b146109e557600080fd5b8063de7fcb1d14610905578063e7bc820814610931578063e985e9c51461094657600080fd5b8063ce3cd997116100d1578063ce3cd9971461089b578063d6d67a09146108bb578063da3ef23f146108d0578063de5f9866146108f057600080fd5b8063c6ab67a314610836578063c87b56dd1461084b578063c884ef831461086b57600080fd5b8063b3caad0111610164578063c040e6b81161013e578063c040e6b8146107c5578063c29de630146107ec578063c32145811461080b578063c66828621461082157600080fd5b8063b3caad0114610765578063b88d4fde14610785578063bb31b77b146107a557600080fd5b80638da5cb5b116101a05780638da5cb5b146106ed57806395d89b41146107105780639a2a9c3d14610725578063a22cb4651461074557600080fd5b80637cb64759146106a357806381c162f2146106c35780638456cb59146106d857600080fd5b80633f4ba83a116102a05780636352211e1161023e57806370a082311161021857806370a0823114610638578063715018a614610658578063782319781461066d5780637b6717801461068357600080fd5b80636352211e146105ee5780636c0360eb1461060e5780636cbb89851461062357600080fd5b80634f6ccce71161027a5780634f6ccce71461057657806355f804b31461059657806357ed9e4e146105b65780635c975abb146105d657600080fd5b80633f4ba83a1461051457806342842e0e14610529578063438b63001461054957600080fd5b806323b872dd1161030d5780632f745c59116102e75780632f745c59146104c357806333e61413146104e3578063372f657c146104f95780633ccfd60b1461050c57600080fd5b806323b872dd1461047a5780632db115441461049a5780632eb4a7ab146104ad57600080fd5b8063088139a611610349578063088139a6146103ff578063095ea7b314610423578063109695231461044557806318160ddd1461046557600080fd5b806301ffc9a71461037057806306fdde03146103a5578063081812fc146103c7575b600080fd5b34801561037c57600080fd5b5061039061038b366004612e9f565b610a0c565b60405190151581526020015b60405180910390f35b3480156103b157600080fd5b506103ba610a1d565b60405161039c9190612f1b565b3480156103d357600080fd5b506103e76103e2366004612f2e565b610aaf565b6040516001600160a01b03909116815260200161039c565b34801561040b57600080fd5b5061041560155481565b60405190815260200161039c565b34801561042f57600080fd5b5061044361043e366004612f63565b610b49565b005b34801561045157600080fd5b50610443610460366004613019565b610c5f565b34801561047157600080fd5b50600854610415565b34801561048657600080fd5b50610443610495366004613062565b610d60565b6104436104a8366004612f2e565b610d91565b3480156104b957600080fd5b50610415600d5481565b3480156104cf57600080fd5b506104156104de366004612f63565b610feb565b3480156104ef57600080fd5b5061041560125481565b61044361050736600461309e565b611081565b61044361130e565b34801561052057600080fd5b50610443611428565b34801561053557600080fd5b50610443610544366004613062565b611462565b34801561055557600080fd5b50610569610564366004613113565b61147d565b60405161039c919061312e565b34801561058257600080fd5b50610415610591366004612f2e565b61151f565b3480156105a257600080fd5b506104436105b1366004613019565b6115b2565b3480156105c257600080fd5b506104436105d1366004613113565b611642565b3480156105e257600080fd5b50600a5460ff16610390565b3480156105fa57600080fd5b506103e7610609366004612f2e565b611693565b34801561061a57600080fd5b506103ba61170a565b34801561062f57600080fd5b506103e7611798565b34801561064457600080fd5b50610415610653366004613113565b6117ab565b34801561066457600080fd5b50610443611832565b34801561067957600080fd5b5061041560165481565b34801561068f57600080fd5b5061044361069e366004613183565b61186c565b3480156106af57600080fd5b506104436106be366004612f2e565b6119cc565b3480156106cf57600080fd5b50610443611a01565b3480156106e457600080fd5b50610443611b06565b3480156106f957600080fd5b50600a5461010090046001600160a01b03166103e7565b34801561071c57600080fd5b506103ba611b3e565b34801561073157600080fd5b506011546103909062010000900460ff1681565b34801561075157600080fd5b5061044361076036600461319e565b611b4d565b34801561077157600080fd5b506104436107803660046131da565b611b58565b34801561079157600080fd5b506104436107a036600461320d565b611c9a565b3480156107b157600080fd5b506104436107c0366004613113565b611cd2565b3480156107d157600080fd5b506018546107df9060ff1681565b60405161039c919061329f565b3480156107f857600080fd5b5060115461039090610100900460ff1681565b34801561081757600080fd5b5061041560145481565b34801561082d57600080fd5b506103ba611d26565b34801561084257600080fd5b506103ba611d33565b34801561085757600080fd5b506103ba610866366004612f2e565b611d40565b34801561087757600080fd5b50610390610886366004613113565b60136020526000908152604090205460ff1681565b3480156108a757600080fd5b506104436108b63660046132c7565b611df5565b3480156108c757600080fd5b50610415611f39565b3480156108dc57600080fd5b506104436108eb366004613019565b611f44565b3480156108fc57600080fd5b50610415611f87565b34801561091157600080fd5b5060115461091f9060ff1681565b60405160ff909116815260200161039c565b34801561093d57600080fd5b50610443611f9f565b34801561095257600080fd5b506103906109613660046132e8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561099b57600080fd5b506104436109aa366004613113565b612096565b3480156109bb57600080fd5b506104436109ca366004613113565b612134565b3480156109db57600080fd5b5061041560175481565b3480156109f157600080fd5b506011546103e790630100000090046001600160a01b031681565b6000610a1782612199565b92915050565b606060008054610a2c90613304565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890613304565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b2d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b5482611693565b9050806001600160a01b0316836001600160a01b03161415610bc25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b24565b336001600160a01b0382161480610bde5750610bde8133610961565b610c505760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b24565b610c5a83836121be565b505050565b600a546001600160a01b03610100909104163314610c8f5760405162461bcd60e51b8152600401610b249061333f565b6000815111610cf05760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b24565b60115462010000900460ff1615610d495760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b24565b8051610d5c90600e906020840190612df0565b5050565b610d6a338261222c565b610d865760405162461bcd60e51b8152600401610b2490613374565b610c5a838383612323565b6002600b541415610de45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b24565b6002600b55600a5460ff1615610e0c5760405162461bcd60e51b8152600401610b24906133c5565b3481601754610e1b9190613405565b14610e645760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b24565b600460185460ff166004811115610e7d57610e7d613289565b14610eca5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b24565b60165481610ed760085490565b610ee19190613424565b1115610f3e5760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b24565b60115460ff16811115610fa65760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b24565b60015b818111610fe257610fc233610fbd600c5490565b6124ca565b610fd0600c80546001019055565b80610fda8161343c565b915050610fa9565b50506001600b55565b6000610ff6836117ab565b82106110585760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b24565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b5414156110d45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b24565b6002600b55600a5460ff16156110fc5760405162461bcd60e51b8152600401610b24906133c5565b34601754146111495760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b24565b600260185460ff16600481111561116257611162613289565b146111af5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b24565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112289190603401604051602081830303815290604052805190602001208484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506124e49050565b6112745760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b24565b3360009081526013602052604090205460ff16156112d45760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b24565b336000818152601360205260409020805460ff19166001179055611300906112fb600c5490565b6124fa565b610fe2600c80546001019055565b600a546001600160a01b0361010090910416331461133e5760405162461bcd60e51b8152600401610b249061333f565b600047116113875760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b24565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d80600081146113db576040519150601f19603f3d011682016040523d82523d6000602084013e6113e0565b606091505b50509050806114255760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b24565b50565b600a546001600160a01b036101009091041633146114585760405162461bcd60e51b8152600401610b249061333f565b611460612648565b565b610c5a83838360405180602001604052806000815250611c9a565b6060600061148a836117ab565b905060008167ffffffffffffffff8111156114a7576114a7612f8d565b6040519080825280602002602001820160405280156114d0578160200160208202803683370190505b50905060005b82811015611517576114e88582610feb565b8282815181106114fa576114fa613457565b60209081029190910101528061150f8161343c565b9150506114d6565b509392505050565b600061152a60085490565b821061158d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b24565b600882815481106115a0576115a0613457565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146115e25760405162461bcd60e51b8152600401610b249061333f565b601154610100900460ff161561162f5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b24565b8051610d5c90600f906020840190612df0565b600a546001600160a01b036101009091041633146116725760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03166000908152601360205260409020805460ff19169055565b6000818152600260205260408120546001600160a01b031680610a175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b24565b600f805461171790613304565b80601f016020809104026020016040519081016040528092919081815260200182805461174390613304565b80156117905780601f1061176557610100808354040283529160200191611790565b820191906000526020600020905b81548152906001019060200180831161177357829003601f168201915b505050505081565b60006117a661060960085490565b905090565b60006001600160a01b0382166118165760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b24565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118625760405162461bcd60e51b8152600401610b249061333f565b61146060006126db565b600a546001600160a01b0361010090910416331461189c5760405162461bcd60e51b8152600401610b249061333f565b600360185460ff1660048111156118b5576118b5613289565b146119025760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b24565b6014546015546119159060ff8416613424565b11156119775760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b24565b8060ff166015600082825461198c9190613424565b90915550600190505b8160ff168111610d5c576119ac33610fbd600c5490565b6119ba600c80546001019055565b806119c48161343c565b915050611995565b600a546001600160a01b036101009091041633146119fc5760405162461bcd60e51b8152600401610b249061333f565b600d55565b600a546001600160a01b03610100909104163314611a315760405162461bcd60e51b8152600401610b249061333f565b6000600e8054611a4090613304565b905011611a8f5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b24565b60115462010000900460ff1615611af35760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b24565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611b365760405162461bcd60e51b8152600401610b249061333f565b611460612735565b606060018054610a2c90613304565b610d5c33838361278d565b600a546001600160a01b03610100909104163314611b885760405162461bcd60e51b8152600401610b249061333f565b600060185460ff166004811115611ba157611ba1613289565b11611be55760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b24565b6016548260ff16611bf560085490565b611bff9190613424565b1115611c605760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b24565b60015b8260ff168111610c5a57611c7a82610fbd600c5490565b611c88600c80546001019055565b80611c928161343c565b915050611c63565b611ca4338361222c565b611cc05760405162461bcd60e51b8152600401610b2490613374565b611ccc8484848461285c565b50505050565b600a546001600160a01b03610100909104163314611d025760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b6010805461171790613304565b600e805461171790613304565b6000818152600260205260409020546060906001600160a01b0316611dc05760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b24565b600f611dcb8361288f565b6010604051602001611ddf93929190613507565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611e255760405162461bcd60e51b8152600401610b249061333f565b60115462010000900460ff161515600114611ea85760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b24565b600d54611f125760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b24565b6018805482919060ff19166001836004811115611f3157611f31613289565b021790555050565b60006117a660085490565b600a546001600160a01b03610100909104163314611f745760405162461bcd60e51b8152600401610b249061333f565b8051610d5c906010906020840190612df0565b6000611f9260085490565b6016546117a6919061353a565b600a546001600160a01b03610100909104163314611fcf5760405162461bcd60e51b8152600401610b249061333f565b6000600f8054611fde90613304565b90501161202d5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b24565b601154610100900460ff16156120855760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b24565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146120c65760405162461bcd60e51b8152600401610b249061333f565b6001600160a01b03811661212b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b24565b611425816126db565b600a546001600160a01b036101009091041633146121645760405162461bcd60e51b8152600401610b249061333f565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a175750610a178261298d565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906121f382611693565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166122a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b24565b60006122b083611693565b9050806001600160a01b0316846001600160a01b031614806122eb5750836001600160a01b03166122e084610aaf565b6001600160a01b0316145b8061231b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661233682611693565b6001600160a01b03161461239a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b24565b6001600160a01b0382166123fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b24565b6124078383836129dd565b6124126000826121be565b6001600160a01b038316600090815260036020526040812080546001929061243b90849061353a565b90915550506001600160a01b0382166000908152600360205260408120805460019290612469908490613424565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d5c828260405180602001604052806000815250612a0b565b6000826124f18584612a3e565b14949350505050565b6001600160a01b0382166125505760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b24565b6000818152600260205260409020546001600160a01b0316156125b55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b24565b6125c1600083836129dd565b6001600160a01b03821660009081526003602052604081208054600192906125ea908490613424565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a5460ff166126915760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b24565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127585760405162461bcd60e51b8152600401610b24906133c5565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126be3390565b816001600160a01b0316836001600160a01b031614156127ef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b24565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612867848484612323565b61287384848484612aaa565b611ccc5760405162461bcd60e51b8152600401610b2490613551565b6060816128b35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128dd57806128c78161343c565b91506128d69050600a836135b9565b91506128b7565b60008167ffffffffffffffff8111156128f8576128f8612f8d565b6040519080825280601f01601f191660200182016040528015612922576020820181803683370190505b5090505b841561231b5761293760018361353a565b9150612944600a866135cd565b61294f906030613424565b60f81b81838151811061296457612964613457565b60200101906001600160f81b031916908160001a905350612986600a866135b9565b9450612926565b60006001600160e01b031982166380ac58cd60e01b14806129be57506001600160e01b03198216635b5e139f60e01b145b80610a1757506301ffc9a760e01b6001600160e01b0319831614610a17565b600a5460ff1615612a005760405162461bcd60e51b8152600401610b24906133c5565b610c5a838383612ba8565b612a1583836124fa565b612a226000848484612aaa565b610c5a5760405162461bcd60e51b8152600401610b2490613551565b600081815b8451811015611517576000858281518110612a6057612a60613457565b60200260200101519050808311612a865760008381526020829052604090209250612a97565b600081815260208490526040902092505b5080612aa28161343c565b915050612a43565b60006001600160a01b0384163b15612b9d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612aee9033908990889088906004016135e1565b6020604051808303816000875af1925050508015612b29575060408051601f3d908101601f19168201909252612b269181019061361e565b60015b612b83573d808015612b57576040519150601f19603f3d011682016040523d82523d6000602084013e612b5c565b606091505b508051612b7b5760405162461bcd60e51b8152600401610b2490613551565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061231b565b506001949350505050565b6001600160a01b038316612c0357612bfe81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c26565b816001600160a01b0316836001600160a01b031614612c2657612c268382612c60565b6001600160a01b038216612c3d57610c5a81612cfd565b826001600160a01b0316826001600160a01b031614610c5a57610c5a8282612dac565b60006001612c6d846117ab565b612c77919061353a565b600083815260076020526040902054909150808214612cca576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612d0f9060019061353a565b60008381526009602052604081205460088054939450909284908110612d3757612d37613457565b906000526020600020015490508060088381548110612d5857612d58613457565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612d9057612d9061363b565b6001900381819060005260206000200160009055905550505050565b6000612db7836117ab565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612dfc90613304565b90600052602060002090601f016020900481019282612e1e5760008555612e64565b82601f10612e3757805160ff1916838001178555612e64565b82800160010185558215612e64579182015b82811115612e64578251825591602001919060010190612e49565b50612e70929150612e74565b5090565b5b80821115612e705760008155600101612e75565b6001600160e01b03198116811461142557600080fd5b600060208284031215612eb157600080fd5b8135612ebc81612e89565b9392505050565b60005b83811015612ede578181015183820152602001612ec6565b83811115611ccc5750506000910152565b60008151808452612f07816020860160208601612ec3565b601f01601f19169290920160200192915050565b602081526000612ebc6020830184612eef565b600060208284031215612f4057600080fd5b5035919050565b80356001600160a01b0381168114612f5e57600080fd5b919050565b60008060408385031215612f7657600080fd5b612f7f83612f47565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612fbe57612fbe612f8d565b604051601f8501601f19908116603f01168101908282118183101715612fe657612fe6612f8d565b81604052809350858152868686011115612fff57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561302b57600080fd5b813567ffffffffffffffff81111561304257600080fd5b8201601f8101841361305357600080fd5b61231b84823560208401612fa3565b60008060006060848603121561307757600080fd5b61308084612f47565b925061308e60208501612f47565b9150604084013590509250925092565b600080602083850312156130b157600080fd5b823567ffffffffffffffff808211156130c957600080fd5b818501915085601f8301126130dd57600080fd5b8135818111156130ec57600080fd5b8660208260051b850101111561310157600080fd5b60209290920196919550909350505050565b60006020828403121561312557600080fd5b612ebc82612f47565b6020808252825182820181905260009190848201906040850190845b818110156131665783518352928401929184019160010161314a565b50909695505050505050565b803560ff81168114612f5e57600080fd5b60006020828403121561319557600080fd5b612ebc82613172565b600080604083850312156131b157600080fd5b6131ba83612f47565b9150602083013580151581146131cf57600080fd5b809150509250929050565b600080604083850312156131ed57600080fd5b6131f683613172565b915061320460208401612f47565b90509250929050565b6000806000806080858703121561322357600080fd5b61322c85612f47565b935061323a60208601612f47565b925060408501359150606085013567ffffffffffffffff81111561325d57600080fd5b8501601f8101871361326e57600080fd5b61327d87823560208401612fa3565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106132c157634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156132d957600080fd5b813560058110612ebc57600080fd5b600080604083850312156132fb57600080fd5b6131f683612f47565b600181811c9082168061331857607f821691505b6020821081141561333957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561341f5761341f6133ef565b500290565b60008219821115613437576134376133ef565b500190565b6000600019821415613450576134506133ef565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061348757607f831692505b60208084108214156134a957634e487b7160e01b600052602260045260246000fd5b8180156134bd57600181146134ce576134fb565b60ff198616895284890196506134fb565b60008881526020902060005b868110156134f35781548b8201529085019083016134da565b505084890196505b50505050505092915050565b6000613513828661346d565b8451613523818360208901612ec3565b61352f8183018661346d565b979650505050505050565b60008282101561354c5761354c6133ef565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826135c8576135c86135a3565b500490565b6000826135dc576135dc6135a3565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061361490830184612eef565b9695505050505050565b60006020828403121561363057600080fd5b8151612ebc81612e89565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f1318d3810776d82a79c22d722f44e8b4a545769e7a32a26f4f5d661abd4c0c964736f6c634300080b0033",
  "deployedSourceMap": "710:7944:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:169;;;;;;;;;;-1:-1:-1;8482:169:16;;;;;:::i;:::-;;:::i;:::-;;;565:14:20;;558:22;540:41;;528:2;513:18;8482:169:16;;;;;;;;2488:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;;;;;-1:-1:-1;3999:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;3999:217:3;1528:203:20;1813:28:16;;;;;;;;;;;;;;;;;;;1882:25:20;;;1870:2;1855:18;1813:28:16;1736:177:20;3537:401:3;;;;;;;;;;-1:-1:-1;3537:401:3;;;;;:::i;:::-;;:::i;:::-;;5974:291:16;;;;;;;;;;-1:-1:-1;5974:291:16;;;;;:::i;:::-;;:::i;1615:111:6:-;;;;;;;;;;-1:-1:-1;1702:10:6;:17;1615:111;;4726:330:3;;;;;;;;;;-1:-1:-1;4726:330:3;;;;;:::i;:::-;;:::i;4210:668:16:-;;;;;;:::i;:::-;;:::i;1074:25::-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1602:30:16:-;;;;;;;;;;;;;;;;3021:635;;;;;;:::i;:::-;;:::i;6666:264::-;;;:::i;4973:65::-;;;;;;;;;;;;;:::i;5122:179:3:-;;;;;;;;;;-1:-1:-1;5122:179:3;;;;;:::i;:::-;;:::i;7852:353:16:-;;;;;;;;;;-1:-1:-1;7852:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5445:160:16:-;;;;;;;;;;-1:-1:-1;5445:160:16;;;;;:::i;:::-;;:::i;5230:99::-;;;;;;;;;;-1:-1:-1;5230:99:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;2191:235:3;;;;;;;;;;-1:-1:-1;2191:235:3;;;;;:::i;:::-;;:::i;1139:26:16:-;;;;;;;;;;;;;:::i;7250:104::-;;;;;;;;;;;;;:::i;1929:205:3:-;;;;;;;;;;-1:-1:-1;1929:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1877:30:16:-;;;;;;;;;;;;;;;;3689:486;;;;;;;;;;-1:-1:-1;3689:486:16;;;;;:::i;:::-;;:::i;5335:104::-;;;;;;;;;;-1:-1:-1;5335:104:16;;;;;:::i;:::-;;:::i;6271:255::-;;;;;;;;;;;;;:::i;4906:61::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:3;;;;;;;;;;;;;:::i;1290:40:16:-;;;;;;;;;;-1:-1:-1;1290:40:16;;;;;;;;;;;4283:153:3;;;;;;;;;;-1:-1:-1;4283:153:3;;;;;:::i;:::-;;:::i;2529:454:16:-;;;;;;;;;;-1:-1:-1;2529:454:16;;;;;:::i;:::-;;:::i;5367:320:3:-;;;;;;;;;;-1:-1:-1;5367:320:3;;;;;:::i;:::-;;:::i;5089:97:16:-;;;;;;;;;;-1:-1:-1;5089:97:16;;;;;:::i;:::-;;:::i;1967:18::-;;;;;;;;;;-1:-1:-1;1967:18:16;;;;;;;;;;;;;;;:::i;1250:34::-;;;;;;;;;;-1:-1:-1;1250:34:16;;;;;;;;;;;1752:29;;;;;;;;;;;;;;;;1171:37;;;;;;;;;;;;;:::i;1105:28::-;;;;;;;;;;;;;:::i;7457:267::-;;;;;;;;;;-1:-1:-1;7457:267:16;;;;;:::i;:::-;;:::i;1661:39::-;;;;;;;;;;-1:-1:-1;1661:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;6936:277;;;;;;;;;;-1:-1:-1;6936:277:16;;;;;:::i;:::-;;:::i;7360:91::-;;;;;;;;;;;;;:::i;5840:128::-;;;;;;;;;;-1:-1:-1;5840:128:16;;;;;:::i;:::-;;:::i;7730:112::-;;;;;;;;;;;;;:::i;1214:25::-;;;;;;;;;;-1:-1:-1;1214:25:16;;;;;;;;;;;8275:4:20;8263:17;;;8245:36;;8233:2;8218:18;1214:25:16;8103:184:20;5616:218:16;;;;;;;;;;;;;:::i;4502:162:3:-;;;;;;;;;;-1:-1:-1;4502:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6532:128:16:-;;;;;;;;;;-1:-1:-1;6532:128:16;;;;;:::i;:::-;;:::i;1922:36::-;;;;;;;;;;;;;;;;1337:76;;;;;;;;;;-1:-1:-1;1337:76:16;;;;;;;-1:-1:-1;;;;;1337:76:16;;;8482:169;8585:4;8608:36;8632:11;8608:23;:36::i;:::-;8601:43;8482:169;-1:-1:-1;;8482:169:16:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;4094:73;;;;-1:-1:-1;;;4094:73:3;;9144:2:20;4094:73:3;;;9126:21:20;9183:2;9163:18;;;9156:30;9222:34;9202:18;;;9195:62;-1:-1:-1;;;9273:18:20;;;9266:42;9325:19;;4094:73:3;;;;;;;;;-1:-1:-1;4185:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:3;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:3;:2;-1:-1:-1;;;;;3674:11:3;;;3666:57;;;;-1:-1:-1;;;3666:57:3;;9557:2:20;3666:57:3;;;9539:21:20;9596:2;9576:18;;;9569:30;9635:34;9615:18;;;9608:62;-1:-1:-1;;;9686:18:20;;;9679:31;9727:19;;3666:57:3;9355:397:20;3666:57:3;719:10:10;-1:-1:-1;;;;;3755:21:3;;;;:62;;-1:-1:-1;3780:37:3;3797:5;719:10:10;4502:162:3;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:3;;9959:2:20;3734:165:3;;;9941:21:20;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:26;10088:18;;;10081:54;10152:19;;3734:165:3;9757:420:20;3734:165:3;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;5974:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6101:1:16::1;6075:15;6069:29;:33;6061:85;;;::::0;-1:-1:-1;;;6061:85:16;;10745:2:20;6061:85:16::1;::::0;::::1;10727:21:20::0;10784:2;10764:18;;;10757:30;10823:34;10803:18;;;10796:62;-1:-1:-1;;;10874:18:20;;;10867:37;10921:19;;6061:85:16::1;10543:403:20::0;6061:85:16::1;6165:20;::::0;;;::::1;;;6164:21;6156:60;;;::::0;-1:-1:-1;;;6156:60:16;;11153:2:20;6156:60:16::1;::::0;::::1;11135:21:20::0;11192:2;11172:18;;;11165:30;11231:28;11211:18;;;11204:56;11277:18;;6156:60:16::1;10951:350:20::0;6156:60:16::1;6226:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;5974:291:::0;:::o;4726:330:3:-;4915:41;719:10:10;4948:7:3;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:3;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;4210:668:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;11926:2:20;2317:63:2;;;11908:21:20;11965:2;11945:18;;;11938:30;12004:33;11984:18;;;11977:61;12055:18;;2317:63:2;11724:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;4393:9:16::2;4379:10;4367:9;;:22;;;;:::i;:::-;:35;4359:73;;;::::0;-1:-1:-1;;;4359:73:16;;12936:2:20;4359:73:16::2;::::0;::::2;12918:21:20::0;12975:2;12955:18;;;12948:30;-1:-1:-1;;;12994:18:20;;;12987:55;13059:18;;4359:73:16::2;12734:349:20::0;4359:73:16::2;4459:16;4450:5;::::0;::::2;;:25;::::0;::::2;;;;;;:::i;:::-;;4442:64;;;::::0;-1:-1:-1;;;4442:64:16;;13290:2:20;4442:64:16::2;::::0;::::2;13272:21:20::0;13329:2;13309:18;;;13302:30;13368:28;13348:18;;;13341:56;13414:18;;4442:64:16::2;13088:350:20::0;4442:64:16::2;4555:15;;4541:10;4524:13;1702:10:6::0;:17;;1615:111;4524:13:16::2;:27;;;;:::i;:::-;:46;;4516:97;;;::::0;-1:-1:-1;;;4516:97:16;;13778:2:20;4516:97:16::2;::::0;::::2;13760:21:20::0;13817:2;13797:18;;;13790:30;13856:34;13836:18;;;13829:62;-1:-1:-1;;;13907:18:20;;;13900:36;13953:19;;4516:97:16::2;13576:402:20::0;4516:97:16::2;4645:12;::::0;::::2;;4631:26:::0;::::2;;4623:81;;;::::0;-1:-1:-1;;;4623:81:16;;14185:2:20;4623:81:16::2;::::0;::::2;14167:21:20::0;14224:2;14204:18;;;14197:30;14263:34;14243:18;;;14236:62;-1:-1:-1;;;14314:18:20;;;14307:40;14364:19;;4623:81:16::2;13983:406:20::0;4623:81:16::2;4733:1;4716:156;4741:10;4736:1;:15;4716:156;;4772:48;4782:10;4794:25;:15;918:14:11::0;;827:112;4794:25:16::2;4772:9;:48::i;:::-;4834:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4834:27:16::2;4753:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4716:156;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;4210:668:16:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;14736:2:20;1407:87:6;;;14718:21:20;14775:2;14755:18;;;14748:30;14814:34;14794:18;;;14787:62;-1:-1:-1;;;14865:18:20;;;14858:41;14916:19;;1407:87:6;14534:407:20;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3021:635:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;11926:2:20;2317:63:2;;;11908:21:20;11965:2;11945:18;;;11938:30;12004:33;11984:18;;;11977:61;12055:18;;2317:63:2;11724:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;3205:9:16::2;3192;;:22;3184:60;;;::::0;-1:-1:-1;;;3184:60:16;;12936:2:20;3184:60:16::2;::::0;::::2;12918:21:20::0;12975:2;12955:18;;;12948:30;-1:-1:-1;;;12994:18:20;;;12987:55;13059:18;;3184:60:16::2;12734:349:20::0;3184:60:16::2;3271:15;3262:5;::::0;::::2;;:24;::::0;::::2;;;;;;:::i;:::-;;3254:66;;;::::0;-1:-1:-1;;;3254:66:16;;15148:2:20;3254:66:16::2;::::0;::::2;15130:21:20::0;15187:2;15167:18;;;15160:30;15226:31;15206:18;;;15199:59;15275:18;;3254:66:16::2;14946:353:20::0;3254:66:16::2;3357:10;::::0;3379:28:::2;::::0;-1:-1:-1;;3396:10:16::2;15453:2:20::0;15449:15;15445:53;3379:28:16::2;::::0;::::2;15433:66:20::0;3338:71:16::2;::::0;3357:10;15515:12:20;;3379:28:16::2;;;;;;;;;;;;3369:39;;;;;;3338:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;3338:18:16;;:71;;-1:-1:-1;;3338:18:16::2;:71:::0;-1:-1:-1;3338:71:16:i:2;:::-;3330:109;;;::::0;-1:-1:-1;;;3330:109:16;;15740:2:20;3330:109:16::2;::::0;::::2;15722:21:20::0;15779:2;15759:18;;;15752:30;15818:27;15798:18;;;15791:55;15863:18;;3330:109:16::2;15538:349:20::0;3330:109:16::2;3465:10;3457:19;::::0;;;:7:::2;:19;::::0;;;;;::::2;;:28;3449:72;;;::::0;-1:-1:-1;;;3449:72:16;;16094:2:20;3449:72:16::2;::::0;::::2;16076:21:20::0;16133:2;16113:18;;;16106:30;16172:33;16152:18;;;16145:61;16223:18;;3449:72:16::2;15892:355:20::0;3449:72:16::2;3540:10;3532:19;::::0;;;:7:::2;:19;::::0;;;;:26;;-1:-1:-1;;3532:26:16::2;3554:4;3532:26;::::0;;3568:44:::2;::::0;3586:25:::2;:15;918:14:11::0;;827:112;3586:25:16::2;3568:5;:44::i;:::-;3622:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;6666:264:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6755:1:16::1;6731:21;:25;6723:60;;;::::0;-1:-1:-1;;;6723:60:16;;16454:2:20;6723:60:16::1;::::0;::::1;16436:21:20::0;16493:2;16473:18;;;16466:30;-1:-1:-1;;;16512:18:20;;;16505:52;16574:18;;6723:60:16::1;16252:346:20::0;6723:60:16::1;6820:16;::::0;6812:64:::1;::::0;6794:12:::1;::::0;6820:16;;::::1;-1:-1:-1::0;;;;;6820:16:16::1;::::0;6850:21:::1;::::0;6794:12;6812:64;6794:12;6812:64;6850:21;6820:16;6812:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6793:83;;;6894:7;6886:37;;;::::0;-1:-1:-1;;;6886:37:16;;17015:2:20;6886:37:16::1;::::0;::::1;16997:21:20::0;17054:2;17034:18;;;17027:30;-1:-1:-1;;;17073:18:20;;;17066:47;17130:18;;6886:37:16::1;16813:341:20::0;6886:37:16::1;6713:217;6666:264::o:0;4973:65::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5021:10:16::1;:8;:10::i;:::-;4973:65::o:0;5122:179:3:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;7852:353:16:-;7913:16;7941:23;7967:16;7977:5;7967:9;:16::i;:::-;7941:42;;7993:26;8036:15;8022:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8022:30:16;;7993:59;;8067:9;8062:111;8082:15;8078:1;:19;8062:111;;;8133:29;8153:5;8160:1;8133:19;:29::i;:::-;8118:9;8128:1;8118:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8099:3;;;;:::i;:::-;;;;8062:111;;;-1:-1:-1;8189:9:16;7852:353;-1:-1:-1;;;7852:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;17493:2:20;1892:95:6;;;17475:21:20;17532:2;17512:18;;;17505:30;17571:34;17551:18;;;17544:62;-1:-1:-1;;;17622:18:20;;;17615:42;17674:19;;1892:95:6;17291:408:20;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5445:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5530:14:16::1;::::0;::::1;::::0;::::1;;;5529:15;5521:46;;;::::0;-1:-1:-1;;;5521:46:16;;17906:2:20;5521:46:16::1;::::0;::::1;17888:21:20::0;17945:2;17925:18;;;17918:30;-1:-1:-1;;;17964:18:20;;;17957:48;18022:18;;5521:46:16::1;17704:342:20::0;5521:46:16::1;5577:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;5230:99::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5296:18:16::1;5317:5;5296:18:::0;;;:7:::1;:18;::::0;;;;:26;;-1:-1:-1;;5296:26:16::1;::::0;;5230:99::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:3;;18253:2:20;2324:73:3;;;18235:21:20;18292:2;18272:18;;;18265:30;18331:34;18311:18;;;18304:62;-1:-1:-1;;;18382:18:20;;;18375:39;18431:19;;2324:73:3;18051:405:20;1139:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7250:104::-;7300:7;7325:22;7333:13;1702:10:6;:17;;1615:111;7325:22:16;7318:29;;7250:104;:::o;1929:205:3:-;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;18663:2:20;2020:74:3;;;18645:21:20;18702:2;18682:18;;;18675:30;18741:34;18721:18;;;18714:62;-1:-1:-1;;;18792:18:20;;;18785:40;18842:19;;2020:74:3;18461:406:20;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;3689:486:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3808:14:16::1;3799:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3791:60;;;::::0;-1:-1:-1;;;3791:60:16;;19074:2:20;3791:60:16::1;::::0;::::1;19056:21:20::0;19113:2;19093:18;;;19086:30;19152:26;19132:18;;;19125:54;19196:18;;3791:60:16::1;18872:348:20::0;3791:60:16::1;3899:14;::::0;3882:13:::1;::::0;3869:26:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:44;;3861:100;;;::::0;-1:-1:-1;;;3861:100:16;;19427:2:20;3861:100:16::1;::::0;::::1;19409:21:20::0;19466:2;19446:18;;;19439:30;19505:34;19485:18;;;19478:62;-1:-1:-1;;;19556:18:20;;;19549:41;19607:19;;3861:100:16::1;19225:407:20::0;3861:100:16::1;3993:10;3976:27;;:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4030:1:16::1;::::0;-1:-1:-1;4013:156:16::1;4038:10;4033:15;;:1;:15;4013:156;;4069:48;4079:10;4091:25;:15;918:14:11::0;;827:112;4069:48:16::1;4131:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4131:27:16::1;4050:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4013:156;;5335:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5408:10:16::1;:24:::0;5335:104::o;6271:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6371:1:16::1;6346:14;6340:28;;;;;:::i;:::-;;;:32;6332:72;;;::::0;-1:-1:-1;;;6332:72:16;;19839:2:20;6332:72:16::1;::::0;::::1;19821:21:20::0;19878:2;19858:18;;;19851:30;19917:29;19897:18;;;19890:57;19964:18;;6332:72:16::1;19637:351:20::0;6332:72:16::1;6423:20;::::0;;;::::1;;;6422:21;6414:68;;;::::0;-1:-1:-1;;;6414:68:16;;20195:2:20;6414:68:16::1;::::0;::::1;20177:21:20::0;20234:2;20214:18;;;20207:30;20273:34;20253:18;;;20246:62;-1:-1:-1;;;20324:18:20;;;20317:32;20366:19;;6414:68:16::1;19993:398:20::0;6414:68:16::1;6492:20;:27:::0;;-1:-1:-1;;6492:27:16::1;::::0;::::1;::::0;;6271:255::o;4906:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4952:8:16::1;:6;:8::i;2650:102:3:-:0;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:10;4410:8:3;4420;4377:18;:52::i;2529:454:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2673:10:16::1;2665:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;2657:51;;;::::0;-1:-1:-1;;;2657:51:16;;20598:2:20;2657:51:16::1;::::0;::::1;20580:21:20::0;20637:2;20617:18;;;20610:30;-1:-1:-1;;;20656:18:20;;;20649:50;20716:18;;2657:51:16::1;20396:344:20::0;2657:51:16::1;2757:15;;2743:10;2726:27;;:13;1702:10:6::0;:17;;1615:111;2726:13:16::1;:27;;;;:::i;:::-;:46;;2718:101;;;::::0;-1:-1:-1;;;2718:101:16;;20947:2:20;2718:101:16::1;::::0;::::1;20929:21:20::0;20986:2;20966:18;;;20959:30;21025:34;21005:18;;;20998:62;-1:-1:-1;;;21076:18:20;;;21069:40;21126:19;;2718:101:16::1;20745:406:20::0;2718:101:16::1;2846:1;2829:148;2854:10;2849:15;;:1;:15;2829:148;;2885:40;2895:2;2899:25;:15;918:14:11::0;;827:112;2885:40:16::1;2939:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2939:27:16::1;2866:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2829:148;;5367:320:3::0;5536:41;719:10:10;5569:7:3;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:3;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;5089:97:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5154:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5154:25:16::1;5175:4;5154:25;::::0;;5089:97::o;1171:37::-;;;;;;;:::i;1105:28::-;;;;;;;:::i;7457:267::-;7224:4:3;7247:16;;;:7;:16;;;;;;7530:13:16;;-1:-1:-1;;;;;7247:16:3;7555:77:16;;;;-1:-1:-1;;;7555:77:16;;21358:2:20;7555:77:16;;;21340:21:20;21397:2;21377:18;;;21370:30;21436:34;21416:18;;;21409:62;-1:-1:-1;;;21487:18:20;;;21480:46;21543:19;;7555:77:16;21156:412:20;7555:77:16;7673:7;7682:18;:7;:16;:18::i;:::-;7702:13;7656:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7642:75;;7457:267;;;:::o;6936:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7005:20:16::1;::::0;;;::::1;;;:28;;7029:4;7005:28;6997:97;;;::::0;-1:-1:-1;;;6997:97:16;;23340:2:20;6997:97:16::1;::::0;::::1;23322:21:20::0;23379:2;23359:18;;;23352:30;23418:34;23398:18;;;23391:62;23489:26;23469:18;;;23462:54;23533:19;;6997:97:16::1;23138:420:20::0;6997:97:16::1;7112:10;::::0;7104:78:::1;;;::::0;-1:-1:-1;;;7104:78:16;;23765:2:20;7104:78:16::1;::::0;::::1;23747:21:20::0;23804:2;23784:18;;;23777:30;23843:34;23823:18;;;23816:62;-1:-1:-1;;;23894:18:20;;;23887:48;23952:19;;7104:78:16::1;23563:414:20::0;7104:78:16::1;7192:5;:14:::0;;7200:6;;7192:5;-1:-1:-1;;7192:14:16::1;::::0;7200:6;7192:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;6936:277:::0;:::o;7360:91::-;7405:7;7430:13;1702:10:6;:17;;1615:111;5840:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5928:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;7730:112::-:0;7778:7;7822:13;1702:10:6;:17;;1615:111;7822:13:16;7804:15;;:31;;;;:::i;5616:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5702:1:16::1;5684:7;5678:21;;;;;:::i;:::-;;;:25;5670:62;;;::::0;-1:-1:-1;;;5670:62:16;;24314:2:20;5670:62:16::1;::::0;::::1;24296:21:20::0;24353:2;24333:18;;;24326:30;24392:26;24372:18;;;24365:54;24436:18;;5670:62:16::1;24112:348:20::0;5670:62:16::1;5751:14;::::0;::::1;::::0;::::1;;;5750:15;5742:54;;;::::0;-1:-1:-1;;;5742:54:16;;24667:2:20;5742:54:16::1;::::0;::::1;24649:21:20::0;24706:2;24686:18;;;24679:30;24745:28;24725:18;;;24718:56;24791:18;;5742:54:16::1;24465:350:20::0;5742:54:16::1;5806:14;:21:::0;;-1:-1:-1;;5806:21:16::1;;;::::0;;5616:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25022:2:20;1998:73:0::1;::::0;::::1;25004:21:20::0;25061:2;25041:18;;;25034:30;25100:34;25080:18;;;25073:62;-1:-1:-1;;;25151:18:20;;;25144:36;25197:19;;1998:73:0::1;24820:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;6532:128:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6617:16:16::1;:36:::0;;-1:-1:-1;;;;;6617:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6617:36:16;;::::1;::::0;;;::::1;::::0;;6532:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;11168:171:3:-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:3;-1:-1:-1;;;;;11242:29:3;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:3;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;7551:73;;;;-1:-1:-1;;;7551:73:3;;25429:2:20;7551:73:3;;;25411:21:20;25468:2;25448:18;;;25441:30;25507:34;25487:18;;;25480:62;-1:-1:-1;;;25558:18:20;;;25551:42;25610:19;;7551:73:3;25227:408:20;7551:73:3;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:3;:7;-1:-1:-1;;;;;7691:16:3;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:3;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:3;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;7683:96;7442:344;-1:-1:-1;;;;7442:344:3:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:3;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:3;;10571:81;;;;-1:-1:-1;;;10571:81:3;;25842:2:20;10571:81:3;;;25824:21:20;25881:2;25861:18;;;25854:30;25920:34;25900:18;;;25893:62;-1:-1:-1;;;25971:18:20;;;25964:35;26016:19;;10571:81:3;25640:401:20;10571:81:3;-1:-1:-1;;;;;10670:16:3;;10662:65;;;;-1:-1:-1;;;10662:65:3;;26248:2:20;10662:65:3;;;26230:21:20;26287:2;26267:18;;;26260:30;26326:34;26306:18;;;26299:62;-1:-1:-1;;;26377:18:20;;;26370:34;26421:19;;10662:65:3;26046:400:20;10662:65:3;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:3;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:3;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:3;-1:-1:-1;;;;;10937:21:3;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;8116:108::-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;862:184:13:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:13:o;9078:427:3:-;-1:-1:-1;;;;;9157:16:3;;9149:61;;;;-1:-1:-1;;;9149:61:3;;26653:2:20;9149:61:3;;;26635:21:20;;;26672:18;;;26665:30;26731:34;26711:18;;;26704:62;26783:18;;9149:61:3;26451:356:20;9149:61:3;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;:30;9220:58;;;;-1:-1:-1;;;9220:58:3;;27014:2:20;9220:58:3;;;26996:21:20;27053:2;27033:18;;;27026:30;27092;27072:18;;;27065:58;27140:18;;9220:58:3;26812:352:20;9220:58:3;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:3;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:3;-1:-1:-1;;;;;9373:21:3;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;6226:32:16::1;5974:291:::0;:::o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;27371:2:20;1669:41:1;;;27353:21:20;27410:2;27390:18;;;27383:30;-1:-1:-1;;;27429:18:20;;;27422:50;27489:18;;1669:41:1;27169:344:20;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11474:307:3;11624:8;-1:-1:-1;;;;;11615:17:3;:5;-1:-1:-1;;;;;11615:17:3;;;11607:55;;;;-1:-1:-1;;;11607:55:3;;27720:2:20;11607:55:3;;;27702:21:20;27759:2;27739:18;;;27732:30;27798:27;27778:18;;;27771:55;27843:18;;11607:55:3;27518:349:20;11607:55:3;-1:-1:-1;;;;;11672:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:3;;;;;;;;;;11733:41;;540::20;;;11733::3;;513:18:20;11733:41:3;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1570:300:3;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:3;829:155:14;8215:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8356:45:16::1;8383:4;8389:2;8393:7;8356:26;:45::i;8445:311:3:-:0;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:3;;;;;;;:::i;1398:662:13:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:13;;;;:::i;:::-;;;;1537:488;;12334:778:3;12484:4;-1:-1:-1;;;;;12504:13:3;;1465:19:9;:23;12500:606:3;;12539:72;;-1:-1:-1;;;12539:72:3;;-1:-1:-1;;;;;12539:36:3;;;;;:72;;719:10:10;;12590:4:3;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:3;;;;;;;;-1:-1:-1;;12539:72:3;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:3;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:3;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:3;-1:-1:-1;;;12661:51:3;;-1:-1:-1;12654:58:3;;12500:606;-1:-1:-1;13091:4:3;12334:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:20;-1:-1:-1;;;;;;88:32:20;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:20:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:20;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:20;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:20:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:20;;1343:180;-1:-1:-1;1343:180:20:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:20;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:20:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:20;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:20;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:20;;-1:-1:-1;;;;4095:615:20:o;4715:186::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4866:29;4885:9;4866:29;:::i;4906:632::-;5077:2;5129:21;;;5199:13;;5102:18;;;5221:22;;;5048:4;;5077:2;5300:15;;;;5274:2;5259:18;;;5048:4;5343:169;5357:6;5354:1;5351:13;5343:169;;;5418:13;;5406:26;;5487:15;;;;5452:12;;;;5379:1;5372:9;5343:169;;;-1:-1:-1;5529:3:20;;4906:632;-1:-1:-1;;;;;;4906:632:20:o;5543:156::-;5609:20;;5669:4;5658:16;;5648:27;;5638:55;;5689:1;5686;5679:12;5704:182;5761:6;5814:2;5802:9;5793:7;5789:23;5785:32;5782:52;;;5830:1;5827;5820:12;5782:52;5853:27;5870:9;5853:27;:::i;6076:347::-;6141:6;6149;6202:2;6190:9;6181:7;6177:23;6173:32;6170:52;;;6218:1;6215;6208:12;6170:52;6241:29;6260:9;6241:29;:::i;:::-;6231:39;;6320:2;6309:9;6305:18;6292:32;6367:5;6360:13;6353:21;6346:5;6343:32;6333:60;;6389:1;6386;6379:12;6333:60;6412:5;6402:15;;;6076:347;;;;;:::o;6428:256::-;6494:6;6502;6555:2;6543:9;6534:7;6530:23;6526:32;6523:52;;;6571:1;6568;6561:12;6523:52;6594:27;6611:9;6594:27;:::i;:::-;6584:37;;6640:38;6674:2;6663:9;6659:18;6640:38;:::i;:::-;6630:48;;6428:256;;;;;:::o;6689:667::-;6784:6;6792;6800;6808;6861:3;6849:9;6840:7;6836:23;6832:33;6829:53;;;6878:1;6875;6868:12;6829:53;6901:29;6920:9;6901:29;:::i;:::-;6891:39;;6949:38;6983:2;6972:9;6968:18;6949:38;:::i;:::-;6939:48;;7034:2;7023:9;7019:18;7006:32;6996:42;;7089:2;7078:9;7074:18;7061:32;7116:18;7108:6;7105:30;7102:50;;;7148:1;7145;7138:12;7102:50;7171:22;;7224:4;7216:13;;7212:27;-1:-1:-1;7202:55:20;;7253:1;7250;7243:12;7202:55;7276:74;7342:7;7337:2;7324:16;7319:2;7315;7311:11;7276:74;:::i;:::-;7266:84;;;6689:667;;;;;;;:::o;7361:127::-;7422:10;7417:3;7413:20;7410:1;7403:31;7453:4;7450:1;7443:15;7477:4;7474:1;7467:15;7493:336;7633:2;7618:18;;7666:1;7655:13;;7645:144;;7711:10;7706:3;7702:20;7699:1;7692:31;7746:4;7743:1;7736:15;7774:4;7771:1;7764:15;7645:144;7798:25;;;7493:336;:::o;7834:264::-;7901:6;7954:2;7942:9;7933:7;7929:23;7925:32;7922:52;;;7970:1;7967;7960:12;7922:52;8009:9;7996:23;8048:1;8041:5;8038:12;8028:40;;8064:1;8061;8054:12;8292:260;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;8460:29;8479:9;8460:29;:::i;8557:380::-;8636:1;8632:12;;;;8679;;;8700:61;;8754:4;8746:6;8742:17;8732:27;;8700:61;8807:2;8799:6;8796:14;8776:18;8773:38;8770:161;;;8853:10;8848:3;8844:20;8841:1;8834:31;8888:4;8885:1;8878:15;8916:4;8913:1;8906:15;8770:161;;8557:380;;;:::o;10182:356::-;10384:2;10366:21;;;10403:18;;;10396:30;10462:34;10457:2;10442:18;;10435:62;10529:2;10514:18;;10182:356::o;11306:413::-;11508:2;11490:21;;;11547:2;11527:18;;;11520:30;11586:34;11581:2;11566:18;;11559:62;-1:-1:-1;;;11652:2:20;11637:18;;11630:47;11709:3;11694:19;;11306:413::o;12084:340::-;12286:2;12268:21;;;12325:2;12305:18;;;12298:30;-1:-1:-1;;;12359:2:20;12344:18;;12337:46;12415:2;12400:18;;12084:340::o;12429:127::-;12490:10;12485:3;12481:20;12478:1;12471:31;12521:4;12518:1;12511:15;12545:4;12542:1;12535:15;12561:168;12601:7;12667:1;12663;12659:6;12655:14;12652:1;12649:21;12644:1;12637:9;12630:17;12626:45;12623:71;;;12674:18;;:::i;:::-;-1:-1:-1;12714:9:20;;12561:168::o;13443:128::-;13483:3;13514:1;13510:6;13507:1;13504:13;13501:39;;;13520:18;;:::i;:::-;-1:-1:-1;13556:9:20;;13443:128::o;14394:135::-;14433:3;-1:-1:-1;;14454:17:20;;14451:43;;;14474:18;;:::i;:::-;-1:-1:-1;14521:1:20;14510:13;;14394:135::o;17159:127::-;17220:10;17215:3;17211:20;17208:1;17201:31;17251:4;17248:1;17241:15;17275:4;17272:1;17265:15;21699:973;21784:12;;21749:3;;21839:1;21859:18;;;;21912;;;;21939:61;;21993:4;21985:6;21981:17;21971:27;;21939:61;22019:2;22067;22059:6;22056:14;22036:18;22033:38;22030:161;;;22113:10;22108:3;22104:20;22101:1;22094:31;22148:4;22145:1;22138:15;22176:4;22173:1;22166:15;22030:161;22207:18;22234:104;;;;22352:1;22347:319;;;;22200:466;;22234:104;-1:-1:-1;;22267:24:20;;22255:37;;22312:16;;;;-1:-1:-1;22234:104:20;;22347:319;21646:1;21639:14;;;21683:4;21670:18;;22441:1;22455:165;22469:6;22466:1;22463:13;22455:165;;;22547:14;;22534:11;;;22527:35;22590:16;;;;22484:10;;22455:165;;;22459:3;;22649:6;22644:3;22640:16;22633:23;;22200:466;;;;;;;21699:973;;;;:::o;22677:456::-;22898:3;22926:38;22960:3;22952:6;22926:38;:::i;:::-;22993:6;22987:13;23009:52;23054:6;23050:2;23043:4;23035:6;23031:17;23009:52;:::i;:::-;23077:50;23119:6;23115:2;23111:15;23103:6;23077:50;:::i;:::-;23070:57;22677:456;-1:-1:-1;;;;;;;22677:456:20:o;23982:125::-;24022:4;24050:1;24047;24044:8;24041:34;;;24055:18;;:::i;:::-;-1:-1:-1;24092:9:20;;23982:125::o;27872:414::-;28074:2;28056:21;;;28113:2;28093:18;;;28086:30;28152:34;28147:2;28132:18;;28125:62;-1:-1:-1;;;28218:2:20;28203:18;;28196:48;28276:3;28261:19;;27872:414::o;28291:127::-;28352:10;28347:3;28343:20;28340:1;28333:31;28383:4;28380:1;28373:15;28407:4;28404:1;28397:15;28423:120;28463:1;28489;28479:35;;28494:18;;:::i;:::-;-1:-1:-1;28528:9:20;;28423:120::o;28548:112::-;28580:1;28606;28596:35;;28611:18;;:::i;:::-;-1:-1:-1;28645:9:20;;28548:112::o;28665:489::-;-1:-1:-1;;;;;28934:15:20;;;28916:34;;28986:15;;28981:2;28966:18;;28959:43;29033:2;29018:18;;29011:34;;;29081:3;29076:2;29061:18;;29054:31;;;28859:4;;29102:46;;29128:19;;29120:6;29102:46;:::i;:::-;29094:54;28665:489;-1:-1:-1;;;;;;28665:489:20:o;29159:249::-;29228:6;29281:2;29269:9;29260:7;29256:23;29252:32;29249:52;;;29297:1;29294;29287:12;29249:52;29329:9;29323:16;29348:30;29372:5;29348:30;:::i;29413:127::-;29474:10;29469:3;29465:20;29462:1;29455:31;29505:4;29502:1;29495:15;29529:4;29526:1;29519:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, sent, and interact with CRYPTIDS",
    "title": "CryptidToken NFT Contract",
    "version": 1
  },
  "offset": [
    710,
    8654
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC6AB67A3 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDE7FCB1D GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x98F JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0x9AF JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0x9CF JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE3CD997 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x89B JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x8BB JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x8D0 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CAAD01 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xBB31B77B EQ PUSH2 0x7A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0x7B671780 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x57ED9E4E EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x349 JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9F JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2F1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F63 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x3019 JUMP JUMPDEST PUSH2 0xC5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x415 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x3062 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x443 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F63 JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x443 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x309E JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x443 PUSH2 0x130E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x1428 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x544 CALLDATASIZE PUSH1 0x4 PUSH2 0x3062 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x312E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0x151F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3019 JUMP JUMPDEST PUSH2 0x15B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x1642 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x390 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0x1693 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0x170A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x1798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x653 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x17AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x1832 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x186C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x6BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0x19CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x1A01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x1B06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0x1B3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x390 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x760 CALLDATASIZE PUSH1 0x4 PUSH2 0x319E JUMP JUMPDEST PUSH2 0x1B4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x780 CALLDATASIZE PUSH1 0x4 PUSH2 0x31DA JUMP JUMPDEST PUSH2 0x1B58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x320D JUMP JUMPDEST PUSH2 0x1C9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x7DF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x329F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x390 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0x1D26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0x1D33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0x866 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2E JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x886 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x8B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x1DF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x1F39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x8EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3019 JUMP JUMPDEST PUSH2 0x1F44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x1F87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x91F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x1F9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x9AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x2096 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0x9CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x2134 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3E7 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA2C SWAP1 PUSH2 0x3304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA58 SWAP1 PUSH2 0x3304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB54 DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xBDE JUMPI POP PUSH2 0xBDE DUP2 CALLER PUSH2 0x961 JUMP JUMPDEST PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xC5A DUP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD5C SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD6A CALLER DUP3 PUSH2 0x222C JUMP JUMPDEST PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH2 0xC5A DUP4 DUP4 DUP4 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST CALLVALUE DUP2 PUSH1 0x17 SLOAD PUSH2 0xE1B SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST EQ PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7D PUSH2 0x3289 JUMP JUMPDEST EQ PUSH2 0xECA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 PUSH2 0xED7 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x3424 JUMP JUMPDEST GT ISZERO PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND DUP2 GT ISZERO PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0xFE2 JUMPI PUSH2 0xFC2 CALLER PUSH2 0xFBD PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24CA JUMP JUMPDEST PUSH2 0xFD0 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0xFDA DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA9 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF6 DUP4 PUSH2 0x17AB JUMP JUMPDEST DUP3 LT PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x10D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST CALLVALUE PUSH1 0x17 SLOAD EQ PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x3289 JUMP JUMPDEST EQ PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1228 SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x24E4 SWAP1 POP JUMP JUMPDEST PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1300 SWAP1 PUSH2 0x12FB PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24FA JUMP JUMPDEST PUSH2 0xFE2 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2BB4BA34323930BBB6103330B4B632B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x1460 PUSH2 0x2648 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x148A DUP4 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A7 JUMPI PUSH2 0x14A7 PUSH2 0x2F8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x14E8 DUP6 DUP3 PUSH2 0xFEB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14FA JUMPI PUSH2 0x14FA PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x150F DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15A0 JUMPI PUSH2 0x15A0 PUSH2 0x3457 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x15E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD5C SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1717 SWAP1 PUSH2 0x3304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1743 SWAP1 PUSH2 0x3304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1790 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1765 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1790 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1773 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A6 PUSH2 0x609 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1862 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x1460 PUSH1 0x0 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x189C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18B5 JUMPI PUSH2 0x18B5 PUSH2 0x3289 JUMP JUMPDEST EQ PUSH2 0x1902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1915 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x3424 JUMP JUMPDEST GT ISZERO PUSH2 0x1977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xD5C JUMPI PUSH2 0x19AC CALLER PUSH2 0xFBD PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19BA PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x19C4 DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1995 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x19FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x1A40 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1A8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x1460 PUSH2 0x2735 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA2C SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0xD5C CALLER DUP4 DUP4 PUSH2 0x278D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA1 PUSH2 0x3289 JUMP JUMPDEST GT PUSH2 0x1BE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1BF5 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BFF SWAP2 SWAP1 PUSH2 0x3424 JUMP JUMPDEST GT ISZERO PUSH2 0x1C60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xC5A JUMPI PUSH2 0x1C7A DUP3 PUSH2 0xFBD PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C88 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1C92 DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1CA4 CALLER DUP4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x1CC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x3374 JUMP JUMPDEST PUSH2 0x1CCC DUP5 DUP5 DUP5 DUP5 PUSH2 0x285C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1D02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x1717 SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x1717 SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xF PUSH2 0x1DCB DUP4 PUSH2 0x288F JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1F12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F31 PUSH2 0x3289 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1F74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD5C SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F92 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x353A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1FCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x1FDE SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x202D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2085 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x212B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA17 JUMPI POP PUSH2 0xA17 DUP3 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x21F3 DUP3 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B0 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x22EB JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22E0 DUP5 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x231B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2336 DUP3 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x239A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x23FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x2407 DUP4 DUP4 DUP4 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x2412 PUSH1 0x0 DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x243B SWAP1 DUP5 SWAP1 PUSH2 0x353A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2469 SWAP1 DUP5 SWAP1 PUSH2 0x3424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xD5C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2A0B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24F1 DUP6 DUP5 PUSH2 0x2A3E JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x25EA SWAP1 DUP5 SWAP1 PUSH2 0x3424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x2691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x26BE CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x27EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2867 DUP5 DUP5 DUP5 PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x2873 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x28B3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x28DD JUMPI DUP1 PUSH2 0x28C7 DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP PUSH2 0x28D6 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x35B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28F8 JUMPI PUSH2 0x28F8 PUSH2 0x2F8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2922 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x231B JUMPI PUSH2 0x2937 PUSH1 0x1 DUP4 PUSH2 0x353A JUMP JUMPDEST SWAP2 POP PUSH2 0x2944 PUSH1 0xA DUP7 PUSH2 0x35CD JUMP JUMPDEST PUSH2 0x294F SWAP1 PUSH1 0x30 PUSH2 0x3424 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2964 JUMPI PUSH2 0x2964 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2986 PUSH1 0xA DUP7 PUSH2 0x35B9 JUMP JUMPDEST SWAP5 POP PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x29BE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA17 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA17 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2A00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0xC5A DUP4 DUP4 DUP4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0x2A15 DUP4 DUP4 PUSH2 0x24FA JUMP JUMPDEST PUSH2 0x2A22 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1517 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A60 JUMPI PUSH2 0x2A60 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2A86 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x2A97 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2AA2 DUP2 PUSH2 0x343C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2B9D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2AEE SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x35E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2B29 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2B26 SWAP2 DUP2 ADD SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B83 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B57 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x3551 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C03 JUMPI PUSH2 0x2BFE DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2C26 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C26 JUMPI PUSH2 0x2C26 DUP4 DUP3 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C3D JUMPI PUSH2 0xC5A DUP2 PUSH2 0x2CFD JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC5A JUMPI PUSH2 0xC5A DUP3 DUP3 PUSH2 0x2DAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2C6D DUP5 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x2C77 SWAP2 SWAP1 PUSH2 0x353A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2CCA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2D0F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x353A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2D37 JUMPI PUSH2 0x2D37 PUSH2 0x3457 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D58 JUMPI PUSH2 0x2D58 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2D90 JUMPI PUSH2 0x2D90 PUSH2 0x363B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DB7 DUP4 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2DFC SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2E1E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2E64 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2E37 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2E64 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2E64 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2E64 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E49 JUMP JUMPDEST POP PUSH2 0x2E70 SWAP3 SWAP2 POP PUSH2 0x2E74 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E70 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2EBC DUP2 PUSH2 0x2E89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EDE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2EC6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2F07 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2EBC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F7F DUP4 PUSH2 0x2F47 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2FBE JUMPI PUSH2 0x2FBE PUSH2 0x2F8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2FE6 JUMPI PUSH2 0x2FE6 PUSH2 0x2F8D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2FFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x302B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3080 DUP5 PUSH2 0x2F47 JUMP JUMPDEST SWAP3 POP PUSH2 0x308E PUSH1 0x20 DUP6 ADD PUSH2 0x2F47 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EBC DUP3 PUSH2 0x2F47 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3166 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x314A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2F5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EBC DUP3 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31BA DUP4 PUSH2 0x2F47 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x31CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31F6 DUP4 PUSH2 0x3172 JUMP JUMPDEST SWAP2 POP PUSH2 0x3204 PUSH1 0x20 DUP5 ADD PUSH2 0x2F47 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x322C DUP6 PUSH2 0x2F47 JUMP JUMPDEST SWAP4 POP PUSH2 0x323A PUSH1 0x20 DUP7 ADD PUSH2 0x2F47 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x325D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x326E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x327D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2FA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x32C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x2EBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31F6 DUP4 PUSH2 0x2F47 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3318 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3339 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x341F JUMPI PUSH2 0x341F PUSH2 0x33EF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3437 JUMPI PUSH2 0x3437 PUSH2 0x33EF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3450 JUMPI PUSH2 0x3450 PUSH2 0x33EF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3487 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x34A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x34BD JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x34CE JUMPI PUSH2 0x34FB JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x34FB JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x34F3 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x34DA JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3513 DUP3 DUP7 PUSH2 0x346D JUMP JUMPDEST DUP5 MLOAD PUSH2 0x3523 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x352F DUP2 DUP4 ADD DUP7 PUSH2 0x346D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x354C JUMPI PUSH2 0x354C PUSH2 0x33EF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x35C8 JUMPI PUSH2 0x35C8 PUSH2 0x35A3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x35DC JUMPI PUSH2 0x35DC PUSH2 0x35A3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3614 SWAP1 DUP4 ADD DUP5 PUSH2 0x2EEF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2EBC DUP2 PUSH2 0x2E89 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL BALANCE DUP14 CODESIZE LT PUSH24 0x6D82A79C22D722F44E8B4A545769E7A32A26F4F5D661ABD4 0xC0 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36B"
    },
    "12": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "25": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C6"
    },
    "29": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "36": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF7"
    },
    "40": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "47": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98F"
    },
    "73": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "80": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9AF"
    },
    "84": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9CF"
    },
    "95": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E5"
    },
    "106": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "118": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x905"
    },
    "122": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x931"
    },
    "133": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x946"
    },
    "144": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "149": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "156": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "157": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "167": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89B"
    },
    "171": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "178": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BB"
    },
    "182": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "189": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D0"
    },
    "193": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "200": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F0"
    },
    "204": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "209": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "210": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "211": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "216": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "217": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x836"
    },
    "220": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "227": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84B"
    },
    "231": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "238": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86B"
    },
    "242": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "245": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "246": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "247": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "248": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "249": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "254": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "258": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "265": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E"
    },
    "269": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "276": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C5"
    },
    "280": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "287": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7EC"
    },
    "291": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "298": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x80B"
    },
    "302": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "309": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x821"
    },
    "313": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "317": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "318": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "319": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "320": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "325": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "326": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x765"
    },
    "329": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "336": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x785"
    },
    "340": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "347": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A5"
    },
    "351": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "355": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "356": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "357": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "358": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "363": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A0"
    },
    "367": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "374": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6ED"
    },
    "378": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "385": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x710"
    },
    "389": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "396": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x725"
    },
    "400": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "407": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x745"
    },
    "411": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "414": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "415": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "416": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "417": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "418": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "423": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "424": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A3"
    },
    "427": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "428": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "429": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "434": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C3"
    },
    "438": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "445": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D8"
    },
    "449": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "452": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "453": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "454": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "455": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "456": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "461": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A0"
    },
    "465": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "466": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "467": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "472": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23E"
    },
    "476": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "483": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x218"
    },
    "487": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "494": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x638"
    },
    "498": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "505": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x658"
    },
    "509": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "516": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66D"
    },
    "520": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "527": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x683"
    },
    "531": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "534": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "535": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "536": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "537": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "538": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "543": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "544": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5EE"
    },
    "547": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "548": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "549": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "554": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "555": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60E"
    },
    "558": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "565": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x623"
    },
    "569": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "572": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "573": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "574": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "575": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "576": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "581": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27A"
    },
    "585": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "586": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "587": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "592": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x576"
    },
    "596": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "597": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "598": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "603": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "604": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x596"
    },
    "607": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x57ED9E4E"
    },
    "614": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B6"
    },
    "618": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "625": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D6"
    },
    "629": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "632": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "633": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "634": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "635": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "636": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "641": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x514"
    },
    "645": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "646": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "647": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "652": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x529"
    },
    "656": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "657": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "663": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "664": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x549"
    },
    "667": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "670": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "671": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "672": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "673": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "674": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "679": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30D"
    },
    "683": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "684": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "685": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "690": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7"
    },
    "694": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "695": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "696": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "701": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C3"
    },
    "705": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "712": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E3"
    },
    "716": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "723": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F9"
    },
    "727": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "734": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50C"
    },
    "738": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "741": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "742": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "743": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "744": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "745": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "750": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "754": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "755": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "756": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2DB11544"
    },
    "761": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49A"
    },
    "765": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "766": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "767": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "772": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "773": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AD"
    },
    "776": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "779": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "780": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "781": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "782": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "783": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "788": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "GT",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349"
    },
    "792": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "793": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "794": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "799": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FF"
    },
    "803": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "804": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "805": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "810": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x423"
    },
    "814": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "821": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x445"
    },
    "825": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "832": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x465"
    },
    "836": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "839": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "840": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "841": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "842": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "843": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "848": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x370"
    },
    "852": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "853": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "854": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "859": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A5"
    },
    "863": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "864": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "865": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "870": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "EQ",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C7"
    },
    "874": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "878": {
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "879": {
      "first_revert": true,
      "fn": null,
      "offset": [
        710,
        8654
      ],
      "op": "REVERT",
      "path": "16"
    },
    "880": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "881": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "882": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "DUP1",
      "path": "16"
    },
    "883": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "884": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37C"
    },
    "887": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "888": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "890": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "DUP1",
      "path": "16"
    },
    "891": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "REVERT",
      "path": "16"
    },
    "892": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x390"
    },
    "897": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38B"
    },
    "900": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "901": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "903": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9F"
    },
    "906": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMP",
      "path": "16"
    },
    "907": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "908": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0C"
    },
    "911": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMP",
      "path": "16"
    },
    "912": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "913": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "915": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "916": {
      "op": "SWAP1"
    },
    "917": {
      "op": "ISZERO"
    },
    "918": {
      "op": "ISZERO"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "925": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "927": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "928": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "DUP1",
      "path": "16"
    },
    "929": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "930": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "SUB",
      "path": "16"
    },
    "931": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "932": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "RETURN",
      "path": "16"
    },
    "933": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "934": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "935": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "936": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "937": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "941": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "943": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "944": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "REVERT",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "POP",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BA"
    },
    "950": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1D"
    },
    "953": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "954": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39C"
    },
    "961": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "962": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "963": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F1B"
    },
    "966": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "970": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "971": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D3"
    },
    "974": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "975": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "977": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "978": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "REVERT",
      "path": "3"
    },
    "979": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E7"
    },
    "984": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E2"
    },
    "987": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F2E"
    },
    "993": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "994": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "995": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAF"
    },
    "998": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1002": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1009": {
      "op": "SHL"
    },
    "1010": {
      "op": "SUB"
    },
    "1011": {
      "op": "SWAP1"
    },
    "1012": {
      "op": "SWAP2"
    },
    "1013": {
      "op": "AND"
    },
    "1014": {
      "op": "DUP2"
    },
    "1015": {
      "op": "MSTORE"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39C"
    },
    "1022": {
      "op": "JUMP"
    },
    "1023": {
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1024": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1025": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1027": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x40B"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1036": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "POP",
      "path": "16"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "1040": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1042": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1043": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1044": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1045": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1049": {
      "op": "SWAP1"
    },
    "1050": {
      "op": "DUP2"
    },
    "1051": {
      "op": "MSTORE"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "1058": {
      "op": "JUMP"
    },
    "1059": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1061": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1063": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42F"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1070": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1071": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43E"
    },
    "1079": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1080": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F63"
    },
    "1085": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "1090": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "3"
    },
    "1093": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1094": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1095": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1096": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1097": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x451"
    },
    "1100": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1101": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1103": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1104": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1105": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1106": {
      "op": "POP"
    },
    "1107": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1110": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x460"
    },
    "1113": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1114": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1116": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3019"
    },
    "1119": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1120": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1121": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC5F"
    },
    "1124": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1125": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1126": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1127": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1128": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1129": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x471"
    },
    "1132": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1133": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1135": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1136": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1137": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1141": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1142": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x415"
    },
    "1145": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1147": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1148": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1149": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1150": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x486"
    },
    "1153": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1154": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1156": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1157": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1158": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1163": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x495"
    },
    "1166": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1167": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1169": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3062"
    },
    "1172": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1173": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1174": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD60"
    },
    "1177": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1178": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1179": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1182": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A8"
    },
    "1185": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1186": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1188": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2E"
    },
    "1191": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1192": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1193": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD91"
    },
    "1196": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1197": {
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1198": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1199": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1200": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1201": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B9"
    },
    "1204": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1205": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1207": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1208": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1209": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1210": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "POP",
      "path": "16"
    },
    "1211": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "1214": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1216": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1217": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1218": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1219": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1220": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1221": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1222": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1223": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CF"
    },
    "1226": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1227": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1229": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1230": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1231": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1232": {
      "op": "POP"
    },
    "1233": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x415"
    },
    "1236": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DE"
    },
    "1239": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1240": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F63"
    },
    "1245": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1246": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1247": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFEB"
    },
    "1250": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1251": {
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1252": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1253": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1254": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1255": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4EF"
    },
    "1258": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1259": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1261": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1262": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1263": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1264": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "POP",
      "path": "16"
    },
    "1265": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "1268": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1270": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1271": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1272": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1273": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1274": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1277": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x507"
    },
    "1280": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1281": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1283": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x309E"
    },
    "1286": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3021,
        3656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1287": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1288": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1081"
    },
    "1291": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3021,
        3656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1292": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6666,
        6930
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1293": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6666,
        6930
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1296": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6666,
        6930
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x130E"
    },
    "1299": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        6666,
        6930
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1300": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1301": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1302": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1303": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1304": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x520"
    },
    "1307": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1308": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1310": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1311": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1312": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1313": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "POP",
      "path": "16"
    },
    "1314": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1317": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1428"
    },
    "1320": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1321": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1324": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x535"
    },
    "1328": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1329": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1331": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1338": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x544"
    },
    "1341": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1342": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3062"
    },
    "1347": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1462"
    },
    "1352": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1353": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1354": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1355": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1356": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1357": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x555"
    },
    "1360": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1361": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1363": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1364": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1365": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x569"
    },
    "1370": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x564"
    },
    "1373": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1374": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1376": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3113"
    },
    "1379": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1380": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1381": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x147D"
    },
    "1384": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1385": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1386": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1388": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1389": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "1392": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1393": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1394": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x312E"
    },
    "1397": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1398": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1399": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1400": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1401": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1402": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x582"
    },
    "1405": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1406": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1408": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1409": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1410": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x415"
    },
    "1415": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x591"
    },
    "1418": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1419": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1421": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F2E"
    },
    "1424": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1425": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1426": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151F"
    },
    "1429": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1430": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1431": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1432": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1433": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1434": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A2"
    },
    "1437": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1438": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1440": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1441": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1442": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1443": {
      "op": "POP"
    },
    "1444": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1447": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B1"
    },
    "1450": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1451": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1453": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3019"
    },
    "1456": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1457": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1458": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15B2"
    },
    "1461": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1462": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1463": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1464": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1465": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1466": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C2"
    },
    "1469": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1470": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1472": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1473": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1474": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1479": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D1"
    },
    "1482": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1483": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1485": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3113"
    },
    "1488": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1489": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1490": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1642"
    },
    "1493": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1494": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1495": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1496": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1497": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1498": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E2"
    },
    "1501": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1502": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1504": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1505": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1506": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1510": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1511": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1513": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1514": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x390"
    },
    "1517": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1518": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1519": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1520": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1521": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1522": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5FA"
    },
    "1525": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1526": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1528": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1529": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1530": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E7"
    },
    "1535": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x609"
    },
    "1538": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1539": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F2E"
    },
    "1544": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1545": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1546": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "1549": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1550": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1551": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1552": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1553": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x61A"
    },
    "1557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1558": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1562": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1563": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "1564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BA"
    },
    "1567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x170A"
    },
    "1570": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1571": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1572": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1573": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1574": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1575": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62F"
    },
    "1578": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1579": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1581": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1582": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1583": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1584": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "POP",
      "path": "16"
    },
    "1585": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E7"
    },
    "1588": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1798"
    },
    "1591": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1592": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1593": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1594": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1595": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1596": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x644"
    },
    "1599": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1600": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1603": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1604": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x415"
    },
    "1609": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x653"
    },
    "1612": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1613": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3113"
    },
    "1618": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1619": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1620": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17AB"
    },
    "1623": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1627": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1628": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x664"
    },
    "1631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1634": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x443"
    },
    "1641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1832"
    },
    "1644": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1645": {
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x679"
    },
    "1652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1656": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "POP",
      "path": "16"
    },
    "1659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "1662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1666": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1667": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1668": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1669": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1670": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1671": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x68F"
    },
    "1674": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1675": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1677": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1678": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1679": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1684": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x69E"
    },
    "1687": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1688": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1690": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3183"
    },
    "1693": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1694": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1695": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186C"
    },
    "1698": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1699": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1700": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1701": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1702": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1703": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AF"
    },
    "1706": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1707": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1709": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1710": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1711": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1716": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6BE"
    },
    "1719": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1720": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1722": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2E"
    },
    "1725": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1726": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1727": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19CC"
    },
    "1730": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1731": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1732": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1733": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1734": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1735": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6CF"
    },
    "1738": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1739": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1741": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1742": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1743": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1744": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "POP",
      "path": "16"
    },
    "1745": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1748": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A01"
    },
    "1751": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1752": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1753": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1754": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1755": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1756": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E4"
    },
    "1759": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1760": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1762": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1763": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1764": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1765": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "POP",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1769": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B06"
    },
    "1772": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4906,
        4967
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1773": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1774": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1775": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1776": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1777": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1781": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1783": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1784": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1785": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1789": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1790": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1793": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "op": "SUB"
    },
    "1803": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1804": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E7"
    },
    "1807": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1809": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1810": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1811": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1812": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71C"
    },
    "1815": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1816": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1818": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1819": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1820": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1821": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "POP",
      "path": "3"
    },
    "1822": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BA"
    },
    "1825": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3E"
    },
    "1828": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1829": {
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1830": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1831": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1832": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1833": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x731"
    },
    "1836": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1837": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1839": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1840": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1841": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1845": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1846": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x390"
    },
    "1849": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1850": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "1854": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1855": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DIV",
      "path": "16"
    },
    "1856": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1858": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "AND",
      "path": "16"
    },
    "1859": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1860": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1861": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1862": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1863": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1864": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1865": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x751"
    },
    "1868": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1872": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1873": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1878": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x760"
    },
    "1881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1882": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x319E"
    },
    "1887": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B4D"
    },
    "1892": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1893": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1894": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1895": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1896": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1897": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x771"
    },
    "1900": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1901": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1903": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1904": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1905": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1910": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x780"
    },
    "1913": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1914": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1916": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31DA"
    },
    "1919": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1920": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1921": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B58"
    },
    "1924": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1925": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1927": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1928": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1929": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x791"
    },
    "1932": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1933": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A0"
    },
    "1945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x320D"
    },
    "1951": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C9A"
    },
    "1956": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1957": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1958": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1959": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1960": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1961": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7B1"
    },
    "1964": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1965": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1967": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1968": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1969": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "1974": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C0"
    },
    "1977": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1978": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1980": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3113"
    },
    "1983": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1984": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1985": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CD2"
    },
    "1988": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1989": {
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1990": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1991": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1992": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1993": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1997": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1999": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2000": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2001": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2005": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2006": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7DF"
    },
    "2009": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2010": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2012": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "AND",
      "path": "16"
    },
    "2013": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2014": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2015": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2016": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2018": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2019": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "2022": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2023": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2024": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x329F"
    },
    "2027": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2028": {
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2029": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2030": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2031": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2032": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F8"
    },
    "2035": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2036": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2038": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2039": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2040": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2044": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2045": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x390"
    },
    "2048": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2049": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2052": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2053": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DIV",
      "path": "16"
    },
    "2054": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2056": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "AND",
      "path": "16"
    },
    "2057": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2058": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2059": {
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2060": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2061": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2062": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2063": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x817"
    },
    "2066": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2067": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2069": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2070": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2071": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2072": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "POP",
      "path": "16"
    },
    "2073": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "2076": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2078": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2079": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2080": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2081": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2082": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2083": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2084": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2085": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x82D"
    },
    "2088": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2089": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2091": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2092": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2093": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2094": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "POP",
      "path": "16"
    },
    "2095": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BA"
    },
    "2098": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D26"
    },
    "2101": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2102": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2103": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2104": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2105": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2106": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x842"
    },
    "2109": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2110": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2112": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2113": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2114": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2115": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "POP",
      "path": "16"
    },
    "2116": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BA"
    },
    "2119": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D33"
    },
    "2122": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2123": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2124": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2125": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2127": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x857"
    },
    "2130": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2131": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2133": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2134": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2135": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BA"
    },
    "2140": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x866"
    },
    "2143": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2146": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2E"
    },
    "2149": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2150": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2151": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D40"
    },
    "2154": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2155": {
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2156": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2157": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x877"
    },
    "2162": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2163": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2165": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2166": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2167": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x390"
    },
    "2172": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x886"
    },
    "2175": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2176": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2178": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3113"
    },
    "2181": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2182": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2183": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2185": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2187": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2188": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2190": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2193": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2195": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2197": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2198": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2200": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "AND",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2203": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2204": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2205": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2206": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2207": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2211": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2213": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2214": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2215": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "2220": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B6"
    },
    "2223": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2224": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2226": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32C7"
    },
    "2229": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2230": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2231": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF5"
    },
    "2234": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2235": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2236": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2237": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2238": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2239": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C7"
    },
    "2242": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2243": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2245": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2246": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2247": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2248": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "POP",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "2252": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F39"
    },
    "2255": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7360,
        7451
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2256": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2257": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2258": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2259": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2260": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8DC"
    },
    "2263": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2264": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2266": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2267": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2268": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "2273": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8EB"
    },
    "2276": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2277": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2279": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3019"
    },
    "2282": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2283": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2284": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F44"
    },
    "2287": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2288": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2290": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2291": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2292": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FC"
    },
    "2295": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2296": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2298": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2299": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2300": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2301": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "POP",
      "path": "16"
    },
    "2302": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "2305": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F87"
    },
    "2308": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        7730,
        7842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2309": {
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2310": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2311": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2312": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2313": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x911"
    },
    "2316": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2317": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2319": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2320": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2322": {
      "op": "POP"
    },
    "2323": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2325": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2326": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91F"
    },
    "2329": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2330": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2332": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "AND",
      "path": "16"
    },
    "2333": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2336": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2338": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2341": {
      "op": "SWAP1"
    },
    "2342": {
      "op": "SWAP2"
    },
    "2343": {
      "op": "AND"
    },
    "2344": {
      "op": "DUP2"
    },
    "2345": {
      "op": "MSTORE"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2354": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2355": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2356": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2357": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93D"
    },
    "2360": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2361": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2363": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2364": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2365": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "POP",
      "path": "16"
    },
    "2367": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "2370": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9F"
    },
    "2373": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x952"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x390"
    },
    "2391": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x961"
    },
    "2394": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2397": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32E8"
    },
    "2400": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2401": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "2411": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "2413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2416": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2417": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2418": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2420": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2422": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2423": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2424": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2427": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2428": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2429": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2430": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2431": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2432": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2436": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2438": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2439": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2440": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2441": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2445": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99B"
    },
    "2454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2458": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2460": {
      "op": "POP"
    },
    "2461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x443"
    },
    "2464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AA"
    },
    "2467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3113"
    },
    "2473": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2096"
    },
    "2478": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2479": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2480": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2481": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2482": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2483": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9BB"
    },
    "2486": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2487": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2489": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2490": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2491": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x443"
    },
    "2496": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9CA"
    },
    "2499": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2500": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2502": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3113"
    },
    "2505": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2506": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2507": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2134"
    },
    "2510": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2511": {
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2512": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2513": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2514": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2515": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9DB"
    },
    "2518": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2519": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2521": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2522": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2523": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2524": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "POP",
      "path": "16"
    },
    "2525": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "2528": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2530": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2531": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2532": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2533": {
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2534": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2535": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2536": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2537": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9F1"
    },
    "2540": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2541": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2543": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2544": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2545": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2549": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2550": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E7"
    },
    "2553": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2554": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "2559": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2560": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DIV",
      "path": "16"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "SUB"
    },
    "2569": {
      "offset": [
        1337,
        1413
      ],
      "op": "AND",
      "path": "16"
    },
    "2570": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2571": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2572": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2573": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8585,
        8589
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2575": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8608,
        8644
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0xA17"
    },
    "2578": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8632,
        8643
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2579": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8608,
        8631
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2199"
    },
    "2582": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8608,
        8644
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2583": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8608,
        8644
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2584": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8601,
        8644
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2585": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8482,
        8651
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2586": {
      "op": "POP"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        8482,
        8651
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2589": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2590": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2592": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "2594": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2595": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2596": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2C"
    },
    "2599": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2600": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3304"
    },
    "2603": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2604": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2605": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2606": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2608": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2609": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2611": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2612": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2613": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2614": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2615": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2617": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2618": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2620": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2621": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2622": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2623": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2624": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2626": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2627": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2628": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2629": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2630": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2631": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2632": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2633": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2634": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2636": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2637": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2638": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2639": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2640": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA58"
    },
    "2643": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2644": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3304"
    },
    "2647": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2648": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2649": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2650": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2651": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA5"
    },
    "2654": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2655": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2656": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2658": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "3"
    },
    "2659": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7A"
    },
    "2662": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2663": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2666": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2667": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2668": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2669": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2670": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2671": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2672": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2673": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2674": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2677": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2678": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA5"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2682": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2683": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2684": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2686": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2687": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2689": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2690": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2697": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2698": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2701": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2702": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2705": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2711": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "3"
    },
    "2712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA88"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2716": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "3"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2728": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2735": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2738": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2739": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2740": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2741": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2743": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2746": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2748": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2749": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2750": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "op": "SUB"
    },
    "2759": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0xB2D"
    },
    "2763": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2766": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2773": {
      "op": "SHL"
    },
    "2774": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2775": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "3"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2787": {
      "op": "DUP3"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "op": "MSTORE"
    },
    "2790": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2853": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2855": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2856": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2857": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2858": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "3"
    },
    "2859": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2865": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2866": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2868": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2870": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2872": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2873": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2875": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2876": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2877": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2884": {
      "op": "SHL"
    },
    "2885": {
      "op": "SUB"
    },
    "2886": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "3"
    },
    "2887": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2888": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2889": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2890": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2892": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB54"
    },
    "2895": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2896": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "2899": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2900": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2901": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "3"
    },
    "2903": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "op": "SUB"
    },
    "2912": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2913": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "op": "SUB"
    },
    "2922": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2923": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "3"
    },
    "2924": {
      "branch": 175,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2925": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC2"
    },
    "2928": {
      "branch": 175,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2929": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2931": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2940": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2945": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2946": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "3"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2952": {
      "op": "DUP3"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2990": {
      "op": "DUP3"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "MSTORE"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "op": "MSTORE"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "3009": {
      "op": "JUMP"
    },
    "3010": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3011": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "op": "SUB"
    },
    "3020": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "3021": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "3"
    },
    "3022": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "3"
    },
    "3023": {
      "branch": 176,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3024": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBDE"
    },
    "3027": {
      "branch": 176,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBDE"
    },
    "3032": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3033": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3034": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x961"
    },
    "3037": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3038": {
      "branch": 177,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3039": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC50"
    },
    "3042": {
      "branch": 177,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3043": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3045": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3054": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3057": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3059": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3060": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "3"
    },
    "3061": {
      "op": "MSTORE"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3066": {
      "op": "DUP3"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "op": "MSTORE"
    },
    "3069": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3104": {
      "op": "DUP3"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "op": "MSTORE"
    },
    "3107": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3142": {
      "op": "DUP3"
    },
    "3143": {
      "op": "ADD"
    },
    "3144": {
      "op": "MSTORE"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3147": {
      "op": "ADD"
    },
    "3148": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "3151": {
      "op": "JUMP"
    },
    "3152": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3153": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0xC5A"
    },
    "3156": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3157": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3158": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21BE"
    },
    "3161": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3162": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3163": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3164": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3165": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3166": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3167": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3168": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3170": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "op": "SUB"
    },
    "3179": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3182": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3184": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3185": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3186": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3187": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3188": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8F"
    },
    "3191": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "3210": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3211": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "3214": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3215": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3216": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6101,
        6102
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3218": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6075,
        6090
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3219": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6069,
        6098
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3220": {
      "branch": 153,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6069,
        6102
      ],
      "op": "GT",
      "path": "16"
    },
    "3221": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF0"
    },
    "3224": {
      "branch": 153,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3225": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3227": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3236": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3239": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3241": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3242": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "ADD",
      "path": "16"
    },
    "3243": {
      "op": "MSTORE"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3248": {
      "op": "DUP3"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3302": {
      "op": "DUP3"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "op": "MSTORE"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "3311": {
      "op": "JUMP"
    },
    "3312": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6061,
        6146
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3313": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x11"
    },
    "3315": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3316": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "3320": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3321": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "DIV",
      "path": "16"
    },
    "3322": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3324": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6185
      ],
      "op": "AND",
      "path": "16"
    },
    "3325": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6164,
        6185
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3326": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD49"
    },
    "3329": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3330": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3332": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3339": {
      "op": "SHL"
    },
    "3340": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3341": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3344": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3346": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3347": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "ADD",
      "path": "16"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3391": {
      "op": "DUP3"
    },
    "3392": {
      "op": "ADD"
    },
    "3393": {
      "op": "MSTORE"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "3400": {
      "op": "JUMP"
    },
    "3401": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6156,
        6216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3402": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "3403": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3404": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "3407": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3408": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6240
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3410": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6240
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3411": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3413": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3414": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "ADD",
      "path": "16"
    },
    "3415": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3416": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DF0"
    },
    "3419": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6226,
        6258
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3420": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3421": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "POP",
      "path": "16"
    },
    "3422": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "POP",
      "path": "16"
    },
    "3423": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3424": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3425": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0xD6A"
    },
    "3428": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3429": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3430": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222C"
    },
    "3433": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3434": {
      "branch": 178,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3435": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD86"
    },
    "3438": {
      "branch": 178,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3439": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3441": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3448": {
      "op": "SHL"
    },
    "3449": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3450": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3451": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3453": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "3"
    },
    "3454": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "3457": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3458": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3374"
    },
    "3461": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3462": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3463": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0xC5A"
    },
    "3466": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3467": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3468": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3469": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2323"
    },
    "3472": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3473": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3474": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3476": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3478": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3479": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "3480": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3481": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE4"
    },
    "3484": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3485": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3487": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3494": {
      "op": "SHL"
    },
    "3495": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3496": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3499": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3501": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3502": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3546": {
      "op": "DUP3"
    },
    "3547": {
      "op": "ADD"
    },
    "3548": {
      "op": "MSTORE"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB24"
    },
    "3555": {
      "op": "JUMP"
    },
    "3556": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3557": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3559": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3561": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3562": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3564": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3565": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3567": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "3568": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3569": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0C"
    },
    "3572": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3573": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3575": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3582": {
      "op": "SHL"
    },
    "3583": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3584": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3585": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3587": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3588": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB24"
    },
    "3591": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3592": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33C5"
    },
    "3595": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3596": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3597": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4393,
        4402
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 18
    },
    "3598": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4379,
        4389
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3599": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4376
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "3601": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4376
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3602": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4389
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE1B"
    },
    "3605": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4389
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3606": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3607": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4389
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3405"
    },
    "3610": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4367,
        4389
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3611": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4389
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3612": {
      "branch": 155,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4367,
        4402
      ],
      "op": "EQ",
      "path": "16"
    },
    "3613": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE64"
    },
    "3616": {
      "branch": 155,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3617": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3619": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3628": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3631": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3633": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3634": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "ADD",
      "path": "16"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3640": {
      "op": "DUP3"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "MSTORE"
    },
    "3643": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3671": {
      "op": "SHL"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "3683": {
      "op": "JUMP"
    },
    "3684": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4359,
        4432
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3685": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4459,
        4475
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x4"
    },
    "3687": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "3689": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4455
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3690": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3692": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4455
      ],
      "op": "AND",
      "path": "16"
    },
    "3693": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3695": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3696": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "GT",
      "path": "16"
    },
    "3697": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3698": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7D"
    },
    "3701": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3702": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7D"
    },
    "3705": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3289"
    },
    "3708": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4450,
        4475
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3709": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3710": {
      "branch": 156,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4475
      ],
      "op": "EQ",
      "path": "16"
    },
    "3711": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xECA"
    },
    "3714": {
      "branch": 156,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3715": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3717": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3726": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3729": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3731": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3732": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "ADD",
      "path": "16"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3738": {
      "op": "DUP3"
    },
    "3739": {
      "op": "ADD"
    },
    "3740": {
      "op": "MSTORE"
    },
    "3741": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "3785": {
      "op": "JUMP"
    },
    "3786": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4506
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3787": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4555,
        4570
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 20,
      "value": "0x16"
    },
    "3789": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4555,
        4570
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3790": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4541,
        4551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3791": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xED7"
    },
    "3794": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3796": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3797": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3798": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3799": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3800": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEE1"
    },
    "3803": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4551
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3804": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4551
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3805": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3424"
    },
    "3808": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4524,
        4551
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3809": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3810": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4570
      ],
      "op": "GT",
      "path": "16"
    },
    "3811": {
      "branch": 157,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4524,
        4570
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3812": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF3E"
    },
    "3815": {
      "branch": 157,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3816": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3818": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3827": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3830": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3832": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3833": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "ADD",
      "path": "16"
    },
    "3834": {
      "op": "MSTORE"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3839": {
      "op": "DUP3"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3877": {
      "op": "DUP3"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "MSTORE"
    },
    "3880": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "3901": {
      "op": "JUMP"
    },
    "3902": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4516,
        4613
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3903": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4645,
        4657
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x11"
    },
    "3905": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4645,
        4657
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3906": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4645,
        4657
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3908": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4645,
        4657
      ],
      "op": "AND",
      "path": "16"
    },
    "3909": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4657
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3910": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4657
      ],
      "op": "GT",
      "path": "16"
    },
    "3911": {
      "branch": 158,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4631,
        4657
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3912": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFA6"
    },
    "3915": {
      "branch": 158,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3916": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3918": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3925": {
      "op": "SHL"
    },
    "3926": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3927": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3930": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3932": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3933": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "ADD",
      "path": "16"
    },
    "3934": {
      "op": "MSTORE"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3939": {
      "op": "DUP3"
    },
    "3940": {
      "op": "ADD"
    },
    "3941": {
      "op": "MSTORE"
    },
    "3942": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "MSTORE"
    },
    "3980": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3996": {
      "op": "DUP3"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "MSTORE"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4005": {
      "op": "JUMP"
    },
    "4006": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4623,
        4704
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4007": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4733,
        4734
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4009": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4010": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4741,
        4751
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4011": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4736,
        4737
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4012": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4736,
        4751
      ],
      "op": "GT",
      "path": "16"
    },
    "4013": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE2"
    },
    "4016": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4017": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4820
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 22,
      "value": "0xFC2"
    },
    "4020": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4782,
        4792
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4021": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4794,
        4819
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFBD"
    },
    "4024": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4794,
        4809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4026": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 23
    },
    "4027": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4028": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4029": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4794,
        4819
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4030": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24CA"
    },
    "4033": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4772,
        4820
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4034": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4035": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4834,
        4861
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 24,
      "value": "0xFD0"
    },
    "4038": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4834,
        4849
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4040": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 25
    },
    "4041": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4042": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4044": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4045": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4046": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4047": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4048": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4834,
        4861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4049": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 26
    },
    "4050": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFDA"
    },
    "4053": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4054": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x343C"
    },
    "4057": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4753,
        4756
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4058": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4059": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4060": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "POP",
      "path": "16"
    },
    "4061": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4753,
        4756
      ],
      "op": "POP",
      "path": "16"
    },
    "4062": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFA9"
    },
    "4065": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4066": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4716,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4071": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4073": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4074": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4210,
        4878
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4075": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4076": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4078": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xFF6"
    },
    "4081": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4082": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17AB"
    },
    "4085": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4086": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4087": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4088": {
      "branch": 188,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "4089": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1058"
    },
    "4092": {
      "branch": 188,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4093": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4095": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4104": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4107": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4109": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4110": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4116": {
      "op": "DUP3"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4171": {
      "op": "SHL"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB24"
    },
    "4183": {
      "op": "JUMP"
    },
    "4184": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4185": {
      "op": "POP"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "op": "SUB"
    },
    "4194": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 28
    },
    "4195": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4196": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4197": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "4198": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4200": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4201": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4202": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4203": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4205": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4207": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4208": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4209": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4210": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4212": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4213": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4214": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4215": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4216": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4217": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4218": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4219": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4220": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4221": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4222": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4223": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4224": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4225": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3021,
        3656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4226": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4228": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4230": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4231": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4232": {
      "branch": 197,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4233": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D4"
    },
    "4236": {
      "branch": 197,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4237": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4239": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4248": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4251": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4253": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4254": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4255": {
      "op": "MSTORE"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4260": {
      "op": "DUP3"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB24"
    },
    "4307": {
      "op": "JUMP"
    },
    "4308": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4309": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4311": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4313": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4314": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4316": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4317": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4319": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4320": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4321": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10FC"
    },
    "4324": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4325": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4327": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4336": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4337": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4339": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4340": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB24"
    },
    "4343": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4344": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33C5"
    },
    "4347": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4348": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4349": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3205,
        3214
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 29
    },
    "4350": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3192,
        3201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "4352": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3192,
        3201
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4353": {
      "branch": 159,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3192,
        3214
      ],
      "op": "EQ",
      "path": "16"
    },
    "4354": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1149"
    },
    "4357": {
      "branch": 159,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4358": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4360": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4369": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4372": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4374": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4375": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "ADD",
      "path": "16"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4415": {
      "op": "DUP3"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "MSTORE"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4424": {
      "op": "JUMP"
    },
    "4425": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3184,
        3244
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4426": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3271,
        3286
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x2"
    },
    "4428": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "4430": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3267
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4431": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4433": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3267
      ],
      "op": "AND",
      "path": "16"
    },
    "4434": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4436": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4437": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "GT",
      "path": "16"
    },
    "4438": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4439": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1162"
    },
    "4442": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4443": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1162"
    },
    "4446": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3289"
    },
    "4449": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3262,
        3286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4450": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4451": {
      "branch": 160,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3262,
        3286
      ],
      "op": "EQ",
      "path": "16"
    },
    "4452": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11AF"
    },
    "4455": {
      "branch": 160,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4456": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4458": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4467": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4470": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4472": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4473": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "ADD",
      "path": "16"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4479": {
      "op": "DUP3"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "ADD"
    },
    "4519": {
      "op": "MSTORE"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4522": {
      "op": "ADD"
    },
    "4523": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4526": {
      "op": "JUMP"
    },
    "4527": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3254,
        3320
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4528": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3357,
        3367
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0xD"
    },
    "4530": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3357,
        3367
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4531": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4533": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4534": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4547": {
      "op": "NOT"
    },
    "4548": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3396,
        3406
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "op": "AND"
    },
    "4553": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4555": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4556": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "ADD",
      "path": "16"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1228"
    },
    "4561": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4562": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3357,
        3367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4568": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4569": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4571": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4572": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4573": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "SUB",
      "path": "16"
    },
    "4574": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "SUB",
      "path": "16"
    },
    "4575": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4576": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4577": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4578": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4580": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3379,
        3407
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4581": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4582": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4583": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4584": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4586": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "ADD",
      "path": "16"
    },
    "4587": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3369,
        3408
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4588": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3349
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4589": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3349
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4590": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4591": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4592": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4594": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MUL",
      "path": "16"
    },
    "4595": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4597": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "ADD",
      "path": "16"
    },
    "4598": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4600": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4601": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4602": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4603": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "ADD",
      "path": "16"
    },
    "4604": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4606": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4607": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4608": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4609": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4610": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4611": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4612": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4613": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4614": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4615": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4617": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "ADD",
      "path": "16"
    },
    "4618": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4619": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4620": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4622": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MUL",
      "path": "16"
    },
    "4623": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4624": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4625": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4626": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4627": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4629": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4630": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "ADD",
      "path": "16"
    },
    "4631": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4632": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4633": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4634": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4637": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4638": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4639": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24E4"
    },
    "4645": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3338,
        3409
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4648": {
      "branch": 161,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3338,
        3409
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4649": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1274"
    },
    "4652": {
      "branch": 161,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4653": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4655": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4664": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4667": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4669": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4670": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "ADD",
      "path": "16"
    },
    "4671": {
      "op": "MSTORE"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4676": {
      "op": "DUP3"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "MSTORE"
    },
    "4679": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4714": {
      "op": "DUP3"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "MSTORE"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4719": {
      "op": "ADD"
    },
    "4720": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4723": {
      "op": "JUMP"
    },
    "4724": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3330,
        3439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4725": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3465,
        3475
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 32
    },
    "4726": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4728": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4729": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4733": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4735": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4736": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4738": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4739": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4740": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4741": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4743": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3476
      ],
      "op": "AND",
      "path": "16"
    },
    "4744": {
      "branch": 162,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3457,
        3485
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4745": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12D4"
    },
    "4748": {
      "branch": 162,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4749": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4751": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4758": {
      "op": "SHL"
    },
    "4759": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4760": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4763": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4765": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4766": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "ADD",
      "path": "16"
    },
    "4767": {
      "op": "MSTORE"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4772": {
      "op": "DUP3"
    },
    "4773": {
      "op": "ADD"
    },
    "4774": {
      "op": "MSTORE"
    },
    "4775": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "ADD"
    },
    "4812": {
      "op": "MSTORE"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4815": {
      "op": "ADD"
    },
    "4816": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4819": {
      "op": "JUMP"
    },
    "4820": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3449,
        3521
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4821": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3540,
        3550
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 33
    },
    "4822": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4824": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4825": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4826": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4827": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4829": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4831": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4832": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4834": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4835": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3551
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4836": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4837": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4840": {
      "op": "NOT"
    },
    "4841": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "AND",
      "path": "16"
    },
    "4842": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3554,
        3558
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4844": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "OR",
      "path": "16"
    },
    "4845": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4846": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3532,
        3558
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4847": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3568,
        3612
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 34,
      "value": "0x1300"
    },
    "4850": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3568,
        3612
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4851": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3586,
        3611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12FB"
    },
    "4854": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3586,
        3601
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4856": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4857": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4858": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4859": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3586,
        3611
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4860": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3568,
        3573
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24FA"
    },
    "4863": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3568,
        3612
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4864": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3568,
        3612
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4865": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3622,
        3649
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0xFE2"
    },
    "4868": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3622,
        3637
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4870": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4871": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4872": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4874": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4875": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4876": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4877": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4878": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6666,
        6930
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4879": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4881": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4888": {
      "op": "SHL"
    },
    "4889": {
      "op": "SUB"
    },
    "4890": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4893": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4895": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4896": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4897": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4898": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4899": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133E"
    },
    "4902": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4914": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4917": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "4921": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4922": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "4925": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4926": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4927": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6755,
        6756
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 36,
      "value": "0x0"
    },
    "4929": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6731,
        6752
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4930": {
      "branch": 163,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6731,
        6756
      ],
      "op": "GT",
      "path": "16"
    },
    "4931": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1387"
    },
    "4934": {
      "branch": 163,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4935": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4937": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4944": {
      "op": "SHL"
    },
    "4945": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4946": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4949": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4951": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4952": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "ADD",
      "path": "16"
    },
    "4953": {
      "op": "MSTORE"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4958": {
      "op": "DUP3"
    },
    "4959": {
      "op": "ADD"
    },
    "4960": {
      "op": "MSTORE"
    },
    "4961": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4986": {
      "op": "SHL"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4989": {
      "op": "DUP3"
    },
    "4990": {
      "op": "ADD"
    },
    "4991": {
      "op": "MSTORE"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4994": {
      "op": "ADD"
    },
    "4995": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "4998": {
      "op": "JUMP"
    },
    "4999": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6723,
        6783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5000": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "5002": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5003": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5005": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5006": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6794,
        6806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5008": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6794,
        6806
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5009": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "5014": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5015": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "DIV",
      "path": "16"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "op": "SUB"
    },
    "5024": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "AND",
      "path": "16"
    },
    "5025": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5026": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6850,
        6871
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5027": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6850,
        6871
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5028": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6794,
        6806
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5029": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5030": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6794,
        6806
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5031": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5032": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6850,
        6871
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5033": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6820,
        6836
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5034": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "GAS",
      "path": "16"
    },
    "5035": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "CALL",
      "path": "16"
    },
    "5036": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5037": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5038": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5039": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5040": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5041": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5042": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5044": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5045": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "EQ",
      "path": "16"
    },
    "5046": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13DB"
    },
    "5049": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5050": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5052": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5053": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5054": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5055": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5057": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "NOT",
      "path": "16"
    },
    "5058": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5060": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5061": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "ADD",
      "path": "16"
    },
    "5062": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "AND",
      "path": "16"
    },
    "5063": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5064": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "ADD",
      "path": "16"
    },
    "5065": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5067": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5068": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5069": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5070": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5072": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5074": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5076": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5077": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "ADD",
      "path": "16"
    },
    "5078": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5079": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E0"
    },
    "5082": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5083": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5084": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5086": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5087": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5088": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5089": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6812,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5090": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6793,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5091": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6793,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5092": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6793,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "5093": {
      "branch": 164,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6894,
        6901
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 37
    },
    "5094": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1425"
    },
    "5097": {
      "branch": 164,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5098": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5100": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5101": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5107": {
      "op": "SHL"
    },
    "5108": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5109": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5112": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5114": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5115": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "ADD",
      "path": "16"
    },
    "5116": {
      "op": "MSTORE"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5121": {
      "op": "DUP3"
    },
    "5122": {
      "op": "ADD"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH17",
      "value": "0x2BB4BA34323930BBB6103330B4B632B217"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "5144": {
      "op": "SHL"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5147": {
      "op": "DUP3"
    },
    "5148": {
      "op": "ADD"
    },
    "5149": {
      "op": "MSTORE"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "5156": {
      "op": "JUMP"
    },
    "5157": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6886,
        6923
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5158": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6713,
        6930
      ],
      "op": "POP",
      "path": "16"
    },
    "5159": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        6666,
        6930
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5160": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5161": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5163": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5170": {
      "op": "SHL"
    },
    "5171": {
      "op": "SUB"
    },
    "5172": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5175": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5176": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5177": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5178": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5179": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5180": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5181": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1458"
    },
    "5184": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5185": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5187": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5196": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5197": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5199": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5200": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "5203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "5207": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5208": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5209": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5021,
        5031
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 38,
      "value": "0x1460"
    },
    "5212": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5021,
        5029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2648"
    },
    "5215": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5021,
        5031
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5216": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5021,
        5031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5217": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5218": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xC5A"
    },
    "5222": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5227": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5231": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "3"
    },
    "5232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5234": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5238": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "3"
    },
    "5241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C9A"
    },
    "5244": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5245": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5246": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7913,
        7929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5248": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7941,
        7964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5250": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7967,
        7983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148A"
    },
    "5253": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7977,
        7982
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5254": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7967,
        7976
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17AB"
    },
    "5257": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7967,
        7983
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5258": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7967,
        7983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5259": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7941,
        7983
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5260": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7941,
        7983
      ],
      "op": "POP",
      "path": "16"
    },
    "5261": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7993,
        8019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5263": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8036,
        8051
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5264": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5273": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5274": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "GT",
      "path": "16"
    },
    "5275": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5276": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A7"
    },
    "5279": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5280": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A7"
    },
    "5283": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F8D"
    },
    "5286": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8022,
        8052
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5287": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5288": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5290": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5291": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5292": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5293": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5294": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5295": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5296": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5298": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "MUL",
      "path": "16"
    },
    "5299": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5301": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ADD",
      "path": "16"
    },
    "5302": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5303": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ADD",
      "path": "16"
    },
    "5304": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5306": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5307": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5308": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5309": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14D0"
    },
    "5312": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5313": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5314": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5316": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ADD",
      "path": "16"
    },
    "5317": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5319": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5320": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "MUL",
      "path": "16"
    },
    "5321": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5322": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "5323": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5324": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "5325": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "ADD",
      "path": "16"
    },
    "5326": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5329": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8022,
        8052
      ],
      "op": "POP",
      "path": "16"
    },
    "5330": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7993,
        8052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5331": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7993,
        8052
      ],
      "op": "POP",
      "path": "16"
    },
    "5332": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8067,
        8076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5334": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5335": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8082,
        8097
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5336": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8078,
        8079
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5337": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8078,
        8097
      ],
      "op": "LT",
      "path": "16"
    },
    "5338": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5339": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1517"
    },
    "5342": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5343": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8162
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 40,
      "value": "0x14E8"
    },
    "5346": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8153,
        8158
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5347": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8160,
        8161
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5348": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFEB"
    },
    "5351": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8133,
        8162
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5352": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8162
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5353": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8127
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5354": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8128,
        8129
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5355": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5356": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5357": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5358": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "LT",
      "path": "16"
    },
    "5359": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14FA"
    },
    "5362": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5363": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14FA"
    },
    "5366": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3457"
    },
    "5369": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8118,
        8130
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5370": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5371": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5373": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5374": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5375": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "MUL",
      "path": "16"
    },
    "5376": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5377": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5378": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5379": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "ADD",
      "path": "16"
    },
    "5380": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8130
      ],
      "op": "ADD",
      "path": "16"
    },
    "5381": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8118,
        8162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5382": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 41
    },
    "5383": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x150F"
    },
    "5386": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5387": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x343C"
    },
    "5390": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8099,
        8102
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5391": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5392": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5393": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "POP",
      "path": "16"
    },
    "5394": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8099,
        8102
      ],
      "op": "POP",
      "path": "16"
    },
    "5395": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14D6"
    },
    "5398": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5399": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8062,
        8173
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8189,
        8198
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 42
    },
    "5402": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7852,
        8205
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5403": {
      "op": "POP"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "op": "POP"
    },
    "5406": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        7852,
        8205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5407": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5408": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5410": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 43,
      "value": "0x152A"
    },
    "5413": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5415": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5416": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5417": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5418": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5419": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5420": {
      "branch": 189,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5421": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158D"
    },
    "5424": {
      "branch": 189,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5425": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5427": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5434": {
      "op": "SHL"
    },
    "5435": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5436": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5439": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5441": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5442": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5443": {
      "op": "MSTORE"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5448": {
      "op": "DUP3"
    },
    "5449": {
      "op": "ADD"
    },
    "5450": {
      "op": "MSTORE"
    },
    "5451": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5486": {
      "op": "DUP3"
    },
    "5487": {
      "op": "ADD"
    },
    "5488": {
      "op": "MSTORE"
    },
    "5489": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5504": {
      "op": "SHL"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5507": {
      "op": "DUP3"
    },
    "5508": {
      "op": "ADD"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5512": {
      "op": "ADD"
    },
    "5513": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB24"
    },
    "5516": {
      "op": "JUMP"
    },
    "5517": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5518": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x8"
    },
    "5520": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5521": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5522": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5523": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5524": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5525": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A0"
    },
    "5528": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5529": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A0"
    },
    "5532": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3457"
    },
    "5535": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5536": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5537": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5538": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5540": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5541": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5543": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5545": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5546": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5547": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5548": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5549": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5550": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5551": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5552": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5553": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5554": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5445,
        5605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5555": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5557": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5564": {
      "op": "SHL"
    },
    "5565": {
      "op": "SUB"
    },
    "5566": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5569": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5572": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5573": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5574": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5575": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E2"
    },
    "5578": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5588": {
      "op": "SHL"
    },
    "5589": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "5597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "5601": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5602": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5603": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x11"
    },
    "5605": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5606": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5609": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5610": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "DIV",
      "path": "16"
    },
    "5611": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5613": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5544
      ],
      "op": "AND",
      "path": "16"
    },
    "5614": {
      "branch": 165,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5529,
        5544
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5615": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x162F"
    },
    "5618": {
      "branch": 165,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5619": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5621": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5628": {
      "op": "SHL"
    },
    "5629": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5630": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5633": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5635": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5636": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "ADD",
      "path": "16"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5642": {
      "op": "DUP3"
    },
    "5643": {
      "op": "ADD"
    },
    "5644": {
      "op": "MSTORE"
    },
    "5645": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5666": {
      "op": "SHL"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5669": {
      "op": "DUP3"
    },
    "5670": {
      "op": "ADD"
    },
    "5671": {
      "op": "MSTORE"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5674": {
      "op": "ADD"
    },
    "5675": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "5678": {
      "op": "JUMP"
    },
    "5679": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5521,
        5567
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5680": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 46
    },
    "5681": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5682": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "5685": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5686": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5688": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5584
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5689": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5691": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5692": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "ADD",
      "path": "16"
    },
    "5693": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5694": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5577,
        5598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DF0"
    },
    "5697": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5577,
        5598
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5698": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5699": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5701": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5708": {
      "op": "SHL"
    },
    "5709": {
      "op": "SUB"
    },
    "5710": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5713": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5715": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5716": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5717": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5718": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5719": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1672"
    },
    "5722": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5732": {
      "op": "SHL"
    },
    "5733": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5734": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5737": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5738": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "5741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5742": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "5745": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5746": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5753": {
      "op": "SHL"
    },
    "5754": {
      "op": "SUB"
    },
    "5755": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "AND",
      "path": "16",
      "statement": 47
    },
    "5756": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5317,
        5322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5758": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5759": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5760": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5761": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5303
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "5763": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5765": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5766": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5768": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5769": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5314
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5770": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5322
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5771": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5322
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5774": {
      "op": "NOT"
    },
    "5775": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5322
      ],
      "op": "AND",
      "path": "16"
    },
    "5776": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5322
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5777": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5296,
        5322
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5778": {
      "fn": "CryptidToken.undoClaim",
      "jump": "o",
      "offset": [
        5230,
        5329
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5782": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5785": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5789": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5792": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5793": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5794": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "op": "SUB"
    },
    "5803": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "3"
    },
    "5804": {
      "branch": 179,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 48
    },
    "5805": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA17"
    },
    "5808": {
      "branch": 179,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5809": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5811": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5818": {
      "op": "SHL"
    },
    "5819": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5820": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5823": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5825": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5826": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5827": {
      "op": "MSTORE"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5832": {
      "op": "DUP3"
    },
    "5833": {
      "op": "ADD"
    },
    "5834": {
      "op": "MSTORE"
    },
    "5835": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5870": {
      "op": "DUP3"
    },
    "5871": {
      "op": "ADD"
    },
    "5872": {
      "op": "MSTORE"
    },
    "5873": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5885": {
      "op": "SHL"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5888": {
      "op": "DUP3"
    },
    "5889": {
      "op": "ADD"
    },
    "5890": {
      "op": "MSTORE"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5893": {
      "op": "ADD"
    },
    "5894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "5897": {
      "op": "JUMP"
    },
    "5898": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5899": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5903": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1717"
    },
    "5906": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5907": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "5910": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5911": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5912": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5913": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5915": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5916": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5918": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5919": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5920": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5921": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5922": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5924": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5925": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5927": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5928": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5929": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5930": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5931": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5933": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5934": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5935": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5936": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5937": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5938": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5939": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5940": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5941": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5943": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5944": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5945": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5946": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1743"
    },
    "5950": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5951": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "5954": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5955": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5956": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5957": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5958": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1790"
    },
    "5961": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5962": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5963": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5965": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "LT",
      "path": "16"
    },
    "5966": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1765"
    },
    "5969": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5970": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5973": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5974": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5975": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5977": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5978": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5979": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5980": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5981": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5983": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5984": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5985": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1790"
    },
    "5988": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5989": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5990": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5991": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5992": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5993": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5994": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5996": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5997": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5999": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6001": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6002": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6003": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6004": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6005": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6006": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6007": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6008": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6009": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6011": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6012": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6013": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6015": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6016": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6017": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6018": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "GT",
      "path": "16"
    },
    "6019": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1773"
    },
    "6022": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6023": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6024": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6025": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SUB",
      "path": "16"
    },
    "6026": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6028": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "AND",
      "path": "16"
    },
    "6029": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6030": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6031": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6032": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6033": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6034": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6035": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6036": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6037": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6038": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6039": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6040": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6041": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7300,
        7307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6043": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7325,
        7347
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 49,
      "value": "0x17A6"
    },
    "6046": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7333,
        7346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x609"
    },
    "6049": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6051": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6052": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6053": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6054": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7325,
        7347
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6055": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7318,
        7347
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6056": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7318,
        7347
      ],
      "op": "POP",
      "path": "16"
    },
    "6057": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7250,
        7354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6058": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "o",
      "offset": [
        7250,
        7354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6060": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6068": {
      "op": "SHL"
    },
    "6069": {
      "op": "SUB"
    },
    "6070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 50
    },
    "6071": {
      "branch": 180,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "6072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1816"
    },
    "6075": {
      "branch": 180,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6076": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6078": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6090": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6093": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6094": {
      "op": "MSTORE"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6099": {
      "op": "DUP3"
    },
    "6100": {
      "op": "ADD"
    },
    "6101": {
      "op": "MSTORE"
    },
    "6102": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6137": {
      "op": "DUP3"
    },
    "6138": {
      "op": "ADD"
    },
    "6139": {
      "op": "MSTORE"
    },
    "6140": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6153": {
      "op": "SHL"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6156": {
      "op": "DUP3"
    },
    "6157": {
      "op": "ADD"
    },
    "6158": {
      "op": "MSTORE"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "6165": {
      "op": "JUMP"
    },
    "6166": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6167": {
      "op": "POP"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "op": "SUB"
    },
    "6176": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "3",
      "statement": 51
    },
    "6177": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6179": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6180": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6181": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6182": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6184": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6186": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6187": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6189": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6190": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6191": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6192": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6193": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6195": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6197": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6204": {
      "op": "SHL"
    },
    "6205": {
      "op": "SUB"
    },
    "6206": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6210": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6212": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6213": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6214": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6215": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1862"
    },
    "6218": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6228": {
      "op": "SHL"
    },
    "6229": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6233": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "6237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6238": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "6241": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6242": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x1460"
    },
    "6246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26DB"
    },
    "6251": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6252": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3689,
        4175
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6253": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6255": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "SUB"
    },
    "6264": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6267": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6269": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6270": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6271": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6272": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6273": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189C"
    },
    "6276": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6279": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6286": {
      "op": "SHL"
    },
    "6287": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6288": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6291": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "6295": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "6299": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6300": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6301": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3822
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 53,
      "value": "0x3"
    },
    "6303": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3804
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6305": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3804
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6306": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3804
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6308": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3804
      ],
      "op": "AND",
      "path": "16"
    },
    "6309": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6311": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6312": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "GT",
      "path": "16"
    },
    "6313": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6314": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18B5"
    },
    "6317": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6318": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18B5"
    },
    "6321": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3289"
    },
    "6324": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3799,
        3822
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6325": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6326": {
      "branch": 166,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3799,
        3822
      ],
      "op": "EQ",
      "path": "16"
    },
    "6327": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1902"
    },
    "6330": {
      "branch": 166,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6331": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6333": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6340": {
      "op": "SHL"
    },
    "6341": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6342": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6345": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6347": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6348": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "ADD",
      "path": "16"
    },
    "6349": {
      "op": "MSTORE"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6354": {
      "op": "DUP3"
    },
    "6355": {
      "op": "ADD"
    },
    "6356": {
      "op": "MSTORE"
    },
    "6357": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6392": {
      "op": "DUP3"
    },
    "6393": {
      "op": "ADD"
    },
    "6394": {
      "op": "MSTORE"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6397": {
      "op": "ADD"
    },
    "6398": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "6401": {
      "op": "JUMP"
    },
    "6402": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3791,
        3851
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6403": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3899,
        3913
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x14"
    },
    "6405": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3899,
        3913
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6406": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3882,
        3895
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6408": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3882,
        3895
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6409": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1915"
    },
    "6412": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6413": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6415": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6416": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "AND",
      "path": "16"
    },
    "6417": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3424"
    },
    "6420": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3869,
        3895
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6421": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3895
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6422": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3913
      ],
      "op": "GT",
      "path": "16"
    },
    "6423": {
      "branch": 167,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3869,
        3913
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6424": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1977"
    },
    "6427": {
      "branch": 167,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6428": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6430": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6437": {
      "op": "SHL"
    },
    "6438": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6439": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6442": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6444": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6445": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "ADD",
      "path": "16"
    },
    "6446": {
      "op": "MSTORE"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6451": {
      "op": "DUP3"
    },
    "6452": {
      "op": "ADD"
    },
    "6453": {
      "op": "MSTORE"
    },
    "6454": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6489": {
      "op": "DUP3"
    },
    "6490": {
      "op": "ADD"
    },
    "6491": {
      "op": "MSTORE"
    },
    "6492": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6506": {
      "op": "SHL"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6509": {
      "op": "DUP3"
    },
    "6510": {
      "op": "ADD"
    },
    "6511": {
      "op": "MSTORE"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6514": {
      "op": "ADD"
    },
    "6515": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "6518": {
      "op": "JUMP"
    },
    "6519": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3861,
        3961
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6520": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3993,
        4003
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 55
    },
    "6521": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6523": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "AND",
      "path": "16"
    },
    "6524": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        3989
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6526": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        3989
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6528": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6529": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6530": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6531": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x198C"
    },
    "6534": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6535": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6536": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3424"
    },
    "6539": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3976,
        4003
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6540": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6541": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6542": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6543": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3976,
        4003
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6544": {
      "op": "POP"
    },
    "6545": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4030,
        4031
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6547": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4030,
        4031
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4013,
        4169
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6550": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4048
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6551": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4033,
        4048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6553": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4033,
        4048
      ],
      "op": "AND",
      "path": "16"
    },
    "6554": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4033,
        4034
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6555": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4033,
        4048
      ],
      "op": "GT",
      "path": "16"
    },
    "6556": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4013,
        4169
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "6559": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4013,
        4169
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6560": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4069,
        4117
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 56,
      "value": "0x19AC"
    },
    "6563": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4079,
        4089
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6564": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4116
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFBD"
    },
    "6567": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4106
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6569": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6570": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6571": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6572": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4069,
        4117
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6573": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4131,
        4158
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 57,
      "value": "0x19BA"
    },
    "6576": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4131,
        4146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6578": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6579": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6580": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6582": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6583": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6584": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6585": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6586": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4131,
        4158
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6587": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 58
    },
    "6588": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19C4"
    },
    "6591": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6592": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x343C"
    },
    "6595": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4050,
        4053
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6596": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6597": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6598": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "POP",
      "path": "16"
    },
    "6599": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4050,
        4053
      ],
      "op": "POP",
      "path": "16"
    },
    "6600": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4013,
        4169
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1995"
    },
    "6603": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4013,
        4169
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6604": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6605": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6607": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6614": {
      "op": "SHL"
    },
    "6615": {
      "op": "SUB"
    },
    "6616": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6620": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6622": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6623": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6624": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6625": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19FC"
    },
    "6628": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6638": {
      "op": "SHL"
    },
    "6639": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "6647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "6651": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6653": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5408,
        5418
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 59,
      "value": "0xD"
    },
    "6655": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5408,
        5432
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6656": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5335,
        5439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6657": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "op": "SUB"
    },
    "6669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6676": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6677": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6678": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A31"
    },
    "6681": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6691": {
      "op": "SHL"
    },
    "6692": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "6700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "6704": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6706": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6371,
        6372
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0x0"
    },
    "6708": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6346,
        6360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6710": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6711": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6712": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A40"
    },
    "6715": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6716": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "6719": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6340,
        6368
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6720": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6721": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6722": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6368
      ],
      "op": "POP",
      "path": "16"
    },
    "6723": {
      "branch": 168,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6340,
        6372
      ],
      "op": "GT",
      "path": "16"
    },
    "6724": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A8F"
    },
    "6727": {
      "branch": 168,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6728": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6730": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6737": {
      "op": "SHL"
    },
    "6738": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6739": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6742": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6744": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6745": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "ADD",
      "path": "16"
    },
    "6746": {
      "op": "MSTORE"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6751": {
      "op": "DUP3"
    },
    "6752": {
      "op": "ADD"
    },
    "6753": {
      "op": "MSTORE"
    },
    "6754": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6789": {
      "op": "DUP3"
    },
    "6790": {
      "op": "ADD"
    },
    "6791": {
      "op": "MSTORE"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "6798": {
      "op": "JUMP"
    },
    "6799": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6332,
        6404
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6800": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x11"
    },
    "6802": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6803": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6807": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6808": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "DIV",
      "path": "16"
    },
    "6809": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6811": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6443
      ],
      "op": "AND",
      "path": "16"
    },
    "6812": {
      "branch": 169,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6422,
        6443
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6813": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AF3"
    },
    "6816": {
      "branch": 169,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6817": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6819": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6826": {
      "op": "SHL"
    },
    "6827": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6828": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6831": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6833": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6834": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "ADD",
      "path": "16"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6840": {
      "op": "DUP3"
    },
    "6841": {
      "op": "ADD"
    },
    "6842": {
      "op": "MSTORE"
    },
    "6843": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6886": {
      "op": "SHL"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6889": {
      "op": "DUP3"
    },
    "6890": {
      "op": "ADD"
    },
    "6891": {
      "op": "MSTORE"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6894": {
      "op": "ADD"
    },
    "6895": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "6898": {
      "op": "JUMP"
    },
    "6899": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6414,
        6482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6900": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6512
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x11"
    },
    "6902": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6903": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6904": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "6908": {
      "op": "NOT"
    },
    "6909": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "AND",
      "path": "16"
    },
    "6910": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6914": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "OR",
      "path": "16"
    },
    "6915": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6916": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6492,
        6519
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6917": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6271,
        6526
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6918": {
      "fn": "CryptidToken.pause",
      "offset": [
        4906,
        4967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6919": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6921": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "op": "SUB"
    },
    "6930": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6933": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6934": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6935": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6936": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6937": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6938": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6939": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B36"
    },
    "6942": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6943": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6952": {
      "op": "SHL"
    },
    "6953": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6954": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6955": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6958": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "6961": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6962": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "6965": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6966": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6967": {
      "fn": "CryptidToken.pause",
      "offset": [
        4952,
        4960
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 63,
      "value": "0x1460"
    },
    "6970": {
      "fn": "CryptidToken.pause",
      "offset": [
        4952,
        4958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2735"
    },
    "6973": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4952,
        4960
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6974": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6975": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6977": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 64,
      "value": "0x1"
    },
    "6979": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6980": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6981": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2C"
    },
    "6984": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6985": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3304"
    },
    "6988": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6989": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6990": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 65,
      "value": "0xD5C"
    },
    "6993": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6994": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6995": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6996": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x278D"
    },
    "6999": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7000": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2529,
        2983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7001": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7003": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7010": {
      "op": "SHL"
    },
    "7011": {
      "op": "SUB"
    },
    "7012": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7015": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7016": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7018": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7019": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7020": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7021": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B88"
    },
    "7024": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7025": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7034": {
      "op": "SHL"
    },
    "7035": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "7043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "7047": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7049": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2673,
        2683
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 66,
      "value": "0x0"
    },
    "7051": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2670
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "7053": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2670
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7054": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2670
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7056": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2670
      ],
      "op": "AND",
      "path": "16"
    },
    "7057": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7059": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7060": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "GT",
      "path": "16"
    },
    "7061": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7062": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BA1"
    },
    "7065": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7066": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BA1"
    },
    "7069": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3289"
    },
    "7072": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2665,
        2683
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7073": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7074": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2665,
        2683
      ],
      "op": "GT",
      "path": "16"
    },
    "7075": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE5"
    },
    "7078": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7079": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7081": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7088": {
      "op": "SHL"
    },
    "7089": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7090": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7093": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7095": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7096": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "ADD",
      "path": "16"
    },
    "7097": {
      "op": "MSTORE"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7102": {
      "op": "DUP3"
    },
    "7103": {
      "op": "ADD"
    },
    "7104": {
      "op": "MSTORE"
    },
    "7105": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7128": {
      "op": "SHL"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7131": {
      "op": "DUP3"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "MSTORE"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "7140": {
      "op": "JUMP"
    },
    "7141": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2657,
        2708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7142": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2757,
        2772
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 67,
      "value": "0x16"
    },
    "7144": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2757,
        2772
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7145": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2743,
        2753
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7146": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7148": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "AND",
      "path": "16"
    },
    "7149": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2739
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BF5"
    },
    "7152": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7154": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7155": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7156": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7157": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2739
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7158": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BFF"
    },
    "7161": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7162": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7163": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3424"
    },
    "7166": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2726,
        2753
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7167": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2753
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7168": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2772
      ],
      "op": "GT",
      "path": "16"
    },
    "7169": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2726,
        2772
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7170": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C60"
    },
    "7173": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7174": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7176": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7183": {
      "op": "SHL"
    },
    "7184": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7185": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7188": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7190": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7191": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "ADD",
      "path": "16"
    },
    "7192": {
      "op": "MSTORE"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7197": {
      "op": "DUP3"
    },
    "7198": {
      "op": "ADD"
    },
    "7199": {
      "op": "MSTORE"
    },
    "7200": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7235": {
      "op": "DUP3"
    },
    "7236": {
      "op": "ADD"
    },
    "7237": {
      "op": "MSTORE"
    },
    "7238": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7251": {
      "op": "SHL"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7254": {
      "op": "DUP3"
    },
    "7255": {
      "op": "ADD"
    },
    "7256": {
      "op": "MSTORE"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "7263": {
      "op": "JUMP"
    },
    "7264": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2718,
        2819
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7265": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2846,
        2847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7267": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2829,
        2977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7268": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        2864
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7269": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2849,
        2864
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7271": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2849,
        2864
      ],
      "op": "AND",
      "path": "16"
    },
    "7272": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2849,
        2850
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7273": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2849,
        2864
      ],
      "op": "GT",
      "path": "16"
    },
    "7274": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2829,
        2977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC5A"
    },
    "7277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2829,
        2977
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7278": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2885,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 68,
      "value": "0x1C7A"
    },
    "7281": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2895,
        2897
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7282": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2899,
        2924
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFBD"
    },
    "7285": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2899,
        2914
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7287": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7288": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7289": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7290": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2885,
        2925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7291": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2939,
        2966
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 69,
      "value": "0x1C88"
    },
    "7294": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2939,
        2954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7296": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7297": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7298": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7300": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7301": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7302": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7303": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7304": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2939,
        2966
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7305": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 70
    },
    "7306": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C92"
    },
    "7309": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7310": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x343C"
    },
    "7313": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2866,
        2869
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7314": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7315": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7316": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "POP",
      "path": "16"
    },
    "7317": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2866,
        2869
      ],
      "op": "POP",
      "path": "16"
    },
    "7318": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2829,
        2977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C63"
    },
    "7321": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2829,
        2977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x1CA4"
    },
    "7326": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7327": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7328": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222C"
    },
    "7331": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7332": {
      "branch": 181,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CC0"
    },
    "7336": {
      "branch": 181,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7337": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7346": {
      "op": "SHL"
    },
    "7347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7351": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "3"
    },
    "7352": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "7355": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3374"
    },
    "7359": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 72,
      "value": "0x1CCC"
    },
    "7364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x285C"
    },
    "7371": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7372": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7374": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7377": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7378": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7381": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7388": {
      "op": "SHL"
    },
    "7389": {
      "op": "SUB"
    },
    "7390": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7393": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7394": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7395": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7396": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7397": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7398": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7399": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D02"
    },
    "7402": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "7421": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "7425": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7433": {
      "op": "SHL"
    },
    "7434": {
      "op": "SUB"
    },
    "7435": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "AND",
      "path": "16",
      "statement": 73
    },
    "7436": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7438": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7439": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7440": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7441": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "7443": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7445": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7446": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7448": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7449": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5172
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7450": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7451": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7454": {
      "op": "NOT"
    },
    "7455": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "AND",
      "path": "16"
    },
    "7456": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5175,
        5179
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7458": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "OR",
      "path": "16"
    },
    "7459": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7460": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5154,
        5179
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7461": {
      "fn": "CryptidToken.setClaim",
      "jump": "o",
      "offset": [
        5089,
        5186
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7462": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7463": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7465": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7466": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7467": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1717"
    },
    "7470": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7471": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "7474": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7475": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7476": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7478": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7479": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7480": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1717"
    },
    "7483": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7484": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "7487": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7488": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7489": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7491": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7492": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7493": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7494": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7496": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7498": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7499": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7501": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7502": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7503": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7504": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7530,
        7543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7506": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7530,
        7543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7513": {
      "op": "SHL"
    },
    "7514": {
      "op": "SUB"
    },
    "7515": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "7516": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 74,
      "value": "0x1DC0"
    },
    "7519": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7520": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7522": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7529": {
      "op": "SHL"
    },
    "7530": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7531": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7534": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7536": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7537": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "ADD",
      "path": "16"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7543": {
      "op": "DUP3"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7581": {
      "op": "DUP3"
    },
    "7582": {
      "op": "ADD"
    },
    "7583": {
      "op": "MSTORE"
    },
    "7584": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7603": {
      "op": "SHL"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7606": {
      "op": "DUP3"
    },
    "7607": {
      "op": "ADD"
    },
    "7608": {
      "op": "MSTORE"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7611": {
      "op": "ADD"
    },
    "7612": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "7615": {
      "op": "JUMP"
    },
    "7616": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7555,
        7632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7617": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7673,
        7680
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 75,
      "value": "0xF"
    },
    "7619": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7682,
        7700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DCB"
    },
    "7622": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7682,
        7689
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7623": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7682,
        7698
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x288F"
    },
    "7626": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7682,
        7700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7627": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7682,
        7700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7628": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7702,
        7715
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7630": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7632": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7633": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7635": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "ADD",
      "path": "16"
    },
    "7636": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DDF"
    },
    "7639": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7640": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7641": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7642": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7643": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3507"
    },
    "7646": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7656,
        7716
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7647": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7648": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7650": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7651": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7653": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7654": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7655": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SUB",
      "path": "16"
    },
    "7656": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SUB",
      "path": "16"
    },
    "7657": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7658": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7659": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7660": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7662": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7656,
        7716
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7663": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7642,
        7717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7664": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7642,
        7717
      ],
      "op": "POP",
      "path": "16"
    },
    "7665": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7666": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7667": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7457,
        7724
      ],
      "op": "POP",
      "path": "16"
    },
    "7668": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        7457,
        7724
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7669": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7679": {
      "op": "SHL"
    },
    "7680": {
      "op": "SUB"
    },
    "7681": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7684": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7685": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7686": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7687": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7688": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7689": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7690": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E25"
    },
    "7693": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7703": {
      "op": "SHL"
    },
    "7704": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "7712": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "7716": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7717": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7718": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 76,
      "value": "0x11"
    },
    "7720": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7721": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "7725": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7726": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "DIV",
      "path": "16"
    },
    "7727": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7729": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7025
      ],
      "op": "AND",
      "path": "16"
    },
    "7730": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7033
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7731": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7033
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7732": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7029,
        7033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7734": {
      "branch": 172,
      "fn": "CryptidToken.setStage",
      "offset": [
        7005,
        7033
      ],
      "op": "EQ",
      "path": "16"
    },
    "7735": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA8"
    },
    "7738": {
      "branch": 172,
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7739": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7741": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7748": {
      "op": "SHL"
    },
    "7749": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7750": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7753": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7755": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7756": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "ADD",
      "path": "16"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7762": {
      "op": "DUP3"
    },
    "7763": {
      "op": "ADD"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7800": {
      "op": "DUP3"
    },
    "7801": {
      "op": "ADD"
    },
    "7802": {
      "op": "MSTORE"
    },
    "7803": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7838": {
      "op": "DUP3"
    },
    "7839": {
      "op": "ADD"
    },
    "7840": {
      "op": "MSTORE"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7843": {
      "op": "ADD"
    },
    "7844": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "7847": {
      "op": "JUMP"
    },
    "7848": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6997,
        7094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7849": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7112,
        7122
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 77,
      "value": "0xD"
    },
    "7851": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7112,
        7122
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7852": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F12"
    },
    "7855": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7856": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7858": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7865": {
      "op": "SHL"
    },
    "7866": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7867": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7870": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7872": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7873": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "ADD",
      "path": "16"
    },
    "7874": {
      "op": "MSTORE"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7879": {
      "op": "DUP3"
    },
    "7880": {
      "op": "ADD"
    },
    "7881": {
      "op": "MSTORE"
    },
    "7882": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7917": {
      "op": "DUP3"
    },
    "7918": {
      "op": "ADD"
    },
    "7919": {
      "op": "MSTORE"
    },
    "7920": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "7941": {
      "op": "SHL"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "ADD"
    },
    "7946": {
      "op": "MSTORE"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7949": {
      "op": "ADD"
    },
    "7950": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "7953": {
      "op": "JUMP"
    },
    "7954": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7104,
        7182
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7955": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7197
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 78,
      "value": "0x18"
    },
    "7957": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7958": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7959": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7200,
        7206
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7960": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7200,
        7206
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7961": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7964": {
      "op": "NOT"
    },
    "7965": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "AND",
      "path": "16"
    },
    "7966": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7968": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7200,
        7206
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7969": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7971": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7972": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "GT",
      "path": "16"
    },
    "7973": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7974": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F31"
    },
    "7977": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7978": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F31"
    },
    "7981": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3289"
    },
    "7984": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7192,
        7206
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7985": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7986": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "MUL",
      "path": "16"
    },
    "7987": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "OR",
      "path": "16"
    },
    "7988": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7989": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7990": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7192,
        7206
      ],
      "op": "POP",
      "path": "16"
    },
    "7991": {
      "fn": "CryptidToken.setStage",
      "offset": [
        6936,
        7213
      ],
      "op": "POP",
      "path": "16"
    },
    "7992": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        6936,
        7213
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7993": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7360,
        7451
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7994": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7405,
        7412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7996": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 79,
      "value": "0x17A6"
    },
    "7999": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8001": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8002": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8003": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8004": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5840,
        5968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8005": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8007": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8014": {
      "op": "SHL"
    },
    "8015": {
      "op": "SUB"
    },
    "8016": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8019": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8020": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8021": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8023": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8024": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8025": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F74"
    },
    "8028": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8038": {
      "op": "SHL"
    },
    "8039": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "8047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "8051": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8053": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 80
    },
    "8054": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8055": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "8058": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8059": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5941
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8061": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5941
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8062": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8064": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8065": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "ADD",
      "path": "16"
    },
    "8066": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8067": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5928,
        5961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DF0"
    },
    "8070": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5928,
        5961
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8071": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7730,
        7842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8072": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7778,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8074": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7822,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 81,
      "value": "0x1F92"
    },
    "8077": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8079": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8080": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8081": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8082": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7822,
        7835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8083": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "8085": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7819
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8086": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17A6"
    },
    "8089": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7835
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8090": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7835
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8091": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7804,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x353A"
    },
    "8094": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        7804,
        7835
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8095": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8096": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8098": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8105": {
      "op": "SHL"
    },
    "8106": {
      "op": "SUB"
    },
    "8107": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8110": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8111": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8112": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8113": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8114": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8115": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8116": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCF"
    },
    "8119": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8122": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8129": {
      "op": "SHL"
    },
    "8130": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8134": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8135": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "8138": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8139": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "8142": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8144": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5702,
        5703
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 82,
      "value": "0x0"
    },
    "8146": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5684,
        5691
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8148": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8149": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8150": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FDE"
    },
    "8153": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8154": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3304"
    },
    "8157": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5678,
        5699
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8158": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8159": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8160": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5699
      ],
      "op": "POP",
      "path": "16"
    },
    "8161": {
      "branch": 173,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5678,
        5703
      ],
      "op": "GT",
      "path": "16"
    },
    "8162": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x202D"
    },
    "8165": {
      "branch": 173,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8166": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8168": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8175": {
      "op": "SHL"
    },
    "8176": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8177": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8180": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8182": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8183": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "ADD",
      "path": "16"
    },
    "8184": {
      "op": "MSTORE"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8189": {
      "op": "DUP3"
    },
    "8190": {
      "op": "ADD"
    },
    "8191": {
      "op": "MSTORE"
    },
    "8192": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8227": {
      "op": "DUP3"
    },
    "8228": {
      "op": "ADD"
    },
    "8229": {
      "op": "MSTORE"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8232": {
      "op": "ADD"
    },
    "8233": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "8236": {
      "op": "JUMP"
    },
    "8237": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5670,
        5732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8238": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 83,
      "value": "0x11"
    },
    "8240": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8241": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8244": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8245": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "DIV",
      "path": "16"
    },
    "8246": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8248": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5765
      ],
      "op": "AND",
      "path": "16"
    },
    "8249": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5750,
        5765
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8250": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2085"
    },
    "8253": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8254": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8256": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8265": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8268": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8270": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8271": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "ADD",
      "path": "16"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8277": {
      "op": "DUP3"
    },
    "8278": {
      "op": "ADD"
    },
    "8279": {
      "op": "MSTORE"
    },
    "8280": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8315": {
      "op": "DUP3"
    },
    "8316": {
      "op": "ADD"
    },
    "8317": {
      "op": "MSTORE"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8320": {
      "op": "ADD"
    },
    "8321": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB24"
    },
    "8324": {
      "op": "JUMP"
    },
    "8325": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5742,
        5796
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8326": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5820
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 84,
      "value": "0x11"
    },
    "8328": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8329": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8330": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8333": {
      "op": "NOT"
    },
    "8334": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "AND",
      "path": "16"
    },
    "8335": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8338": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "OR",
      "path": "16"
    },
    "8339": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8340": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5806,
        5827
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8341": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5616,
        5834
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8343": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8352": {
      "op": "SHL"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8357": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8359": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8360": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8361": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8362": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8363": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C6"
    },
    "8366": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8376": {
      "op": "SHL"
    },
    "8377": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "8385": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "8389": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8397": {
      "op": "SHL"
    },
    "8398": {
      "op": "SUB"
    },
    "8399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 85
    },
    "8400": {
      "branch": 196,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212B"
    },
    "8404": {
      "branch": 196,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8414": {
      "op": "SHL"
    },
    "8415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8423": {
      "op": "MSTORE"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "ADD"
    },
    "8430": {
      "op": "MSTORE"
    },
    "8431": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8466": {
      "op": "DUP3"
    },
    "8467": {
      "op": "ADD"
    },
    "8468": {
      "op": "MSTORE"
    },
    "8469": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8478": {
      "op": "SHL"
    },
    "8479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8481": {
      "op": "DUP3"
    },
    "8482": {
      "op": "ADD"
    },
    "8483": {
      "op": "MSTORE"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8486": {
      "op": "ADD"
    },
    "8487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "8490": {
      "op": "JUMP"
    },
    "8491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 86,
      "value": "0x1425"
    },
    "8495": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8496": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26DB"
    },
    "8499": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8500": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8501": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8503": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8510": {
      "op": "SHL"
    },
    "8511": {
      "op": "SUB"
    },
    "8512": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8515": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8516": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8517": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8518": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8519": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8520": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8521": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2164"
    },
    "8524": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8534": {
      "op": "SHL"
    },
    "8535": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8539": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "8543": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8544": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333F"
    },
    "8547": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8548": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8549": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6633
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0x11"
    },
    "8551": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8552": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8559": {
      "op": "SHL"
    },
    "8560": {
      "op": "SUB"
    },
    "8561": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8562": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8563": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "AND",
      "path": "16"
    },
    "8564": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "8569": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "MUL",
      "path": "16"
    },
    "8570": {
      "op": "PUSH4",
      "value": "0x1000000"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8579": {
      "op": "SHL"
    },
    "8580": {
      "op": "SUB"
    },
    "8581": {
      "op": "NOT"
    },
    "8582": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8583": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8584": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "AND",
      "path": "16"
    },
    "8585": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8586": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8587": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8588": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "OR",
      "path": "16"
    },
    "8589": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8590": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6617,
        6653
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8591": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6532,
        6660
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8592": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8593": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8594": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8595": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8597": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8598": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8599": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8600": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8601": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8602": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "op": "SUB"
    },
    "8612": {
      "op": "NOT"
    },
    "8613": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 88
    },
    "8614": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8615": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8622": {
      "op": "SHL"
    },
    "8623": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8624": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8625": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA17"
    },
    "8628": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8629": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8630": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA17"
    },
    "8633": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8634": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x298D"
    },
    "8637": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8638": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8639": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 89,
      "value": "0x0"
    },
    "8641": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8642": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8643": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8644": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8646": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8648": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8649": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8651": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8652": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8653": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8654": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8661": {
      "op": "SHL"
    },
    "8662": {
      "op": "SUB"
    },
    "8663": {
      "op": "NOT"
    },
    "8664": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8671": {
      "op": "SHL"
    },
    "8672": {
      "op": "SUB"
    },
    "8673": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8674": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8675": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8676": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8677": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "3"
    },
    "8678": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8679": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8680": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8681": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8682": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8683": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 90,
      "value": "0x21F3"
    },
    "8686": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8687": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "8690": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8691": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8698": {
      "op": "SHL"
    },
    "8699": {
      "op": "SUB"
    },
    "8700": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "3"
    },
    "8701": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8734": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8736": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8737": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8739": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8740": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8741": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8742": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "3"
    },
    "8743": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8744": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "3"
    },
    "8745": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8746": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8747": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8748": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8749": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8751": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8752": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8753": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8754": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8756": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8758": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8759": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8761": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8762": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8763": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8770": {
      "op": "SHL"
    },
    "8771": {
      "op": "SUB"
    },
    "8772": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "8773": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 91,
      "value": "0x22A5"
    },
    "8776": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8777": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8779": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8786": {
      "op": "SHL"
    },
    "8787": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8788": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8791": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8793": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8794": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "3"
    },
    "8795": {
      "op": "MSTORE"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8800": {
      "op": "DUP3"
    },
    "8801": {
      "op": "ADD"
    },
    "8802": {
      "op": "MSTORE"
    },
    "8803": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8838": {
      "op": "DUP3"
    },
    "8839": {
      "op": "ADD"
    },
    "8840": {
      "op": "MSTORE"
    },
    "8841": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8859": {
      "op": "DUP3"
    },
    "8860": {
      "op": "ADD"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "8868": {
      "op": "JUMP"
    },
    "8869": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8870": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8872": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B0"
    },
    "8875": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8876": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "8879": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8880": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8881": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8882": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "3"
    },
    "8883": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 92
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8890": {
      "op": "SHL"
    },
    "8891": {
      "op": "SUB"
    },
    "8892": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "8893": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8900": {
      "op": "SHL"
    },
    "8901": {
      "op": "SUB"
    },
    "8902": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "8903": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "3"
    },
    "8904": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8905": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22EB"
    },
    "8908": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8909": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "3"
    },
    "8910": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8917": {
      "op": "SHL"
    },
    "8918": {
      "op": "SUB"
    },
    "8919": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "8920": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22E0"
    },
    "8923": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8924": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAF"
    },
    "8927": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8928": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8935": {
      "op": "SHL"
    },
    "8936": {
      "op": "SUB"
    },
    "8937": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "8938": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "3"
    },
    "8939": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8940": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8941": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231B"
    },
    "8944": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8945": {
      "op": "POP"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8952": {
      "op": "SHL"
    },
    "8953": {
      "op": "SUB"
    },
    "8954": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8955": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8956": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "8957": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8959": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8960": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8961": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8962": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "8964": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8966": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8967": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8969": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8971": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8972": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8973": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8974": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8975": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8976": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "8977": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8978": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8979": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8980": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8981": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8982": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8983": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8984": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "8986": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "8987": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8988": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7683,
        7779
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8989": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8990": {
      "op": "POP"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "op": "POP"
    },
    "8993": {
      "op": "POP"
    },
    "8994": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8995": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8996": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 93
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9003": {
      "op": "SHL"
    },
    "9004": {
      "op": "SUB"
    },
    "9005": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9006": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2336"
    },
    "9009": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9010": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "9013": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9014": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9021": {
      "op": "SHL"
    },
    "9022": {
      "op": "SUB"
    },
    "9023": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9024": {
      "branch": 182,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "3"
    },
    "9025": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239A"
    },
    "9028": {
      "branch": 182,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9029": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9031": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9038": {
      "op": "SHL"
    },
    "9039": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9040": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9043": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9045": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9046": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "3"
    },
    "9047": {
      "op": "MSTORE"
    },
    "9048": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9052": {
      "op": "DUP3"
    },
    "9053": {
      "op": "ADD"
    },
    "9054": {
      "op": "MSTORE"
    },
    "9055": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "ADD"
    },
    "9092": {
      "op": "MSTORE"
    },
    "9093": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9101": {
      "op": "SHL"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9104": {
      "op": "DUP3"
    },
    "9105": {
      "op": "ADD"
    },
    "9106": {
      "op": "MSTORE"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9109": {
      "op": "ADD"
    },
    "9110": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "9113": {
      "op": "JUMP"
    },
    "9114": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9121": {
      "op": "SHL"
    },
    "9122": {
      "op": "SUB"
    },
    "9123": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 94
    },
    "9124": {
      "branch": 183,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "3"
    },
    "9125": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23FC"
    },
    "9128": {
      "branch": 183,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9129": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9131": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9138": {
      "op": "SHL"
    },
    "9139": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9140": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9143": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9145": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9146": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "3"
    },
    "9147": {
      "op": "MSTORE"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9150": {
      "op": "DUP1"
    },
    "9151": {
      "op": "DUP3"
    },
    "9152": {
      "op": "ADD"
    },
    "9153": {
      "op": "MSTORE"
    },
    "9154": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9189": {
      "op": "DUP3"
    },
    "9190": {
      "op": "ADD"
    },
    "9191": {
      "op": "MSTORE"
    },
    "9192": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9202": {
      "op": "DUP3"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "MSTORE"
    },
    "9205": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9207": {
      "op": "ADD"
    },
    "9208": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "9211": {
      "op": "JUMP"
    },
    "9212": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9213": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 95,
      "value": "0x2407"
    },
    "9216": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9217": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9218": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9219": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29DD"
    },
    "9222": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9223": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9224": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 96,
      "value": "0x2412"
    },
    "9227": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9229": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9230": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21BE"
    },
    "9233": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9234": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9241": {
      "op": "SHL"
    },
    "9242": {
      "op": "SUB"
    },
    "9243": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 97
    },
    "9244": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "3"
    },
    "9245": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9247": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9248": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9249": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9250": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9252": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9254": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9255": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9257": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9258": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9259": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9260": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9261": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9263": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9264": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9265": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x243B"
    },
    "9268": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9269": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9270": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9271": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x353A"
    },
    "9274": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9275": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9276": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9277": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9278": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9279": {
      "op": "POP"
    },
    "9280": {
      "op": "POP"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9287": {
      "op": "SHL"
    },
    "9288": {
      "op": "SUB"
    },
    "9289": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 98
    },
    "9290": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "3"
    },
    "9291": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9293": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9294": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9295": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9296": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9298": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9300": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9301": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9303": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9304": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9305": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9306": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9307": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9309": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9310": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9311": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2469"
    },
    "9314": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9315": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9316": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9317": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3424"
    },
    "9320": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9321": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9322": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9323": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9324": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "op": "POP"
    },
    "9327": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 99,
      "value": "0x0"
    },
    "9329": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9330": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9331": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9332": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9334": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9336": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9337": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9339": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9340": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9341": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9342": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9343": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9350": {
      "op": "SHL"
    },
    "9351": {
      "op": "SUB"
    },
    "9352": {
      "op": "NOT"
    },
    "9353": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9360": {
      "op": "SHL"
    },
    "9361": {
      "op": "SUB"
    },
    "9362": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9363": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9364": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9365": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9366": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9367": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "3"
    },
    "9368": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9369": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9370": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9371": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 100
    },
    "9372": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9373": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9374": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9375": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9376": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9377": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "3"
    },
    "9378": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9379": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9412": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9413": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9414": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9415": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9416": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9417": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9418": {
      "fn": "ERC721._safeMint",
      "offset": [
        8116,
        8224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9419": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 101,
      "value": "0xD5C"
    },
    "9422": {
      "fn": "ERC721._safeMint",
      "offset": [
        8201,
        8203
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9423": {
      "fn": "ERC721._safeMint",
      "offset": [
        8205,
        8212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9424": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9426": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9427": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9428": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9430": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "ADD",
      "path": "3"
    },
    "9431": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9433": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9434": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9435": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9437": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9438": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9439": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "POP",
      "path": "3"
    },
    "9440": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0B"
    },
    "9443": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8191,
        8217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9444": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9445": {
      "fn": "MerkleProof.verify",
      "offset": [
        983,
        987
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9447": {
      "fn": "MerkleProof.verify",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 102
    },
    "9448": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24F1"
    },
    "9451": {
      "fn": "MerkleProof.verify",
      "offset": [
        1019,
        1024
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9452": {
      "fn": "MerkleProof.verify",
      "offset": [
        1026,
        1030
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9453": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A3E"
    },
    "9456": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9457": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9458": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "EQ",
      "path": "13"
    },
    "9459": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9460": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9461": {
      "op": "POP"
    },
    "9462": {
      "op": "POP"
    },
    "9463": {
      "op": "POP"
    },
    "9464": {
      "op": "POP"
    },
    "9465": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        862,
        1046
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9466": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9473": {
      "op": "SHL"
    },
    "9474": {
      "op": "SUB"
    },
    "9475": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 103
    },
    "9476": {
      "branch": 184,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "3"
    },
    "9477": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2550"
    },
    "9480": {
      "branch": 184,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9481": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9483": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9490": {
      "op": "SHL"
    },
    "9491": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9492": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9495": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9497": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9498": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "3"
    },
    "9499": {
      "op": "DUP2"
    },
    "9500": {
      "op": "SWAP1"
    },
    "9501": {
      "op": "MSTORE"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9504": {
      "op": "DUP3"
    },
    "9505": {
      "op": "ADD"
    },
    "9506": {
      "op": "MSTORE"
    },
    "9507": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9542": {
      "op": "DUP3"
    },
    "9543": {
      "op": "ADD"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9547": {
      "op": "ADD"
    },
    "9548": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "9551": {
      "op": "JUMP"
    },
    "9552": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9553": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9555": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9556": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9557": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9558": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9560": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9562": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9563": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9565": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9566": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9567": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9574": {
      "op": "SHL"
    },
    "9575": {
      "op": "SUB"
    },
    "9576": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "9577": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9578": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 104,
      "value": "0x25B5"
    },
    "9581": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9582": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9584": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9591": {
      "op": "SHL"
    },
    "9592": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9593": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9596": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9598": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9599": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "3"
    },
    "9600": {
      "op": "MSTORE"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9605": {
      "op": "DUP3"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "MSTORE"
    },
    "9608": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9643": {
      "op": "DUP3"
    },
    "9644": {
      "op": "ADD"
    },
    "9645": {
      "op": "MSTORE"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9648": {
      "op": "ADD"
    },
    "9649": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "9652": {
      "op": "JUMP"
    },
    "9653": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9654": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 105,
      "value": "0x25C1"
    },
    "9657": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9659": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9660": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9661": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29DD"
    },
    "9664": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9665": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9672": {
      "op": "SHL"
    },
    "9673": {
      "op": "SUB"
    },
    "9674": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 106
    },
    "9675": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "3"
    },
    "9676": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9678": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9679": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9680": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9681": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9683": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9685": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9686": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9688": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9689": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9690": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9691": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9692": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9694": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9695": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9696": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25EA"
    },
    "9699": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9700": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9701": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9702": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3424"
    },
    "9705": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9706": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9707": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9708": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9709": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9710": {
      "op": "POP"
    },
    "9711": {
      "op": "POP"
    },
    "9712": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 107,
      "value": "0x0"
    },
    "9714": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9715": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9716": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9717": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9719": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9721": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9722": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9724": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9725": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9726": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9727": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9728": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9735": {
      "op": "SHL"
    },
    "9736": {
      "op": "SUB"
    },
    "9737": {
      "op": "NOT"
    },
    "9738": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9745": {
      "op": "SHL"
    },
    "9746": {
      "op": "SUB"
    },
    "9747": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9748": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "9749": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9750": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9751": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "3"
    },
    "9752": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9753": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9754": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9755": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 108
    },
    "9756": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9757": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9758": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9759": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9760": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9793": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9794": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9795": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9796": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9797": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6226,
        6258
      ],
      "op": "POP",
      "path": "16"
    },
    "9798": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5974,
        6265
      ],
      "op": "POP",
      "path": "16"
    },
    "9799": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5974,
        6265
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9800": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9801": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9803": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9804": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9806": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9807": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2691"
    },
    "9810": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9811": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9813": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9820": {
      "op": "SHL"
    },
    "9821": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9822": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9825": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9827": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9828": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9829": {
      "op": "MSTORE"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9834": {
      "op": "DUP3"
    },
    "9835": {
      "op": "ADD"
    },
    "9836": {
      "op": "MSTORE"
    },
    "9837": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9860": {
      "op": "SHL"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9863": {
      "op": "DUP3"
    },
    "9864": {
      "op": "ADD"
    },
    "9865": {
      "op": "MSTORE"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9868": {
      "op": "ADD"
    },
    "9869": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB24"
    },
    "9872": {
      "op": "JUMP"
    },
    "9873": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9874": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 109,
      "value": "0xA"
    },
    "9876": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9877": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9880": {
      "op": "NOT"
    },
    "9881": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9882": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9883": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9884": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 110,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9917": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9918": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9919": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9921": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9928": {
      "op": "SHL"
    },
    "9929": {
      "op": "SUB"
    },
    "9930": {
      "op": "SWAP1"
    },
    "9931": {
      "op": "SWAP2"
    },
    "9932": {
      "op": "AND"
    },
    "9933": {
      "op": "DUP2"
    },
    "9934": {
      "op": "MSTORE"
    },
    "9935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9937": {
      "op": "ADD"
    },
    "9938": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9940": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9941": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9942": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9943": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9944": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9945": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9946": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9947": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9948": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9950": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9958": {
      "op": "SHL"
    },
    "9959": {
      "op": "SUB"
    },
    "9960": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 111
    },
    "9961": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9962": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9963": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9966": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9967": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9968": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9969": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9974": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9976": {
      "op": "SHL"
    },
    "9977": {
      "op": "SUB"
    },
    "9978": {
      "op": "NOT"
    },
    "9979": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9980": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9981": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9982": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9983": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9984": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 112,
      "value": "0x40"
    },
    "9987": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "9992": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9993": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9994": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9995": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9996": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10029": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10030": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10032": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10033": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10034": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10035": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10036": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10037": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10038": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10040": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10041": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10043": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10044": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10045": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2758"
    },
    "10048": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10049": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10051": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10058": {
      "op": "SHL"
    },
    "10059": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10060": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10061": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10063": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10064": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB24"
    },
    "10067": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10068": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33C5"
    },
    "10071": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10072": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10073": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 113,
      "value": "0xA"
    },
    "10075": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10076": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10077": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10079": {
      "op": "NOT"
    },
    "10080": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "10081": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10083": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "10084": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10085": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10086": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 114,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "10119": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26BE"
    },
    "10122": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10123": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10124": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10125": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10126": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 115
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10133": {
      "op": "SHL"
    },
    "10134": {
      "op": "SUB"
    },
    "10135": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10136": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10143": {
      "op": "SHL"
    },
    "10144": {
      "op": "SUB"
    },
    "10145": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10146": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "3"
    },
    "10147": {
      "branch": 185,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10148": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27EF"
    },
    "10151": {
      "branch": 185,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10152": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10154": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10161": {
      "op": "SHL"
    },
    "10162": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10163": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10166": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10169": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "3"
    },
    "10170": {
      "op": "MSTORE"
    },
    "10171": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10175": {
      "op": "DUP3"
    },
    "10176": {
      "op": "ADD"
    },
    "10177": {
      "op": "MSTORE"
    },
    "10178": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10213": {
      "op": "DUP3"
    },
    "10214": {
      "op": "ADD"
    },
    "10215": {
      "op": "MSTORE"
    },
    "10216": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10218": {
      "op": "ADD"
    },
    "10219": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "10222": {
      "op": "JUMP"
    },
    "10223": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10230": {
      "op": "SHL"
    },
    "10231": {
      "op": "SUB"
    },
    "10232": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 116
    },
    "10233": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10234": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "3"
    },
    "10235": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10237": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10238": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10239": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10240": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10242": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10244": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10245": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10246": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10247": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10249": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10250": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10251": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10252": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10253": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10254": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "3"
    },
    "10255": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10256": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10257": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10258": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10259": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10260": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10261": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10262": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10263": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10264": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10265": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10266": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10269": {
      "op": "NOT"
    },
    "10270": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10274": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10275": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10276": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "3"
    },
    "10277": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10278": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10279": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10280": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 117
    },
    "10281": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10282": {
      "op": "SWAP2"
    },
    "10283": {
      "op": "DUP3"
    },
    "10284": {
      "op": "MSTORE"
    },
    "10285": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10318": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10319": {
      "op": "ADD"
    },
    "10320": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10322": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10323": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10324": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10325": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "3"
    },
    "10326": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10327": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10328": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10329": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10330": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10331": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10332": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10333": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 118,
      "value": "0x2867"
    },
    "10336": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10337": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10338": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10339": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2323"
    },
    "10342": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10343": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10344": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 119,
      "value": "0x2873"
    },
    "10347": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10348": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10349": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10350": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10351": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AAA"
    },
    "10354": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10355": {
      "branch": 186,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10356": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CCC"
    },
    "10359": {
      "branch": 186,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10360": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10362": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10369": {
      "op": "SHL"
    },
    "10370": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10371": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10372": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10374": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "3"
    },
    "10375": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "10378": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10379": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3551"
    },
    "10382": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10383": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10384": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10386": {
      "branch": 198,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10387": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B3"
    },
    "10390": {
      "branch": 198,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "op": "POP"
    },
    "10393": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 120,
      "value": "0x40"
    },
    "10395": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10396": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10397": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10398": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10399": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10400": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10401": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10402": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10403": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10405": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10406": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10411": {
      "op": "SHL"
    },
    "10412": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10414": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10415": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10416": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10417": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10418": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10419": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10420": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10421": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10423": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10424": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10425": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10426": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28DD"
    },
    "10429": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10430": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 121
    },
    "10431": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C7"
    },
    "10434": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10435": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x343C"
    },
    "10438": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10439": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10440": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10441": {
      "op": "POP"
    },
    "10442": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x28D6"
    },
    "10445": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10446": {
      "op": "POP"
    },
    "10447": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10449": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10450": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35B9"
    },
    "10453": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10454": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10455": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10456": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10457": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B7"
    },
    "10460": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10461": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10462": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10464": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10465": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10474": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10475": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10476": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10477": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F8"
    },
    "10480": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10481": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F8"
    },
    "10484": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F8D"
    },
    "10487": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10488": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10489": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10491": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10492": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10493": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10494": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10495": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10496": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10497": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10499": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10500": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10502": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10503": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10504": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10506": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10507": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10508": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10509": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10511": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10512": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10513": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10514": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2922"
    },
    "10517": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10518": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10520": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10521": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10522": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10523": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10524": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10525": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10526": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10527": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10528": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10531": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10532": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10533": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10534": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10535": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10536": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10537": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231B"
    },
    "10540": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10541": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 123,
      "value": "0x2937"
    },
    "10544": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10546": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10547": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x353A"
    },
    "10550": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10551": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10552": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10553": {
      "op": "POP"
    },
    "10554": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 124,
      "value": "0x2944"
    },
    "10557": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10559": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10560": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35CD"
    },
    "10563": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10564": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10565": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x294F"
    },
    "10568": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10569": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10571": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3424"
    },
    "10574": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10575": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10576": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10578": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10579": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10580": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10581": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10582": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10583": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10584": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10585": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2964"
    },
    "10588": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10589": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2964"
    },
    "10592": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3457"
    },
    "10595": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10596": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10597": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10599": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10600": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10601": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10608": {
      "op": "SHL"
    },
    "10609": {
      "op": "SUB"
    },
    "10610": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10611": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10612": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10613": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10614": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10616": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10617": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10618": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10619": {
      "op": "POP"
    },
    "10620": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 125,
      "value": "0x2986"
    },
    "10623": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10625": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10626": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35B9"
    },
    "10629": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10630": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10631": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10632": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10633": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2926"
    },
    "10636": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10637": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10638": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10646": {
      "op": "SHL"
    },
    "10647": {
      "op": "SUB"
    },
    "10648": {
      "op": "NOT"
    },
    "10649": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 126
    },
    "10650": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "10651": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10658": {
      "op": "SHL"
    },
    "10659": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "10660": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10661": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29BE"
    },
    "10664": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10665": {
      "op": "POP"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10672": {
      "op": "SHL"
    },
    "10673": {
      "op": "SUB"
    },
    "10674": {
      "op": "NOT"
    },
    "10675": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10676": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "10677": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10684": {
      "op": "SHL"
    },
    "10685": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "10686": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10687": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10688": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA17"
    },
    "10691": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10692": {
      "op": "POP"
    },
    "10693": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10700": {
      "op": "SHL"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10707": {
      "op": "SHL"
    },
    "10708": {
      "op": "SUB"
    },
    "10709": {
      "op": "NOT"
    },
    "10710": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 127
    },
    "10711": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10712": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10713": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA17"
    },
    "10716": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10717": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8215,
        8408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10718": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10720": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10721": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10723": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10724": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10725": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A00"
    },
    "10728": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10729": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10731": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10738": {
      "op": "SHL"
    },
    "10739": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10740": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10741": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10743": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10744": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB24"
    },
    "10747": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10748": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33C5"
    },
    "10751": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10752": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10753": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8356,
        8401
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 128,
      "value": "0xC5A"
    },
    "10756": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8383,
        8387
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10757": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8389,
        8391
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10758": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8393,
        8400
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10759": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8356,
        8382
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BA8"
    },
    "10762": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8356,
        8401
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10763": {
      "fn": "ERC721._safeMint",
      "offset": [
        8445,
        8756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10764": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 129,
      "value": "0x2A15"
    },
    "10767": {
      "fn": "ERC721._safeMint",
      "offset": [
        8576,
        8578
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10768": {
      "fn": "ERC721._safeMint",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10769": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24FA"
    },
    "10772": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10773": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10774": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 130,
      "value": "0x2A22"
    },
    "10777": {
      "fn": "ERC721._safeMint",
      "offset": [
        8650,
        8651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10779": {
      "fn": "ERC721._safeMint",
      "offset": [
        8654,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10780": {
      "fn": "ERC721._safeMint",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10781": {
      "fn": "ERC721._safeMint",
      "offset": [
        8667,
        8672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10782": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AAA"
    },
    "10785": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10786": {
      "branch": 187,
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10787": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5A"
    },
    "10790": {
      "branch": 187,
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10791": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10793": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10800": {
      "op": "SHL"
    },
    "10801": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10802": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10803": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10805": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "ADD",
      "path": "3"
    },
    "10806": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "10809": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10810": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3551"
    },
    "10813": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10814": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1398,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10815": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10817": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1523,
        1527
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10818": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10819": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10820": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1566
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10821": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10822": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10823": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1573
      ],
      "op": "LT",
      "path": "13"
    },
    "10824": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10825": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1517"
    },
    "10828": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10829": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1614
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10831": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1622
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10832": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1623,
        1624
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10833": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10834": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10835": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10836": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "LT",
      "path": "13"
    },
    "10837": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A60"
    },
    "10840": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10841": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A60"
    },
    "10844": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3457"
    },
    "10847": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10848": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10849": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10851": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MUL",
      "path": "13"
    },
    "10852": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10854": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10855": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10856": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10857": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10858": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "POP",
      "path": "13"
    },
    "10859": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1659,
        1671
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10860": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10861": {
      "branch": 195,
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1671
      ],
      "op": "GT",
      "path": "13"
    },
    "10862": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A86"
    },
    "10865": {
      "branch": 195,
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10866": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10868": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10869": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10870": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10871": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10873": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10874": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10875": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10876": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10878": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10879": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10880": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 131
    },
    "10881": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "POP",
      "path": "13"
    },
    "10882": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A97"
    },
    "10885": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10886": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10887": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10889": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10890": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10891": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10892": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10894": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10895": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10896": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10897": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10899": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10900": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10901": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 132
    },
    "10902": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "POP",
      "path": "13"
    },
    "10903": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10904": {
      "op": "POP"
    },
    "10905": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 133
    },
    "10906": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AA2"
    },
    "10909": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10910": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x343C"
    },
    "10913": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10914": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10915": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10916": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10917": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10918": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A43"
    },
    "10921": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10931": {
      "op": "SHL"
    },
    "10932": {
      "op": "SUB"
    },
    "10933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "10935": {
      "op": "EXTCODESIZE"
    },
    "10936": {
      "op": "ISZERO"
    },
    "10937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B9D"
    },
    "10940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10944": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10951": {
      "op": "SHL"
    },
    "10952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10960": {
      "op": "SHL"
    },
    "10961": {
      "op": "SUB"
    },
    "10962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "3"
    },
    "10964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "10970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AEE"
    },
    "10974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10975": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10976": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "10978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E1"
    },
    "10989": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "3"
    },
    "10999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "3"
    },
    "11003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "3"
    },
    "11004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "3"
    },
    "11005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B29"
    },
    "11014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11015": {
      "op": "POP"
    },
    "11016": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11026": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11028": {
      "op": "NOT"
    },
    "11029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "3"
    },
    "11030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B26"
    },
    "11038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x361E"
    },
    "11045": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B83"
    },
    "11053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B57"
    },
    "11061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "3"
    },
    "11070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "11072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "3"
    },
    "11075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "11091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5C"
    },
    "11094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "11098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11101": {
      "op": "POP"
    },
    "11102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B7B"
    },
    "11107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 134,
      "value": "0x40"
    },
    "11110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11117": {
      "op": "SHL"
    },
    "11118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB24"
    },
    "11126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3551"
    },
    "11130": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "3"
    },
    "11138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11146": {
      "op": "SHL"
    },
    "11147": {
      "op": "SUB"
    },
    "11148": {
      "op": "NOT"
    },
    "11149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "3",
      "statement": 135
    },
    "11150": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11155": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11157": {
      "op": "SHL"
    },
    "11158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "3"
    },
    "11159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11160": {
      "op": "POP"
    },
    "11161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231B"
    },
    "11164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11166": {
      "op": "POP"
    },
    "11167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 136,
      "value": "0x1"
    },
    "11169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "11171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11175": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11176": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11183": {
      "op": "SHL"
    },
    "11184": {
      "op": "SUB"
    },
    "11185": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11186": {
      "branch": 190,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "11187": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C03"
    },
    "11190": {
      "branch": 190,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11191": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 137,
      "value": "0x2BFE"
    },
    "11194": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11195": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 138,
      "value": "0x8"
    },
    "11197": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11198": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11199": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11201": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11202": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11203": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11204": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11206": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11208": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11209": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11211": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11212": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11213": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11214": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11215": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11216": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 139,
      "value": "0x1"
    },
    "11218": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11219": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11220": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11221": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11222": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11223": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11224": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11225": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11226": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11259": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11260": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11261": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11262": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11263": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C26"
    },
    "11266": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11267": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11268": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11275": {
      "op": "SHL"
    },
    "11276": {
      "op": "SUB"
    },
    "11277": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11278": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11285": {
      "op": "SHL"
    },
    "11286": {
      "op": "SUB"
    },
    "11287": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11288": {
      "branch": 191,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11289": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C26"
    },
    "11292": {
      "branch": 191,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11293": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 140,
      "value": "0x2C26"
    },
    "11296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11297": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11298": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C60"
    },
    "11301": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11302": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11309": {
      "op": "SHL"
    },
    "11310": {
      "op": "SUB"
    },
    "11311": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11312": {
      "branch": 192,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11313": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3D"
    },
    "11316": {
      "branch": 192,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11317": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 141,
      "value": "0xC5A"
    },
    "11320": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11321": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CFD"
    },
    "11324": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11325": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11326": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11333": {
      "op": "SHL"
    },
    "11334": {
      "op": "SUB"
    },
    "11335": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11336": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11343": {
      "op": "SHL"
    },
    "11344": {
      "op": "SUB"
    },
    "11345": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11346": {
      "branch": 193,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11347": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5A"
    },
    "11350": {
      "branch": 193,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11351": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 142,
      "value": "0xC5A"
    },
    "11354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11355": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11356": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DAC"
    },
    "11359": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11360": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11361": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11363": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11365": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6D"
    },
    "11368": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11369": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17AB"
    },
    "11372": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11373": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11374": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C77"
    },
    "11377": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11378": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11379": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x353A"
    },
    "11382": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11383": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11384": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11386": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11387": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11388": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11389": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11391": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11393": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11394": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11396": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11397": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11398": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11399": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11400": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11403": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11404": {
      "branch": 194,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11405": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CCA"
    },
    "11408": {
      "branch": 194,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11415": {
      "op": "SHL"
    },
    "11416": {
      "op": "SUB"
    },
    "11417": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11418": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11419": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11421": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11422": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11423": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11424": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11426": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11428": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11429": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11430": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11431": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11433": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11434": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11435": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11436": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11437": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11438": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11439": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11440": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11441": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11442": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11443": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11444": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11445": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 143
    },
    "11446": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11447": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11448": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11449": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11450": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11451": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11452": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11453": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11454": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 144
    },
    "11455": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11456": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11458": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11459": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11460": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11461": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11462": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11463": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11464": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11465": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11466": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11467": {
      "op": "POP"
    },
    "11468": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 145,
      "value": "0x0"
    },
    "11470": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11471": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11472": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11473": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11475": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11477": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11478": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11479": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11480": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11482": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11483": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11484": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11485": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11486": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11487": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11494": {
      "op": "SHL"
    },
    "11495": {
      "op": "SUB"
    },
    "11496": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 146
    },
    "11497": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11498": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11499": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11500": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11501": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11503": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11504": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11505": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11506": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11507": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11508": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11509": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11510": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11511": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11512": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11513": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11514": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11515": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11516": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11517": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11518": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11520": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11521": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11523": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11524": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0F"
    },
    "11527": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11528": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11530": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11531": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x353A"
    },
    "11534": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11535": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11536": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11538": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11539": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11540": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11541": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11543": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11545": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11546": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11548": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11549": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11550": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11551": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11553": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11554": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11555": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11556": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11559": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11560": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11561": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11562": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11563": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11564": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D37"
    },
    "11567": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11568": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D37"
    },
    "11571": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3457"
    },
    "11574": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11575": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11576": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11577": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11579": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11580": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11582": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11584": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11585": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11586": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11587": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11588": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11589": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 147
    },
    "11590": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11592": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11593": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11594": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11595": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11596": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "11597": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D58"
    },
    "11600": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11601": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D58"
    },
    "11604": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3457"
    },
    "11607": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11608": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11609": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11611": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11612": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11613": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11614": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11616": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11617": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11618": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11619": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11620": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11621": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "11622": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11623": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11624": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11625": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11626": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 148
    },
    "11627": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11628": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11629": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11631": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11632": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11633": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11634": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11636": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11637": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11638": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11639": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11640": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11641": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11642": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 149
    },
    "11643": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11644": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11645": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11646": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11647": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11648": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 150,
      "value": "0x8"
    },
    "11650": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11651": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11652": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11653": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D90"
    },
    "11656": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11657": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D90"
    },
    "11660": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363B"
    },
    "11663": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11664": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11665": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11667": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11668": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "11669": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11670": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11671": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11672": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11674": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11675": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11677": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11679": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11680": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "11681": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11683": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11684": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11685": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11686": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11687": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11688": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11689": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11690": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11691": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11692": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11693": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11695": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DB7"
    },
    "11698": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11699": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17AB"
    },
    "11702": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11703": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11710": {
      "op": "SHL"
    },
    "11711": {
      "op": "SUB"
    },
    "11712": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 151
    },
    "11713": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11714": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "11715": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11717": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11718": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11719": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11720": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11722": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11724": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11725": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11726": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11727": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11729": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11730": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11731": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11732": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "11733": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11734": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11735": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11736": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11737": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11738": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11739": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11740": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11741": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11742": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11743": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 152
    },
    "11744": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11745": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11746": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11748": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11749": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11750": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11751": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11752": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11753": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11754": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11755": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11756": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11757": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11758": {
      "op": "POP"
    },
    "11759": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11760": {
      "op": "JUMPDEST"
    },
    "11761": {
      "op": "DUP3"
    },
    "11762": {
      "op": "DUP1"
    },
    "11763": {
      "op": "SLOAD"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0x2DFC"
    },
    "11767": {
      "op": "SWAP1"
    },
    "11768": {
      "op": "PUSH2",
      "value": "0x3304"
    },
    "11771": {
      "jump": "i",
      "op": "JUMP"
    },
    "11772": {
      "op": "JUMPDEST"
    },
    "11773": {
      "op": "SWAP1"
    },
    "11774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11776": {
      "op": "MSTORE"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11781": {
      "op": "KECCAK256"
    },
    "11782": {
      "op": "SWAP1"
    },
    "11783": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11785": {
      "op": "ADD"
    },
    "11786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11788": {
      "op": "SWAP1"
    },
    "11789": {
      "op": "DIV"
    },
    "11790": {
      "op": "DUP2"
    },
    "11791": {
      "op": "ADD"
    },
    "11792": {
      "op": "SWAP3"
    },
    "11793": {
      "op": "DUP3"
    },
    "11794": {
      "op": "PUSH2",
      "value": "0x2E1E"
    },
    "11797": {
      "op": "JUMPI"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11800": {
      "op": "DUP6"
    },
    "11801": {
      "op": "SSTORE"
    },
    "11802": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11805": {
      "op": "JUMP"
    },
    "11806": {
      "op": "JUMPDEST"
    },
    "11807": {
      "op": "DUP3"
    },
    "11808": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11810": {
      "op": "LT"
    },
    "11811": {
      "op": "PUSH2",
      "value": "0x2E37"
    },
    "11814": {
      "op": "JUMPI"
    },
    "11815": {
      "op": "DUP1"
    },
    "11816": {
      "op": "MLOAD"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11819": {
      "op": "NOT"
    },
    "11820": {
      "op": "AND"
    },
    "11821": {
      "op": "DUP4"
    },
    "11822": {
      "op": "DUP1"
    },
    "11823": {
      "op": "ADD"
    },
    "11824": {
      "op": "OR"
    },
    "11825": {
      "op": "DUP6"
    },
    "11826": {
      "op": "SSTORE"
    },
    "11827": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11830": {
      "op": "JUMP"
    },
    "11831": {
      "op": "JUMPDEST"
    },
    "11832": {
      "op": "DUP3"
    },
    "11833": {
      "op": "DUP1"
    },
    "11834": {
      "op": "ADD"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11837": {
      "op": "ADD"
    },
    "11838": {
      "op": "DUP6"
    },
    "11839": {
      "op": "SSTORE"
    },
    "11840": {
      "op": "DUP3"
    },
    "11841": {
      "op": "ISZERO"
    },
    "11842": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11845": {
      "op": "JUMPI"
    },
    "11846": {
      "op": "SWAP2"
    },
    "11847": {
      "op": "DUP3"
    },
    "11848": {
      "op": "ADD"
    },
    "11849": {
      "op": "JUMPDEST"
    },
    "11850": {
      "op": "DUP3"
    },
    "11851": {
      "op": "DUP2"
    },
    "11852": {
      "op": "GT"
    },
    "11853": {
      "op": "ISZERO"
    },
    "11854": {
      "op": "PUSH2",
      "value": "0x2E64"
    },
    "11857": {
      "op": "JUMPI"
    },
    "11858": {
      "op": "DUP3"
    },
    "11859": {
      "op": "MLOAD"
    },
    "11860": {
      "op": "DUP3"
    },
    "11861": {
      "op": "SSTORE"
    },
    "11862": {
      "op": "SWAP2"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11865": {
      "op": "ADD"
    },
    "11866": {
      "op": "SWAP2"
    },
    "11867": {
      "op": "SWAP1"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11870": {
      "op": "ADD"
    },
    "11871": {
      "op": "SWAP1"
    },
    "11872": {
      "op": "PUSH2",
      "value": "0x2E49"
    },
    "11875": {
      "op": "JUMP"
    },
    "11876": {
      "op": "JUMPDEST"
    },
    "11877": {
      "op": "POP"
    },
    "11878": {
      "op": "PUSH2",
      "value": "0x2E70"
    },
    "11881": {
      "op": "SWAP3"
    },
    "11882": {
      "op": "SWAP2"
    },
    "11883": {
      "op": "POP"
    },
    "11884": {
      "op": "PUSH2",
      "value": "0x2E74"
    },
    "11887": {
      "jump": "i",
      "op": "JUMP"
    },
    "11888": {
      "op": "JUMPDEST"
    },
    "11889": {
      "op": "POP"
    },
    "11890": {
      "op": "SWAP1"
    },
    "11891": {
      "jump": "o",
      "op": "JUMP"
    },
    "11892": {
      "op": "JUMPDEST"
    },
    "11893": {
      "op": "JUMPDEST"
    },
    "11894": {
      "op": "DUP1"
    },
    "11895": {
      "op": "DUP3"
    },
    "11896": {
      "op": "GT"
    },
    "11897": {
      "op": "ISZERO"
    },
    "11898": {
      "op": "PUSH2",
      "value": "0x2E70"
    },
    "11901": {
      "op": "JUMPI"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11904": {
      "op": "DUP2"
    },
    "11905": {
      "op": "SSTORE"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11908": {
      "op": "ADD"
    },
    "11909": {
      "op": "PUSH2",
      "value": "0x2E75"
    },
    "11912": {
      "op": "JUMP"
    },
    "11913": {
      "op": "JUMPDEST"
    },
    "11914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11920": {
      "op": "SHL"
    },
    "11921": {
      "op": "SUB"
    },
    "11922": {
      "op": "NOT"
    },
    "11923": {
      "op": "DUP2"
    },
    "11924": {
      "op": "AND"
    },
    "11925": {
      "op": "DUP2"
    },
    "11926": {
      "op": "EQ"
    },
    "11927": {
      "op": "PUSH2",
      "value": "0x1425"
    },
    "11930": {
      "op": "JUMPI"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11933": {
      "op": "DUP1"
    },
    "11934": {
      "op": "REVERT"
    },
    "11935": {
      "op": "JUMPDEST"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11940": {
      "op": "DUP3"
    },
    "11941": {
      "op": "DUP5"
    },
    "11942": {
      "op": "SUB"
    },
    "11943": {
      "op": "SLT"
    },
    "11944": {
      "op": "ISZERO"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EB1"
    },
    "11948": {
      "op": "JUMPI"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11951": {
      "op": "DUP1"
    },
    "11952": {
      "op": "REVERT"
    },
    "11953": {
      "op": "JUMPDEST"
    },
    "11954": {
      "op": "DUP2"
    },
    "11955": {
      "op": "CALLDATALOAD"
    },
    "11956": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "11959": {
      "op": "DUP2"
    },
    "11960": {
      "op": "PUSH2",
      "value": "0x2E89"
    },
    "11963": {
      "jump": "i",
      "op": "JUMP"
    },
    "11964": {
      "op": "JUMPDEST"
    },
    "11965": {
      "op": "SWAP4"
    },
    "11966": {
      "op": "SWAP3"
    },
    "11967": {
      "op": "POP"
    },
    "11968": {
      "op": "POP"
    },
    "11969": {
      "op": "POP"
    },
    "11970": {
      "jump": "o",
      "op": "JUMP"
    },
    "11971": {
      "op": "JUMPDEST"
    },
    "11972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11974": {
      "op": "JUMPDEST"
    },
    "11975": {
      "op": "DUP4"
    },
    "11976": {
      "op": "DUP2"
    },
    "11977": {
      "op": "LT"
    },
    "11978": {
      "op": "ISZERO"
    },
    "11979": {
      "op": "PUSH2",
      "value": "0x2EDE"
    },
    "11982": {
      "op": "JUMPI"
    },
    "11983": {
      "op": "DUP2"
    },
    "11984": {
      "op": "DUP2"
    },
    "11985": {
      "op": "ADD"
    },
    "11986": {
      "op": "MLOAD"
    },
    "11987": {
      "op": "DUP4"
    },
    "11988": {
      "op": "DUP3"
    },
    "11989": {
      "op": "ADD"
    },
    "11990": {
      "op": "MSTORE"
    },
    "11991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11993": {
      "op": "ADD"
    },
    "11994": {
      "op": "PUSH2",
      "value": "0x2EC6"
    },
    "11997": {
      "op": "JUMP"
    },
    "11998": {
      "op": "JUMPDEST"
    },
    "11999": {
      "op": "DUP4"
    },
    "12000": {
      "op": "DUP2"
    },
    "12001": {
      "op": "GT"
    },
    "12002": {
      "op": "ISZERO"
    },
    "12003": {
      "op": "PUSH2",
      "value": "0x1CCC"
    },
    "12006": {
      "op": "JUMPI"
    },
    "12007": {
      "op": "POP"
    },
    "12008": {
      "op": "POP"
    },
    "12009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12011": {
      "op": "SWAP2"
    },
    "12012": {
      "op": "ADD"
    },
    "12013": {
      "op": "MSTORE"
    },
    "12014": {
      "jump": "o",
      "op": "JUMP"
    },
    "12015": {
      "op": "JUMPDEST"
    },
    "12016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12018": {
      "op": "DUP2"
    },
    "12019": {
      "op": "MLOAD"
    },
    "12020": {
      "op": "DUP1"
    },
    "12021": {
      "op": "DUP5"
    },
    "12022": {
      "op": "MSTORE"
    },
    "12023": {
      "op": "PUSH2",
      "value": "0x2F07"
    },
    "12026": {
      "op": "DUP2"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12029": {
      "op": "DUP7"
    },
    "12030": {
      "op": "ADD"
    },
    "12031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12033": {
      "op": "DUP7"
    },
    "12034": {
      "op": "ADD"
    },
    "12035": {
      "op": "PUSH2",
      "value": "0x2EC3"
    },
    "12038": {
      "jump": "i",
      "op": "JUMP"
    },
    "12039": {
      "op": "JUMPDEST"
    },
    "12040": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12042": {
      "op": "ADD"
    },
    "12043": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12045": {
      "op": "NOT"
    },
    "12046": {
      "op": "AND"
    },
    "12047": {
      "op": "SWAP3"
    },
    "12048": {
      "op": "SWAP1"
    },
    "12049": {
      "op": "SWAP3"
    },
    "12050": {
      "op": "ADD"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12053": {
      "op": "ADD"
    },
    "12054": {
      "op": "SWAP3"
    },
    "12055": {
      "op": "SWAP2"
    },
    "12056": {
      "op": "POP"
    },
    "12057": {
      "op": "POP"
    },
    "12058": {
      "jump": "o",
      "op": "JUMP"
    },
    "12059": {
      "op": "JUMPDEST"
    },
    "12060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12062": {
      "op": "DUP2"
    },
    "12063": {
      "op": "MSTORE"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "12069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12071": {
      "op": "DUP4"
    },
    "12072": {
      "op": "ADD"
    },
    "12073": {
      "op": "DUP5"
    },
    "12074": {
      "op": "PUSH2",
      "value": "0x2EEF"
    },
    "12077": {
      "jump": "i",
      "op": "JUMP"
    },
    "12078": {
      "op": "JUMPDEST"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12083": {
      "op": "DUP3"
    },
    "12084": {
      "op": "DUP5"
    },
    "12085": {
      "op": "SUB"
    },
    "12086": {
      "op": "SLT"
    },
    "12087": {
      "op": "ISZERO"
    },
    "12088": {
      "op": "PUSH2",
      "value": "0x2F40"
    },
    "12091": {
      "op": "JUMPI"
    },
    "12092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "REVERT"
    },
    "12096": {
      "op": "JUMPDEST"
    },
    "12097": {
      "op": "POP"
    },
    "12098": {
      "op": "CALLDATALOAD"
    },
    "12099": {
      "op": "SWAP2"
    },
    "12100": {
      "op": "SWAP1"
    },
    "12101": {
      "op": "POP"
    },
    "12102": {
      "jump": "o",
      "op": "JUMP"
    },
    "12103": {
      "op": "JUMPDEST"
    },
    "12104": {
      "op": "DUP1"
    },
    "12105": {
      "op": "CALLDATALOAD"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12112": {
      "op": "SHL"
    },
    "12113": {
      "op": "SUB"
    },
    "12114": {
      "op": "DUP2"
    },
    "12115": {
      "op": "AND"
    },
    "12116": {
      "op": "DUP2"
    },
    "12117": {
      "op": "EQ"
    },
    "12118": {
      "op": "PUSH2",
      "value": "0x2F5E"
    },
    "12121": {
      "op": "JUMPI"
    },
    "12122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12124": {
      "op": "DUP1"
    },
    "12125": {
      "op": "REVERT"
    },
    "12126": {
      "op": "JUMPDEST"
    },
    "12127": {
      "op": "SWAP2"
    },
    "12128": {
      "op": "SWAP1"
    },
    "12129": {
      "op": "POP"
    },
    "12130": {
      "jump": "o",
      "op": "JUMP"
    },
    "12131": {
      "op": "JUMPDEST"
    },
    "12132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12134": {
      "op": "DUP1"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12137": {
      "op": "DUP4"
    },
    "12138": {
      "op": "DUP6"
    },
    "12139": {
      "op": "SUB"
    },
    "12140": {
      "op": "SLT"
    },
    "12141": {
      "op": "ISZERO"
    },
    "12142": {
      "op": "PUSH2",
      "value": "0x2F76"
    },
    "12145": {
      "op": "JUMPI"
    },
    "12146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12148": {
      "op": "DUP1"
    },
    "12149": {
      "op": "REVERT"
    },
    "12150": {
      "op": "JUMPDEST"
    },
    "12151": {
      "op": "PUSH2",
      "value": "0x2F7F"
    },
    "12154": {
      "op": "DUP4"
    },
    "12155": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12158": {
      "jump": "i",
      "op": "JUMP"
    },
    "12159": {
      "op": "JUMPDEST"
    },
    "12160": {
      "op": "SWAP5"
    },
    "12161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12163": {
      "op": "SWAP4"
    },
    "12164": {
      "op": "SWAP1"
    },
    "12165": {
      "op": "SWAP4"
    },
    "12166": {
      "op": "ADD"
    },
    "12167": {
      "op": "CALLDATALOAD"
    },
    "12168": {
      "op": "SWAP4"
    },
    "12169": {
      "op": "POP"
    },
    "12170": {
      "op": "POP"
    },
    "12171": {
      "op": "POP"
    },
    "12172": {
      "jump": "o",
      "op": "JUMP"
    },
    "12173": {
      "op": "JUMPDEST"
    },
    "12174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12181": {
      "op": "SHL"
    },
    "12182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12184": {
      "op": "MSTORE"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12189": {
      "op": "MSTORE"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12194": {
      "op": "REVERT"
    },
    "12195": {
      "op": "JUMPDEST"
    },
    "12196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12198": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12207": {
      "op": "DUP1"
    },
    "12208": {
      "op": "DUP5"
    },
    "12209": {
      "op": "GT"
    },
    "12210": {
      "op": "ISZERO"
    },
    "12211": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "12214": {
      "op": "JUMPI"
    },
    "12215": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "12218": {
      "op": "PUSH2",
      "value": "0x2F8D"
    },
    "12221": {
      "jump": "i",
      "op": "JUMP"
    },
    "12222": {
      "op": "JUMPDEST"
    },
    "12223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12225": {
      "op": "MLOAD"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12228": {
      "op": "DUP6"
    },
    "12229": {
      "op": "ADD"
    },
    "12230": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12232": {
      "op": "NOT"
    },
    "12233": {
      "op": "SWAP1"
    },
    "12234": {
      "op": "DUP2"
    },
    "12235": {
      "op": "AND"
    },
    "12236": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12238": {
      "op": "ADD"
    },
    "12239": {
      "op": "AND"
    },
    "12240": {
      "op": "DUP2"
    },
    "12241": {
      "op": "ADD"
    },
    "12242": {
      "op": "SWAP1"
    },
    "12243": {
      "op": "DUP3"
    },
    "12244": {
      "op": "DUP3"
    },
    "12245": {
      "op": "GT"
    },
    "12246": {
      "op": "DUP2"
    },
    "12247": {
      "op": "DUP4"
    },
    "12248": {
      "op": "LT"
    },
    "12249": {
      "op": "OR"
    },
    "12250": {
      "op": "ISZERO"
    },
    "12251": {
      "op": "PUSH2",
      "value": "0x2FE6"
    },
    "12254": {
      "op": "JUMPI"
    },
    "12255": {
      "op": "PUSH2",
      "value": "0x2FE6"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x2F8D"
    },
    "12261": {
      "jump": "i",
      "op": "JUMP"
    },
    "12262": {
      "op": "JUMPDEST"
    },
    "12263": {
      "op": "DUP2"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12266": {
      "op": "MSTORE"
    },
    "12267": {
      "op": "DUP1"
    },
    "12268": {
      "op": "SWAP4"
    },
    "12269": {
      "op": "POP"
    },
    "12270": {
      "op": "DUP6"
    },
    "12271": {
      "op": "DUP2"
    },
    "12272": {
      "op": "MSTORE"
    },
    "12273": {
      "op": "DUP7"
    },
    "12274": {
      "op": "DUP7"
    },
    "12275": {
      "op": "DUP7"
    },
    "12276": {
      "op": "ADD"
    },
    "12277": {
      "op": "GT"
    },
    "12278": {
      "op": "ISZERO"
    },
    "12279": {
      "op": "PUSH2",
      "value": "0x2FFF"
    },
    "12282": {
      "op": "JUMPI"
    },
    "12283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12285": {
      "op": "DUP1"
    },
    "12286": {
      "op": "REVERT"
    },
    "12287": {
      "op": "JUMPDEST"
    },
    "12288": {
      "op": "DUP6"
    },
    "12289": {
      "op": "DUP6"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12292": {
      "op": "DUP4"
    },
    "12293": {
      "op": "ADD"
    },
    "12294": {
      "op": "CALLDATACOPY"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12299": {
      "op": "DUP8"
    },
    "12300": {
      "op": "DUP4"
    },
    "12301": {
      "op": "ADD"
    },
    "12302": {
      "op": "ADD"
    },
    "12303": {
      "op": "MSTORE"
    },
    "12304": {
      "op": "POP"
    },
    "12305": {
      "op": "POP"
    },
    "12306": {
      "op": "POP"
    },
    "12307": {
      "op": "SWAP4"
    },
    "12308": {
      "op": "SWAP3"
    },
    "12309": {
      "op": "POP"
    },
    "12310": {
      "op": "POP"
    },
    "12311": {
      "op": "POP"
    },
    "12312": {
      "jump": "o",
      "op": "JUMP"
    },
    "12313": {
      "op": "JUMPDEST"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12318": {
      "op": "DUP3"
    },
    "12319": {
      "op": "DUP5"
    },
    "12320": {
      "op": "SUB"
    },
    "12321": {
      "op": "SLT"
    },
    "12322": {
      "op": "ISZERO"
    },
    "12323": {
      "op": "PUSH2",
      "value": "0x302B"
    },
    "12326": {
      "op": "JUMPI"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12329": {
      "op": "DUP1"
    },
    "12330": {
      "op": "REVERT"
    },
    "12331": {
      "op": "JUMPDEST"
    },
    "12332": {
      "op": "DUP2"
    },
    "12333": {
      "op": "CALLDATALOAD"
    },
    "12334": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12343": {
      "op": "DUP2"
    },
    "12344": {
      "op": "GT"
    },
    "12345": {
      "op": "ISZERO"
    },
    "12346": {
      "op": "PUSH2",
      "value": "0x3042"
    },
    "12349": {
      "op": "JUMPI"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12352": {
      "op": "DUP1"
    },
    "12353": {
      "op": "REVERT"
    },
    "12354": {
      "op": "JUMPDEST"
    },
    "12355": {
      "op": "DUP3"
    },
    "12356": {
      "op": "ADD"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12359": {
      "op": "DUP2"
    },
    "12360": {
      "op": "ADD"
    },
    "12361": {
      "op": "DUP5"
    },
    "12362": {
      "op": "SGT"
    },
    "12363": {
      "op": "PUSH2",
      "value": "0x3053"
    },
    "12366": {
      "op": "JUMPI"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12369": {
      "op": "DUP1"
    },
    "12370": {
      "op": "REVERT"
    },
    "12371": {
      "op": "JUMPDEST"
    },
    "12372": {
      "op": "PUSH2",
      "value": "0x231B"
    },
    "12375": {
      "op": "DUP5"
    },
    "12376": {
      "op": "DUP3"
    },
    "12377": {
      "op": "CALLDATALOAD"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12380": {
      "op": "DUP5"
    },
    "12381": {
      "op": "ADD"
    },
    "12382": {
      "op": "PUSH2",
      "value": "0x2FA3"
    },
    "12385": {
      "jump": "i",
      "op": "JUMP"
    },
    "12386": {
      "op": "JUMPDEST"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12389": {
      "op": "DUP1"
    },
    "12390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12392": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12394": {
      "op": "DUP5"
    },
    "12395": {
      "op": "DUP7"
    },
    "12396": {
      "op": "SUB"
    },
    "12397": {
      "op": "SLT"
    },
    "12398": {
      "op": "ISZERO"
    },
    "12399": {
      "op": "PUSH2",
      "value": "0x3077"
    },
    "12402": {
      "op": "JUMPI"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12405": {
      "op": "DUP1"
    },
    "12406": {
      "op": "REVERT"
    },
    "12407": {
      "op": "JUMPDEST"
    },
    "12408": {
      "op": "PUSH2",
      "value": "0x3080"
    },
    "12411": {
      "op": "DUP5"
    },
    "12412": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12415": {
      "jump": "i",
      "op": "JUMP"
    },
    "12416": {
      "op": "JUMPDEST"
    },
    "12417": {
      "op": "SWAP3"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "op": "PUSH2",
      "value": "0x308E"
    },
    "12422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12424": {
      "op": "DUP6"
    },
    "12425": {
      "op": "ADD"
    },
    "12426": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12429": {
      "jump": "i",
      "op": "JUMP"
    },
    "12430": {
      "op": "JUMPDEST"
    },
    "12431": {
      "op": "SWAP2"
    },
    "12432": {
      "op": "POP"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12435": {
      "op": "DUP5"
    },
    "12436": {
      "op": "ADD"
    },
    "12437": {
      "op": "CALLDATALOAD"
    },
    "12438": {
      "op": "SWAP1"
    },
    "12439": {
      "op": "POP"
    },
    "12440": {
      "op": "SWAP3"
    },
    "12441": {
      "op": "POP"
    },
    "12442": {
      "op": "SWAP3"
    },
    "12443": {
      "op": "POP"
    },
    "12444": {
      "op": "SWAP3"
    },
    "12445": {
      "jump": "o",
      "op": "JUMP"
    },
    "12446": {
      "op": "JUMPDEST"
    },
    "12447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12449": {
      "op": "DUP1"
    },
    "12450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12452": {
      "op": "DUP4"
    },
    "12453": {
      "op": "DUP6"
    },
    "12454": {
      "op": "SUB"
    },
    "12455": {
      "op": "SLT"
    },
    "12456": {
      "op": "ISZERO"
    },
    "12457": {
      "op": "PUSH2",
      "value": "0x30B1"
    },
    "12460": {
      "op": "JUMPI"
    },
    "12461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12463": {
      "op": "DUP1"
    },
    "12464": {
      "op": "REVERT"
    },
    "12465": {
      "op": "JUMPDEST"
    },
    "12466": {
      "op": "DUP3"
    },
    "12467": {
      "op": "CALLDATALOAD"
    },
    "12468": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12477": {
      "op": "DUP1"
    },
    "12478": {
      "op": "DUP3"
    },
    "12479": {
      "op": "GT"
    },
    "12480": {
      "op": "ISZERO"
    },
    "12481": {
      "op": "PUSH2",
      "value": "0x30C9"
    },
    "12484": {
      "op": "JUMPI"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12487": {
      "op": "DUP1"
    },
    "12488": {
      "op": "REVERT"
    },
    "12489": {
      "op": "JUMPDEST"
    },
    "12490": {
      "op": "DUP2"
    },
    "12491": {
      "op": "DUP6"
    },
    "12492": {
      "op": "ADD"
    },
    "12493": {
      "op": "SWAP2"
    },
    "12494": {
      "op": "POP"
    },
    "12495": {
      "op": "DUP6"
    },
    "12496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12498": {
      "op": "DUP4"
    },
    "12499": {
      "op": "ADD"
    },
    "12500": {
      "op": "SLT"
    },
    "12501": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12504": {
      "op": "JUMPI"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12507": {
      "op": "DUP1"
    },
    "12508": {
      "op": "REVERT"
    },
    "12509": {
      "op": "JUMPDEST"
    },
    "12510": {
      "op": "DUP2"
    },
    "12511": {
      "op": "CALLDATALOAD"
    },
    "12512": {
      "op": "DUP2"
    },
    "12513": {
      "op": "DUP2"
    },
    "12514": {
      "op": "GT"
    },
    "12515": {
      "op": "ISZERO"
    },
    "12516": {
      "op": "PUSH2",
      "value": "0x30EC"
    },
    "12519": {
      "op": "JUMPI"
    },
    "12520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12522": {
      "op": "DUP1"
    },
    "12523": {
      "op": "REVERT"
    },
    "12524": {
      "op": "JUMPDEST"
    },
    "12525": {
      "op": "DUP7"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12528": {
      "op": "DUP3"
    },
    "12529": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12531": {
      "op": "SHL"
    },
    "12532": {
      "op": "DUP6"
    },
    "12533": {
      "op": "ADD"
    },
    "12534": {
      "op": "ADD"
    },
    "12535": {
      "op": "GT"
    },
    "12536": {
      "op": "ISZERO"
    },
    "12537": {
      "op": "PUSH2",
      "value": "0x3101"
    },
    "12540": {
      "op": "JUMPI"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12543": {
      "op": "DUP1"
    },
    "12544": {
      "op": "REVERT"
    },
    "12545": {
      "op": "JUMPDEST"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12548": {
      "op": "SWAP3"
    },
    "12549": {
      "op": "SWAP1"
    },
    "12550": {
      "op": "SWAP3"
    },
    "12551": {
      "op": "ADD"
    },
    "12552": {
      "op": "SWAP7"
    },
    "12553": {
      "op": "SWAP2"
    },
    "12554": {
      "op": "SWAP6"
    },
    "12555": {
      "op": "POP"
    },
    "12556": {
      "op": "SWAP1"
    },
    "12557": {
      "op": "SWAP4"
    },
    "12558": {
      "op": "POP"
    },
    "12559": {
      "op": "POP"
    },
    "12560": {
      "op": "POP"
    },
    "12561": {
      "op": "POP"
    },
    "12562": {
      "jump": "o",
      "op": "JUMP"
    },
    "12563": {
      "op": "JUMPDEST"
    },
    "12564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12568": {
      "op": "DUP3"
    },
    "12569": {
      "op": "DUP5"
    },
    "12570": {
      "op": "SUB"
    },
    "12571": {
      "op": "SLT"
    },
    "12572": {
      "op": "ISZERO"
    },
    "12573": {
      "op": "PUSH2",
      "value": "0x3125"
    },
    "12576": {
      "op": "JUMPI"
    },
    "12577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12579": {
      "op": "DUP1"
    },
    "12580": {
      "op": "REVERT"
    },
    "12581": {
      "op": "JUMPDEST"
    },
    "12582": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "12585": {
      "op": "DUP3"
    },
    "12586": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12589": {
      "jump": "i",
      "op": "JUMP"
    },
    "12590": {
      "op": "JUMPDEST"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12593": {
      "op": "DUP1"
    },
    "12594": {
      "op": "DUP3"
    },
    "12595": {
      "op": "MSTORE"
    },
    "12596": {
      "op": "DUP3"
    },
    "12597": {
      "op": "MLOAD"
    },
    "12598": {
      "op": "DUP3"
    },
    "12599": {
      "op": "DUP3"
    },
    "12600": {
      "op": "ADD"
    },
    "12601": {
      "op": "DUP2"
    },
    "12602": {
      "op": "SWAP1"
    },
    "12603": {
      "op": "MSTORE"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12606": {
      "op": "SWAP2"
    },
    "12607": {
      "op": "SWAP1"
    },
    "12608": {
      "op": "DUP5"
    },
    "12609": {
      "op": "DUP3"
    },
    "12610": {
      "op": "ADD"
    },
    "12611": {
      "op": "SWAP1"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12614": {
      "op": "DUP6"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "op": "SWAP1"
    },
    "12617": {
      "op": "DUP5"
    },
    "12618": {
      "op": "JUMPDEST"
    },
    "12619": {
      "op": "DUP2"
    },
    "12620": {
      "op": "DUP2"
    },
    "12621": {
      "op": "LT"
    },
    "12622": {
      "op": "ISZERO"
    },
    "12623": {
      "op": "PUSH2",
      "value": "0x3166"
    },
    "12626": {
      "op": "JUMPI"
    },
    "12627": {
      "op": "DUP4"
    },
    "12628": {
      "op": "MLOAD"
    },
    "12629": {
      "op": "DUP4"
    },
    "12630": {
      "op": "MSTORE"
    },
    "12631": {
      "op": "SWAP3"
    },
    "12632": {
      "op": "DUP5"
    },
    "12633": {
      "op": "ADD"
    },
    "12634": {
      "op": "SWAP3"
    },
    "12635": {
      "op": "SWAP2"
    },
    "12636": {
      "op": "DUP5"
    },
    "12637": {
      "op": "ADD"
    },
    "12638": {
      "op": "SWAP2"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12641": {
      "op": "ADD"
    },
    "12642": {
      "op": "PUSH2",
      "value": "0x314A"
    },
    "12645": {
      "op": "JUMP"
    },
    "12646": {
      "op": "JUMPDEST"
    },
    "12647": {
      "op": "POP"
    },
    "12648": {
      "op": "SWAP1"
    },
    "12649": {
      "op": "SWAP7"
    },
    "12650": {
      "op": "SWAP6"
    },
    "12651": {
      "op": "POP"
    },
    "12652": {
      "op": "POP"
    },
    "12653": {
      "op": "POP"
    },
    "12654": {
      "op": "POP"
    },
    "12655": {
      "op": "POP"
    },
    "12656": {
      "op": "POP"
    },
    "12657": {
      "jump": "o",
      "op": "JUMP"
    },
    "12658": {
      "op": "JUMPDEST"
    },
    "12659": {
      "op": "DUP1"
    },
    "12660": {
      "op": "CALLDATALOAD"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12663": {
      "op": "DUP2"
    },
    "12664": {
      "op": "AND"
    },
    "12665": {
      "op": "DUP2"
    },
    "12666": {
      "op": "EQ"
    },
    "12667": {
      "op": "PUSH2",
      "value": "0x2F5E"
    },
    "12670": {
      "op": "JUMPI"
    },
    "12671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12673": {
      "op": "DUP1"
    },
    "12674": {
      "op": "REVERT"
    },
    "12675": {
      "op": "JUMPDEST"
    },
    "12676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12680": {
      "op": "DUP3"
    },
    "12681": {
      "op": "DUP5"
    },
    "12682": {
      "op": "SUB"
    },
    "12683": {
      "op": "SLT"
    },
    "12684": {
      "op": "ISZERO"
    },
    "12685": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "12688": {
      "op": "JUMPI"
    },
    "12689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12691": {
      "op": "DUP1"
    },
    "12692": {
      "op": "REVERT"
    },
    "12693": {
      "op": "JUMPDEST"
    },
    "12694": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "12697": {
      "op": "DUP3"
    },
    "12698": {
      "op": "PUSH2",
      "value": "0x3172"
    },
    "12701": {
      "jump": "i",
      "op": "JUMP"
    },
    "12702": {
      "op": "JUMPDEST"
    },
    "12703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12705": {
      "op": "DUP1"
    },
    "12706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12708": {
      "op": "DUP4"
    },
    "12709": {
      "op": "DUP6"
    },
    "12710": {
      "op": "SUB"
    },
    "12711": {
      "op": "SLT"
    },
    "12712": {
      "op": "ISZERO"
    },
    "12713": {
      "op": "PUSH2",
      "value": "0x31B1"
    },
    "12716": {
      "op": "JUMPI"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12719": {
      "op": "DUP1"
    },
    "12720": {
      "op": "REVERT"
    },
    "12721": {
      "op": "JUMPDEST"
    },
    "12722": {
      "op": "PUSH2",
      "value": "0x31BA"
    },
    "12725": {
      "op": "DUP4"
    },
    "12726": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12729": {
      "jump": "i",
      "op": "JUMP"
    },
    "12730": {
      "op": "JUMPDEST"
    },
    "12731": {
      "op": "SWAP2"
    },
    "12732": {
      "op": "POP"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12735": {
      "op": "DUP4"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "CALLDATALOAD"
    },
    "12738": {
      "op": "DUP1"
    },
    "12739": {
      "op": "ISZERO"
    },
    "12740": {
      "op": "ISZERO"
    },
    "12741": {
      "op": "DUP2"
    },
    "12742": {
      "op": "EQ"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x31CF"
    },
    "12746": {
      "op": "JUMPI"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12749": {
      "op": "DUP1"
    },
    "12750": {
      "op": "REVERT"
    },
    "12751": {
      "op": "JUMPDEST"
    },
    "12752": {
      "op": "DUP1"
    },
    "12753": {
      "op": "SWAP2"
    },
    "12754": {
      "op": "POP"
    },
    "12755": {
      "op": "POP"
    },
    "12756": {
      "op": "SWAP3"
    },
    "12757": {
      "op": "POP"
    },
    "12758": {
      "op": "SWAP3"
    },
    "12759": {
      "op": "SWAP1"
    },
    "12760": {
      "op": "POP"
    },
    "12761": {
      "jump": "o",
      "op": "JUMP"
    },
    "12762": {
      "op": "JUMPDEST"
    },
    "12763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12765": {
      "op": "DUP1"
    },
    "12766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12768": {
      "op": "DUP4"
    },
    "12769": {
      "op": "DUP6"
    },
    "12770": {
      "op": "SUB"
    },
    "12771": {
      "op": "SLT"
    },
    "12772": {
      "op": "ISZERO"
    },
    "12773": {
      "op": "PUSH2",
      "value": "0x31ED"
    },
    "12776": {
      "op": "JUMPI"
    },
    "12777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12779": {
      "op": "DUP1"
    },
    "12780": {
      "op": "REVERT"
    },
    "12781": {
      "op": "JUMPDEST"
    },
    "12782": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "12785": {
      "op": "DUP4"
    },
    "12786": {
      "op": "PUSH2",
      "value": "0x3172"
    },
    "12789": {
      "jump": "i",
      "op": "JUMP"
    },
    "12790": {
      "op": "JUMPDEST"
    },
    "12791": {
      "op": "SWAP2"
    },
    "12792": {
      "op": "POP"
    },
    "12793": {
      "op": "PUSH2",
      "value": "0x3204"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12798": {
      "op": "DUP5"
    },
    "12799": {
      "op": "ADD"
    },
    "12800": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12803": {
      "jump": "i",
      "op": "JUMP"
    },
    "12804": {
      "op": "JUMPDEST"
    },
    "12805": {
      "op": "SWAP1"
    },
    "12806": {
      "op": "POP"
    },
    "12807": {
      "op": "SWAP3"
    },
    "12808": {
      "op": "POP"
    },
    "12809": {
      "op": "SWAP3"
    },
    "12810": {
      "op": "SWAP1"
    },
    "12811": {
      "op": "POP"
    },
    "12812": {
      "jump": "o",
      "op": "JUMP"
    },
    "12813": {
      "op": "JUMPDEST"
    },
    "12814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12816": {
      "op": "DUP1"
    },
    "12817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12819": {
      "op": "DUP1"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12822": {
      "op": "DUP6"
    },
    "12823": {
      "op": "DUP8"
    },
    "12824": {
      "op": "SUB"
    },
    "12825": {
      "op": "SLT"
    },
    "12826": {
      "op": "ISZERO"
    },
    "12827": {
      "op": "PUSH2",
      "value": "0x3223"
    },
    "12830": {
      "op": "JUMPI"
    },
    "12831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12833": {
      "op": "DUP1"
    },
    "12834": {
      "op": "REVERT"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "PUSH2",
      "value": "0x322C"
    },
    "12839": {
      "op": "DUP6"
    },
    "12840": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12843": {
      "jump": "i",
      "op": "JUMP"
    },
    "12844": {
      "op": "JUMPDEST"
    },
    "12845": {
      "op": "SWAP4"
    },
    "12846": {
      "op": "POP"
    },
    "12847": {
      "op": "PUSH2",
      "value": "0x323A"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12852": {
      "op": "DUP7"
    },
    "12853": {
      "op": "ADD"
    },
    "12854": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "12857": {
      "jump": "i",
      "op": "JUMP"
    },
    "12858": {
      "op": "JUMPDEST"
    },
    "12859": {
      "op": "SWAP3"
    },
    "12860": {
      "op": "POP"
    },
    "12861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12863": {
      "op": "DUP6"
    },
    "12864": {
      "op": "ADD"
    },
    "12865": {
      "op": "CALLDATALOAD"
    },
    "12866": {
      "op": "SWAP2"
    },
    "12867": {
      "op": "POP"
    },
    "12868": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12870": {
      "op": "DUP6"
    },
    "12871": {
      "op": "ADD"
    },
    "12872": {
      "op": "CALLDATALOAD"
    },
    "12873": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12882": {
      "op": "DUP2"
    },
    "12883": {
      "op": "GT"
    },
    "12884": {
      "op": "ISZERO"
    },
    "12885": {
      "op": "PUSH2",
      "value": "0x325D"
    },
    "12888": {
      "op": "JUMPI"
    },
    "12889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12891": {
      "op": "DUP1"
    },
    "12892": {
      "op": "REVERT"
    },
    "12893": {
      "op": "JUMPDEST"
    },
    "12894": {
      "op": "DUP6"
    },
    "12895": {
      "op": "ADD"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12898": {
      "op": "DUP2"
    },
    "12899": {
      "op": "ADD"
    },
    "12900": {
      "op": "DUP8"
    },
    "12901": {
      "op": "SGT"
    },
    "12902": {
      "op": "PUSH2",
      "value": "0x326E"
    },
    "12905": {
      "op": "JUMPI"
    },
    "12906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12908": {
      "op": "DUP1"
    },
    "12909": {
      "op": "REVERT"
    },
    "12910": {
      "op": "JUMPDEST"
    },
    "12911": {
      "op": "PUSH2",
      "value": "0x327D"
    },
    "12914": {
      "op": "DUP8"
    },
    "12915": {
      "op": "DUP3"
    },
    "12916": {
      "op": "CALLDATALOAD"
    },
    "12917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12919": {
      "op": "DUP5"
    },
    "12920": {
      "op": "ADD"
    },
    "12921": {
      "op": "PUSH2",
      "value": "0x2FA3"
    },
    "12924": {
      "jump": "i",
      "op": "JUMP"
    },
    "12925": {
      "op": "JUMPDEST"
    },
    "12926": {
      "op": "SWAP2"
    },
    "12927": {
      "op": "POP"
    },
    "12928": {
      "op": "POP"
    },
    "12929": {
      "op": "SWAP3"
    },
    "12930": {
      "op": "SWAP6"
    },
    "12931": {
      "op": "SWAP2"
    },
    "12932": {
      "op": "SWAP5"
    },
    "12933": {
      "op": "POP"
    },
    "12934": {
      "op": "SWAP3"
    },
    "12935": {
      "op": "POP"
    },
    "12936": {
      "jump": "o",
      "op": "JUMP"
    },
    "12937": {
      "op": "JUMPDEST"
    },
    "12938": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12945": {
      "op": "SHL"
    },
    "12946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12948": {
      "op": "MSTORE"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12951": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12953": {
      "op": "MSTORE"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12958": {
      "op": "REVERT"
    },
    "12959": {
      "op": "JUMPDEST"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12962": {
      "op": "DUP2"
    },
    "12963": {
      "op": "ADD"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12966": {
      "op": "DUP4"
    },
    "12967": {
      "op": "LT"
    },
    "12968": {
      "op": "PUSH2",
      "value": "0x32C1"
    },
    "12971": {
      "op": "JUMPI"
    },
    "12972": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12979": {
      "op": "SHL"
    },
    "12980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12982": {
      "op": "MSTORE"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12985": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12987": {
      "op": "MSTORE"
    },
    "12988": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12992": {
      "op": "REVERT"
    },
    "12993": {
      "op": "JUMPDEST"
    },
    "12994": {
      "op": "SWAP2"
    },
    "12995": {
      "op": "SWAP1"
    },
    "12996": {
      "op": "MSTORE"
    },
    "12997": {
      "op": "SWAP1"
    },
    "12998": {
      "jump": "o",
      "op": "JUMP"
    },
    "12999": {
      "op": "JUMPDEST"
    },
    "13000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13004": {
      "op": "DUP3"
    },
    "13005": {
      "op": "DUP5"
    },
    "13006": {
      "op": "SUB"
    },
    "13007": {
      "op": "SLT"
    },
    "13008": {
      "op": "ISZERO"
    },
    "13009": {
      "op": "PUSH2",
      "value": "0x32D9"
    },
    "13012": {
      "op": "JUMPI"
    },
    "13013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13015": {
      "op": "DUP1"
    },
    "13016": {
      "op": "REVERT"
    },
    "13017": {
      "op": "JUMPDEST"
    },
    "13018": {
      "op": "DUP2"
    },
    "13019": {
      "op": "CALLDATALOAD"
    },
    "13020": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13022": {
      "op": "DUP2"
    },
    "13023": {
      "op": "LT"
    },
    "13024": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "13027": {
      "op": "JUMPI"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13030": {
      "op": "DUP1"
    },
    "13031": {
      "op": "REVERT"
    },
    "13032": {
      "op": "JUMPDEST"
    },
    "13033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13035": {
      "op": "DUP1"
    },
    "13036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13038": {
      "op": "DUP4"
    },
    "13039": {
      "op": "DUP6"
    },
    "13040": {
      "op": "SUB"
    },
    "13041": {
      "op": "SLT"
    },
    "13042": {
      "op": "ISZERO"
    },
    "13043": {
      "op": "PUSH2",
      "value": "0x32FB"
    },
    "13046": {
      "op": "JUMPI"
    },
    "13047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13049": {
      "op": "DUP1"
    },
    "13050": {
      "op": "REVERT"
    },
    "13051": {
      "op": "JUMPDEST"
    },
    "13052": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "13055": {
      "op": "DUP4"
    },
    "13056": {
      "op": "PUSH2",
      "value": "0x2F47"
    },
    "13059": {
      "jump": "i",
      "op": "JUMP"
    },
    "13060": {
      "op": "JUMPDEST"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13063": {
      "op": "DUP2"
    },
    "13064": {
      "op": "DUP2"
    },
    "13065": {
      "op": "SHR"
    },
    "13066": {
      "op": "SWAP1"
    },
    "13067": {
      "op": "DUP3"
    },
    "13068": {
      "op": "AND"
    },
    "13069": {
      "op": "DUP1"
    },
    "13070": {
      "op": "PUSH2",
      "value": "0x3318"
    },
    "13073": {
      "op": "JUMPI"
    },
    "13074": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13076": {
      "op": "DUP3"
    },
    "13077": {
      "op": "AND"
    },
    "13078": {
      "op": "SWAP2"
    },
    "13079": {
      "op": "POP"
    },
    "13080": {
      "op": "JUMPDEST"
    },
    "13081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13083": {
      "op": "DUP3"
    },
    "13084": {
      "op": "LT"
    },
    "13085": {
      "op": "DUP2"
    },
    "13086": {
      "op": "EQ"
    },
    "13087": {
      "op": "ISZERO"
    },
    "13088": {
      "op": "PUSH2",
      "value": "0x3339"
    },
    "13091": {
      "op": "JUMPI"
    },
    "13092": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13099": {
      "op": "SHL"
    },
    "13100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13102": {
      "op": "MSTORE"
    },
    "13103": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13107": {
      "op": "MSTORE"
    },
    "13108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13112": {
      "op": "REVERT"
    },
    "13113": {
      "op": "JUMPDEST"
    },
    "13114": {
      "op": "POP"
    },
    "13115": {
      "op": "SWAP2"
    },
    "13116": {
      "op": "SWAP1"
    },
    "13117": {
      "op": "POP"
    },
    "13118": {
      "jump": "o",
      "op": "JUMP"
    },
    "13119": {
      "op": "JUMPDEST"
    },
    "13120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13122": {
      "op": "DUP1"
    },
    "13123": {
      "op": "DUP3"
    },
    "13124": {
      "op": "MSTORE"
    },
    "13125": {
      "op": "DUP2"
    },
    "13126": {
      "op": "DUP2"
    },
    "13127": {
      "op": "ADD"
    },
    "13128": {
      "op": "MSTORE"
    },
    "13129": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13164": {
      "op": "DUP3"
    },
    "13165": {
      "op": "ADD"
    },
    "13166": {
      "op": "MSTORE"
    },
    "13167": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13169": {
      "op": "ADD"
    },
    "13170": {
      "op": "SWAP1"
    },
    "13171": {
      "jump": "o",
      "op": "JUMP"
    },
    "13172": {
      "op": "JUMPDEST"
    },
    "13173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13175": {
      "op": "DUP1"
    },
    "13176": {
      "op": "DUP3"
    },
    "13177": {
      "op": "MSTORE"
    },
    "13178": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13180": {
      "op": "SWAP1"
    },
    "13181": {
      "op": "DUP3"
    },
    "13182": {
      "op": "ADD"
    },
    "13183": {
      "op": "MSTORE"
    },
    "13184": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13219": {
      "op": "DUP3"
    },
    "13220": {
      "op": "ADD"
    },
    "13221": {
      "op": "MSTORE"
    },
    "13222": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13240": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13242": {
      "op": "SHL"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13245": {
      "op": "DUP3"
    },
    "13246": {
      "op": "ADD"
    },
    "13247": {
      "op": "MSTORE"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13250": {
      "op": "ADD"
    },
    "13251": {
      "op": "SWAP1"
    },
    "13252": {
      "jump": "o",
      "op": "JUMP"
    },
    "13253": {
      "op": "JUMPDEST"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13256": {
      "op": "DUP1"
    },
    "13257": {
      "op": "DUP3"
    },
    "13258": {
      "op": "MSTORE"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13261": {
      "op": "SWAP1"
    },
    "13262": {
      "op": "DUP3"
    },
    "13263": {
      "op": "ADD"
    },
    "13264": {
      "op": "MSTORE"
    },
    "13265": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13282": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13284": {
      "op": "SHL"
    },
    "13285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13287": {
      "op": "DUP3"
    },
    "13288": {
      "op": "ADD"
    },
    "13289": {
      "op": "MSTORE"
    },
    "13290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13292": {
      "op": "ADD"
    },
    "13293": {
      "op": "SWAP1"
    },
    "13294": {
      "jump": "o",
      "op": "JUMP"
    },
    "13295": {
      "op": "JUMPDEST"
    },
    "13296": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13303": {
      "op": "SHL"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13306": {
      "op": "MSTORE"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13309": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13311": {
      "op": "MSTORE"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13316": {
      "op": "REVERT"
    },
    "13317": {
      "op": "JUMPDEST"
    },
    "13318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13320": {
      "op": "DUP2"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13323": {
      "op": "NOT"
    },
    "13324": {
      "op": "DIV"
    },
    "13325": {
      "op": "DUP4"
    },
    "13326": {
      "op": "GT"
    },
    "13327": {
      "op": "DUP3"
    },
    "13328": {
      "op": "ISZERO"
    },
    "13329": {
      "op": "ISZERO"
    },
    "13330": {
      "op": "AND"
    },
    "13331": {
      "op": "ISZERO"
    },
    "13332": {
      "op": "PUSH2",
      "value": "0x341F"
    },
    "13335": {
      "op": "JUMPI"
    },
    "13336": {
      "op": "PUSH2",
      "value": "0x341F"
    },
    "13339": {
      "op": "PUSH2",
      "value": "0x33EF"
    },
    "13342": {
      "jump": "i",
      "op": "JUMP"
    },
    "13343": {
      "op": "JUMPDEST"
    },
    "13344": {
      "op": "POP"
    },
    "13345": {
      "op": "MUL"
    },
    "13346": {
      "op": "SWAP1"
    },
    "13347": {
      "jump": "o",
      "op": "JUMP"
    },
    "13348": {
      "op": "JUMPDEST"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13351": {
      "op": "DUP3"
    },
    "13352": {
      "op": "NOT"
    },
    "13353": {
      "op": "DUP3"
    },
    "13354": {
      "op": "GT"
    },
    "13355": {
      "op": "ISZERO"
    },
    "13356": {
      "op": "PUSH2",
      "value": "0x3437"
    },
    "13359": {
      "op": "JUMPI"
    },
    "13360": {
      "op": "PUSH2",
      "value": "0x3437"
    },
    "13363": {
      "op": "PUSH2",
      "value": "0x33EF"
    },
    "13366": {
      "jump": "i",
      "op": "JUMP"
    },
    "13367": {
      "op": "JUMPDEST"
    },
    "13368": {
      "op": "POP"
    },
    "13369": {
      "op": "ADD"
    },
    "13370": {
      "op": "SWAP1"
    },
    "13371": {
      "jump": "o",
      "op": "JUMP"
    },
    "13372": {
      "op": "JUMPDEST"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13377": {
      "op": "NOT"
    },
    "13378": {
      "op": "DUP3"
    },
    "13379": {
      "op": "EQ"
    },
    "13380": {
      "op": "ISZERO"
    },
    "13381": {
      "op": "PUSH2",
      "value": "0x3450"
    },
    "13384": {
      "op": "JUMPI"
    },
    "13385": {
      "op": "PUSH2",
      "value": "0x3450"
    },
    "13388": {
      "op": "PUSH2",
      "value": "0x33EF"
    },
    "13391": {
      "jump": "i",
      "op": "JUMP"
    },
    "13392": {
      "op": "JUMPDEST"
    },
    "13393": {
      "op": "POP"
    },
    "13394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13396": {
      "op": "ADD"
    },
    "13397": {
      "op": "SWAP1"
    },
    "13398": {
      "jump": "o",
      "op": "JUMP"
    },
    "13399": {
      "op": "JUMPDEST"
    },
    "13400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13407": {
      "op": "SHL"
    },
    "13408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13410": {
      "op": "MSTORE"
    },
    "13411": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13415": {
      "op": "MSTORE"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13420": {
      "op": "REVERT"
    },
    "13421": {
      "op": "JUMPDEST"
    },
    "13422": {
      "op": "DUP1"
    },
    "13423": {
      "op": "SLOAD"
    },
    "13424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13426": {
      "op": "SWAP1"
    },
    "13427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13429": {
      "op": "DUP2"
    },
    "13430": {
      "op": "DUP2"
    },
    "13431": {
      "op": "SHR"
    },
    "13432": {
      "op": "SWAP1"
    },
    "13433": {
      "op": "DUP1"
    },
    "13434": {
      "op": "DUP4"
    },
    "13435": {
      "op": "AND"
    },
    "13436": {
      "op": "DUP1"
    },
    "13437": {
      "op": "PUSH2",
      "value": "0x3487"
    },
    "13440": {
      "op": "JUMPI"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13443": {
      "op": "DUP4"
    },
    "13444": {
      "op": "AND"
    },
    "13445": {
      "op": "SWAP3"
    },
    "13446": {
      "op": "POP"
    },
    "13447": {
      "op": "JUMPDEST"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13450": {
      "op": "DUP1"
    },
    "13451": {
      "op": "DUP5"
    },
    "13452": {
      "op": "LT"
    },
    "13453": {
      "op": "DUP3"
    },
    "13454": {
      "op": "EQ"
    },
    "13455": {
      "op": "ISZERO"
    },
    "13456": {
      "op": "PUSH2",
      "value": "0x34A9"
    },
    "13459": {
      "op": "JUMPI"
    },
    "13460": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13467": {
      "op": "SHL"
    },
    "13468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13470": {
      "op": "MSTORE"
    },
    "13471": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13475": {
      "op": "MSTORE"
    },
    "13476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13480": {
      "op": "REVERT"
    },
    "13481": {
      "op": "JUMPDEST"
    },
    "13482": {
      "op": "DUP2"
    },
    "13483": {
      "op": "DUP1"
    },
    "13484": {
      "op": "ISZERO"
    },
    "13485": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "13488": {
      "op": "JUMPI"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13491": {
      "op": "DUP2"
    },
    "13492": {
      "op": "EQ"
    },
    "13493": {
      "op": "PUSH2",
      "value": "0x34CE"
    },
    "13496": {
      "op": "JUMPI"
    },
    "13497": {
      "op": "PUSH2",
      "value": "0x34FB"
    },
    "13500": {
      "op": "JUMP"
    },
    "13501": {
      "op": "JUMPDEST"
    },
    "13502": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13504": {
      "op": "NOT"
    },
    "13505": {
      "op": "DUP7"
    },
    "13506": {
      "op": "AND"
    },
    "13507": {
      "op": "DUP10"
    },
    "13508": {
      "op": "MSTORE"
    },
    "13509": {
      "op": "DUP5"
    },
    "13510": {
      "op": "DUP10"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "SWAP7"
    },
    "13513": {
      "op": "POP"
    },
    "13514": {
      "op": "PUSH2",
      "value": "0x34FB"
    },
    "13517": {
      "op": "JUMP"
    },
    "13518": {
      "op": "JUMPDEST"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13521": {
      "op": "DUP9"
    },
    "13522": {
      "op": "DUP2"
    },
    "13523": {
      "op": "MSTORE"
    },
    "13524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13526": {
      "op": "SWAP1"
    },
    "13527": {
      "op": "KECCAK256"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13530": {
      "op": "JUMPDEST"
    },
    "13531": {
      "op": "DUP7"
    },
    "13532": {
      "op": "DUP2"
    },
    "13533": {
      "op": "LT"
    },
    "13534": {
      "op": "ISZERO"
    },
    "13535": {
      "op": "PUSH2",
      "value": "0x34F3"
    },
    "13538": {
      "op": "JUMPI"
    },
    "13539": {
      "op": "DUP2"
    },
    "13540": {
      "op": "SLOAD"
    },
    "13541": {
      "op": "DUP12"
    },
    "13542": {
      "op": "DUP3"
    },
    "13543": {
      "op": "ADD"
    },
    "13544": {
      "op": "MSTORE"
    },
    "13545": {
      "op": "SWAP1"
    },
    "13546": {
      "op": "DUP6"
    },
    "13547": {
      "op": "ADD"
    },
    "13548": {
      "op": "SWAP1"
    },
    "13549": {
      "op": "DUP4"
    },
    "13550": {
      "op": "ADD"
    },
    "13551": {
      "op": "PUSH2",
      "value": "0x34DA"
    },
    "13554": {
      "op": "JUMP"
    },
    "13555": {
      "op": "JUMPDEST"
    },
    "13556": {
      "op": "POP"
    },
    "13557": {
      "op": "POP"
    },
    "13558": {
      "op": "DUP5"
    },
    "13559": {
      "op": "DUP10"
    },
    "13560": {
      "op": "ADD"
    },
    "13561": {
      "op": "SWAP7"
    },
    "13562": {
      "op": "POP"
    },
    "13563": {
      "op": "JUMPDEST"
    },
    "13564": {
      "op": "POP"
    },
    "13565": {
      "op": "POP"
    },
    "13566": {
      "op": "POP"
    },
    "13567": {
      "op": "POP"
    },
    "13568": {
      "op": "POP"
    },
    "13569": {
      "op": "POP"
    },
    "13570": {
      "op": "SWAP3"
    },
    "13571": {
      "op": "SWAP2"
    },
    "13572": {
      "op": "POP"
    },
    "13573": {
      "op": "POP"
    },
    "13574": {
      "jump": "o",
      "op": "JUMP"
    },
    "13575": {
      "op": "JUMPDEST"
    },
    "13576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13578": {
      "op": "PUSH2",
      "value": "0x3513"
    },
    "13581": {
      "op": "DUP3"
    },
    "13582": {
      "op": "DUP7"
    },
    "13583": {
      "op": "PUSH2",
      "value": "0x346D"
    },
    "13586": {
      "jump": "i",
      "op": "JUMP"
    },
    "13587": {
      "op": "JUMPDEST"
    },
    "13588": {
      "op": "DUP5"
    },
    "13589": {
      "op": "MLOAD"
    },
    "13590": {
      "op": "PUSH2",
      "value": "0x3523"
    },
    "13593": {
      "op": "DUP2"
    },
    "13594": {
      "op": "DUP4"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13597": {
      "op": "DUP10"
    },
    "13598": {
      "op": "ADD"
    },
    "13599": {
      "op": "PUSH2",
      "value": "0x2EC3"
    },
    "13602": {
      "jump": "i",
      "op": "JUMP"
    },
    "13603": {
      "op": "JUMPDEST"
    },
    "13604": {
      "op": "PUSH2",
      "value": "0x352F"
    },
    "13607": {
      "op": "DUP2"
    },
    "13608": {
      "op": "DUP4"
    },
    "13609": {
      "op": "ADD"
    },
    "13610": {
      "op": "DUP7"
    },
    "13611": {
      "op": "PUSH2",
      "value": "0x346D"
    },
    "13614": {
      "jump": "i",
      "op": "JUMP"
    },
    "13615": {
      "op": "JUMPDEST"
    },
    "13616": {
      "op": "SWAP8"
    },
    "13617": {
      "op": "SWAP7"
    },
    "13618": {
      "op": "POP"
    },
    "13619": {
      "op": "POP"
    },
    "13620": {
      "op": "POP"
    },
    "13621": {
      "op": "POP"
    },
    "13622": {
      "op": "POP"
    },
    "13623": {
      "op": "POP"
    },
    "13624": {
      "op": "POP"
    },
    "13625": {
      "jump": "o",
      "op": "JUMP"
    },
    "13626": {
      "op": "JUMPDEST"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13629": {
      "op": "DUP3"
    },
    "13630": {
      "op": "DUP3"
    },
    "13631": {
      "op": "LT"
    },
    "13632": {
      "op": "ISZERO"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x354C"
    },
    "13636": {
      "op": "JUMPI"
    },
    "13637": {
      "op": "PUSH2",
      "value": "0x354C"
    },
    "13640": {
      "op": "PUSH2",
      "value": "0x33EF"
    },
    "13643": {
      "jump": "i",
      "op": "JUMP"
    },
    "13644": {
      "op": "JUMPDEST"
    },
    "13645": {
      "op": "POP"
    },
    "13646": {
      "op": "SUB"
    },
    "13647": {
      "op": "SWAP1"
    },
    "13648": {
      "jump": "o",
      "op": "JUMP"
    },
    "13649": {
      "op": "JUMPDEST"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13652": {
      "op": "DUP1"
    },
    "13653": {
      "op": "DUP3"
    },
    "13654": {
      "op": "MSTORE"
    },
    "13655": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13657": {
      "op": "SWAP1"
    },
    "13658": {
      "op": "DUP3"
    },
    "13659": {
      "op": "ADD"
    },
    "13660": {
      "op": "MSTORE"
    },
    "13661": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13694": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13696": {
      "op": "DUP3"
    },
    "13697": {
      "op": "ADD"
    },
    "13698": {
      "op": "MSTORE"
    },
    "13699": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13718": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13720": {
      "op": "SHL"
    },
    "13721": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13723": {
      "op": "DUP3"
    },
    "13724": {
      "op": "ADD"
    },
    "13725": {
      "op": "MSTORE"
    },
    "13726": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13728": {
      "op": "ADD"
    },
    "13729": {
      "op": "SWAP1"
    },
    "13730": {
      "jump": "o",
      "op": "JUMP"
    },
    "13731": {
      "op": "JUMPDEST"
    },
    "13732": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13739": {
      "op": "SHL"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13742": {
      "op": "MSTORE"
    },
    "13743": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13747": {
      "op": "MSTORE"
    },
    "13748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13752": {
      "op": "REVERT"
    },
    "13753": {
      "op": "JUMPDEST"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13756": {
      "op": "DUP3"
    },
    "13757": {
      "op": "PUSH2",
      "value": "0x35C8"
    },
    "13760": {
      "op": "JUMPI"
    },
    "13761": {
      "op": "PUSH2",
      "value": "0x35C8"
    },
    "13764": {
      "op": "PUSH2",
      "value": "0x35A3"
    },
    "13767": {
      "jump": "i",
      "op": "JUMP"
    },
    "13768": {
      "op": "JUMPDEST"
    },
    "13769": {
      "op": "POP"
    },
    "13770": {
      "op": "DIV"
    },
    "13771": {
      "op": "SWAP1"
    },
    "13772": {
      "jump": "o",
      "op": "JUMP"
    },
    "13773": {
      "op": "JUMPDEST"
    },
    "13774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13776": {
      "op": "DUP3"
    },
    "13777": {
      "op": "PUSH2",
      "value": "0x35DC"
    },
    "13780": {
      "op": "JUMPI"
    },
    "13781": {
      "op": "PUSH2",
      "value": "0x35DC"
    },
    "13784": {
      "op": "PUSH2",
      "value": "0x35A3"
    },
    "13787": {
      "jump": "i",
      "op": "JUMP"
    },
    "13788": {
      "op": "JUMPDEST"
    },
    "13789": {
      "op": "POP"
    },
    "13790": {
      "op": "MOD"
    },
    "13791": {
      "op": "SWAP1"
    },
    "13792": {
      "jump": "o",
      "op": "JUMP"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13800": {
      "op": "SHL"
    },
    "13801": {
      "op": "SUB"
    },
    "13802": {
      "op": "DUP6"
    },
    "13803": {
      "op": "DUP2"
    },
    "13804": {
      "op": "AND"
    },
    "13805": {
      "op": "DUP3"
    },
    "13806": {
      "op": "MSTORE"
    },
    "13807": {
      "op": "DUP5"
    },
    "13808": {
      "op": "AND"
    },
    "13809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13811": {
      "op": "DUP3"
    },
    "13812": {
      "op": "ADD"
    },
    "13813": {
      "op": "MSTORE"
    },
    "13814": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13816": {
      "op": "DUP2"
    },
    "13817": {
      "op": "ADD"
    },
    "13818": {
      "op": "DUP4"
    },
    "13819": {
      "op": "SWAP1"
    },
    "13820": {
      "op": "MSTORE"
    },
    "13821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13823": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13825": {
      "op": "DUP3"
    },
    "13826": {
      "op": "ADD"
    },
    "13827": {
      "op": "DUP2"
    },
    "13828": {
      "op": "SWAP1"
    },
    "13829": {
      "op": "MSTORE"
    },
    "13830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13832": {
      "op": "SWAP1"
    },
    "13833": {
      "op": "PUSH2",
      "value": "0x3614"
    },
    "13836": {
      "op": "SWAP1"
    },
    "13837": {
      "op": "DUP4"
    },
    "13838": {
      "op": "ADD"
    },
    "13839": {
      "op": "DUP5"
    },
    "13840": {
      "op": "PUSH2",
      "value": "0x2EEF"
    },
    "13843": {
      "jump": "i",
      "op": "JUMP"
    },
    "13844": {
      "op": "JUMPDEST"
    },
    "13845": {
      "op": "SWAP7"
    },
    "13846": {
      "op": "SWAP6"
    },
    "13847": {
      "op": "POP"
    },
    "13848": {
      "op": "POP"
    },
    "13849": {
      "op": "POP"
    },
    "13850": {
      "op": "POP"
    },
    "13851": {
      "op": "POP"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "jump": "o",
      "op": "JUMP"
    },
    "13854": {
      "op": "JUMPDEST"
    },
    "13855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13859": {
      "op": "DUP3"
    },
    "13860": {
      "op": "DUP5"
    },
    "13861": {
      "op": "SUB"
    },
    "13862": {
      "op": "SLT"
    },
    "13863": {
      "op": "ISZERO"
    },
    "13864": {
      "op": "PUSH2",
      "value": "0x3630"
    },
    "13867": {
      "op": "JUMPI"
    },
    "13868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13870": {
      "op": "DUP1"
    },
    "13871": {
      "op": "REVERT"
    },
    "13872": {
      "op": "JUMPDEST"
    },
    "13873": {
      "op": "DUP2"
    },
    "13874": {
      "op": "MLOAD"
    },
    "13875": {
      "op": "PUSH2",
      "value": "0x2EBC"
    },
    "13878": {
      "op": "DUP2"
    },
    "13879": {
      "op": "PUSH2",
      "value": "0x2E89"
    },
    "13882": {
      "jump": "i",
      "op": "JUMP"
    },
    "13883": {
      "op": "JUMPDEST"
    },
    "13884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13891": {
      "op": "SHL"
    },
    "13892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13894": {
      "op": "MSTORE"
    },
    "13895": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13899": {
      "op": "MSTORE"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13904": {
      "op": "REVERT"
    }
  },
  "sha1": "6aa3f7baccb0fc4b7e9bed6010c49b736dcce4a0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title CryptidToken NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, sent, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.1 ether;  \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused \n    {\n        require(salePrice == msg.value, \"Incorrect ETH value sent.\");\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] = true;\n        _mint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");     \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint256 mintAmount\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused  \n    {\n        require(salePrice * mintAmount == msg.value, \"Incorrect ETH value sent.\");\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function setClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    // to be used in case of WL error\n    function undoClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = false;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function withdraw() external payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawl failed.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "1139:26:16:-:0;710:7944;1139:26;;;-1:-1:-1;710:7944:16;1139:26;;;;;;;;:::i;:::-;-1:-1:-1;1171:37:16;;;;;;;;;;;;;-1:-1:-1;;;1171:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1250:34:16;;;-1:-1:-1;;;;;;1337:76:16;;;;;1949:9;1922:36;;1992:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:3;;2242:5:16;;2249:7;;1456:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2268:15:16::1;:34:::0;;;2312:14:::1;:32:::0;;;2354:15:::1;:34:::0;;;2398:12:::1;:28:::0;;-1:-1:-1;;2398:28:16::1;;::::0;::::1;;::::0;;2436:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2464:27;:15;:25;;;;;:27;;:::i;:::-;1992:506:::0;;;;;;;710:7944;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;710:7944:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:7944:16;;;-1:-1:-1;710:7944:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:20;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;710:7944:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}