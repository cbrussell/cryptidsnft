{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMintPerTx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxMintPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "setSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "undoClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2990
      ],
      "Context": [
        2534
      ],
      "Counters": [
        2419
      ],
      "CryptidToken": [
        820
      ],
      "ERC165": [
        3217
      ],
      "ERC721": [
        2007
      ],
      "ERC721Enumerable": [
        2345
      ],
      "IERC165": [
        3260
      ],
      "IERC721": [
        2650
      ],
      "IERC721Enumerable": [
        3248
      ],
      "IERC721Metadata": [
        2695
      ],
      "IERC721Receiver": [
        2668
      ],
      "MerkleProof": [
        2512
      ],
      "Ownable": [
        1009
      ],
      "Pausable": [
        1101
      ],
      "ReentrancyGuard": [
        1141
      ],
      "Strings": [
        3193
      ]
    },
    "id": 821,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 2008,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 2346,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 1010,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 1142,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 2420,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 1102,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 821,
        "sourceUnit": 2513,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2007,
              "src": "735:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "735:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2345,
              "src": "743:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "743:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1101,
              "src": "761:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1009,
              "src": "771:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "771:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1141,
              "src": "780:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "780:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:220:16",
          "text": "@title CryptidToken NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, send, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 820,
        "linearizedBaseContracts": [
          820,
          1141,
          1009,
          1101,
          2345,
          3248,
          2007,
          2695,
          2650,
          3217,
          3260,
          2534
        ],
        "name": "CryptidToken",
        "nameLocation": "719:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3193,
              "src": "808:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "802:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2419,
              "src": "839:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "833:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2351,
                "src": "852:16:16"
              },
              "referencedDeclaration": 2351,
              "src": "852:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2351_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2512,
              "src": "880:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "874:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "896:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "933:4:16",
                "nodeType": "EnumValue",
                "src": "933:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "947:7:16",
                "nodeType": "EnumValue",
                "src": "947:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "964:9:16",
                "nodeType": "EnumValue",
                "src": "964:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "983:8:16",
                "nodeType": "EnumValue",
                "src": "983:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "1001:10:16",
                "nodeType": "EnumValue",
                "src": "1001:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "917:5:16",
            "nodeType": "EnumDefinition",
            "src": "912:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1048:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1023:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2351_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2351,
                "src": "1023:16:16"
              },
              "referencedDeclaration": 2351,
              "src": "1023:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2351_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1089:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1074:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1119:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1105:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1105:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1153:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1139:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1139:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1163:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1185:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1171:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1201:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1229:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1214:27:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1214:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1264:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1252:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1252:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1281:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1304:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1292:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1292:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1327:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1354:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1339:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1339:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1373:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 62,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1619:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1604:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1604:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 66,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1695:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1663:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1671:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1663:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1682:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1769:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1754:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1754:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 70,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1830:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1815:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1815:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 72,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1894:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1879:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1879:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 75,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1939:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1924:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1924:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1951:10:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 78,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1983:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 820,
            "src": "1970:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1970:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1970:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2263:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2273:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2291:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2273:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:34:16"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2317:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2334:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2317:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:32:16"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "2359:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2377:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2359:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:34:16"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2403:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2418:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2403:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:28:16"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2441:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2451:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2441:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 119,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2469:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2351_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2377,
                      "src": "2469:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2351_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:27:16"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 95,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "2247:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 96,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "2254:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 97,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 94,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2007,
                  "src": "2240:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2240:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2030:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2016:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2059:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2045:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2090:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2076:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2116:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2108:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2150:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2142:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2183:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2175:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2217:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2209:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2006:231:16"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2263:0:16"
            },
            "scope": 820,
            "src": "1995:508:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2652:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 135,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2670:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 136,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2678:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2678:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "2670:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2662:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 143,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2096,
                              "src": "2731:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2731:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 145,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2748:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2731:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 147,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "2762:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2731:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2779:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2723:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:101:16"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "2876:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 163,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "2900:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 164,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "2904:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2363,
                                "src": "2904:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2351_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2904:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 162,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1636,
                              1665
                            ],
                            "referencedDeclaration": 1636,
                            "src": "2890:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2890:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2890:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 169,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2944:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2377,
                            "src": "2944:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2351_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2944:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2944:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 156,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "2854:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 157,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2859:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2854:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      153
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2847:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "2839:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2839:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 155,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2851:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2839:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2871:3:16",
                      "subExpression": {
                        "id": 159,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2871:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 161,
                    "nodeType": "ExpressionStatement",
                    "src": "2871:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2834:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "2637:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2637:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2543:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2573:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2567:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2602:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2594:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:53:16"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:0:16"
            },
            "scope": 820,
            "src": "2534:454:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3179:486:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 188,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3197:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 189,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3206:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "3206:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3197:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3223:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3189:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 196,
                          "name": "salePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3273:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3286:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3286:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3273:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3297:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3265:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3265:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 206,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3362:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 210,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3401:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3401:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 208,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3384:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3384:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3384:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 207,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3374:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3374:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 204,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "3343:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2443,
                          "src": "3343:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3343:71:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3335:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 219,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3462:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "expression": {
                              "id": 220,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3470:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3470:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3462:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3485:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3462:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3492:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3454:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:72:16"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 228,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3537:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "expression": {
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3545:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3545:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3537:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3559:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3537:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3537:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3583:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3583:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 238,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3595:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2351_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2363,
                          "src": "3595:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2351_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1636,
                        1665
                      ],
                      "referencedDeclaration": 1636,
                      "src": "3573:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3573:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3573:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 243,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3631:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2351_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2377,
                      "src": "3631:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2351_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1140,
                  "src": "3138:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3138:12:16"
              },
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1057,
                  "src": "3160:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3160:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3035:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3077:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3058:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 178,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3058:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 179,
                    "nodeType": "ArrayTypeName",
                    "src": "3058:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3048:46:16"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:0:16"
            },
            "scope": 820,
            "src": "3026:639:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3790:394:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 257,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3808:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 258,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3817:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3817:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3808:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3833:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3800:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3800:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3800:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 265,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3878:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 266,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3891:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3878:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 268,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3908:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3878:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3924:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3870:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:100:16"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3985:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "4002:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3985:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:27:16"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "4064:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 288,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4088:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4088:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 290,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4100:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2363,
                                "src": "4100:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2351_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4100:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 287,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1636,
                              1665
                            ],
                            "referencedDeclaration": 1636,
                            "src": "4078:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4078:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "4078:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 295,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4140:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2377,
                            "src": "4140:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2351_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4140:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "4140:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4042:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 282,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "4047:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4042:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "initializationExpression": {
                    "assignments": [
                      278
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4035:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "4027:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4027:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 280,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4039:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4027:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4059:3:16",
                      "subExpression": {
                        "id": 284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4059:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 286,
                    "nodeType": "ExpressionStatement",
                    "src": "4059:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4022:156:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "3775:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3775:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3707:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3731:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3725:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3725:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3715:32:16"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3790:0:16"
            },
            "scope": 820,
            "src": "3698:486:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4358:529:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 313,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4376:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 314,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4385:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4385:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4376:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4403:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4368:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "4368:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 321,
                            "name": "salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "4450:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 322,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4462:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4450:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4476:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4476:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4450:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4487:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4442:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4442:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:73:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 331,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2096,
                              "src": "4533:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4533:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 333,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4550:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4533:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 335,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4564:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4533:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4525:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4525:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4525:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 341,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4640:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 342,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4654:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4640:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4668:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4632:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:81:16"
                },
                {
                  "body": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "4767:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4791:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4791:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 360,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4803:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 361,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2363,
                                "src": "4803:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2351_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4803:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 357,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1636,
                              1665
                            ],
                            "referencedDeclaration": 1636,
                            "src": "4781:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4781:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "4781:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 365,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4843:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2351_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2377,
                            "src": "4843:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2351_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2351_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4843:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "4843:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 351,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "4745:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 352,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4750:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4745:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "initializationExpression": {
                    "assignments": [
                      348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4738:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "4730:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4730:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 350,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4742:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4730:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4762:3:16",
                      "subExpression": {
                        "id": 354,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4762:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "4762:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4725:156:16"
                }
              ]
            },
            "functionSelector": "2db11544",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 307,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1140,
                  "src": "4316:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:12:16"
              },
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1057,
                  "src": "4338:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4338:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4228:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4256:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "4248:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4238:34:16"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4358:0:16"
            },
            "scope": 820,
            "src": "4219:668:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "4951:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 378,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "4961:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 375,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "4941:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4941:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "4924:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4929:2:16"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:0:16"
            },
            "scope": 820,
            "src": "4915:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "5020:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 387,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "5030:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5030:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "5030:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5010:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5010:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "4991:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4998:2:16"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5020:0:16"
            },
            "scope": 820,
            "src": "4982:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5153:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5163:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "id": 399,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "5171:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5163:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5184:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5163:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:25:16"
                }
              ]
            },
            "functionSelector": "bb31b77b",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 395,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5144:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5144:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "5107:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5124:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5116:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:19:16"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5153:0:16"
            },
            "scope": 820,
            "src": "5098:97:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "5295:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 412,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5305:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "id": 413,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "5313:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5305:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5326:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5305:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5305:26:16"
                }
              ]
            },
            "functionSelector": "57ed9e4e",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5286:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5286:9:16"
              }
            ],
            "name": "undoClaim",
            "nameLocation": "5248:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5266:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "5258:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5258:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5257:19:16"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5295:0:16"
            },
            "scope": 820,
            "src": "5239:99:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "5407:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 426,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "5417:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 427,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "5430:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5417:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5417:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 423,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5397:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5397:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5353:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5375:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "5367:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5366:21:16"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5407:0:16"
            },
            "scope": 820,
            "src": "5344:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "5520:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5538:15:16",
                        "subExpression": {
                          "id": 439,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5539:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5555:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5530:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5530:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "5530:46:16"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5586:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5596:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5586:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "5586:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5510:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5510:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5463:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5488:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "5474:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5474:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5473:27:16"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5520:0:16"
            },
            "scope": 820,
            "src": "5454:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5669:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 457,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5693:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5687:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 455,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5687:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5687:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5687:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5711:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5687:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5714:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5679:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5679:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5679:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5759:15:16",
                        "subExpression": {
                          "id": 466,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5760:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5776:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5751:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:54:16"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5815:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5832:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5815:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 451,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5659:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5659:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5634:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5647:2:16"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5669:0:16"
            },
            "scope": 820,
            "src": "5625:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "5927:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 483,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "5937:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 484,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5953:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5937:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 480,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "5917:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5917:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "5858:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "5889:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "5875:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5874:33:16"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5927:0:16"
            },
            "scope": 820,
            "src": "5849:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "6060:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 498,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "6084:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6078:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 496,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6078:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6078:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6078:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6110:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6078:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6113:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6070:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6070:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6070:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6173:21:16",
                        "subExpression": {
                          "id": 507,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6174:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6196:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6165:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:60:16"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 512,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6235:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 513,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "6252:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6235:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "6235:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 493,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 492,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6050:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6050:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "5992:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6024:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "6010:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6010:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6009:31:16"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6060:0:16"
            },
            "scope": 820,
            "src": "5983:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "6331:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 525,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6355:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6349:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 523,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6349:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6349:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6349:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6380:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6349:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6383:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6341:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6431:21:16",
                        "subExpression": {
                          "id": 534,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6432:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6454:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6423:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6423:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "6423:68:16"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 539,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "6501:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6524:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6501:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "6501:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 519,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6321:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6321:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6289:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6309:2:16"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6331:0:16"
            },
            "scope": 820,
            "src": "6280:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "6616:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6626:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 552,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6645:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6626:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 548,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6606:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6606:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6550:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6578:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "6570:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:27:16"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6616:0:16"
            },
            "scope": 820,
            "src": "6541:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "6736:39:16",
              "statements": [
                {
                  "expression": {
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 563,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6746:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 564,
                      "name": "_salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "6758:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6746:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "6746:22:16"
                }
              ]
            },
            "functionSelector": "1919fed7",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 560,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6726:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6726:9:16"
              }
            ],
            "name": "setSalePrice",
            "nameLocation": "6684:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_salePrice",
                  "nameLocation": "6705:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "6697:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6697:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6696:20:16"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6736:0:16"
            },
            "scope": 820,
            "src": "6675:100:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "6848:45:16",
              "statements": [
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 575,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "6858:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 576,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "6873:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6858:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "6858:28:16"
                }
              ]
            },
            "functionSelector": "616cdb1e",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 573,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 572,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6838:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6838:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "6790:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "6814:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6806:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6805:23:16"
            },
            "returnParameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6848:0:16"
            },
            "scope": 820,
            "src": "6781:112:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "6946:217:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 588,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6972:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$820",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$820",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6964:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 586,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6964:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6964:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6964:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6988:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6964:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6991:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6956:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6956:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "6956:60:16"
                },
                {
                  "assignments": [
                    597,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7032:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "7027:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7027:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7106:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "7053:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7045:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 598,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7045:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7045:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7045:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 605,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7091:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$820",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$820",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7083:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 603,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7083:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7083:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7083:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7045:60:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7026:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 613,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "7127:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776c206661696c65642e",
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7136:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        },
                        "value": "Withdrawl failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        }
                      ],
                      "id": 612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7119:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7119:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "7119:37:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 618,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 582,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "6936:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6936:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6908:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:2:16"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6946:0:16"
            },
            "scope": 820,
            "src": "6899:264:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "7220:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 627,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7238:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7262:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7238:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7268:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7230:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7230:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "7230:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 634,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7345:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7359:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7345:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7362:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7337:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7337:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 639,
                  "nodeType": "ExpressionStatement",
                  "src": "7337:78:16"
                },
                {
                  "expression": {
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 640,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "7425:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 641,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "7433:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7425:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 623,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 951,
                  "src": "7210:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7210:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "7178:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "7193:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7187:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 620,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 619,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "7187:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "7187:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7186:14:16"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7220:0:16"
            },
            "scope": 820,
            "src": "7169:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "7541:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 651,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "7566:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7566:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 650,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "7558:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7558:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 649,
                  "id": 654,
                  "nodeType": "Return",
                  "src": "7551:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 656,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7492:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7507:2:16"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "7533:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7533:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7532:9:16"
            },
            "scope": 820,
            "src": "7483:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "7646:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 661,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "7663:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7663:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7662:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 660,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "7656:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7602:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7612:2:16"
            },
            "returnParameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "7638:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7638:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7637:9:16"
            },
            "scope": 820,
            "src": "7593:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1349
            ],
            "body": {
              "id": 693,
              "nodeType": "Block",
              "src": "7778:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 676,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "7804:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 675,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1580,
                          "src": "7796:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7796:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7814:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7788:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 685,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "7906:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 686,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 668,
                                "src": "7915:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3075,
                              "src": "7915:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7915:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 689,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7935:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 683,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7889:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7889:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7889:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7882:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7882:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7882:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 692,
                  "nodeType": "Return",
                  "src": "7875:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7699:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 670,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7745:8:16"
            },
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7716:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "7708:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7707:17:16"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "7763:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7763:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7762:15:16"
            },
            "scope": 820,
            "src": "7690:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "8020:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 699,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "8037:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 700,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "8055:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8055:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8037:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 698,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "8030:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "7972:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7985:2:16"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "8011:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8011:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8010:9:16"
            },
            "scope": 820,
            "src": "7963:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "8164:274:16",
              "statements": [
                {
                  "assignments": [
                    714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 714,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "8182:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "8174:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 713,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8174:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 716,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "8210:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 715,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "8200:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8174:42:16"
                },
                {
                  "assignments": [
                    723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 723,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8243:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "8226:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8226:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 722,
                        "nodeType": "ArrayTypeName",
                        "src": "8226:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 729,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "8269:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8255:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 724,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8259:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 725,
                        "nodeType": "ArrayTypeName",
                        "src": "8259:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8255:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8226:59:16"
                },
                {
                  "body": {
                    "id": 748,
                    "nodeType": "Block",
                    "src": "8337:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 739,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "8351:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 741,
                            "indexExpression": {
                              "id": 740,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "8361:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8351:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 743,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "8386:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 744,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "8393:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 742,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2085,
                              "src": "8366:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8366:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8351:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 747,
                        "nodeType": "ExpressionStatement",
                        "src": "8351:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 733,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "8311:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 734,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "8315:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8311:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 749,
                  "initializationExpression": {
                    "assignments": [
                      731
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8308:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 749,
                        "src": "8300:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8300:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 732,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8300:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8332:3:16",
                      "subExpression": {
                        "id": 736,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "8332:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 738,
                    "nodeType": "ExpressionStatement",
                    "src": "8332:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8295:111:16"
                },
                {
                  "expression": {
                    "id": 750,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "8422:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 712,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "8415:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "8094:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8116:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "8108:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8107:15:16"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "8146:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 709,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8146:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 710,
                    "nodeType": "ArrayTypeName",
                    "src": "8146:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8145:18:16"
            },
            "scope": 820,
            "src": "8085:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "8538:148:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 765,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "8571:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 769,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 755,
                                "src": "8610:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 767,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8593:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "8593:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8593:25:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 766,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8583:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8583:36:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 763,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "8552:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2443,
                      "src": "8552:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8552:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 776,
                  "nodeType": "IfStatement",
                  "src": "8548:110:16",
                  "trueBody": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "8622:36:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8643:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 762,
                        "id": 774,
                        "nodeType": "Return",
                        "src": "8636:11:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8674:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 762,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "8667:12:16"
                }
              ]
            },
            "functionSelector": "b76a0df4",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "8453:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8468:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "8460:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8460:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "8496:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "8477:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 756,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8477:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 757,
                    "nodeType": "ArrayTypeName",
                    "src": "8477:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8459:49:16"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "8532:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8532:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8531:6:16"
            },
            "scope": 820,
            "src": "8444:242:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1995,
              2183
            ],
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "8827:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 797,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "8864:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 798,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "8870:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "8874:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 794,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8837:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$820_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2183,
                      "src": "8837:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8837:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "8837:45:16"
                }
              ]
            },
            "id": 803,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 789,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 788,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1057,
                  "src": "8778:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8778:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8705:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 792,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 790,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2007,
                  "src": "8801:6:16"
                },
                {
                  "id": 791,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2345,
                  "src": "8809:16:16"
                }
              ],
              "src": "8792:34:16"
            },
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8734:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8726:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8726:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8748:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8740:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8760:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8752:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8752:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8725:43:16"
            },
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8827:0:16"
            },
            "scope": 820,
            "src": "8696:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1235,
              2057
            ],
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "9072:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "9113:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 813,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9089:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$820_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2057,
                      "src": "9089:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9089:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 812,
                  "id": 817,
                  "nodeType": "Return",
                  "src": "9082:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8972:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 809,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 807,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2007,
                  "src": "9031:6:16"
                },
                {
                  "id": 808,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2345,
                  "src": "9039:16:16"
                }
              ],
              "src": "9022:34:16"
            },
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8997:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8990:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8990:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8989:20:16"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "9066:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9066:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9065:6:16"
            },
            "scope": 820,
            "src": "8963:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 821,
        "src": "710:8425:16",
        "usedErrors": []
      }
    ],
    "src": "32:9103:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001ab565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001ab565b50601280546001600160b01b0319167512b58f5331a6dc897932aa7fb5101667acdf03e20000179055662386f26fc100006018553480156200008b57600080fd5b5060405162003c5638038062003c56833981016040819052620000ae916200031e565b865187908790620000c7906000906020850190620001ab565b508051620000dd906001906020840190620001ab565b5050600a805460ff1916905550620000f53362000148565b6001600b55601384905560158390556017829055601181905584516200012390600f906020880190620001ab565b506200013b600c620001a260201b620022d71760201c565b5050505050505062000413565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001b990620003d6565b90600052602060002090601f016020900481019282620001dd576000855562000228565b82601f10620001f857805160ff191683800117855562000228565b8280016001018555821562000228579182015b82811115620002285782518255916020019190600101906200020b565b50620002369291506200023a565b5090565b5b808211156200023657600081556001016200023b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027957600080fd5b81516001600160401b038082111562000296576200029662000251565b604051601f8301601f19908116603f01168101908282118183101715620002c157620002c162000251565b81604052838152602092508683858801011115620002de57600080fd5b600091505b83821015620003025785820183015181830184015290820190620002e3565b83821115620003145760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200033a57600080fd5b87516001600160401b03808211156200035257600080fd5b620003608b838c0162000267565b985060208a01519150808211156200037757600080fd5b620003858b838c0162000267565b975060408a01519150808211156200039c57600080fd5b50620003ab8a828b0162000267565b955050606088015193506080880151925060a0880151915060c0880151905092959891949750929550565b600181811c90821680620003eb57607f821691505b602082108114156200040d57634e487b7160e01b600052602260045260246000fd5b50919050565b61383380620004236000396000f3fe60806040526004361061038c5760003560e01c80637b671780116101dc578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109f4578063f4efa3e614610a14578063f51f96dd14610a34578063ffa9cd3b14610a4a57600080fd5b8063de5f98661461096b578063de7fcb1d14610980578063e7bc820814610996578063e985e9c5146109ab57600080fd5b8063c884ef83116100dc578063c884ef83146108e6578063ce3cd99714610916578063d6d67a0914610936578063da3ef23f1461094b57600080fd5b8063c66828621461089c578063c6ab67a3146108b1578063c87b56dd146108c657600080fd5b8063a22cb4651161017a578063bb31b77b11610149578063bb31b77b14610825578063c040e6b814610845578063c29de6301461086c578063c32145811461088657600080fd5b8063a22cb465146107a5578063b3caad01146107c5578063b76a0df4146107e5578063b88d4fde1461080557600080fd5b80638456cb59116101b65780638456cb59146107395780638da5cb5b1461074e57806395d89b41146107715780639a2a9c3d1461078657600080fd5b80637b671780146106e45780637cb647591461070457806381c162f21461072457600080fd5b80633ccfd60b116102c15780635c975abb1161025f5780636cbb89851161022e5780636cbb89851461068457806370a0823114610699578063715018a6146106b957806378231978146106ce57600080fd5b80635c975abb14610617578063616cdb1e1461062f5780636352211e1461064f5780636c0360eb1461066f57600080fd5b8063438b63001161029b578063438b63001461058a5780634f6ccce7146105b757806355f804b3146105d757806357ed9e4e146105f757600080fd5b80633ccfd60b1461054d5780633f4ba83a1461055557806342842e0e1461056a57600080fd5b80631919fed71161032e5780632eb4a7ab116103085780632eb4a7ab146104ee5780632f745c591461050457806333e6141314610524578063372f657c1461053a57600080fd5b80631919fed71461049b57806323b872dd146104bb5780632db11544146104db57600080fd5b8063088139a61161036a578063088139a614610420578063095ea7b314610444578063109695231461046657806318160ddd1461048657600080fd5b806301ffc9a71461039157806306fdde03146103c6578063081812fc146103e8575b600080fd5b34801561039d57600080fd5b506103b16103ac366004612fe6565b610a70565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610a81565b6040516103bd919061305b565b3480156103f457600080fd5b5061040861040336600461306e565b610b13565b6040516001600160a01b0390911681526020016103bd565b34801561042c57600080fd5b5061043660165481565b6040519081526020016103bd565b34801561045057600080fd5b5061046461045f3660046130a3565b610bad565b005b34801561047257600080fd5b50610464610481366004613159565b610cc3565b34801561049257600080fd5b50600854610436565b3480156104a757600080fd5b506104646104b636600461306e565b610dc3565b3480156104c757600080fd5b506104646104d63660046131a2565b610df8565b6104646104e936600461306e565b610e29565b3480156104fa57600080fd5b50610436600d5481565b34801561051057600080fd5b5061043661051f3660046130a3565b611080565b34801561053057600080fd5b5061043660135481565b61046461054836600461322a565b611116565b61046461139e565b34801561056157600080fd5b506104646114b7565b34801561057657600080fd5b506104646105853660046131a2565b6114f1565b34801561059657600080fd5b506105aa6105a536600461326c565b61150c565b6040516103bd9190613287565b3480156105c357600080fd5b506104366105d236600461306e565b6115ae565b3480156105e357600080fd5b506104646105f2366004613159565b611641565b34801561060357600080fd5b5061046461061236600461326c565b6116cc565b34801561062357600080fd5b50600a5460ff166103b1565b34801561063b57600080fd5b5061046461064a36600461306e565b61171d565b34801561065b57600080fd5b5061040861066a36600461306e565b611752565b34801561067b57600080fd5b506103db6117c9565b34801561069057600080fd5b50610408611857565b3480156106a557600080fd5b506104366106b436600461326c565b61186a565b3480156106c557600080fd5b506104646118f1565b3480156106da57600080fd5b5061043660175481565b3480156106f057600080fd5b506104646106ff3660046132dc565b61192b565b34801561071057600080fd5b5061046461071f36600461306e565b611a8b565b34801561073057600080fd5b50610464611ac0565b34801561074557600080fd5b50610464611bc2565b34801561075a57600080fd5b50600a5461010090046001600160a01b0316610408565b34801561077d57600080fd5b506103db611bfa565b34801561079257600080fd5b506012546103b190610100900460ff1681565b3480156107b157600080fd5b506104646107c03660046132f7565b611c09565b3480156107d157600080fd5b506104646107e0366004613333565b611c14565b3480156107f157600080fd5b506103b1610800366004613366565b611d56565b34801561081157600080fd5b506104646108203660046133b9565b611dea565b34801561083157600080fd5b5061046461084036600461326c565b611e22565b34801561085157600080fd5b5060195461085f9060ff1681565b6040516103bd919061344b565b34801561087857600080fd5b506012546103b19060ff1681565b34801561089257600080fd5b5061043660155481565b3480156108a857600080fd5b506103db611e76565b3480156108bd57600080fd5b506103db611e83565b3480156108d257600080fd5b506103db6108e136600461306e565b611e90565b3480156108f257600080fd5b506103b161090136600461326c565b60146020526000908152604090205460ff1681565b34801561092257600080fd5b50610464610931366004613473565b611f45565b34801561094257600080fd5b50610436612089565b34801561095757600080fd5b50610464610966366004613159565b612094565b34801561097757600080fd5b506104366120d7565b34801561098c57600080fd5b5061043660115481565b3480156109a257600080fd5b506104646120ef565b3480156109b757600080fd5b506103b16109c6366004613494565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a0057600080fd5b50610464610a0f36600461326c565b6121df565b348015610a2057600080fd5b50610464610a2f36600461326c565b61227d565b348015610a4057600080fd5b5061043660185481565b348015610a5657600080fd5b50601254610408906201000090046001600160a01b031681565b6000610a7b826122e0565b92915050565b606060008054610a90906134b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906134b0565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b915760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bb882611752565b9050806001600160a01b0316836001600160a01b03161415610c265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b88565b336001600160a01b0382161480610c425750610c4281336109c6565b610cb45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b88565b610cbe8383612305565b505050565b600a546001600160a01b03610100909104163314610cf35760405162461bcd60e51b8152600401610b88906134eb565b6000815111610d545760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b88565b601254610100900460ff1615610dac5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b88565b8051610dbf90600e906020840190612f37565b5050565b600a546001600160a01b03610100909104163314610df35760405162461bcd60e51b8152600401610b88906134eb565b601855565b610e023382612373565b610e1e5760405162461bcd60e51b8152600401610b8890613520565b610cbe83838361246a565b6002600b541415610e7c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b88565b6002600b55600a5460ff1615610ea45760405162461bcd60e51b8152600401610b8890613571565b600460195460ff166004811115610ebd57610ebd613435565b14610f0a5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b88565b3481601854610f1991906135b1565b14610f625760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b88565b60175481610f6f60085490565b610f7991906135d0565b1115610fd65760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b88565b60115481111561103b5760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b88565b60015b8181116110775761105733611052600c5490565b612611565b611065600c80546001019055565b8061106f816135e8565b91505061103e565b50506001600b55565b600061108b8361186a565b82106110ed5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b88565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b5414156111695760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b88565b6002600b55600a5460ff16156111915760405162461bcd60e51b8152600401610b8890613571565b600260195460ff1660048111156111aa576111aa613435565b146111f75760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b88565b34601854146112445760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b88565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112bd91906034016040516020818303038152906040528051906020012084848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061262b9050565b6113095760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b88565b3360009081526014602052604090205460ff16156113695760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b88565b336000818152601460205260409020805460ff1916600117905561139090611052600c5490565b611077600c80546001019055565b600a546001600160a01b036101009091041633146113ce5760405162461bcd60e51b8152600401610b88906134eb565b600047116114175760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b88565b6012546040516000916201000090046001600160a01b03169047908381818185875af1925050503d806000811461146a576040519150601f19603f3d011682016040523d82523d6000602084013e61146f565b606091505b50509050806114b45760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b88565b50565b600a546001600160a01b036101009091041633146114e75760405162461bcd60e51b8152600401610b88906134eb565b6114ef612641565b565b610cbe83838360405180602001604052806000815250611dea565b606060006115198361186a565b905060008167ffffffffffffffff811115611536576115366130cd565b60405190808252806020026020018201604052801561155f578160200160208202803683370190505b50905060005b828110156115a6576115778582611080565b82828151811061158957611589613603565b60209081029190910101528061159e816135e8565b915050611565565b509392505050565b60006115b960085490565b821061161c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b88565b6008828154811061162f5761162f613603565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146116715760405162461bcd60e51b8152600401610b88906134eb565b60125460ff16156116b95760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b88565b8051610dbf90600f906020840190612f37565b600a546001600160a01b036101009091041633146116fc5760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b03166000908152601460205260409020805460ff19169055565b600a546001600160a01b0361010090910416331461174d5760405162461bcd60e51b8152600401610b88906134eb565b601155565b6000818152600260205260408120546001600160a01b031680610a7b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b88565b600f80546117d6906134b0565b80601f0160208091040260200160405190810160405280929190818152602001828054611802906134b0565b801561184f5780601f106118245761010080835404028352916020019161184f565b820191906000526020600020905b81548152906001019060200180831161183257829003601f168201915b505050505081565b600061186561066a60085490565b905090565b60006001600160a01b0382166118d55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b88565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146119215760405162461bcd60e51b8152600401610b88906134eb565b6114ef60006126d4565b600a546001600160a01b0361010090910416331461195b5760405162461bcd60e51b8152600401610b88906134eb565b600360195460ff16600481111561197457611974613435565b146119c15760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b88565b6015546016546119d49060ff84166135d0565b1115611a365760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b88565b8060ff1660166000828254611a4b91906135d0565b90915550600190505b8160ff168111610dbf57611a6b33611052600c5490565b611a79600c80546001019055565b80611a83816135e8565b915050611a54565b600a546001600160a01b03610100909104163314611abb5760405162461bcd60e51b8152600401610b88906134eb565b600d55565b600a546001600160a01b03610100909104163314611af05760405162461bcd60e51b8152600401610b88906134eb565b6000600e8054611aff906134b0565b905011611b4e5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b88565b601254610100900460ff1615611bb15760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b88565b6012805461ff001916610100179055565b600a546001600160a01b03610100909104163314611bf25760405162461bcd60e51b8152600401610b88906134eb565b6114ef61272e565b606060018054610a90906134b0565b610dbf338383612786565b600a546001600160a01b03610100909104163314611c445760405162461bcd60e51b8152600401610b88906134eb565b600060195460ff166004811115611c5d57611c5d613435565b11611ca15760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b88565b6017548260ff16611cb160085490565b611cbb91906135d0565b1115611d1c5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b88565b60015b8260ff168111610cbe57611d3682611052600c5490565b611d44600c80546001019055565b80611d4e816135e8565b915050611d1f565b600d546040516bffffffffffffffffffffffff19606086901b166020820152600091611dd2916034016040516020818303038152906040528051906020012085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061262b9050565b15611ddf57506001611de3565b5060005b9392505050565b611df43383612373565b611e105760405162461bcd60e51b8152600401610b8890613520565b611e1c84848484612855565b50505050565b600a546001600160a01b03610100909104163314611e525760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b03166000908152601460205260409020805460ff19166001179055565b601080546117d6906134b0565b600e80546117d6906134b0565b6000818152600260205260409020546060906001600160a01b0316611f105760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b88565b600f611f1b83612888565b6010604051602001611f2f939291906136b3565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f755760405162461bcd60e51b8152600401610b88906134eb565b60125460ff610100909104161515600114611ff85760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b88565b600d546120625760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b88565b6019805482919060ff1916600183600481111561208157612081613435565b021790555050565b600061186560085490565b600a546001600160a01b036101009091041633146120c45760405162461bcd60e51b8152600401610b88906134eb565b8051610dbf906010906020840190612f37565b60006120e260085490565b60175461186591906136e6565b600a546001600160a01b0361010090910416331461211f5760405162461bcd60e51b8152600401610b88906134eb565b6000600f805461212e906134b0565b90501161217d5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b88565b60125460ff16156121d05760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b88565b6012805460ff19166001179055565b600a546001600160a01b0361010090910416331461220f5760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b0381166122745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b88565b6114b4816126d4565b600a546001600160a01b036101009091041633146122ad5760405162461bcd60e51b8152600401610b88906134eb565b601280546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a7b5750610a7b82612986565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061233a82611752565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123ec5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b88565b60006123f783611752565b9050806001600160a01b0316846001600160a01b031614806124325750836001600160a01b031661242784610b13565b6001600160a01b0316145b8061246257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661247d82611752565b6001600160a01b0316146124e15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b88565b6001600160a01b0382166125435760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b88565b61254e8383836129d6565b612559600082612305565b6001600160a01b03831660009081526003602052604081208054600192906125829084906136e6565b90915550506001600160a01b03821660009081526003602052604081208054600192906125b09084906135d0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610dbf828260405180602001604052806000815250612a04565b6000826126388584612a37565b14949350505050565b600a5460ff1661268a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b88565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127515760405162461bcd60e51b8152600401610b8890613571565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126b73390565b816001600160a01b0316836001600160a01b031614156127e85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b88565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61286084848461246a565b61286c84848484612aa3565b611e1c5760405162461bcd60e51b8152600401610b88906136fd565b6060816128ac5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128d657806128c0816135e8565b91506128cf9050600a83613765565b91506128b0565b60008167ffffffffffffffff8111156128f1576128f16130cd565b6040519080825280601f01601f19166020018201604052801561291b576020820181803683370190505b5090505b8415612462576129306001836136e6565b915061293d600a86613779565b6129489060306135d0565b60f81b81838151811061295d5761295d613603565b60200101906001600160f81b031916908160001a90535061297f600a86613765565b945061291f565b60006001600160e01b031982166380ac58cd60e01b14806129b757506001600160e01b03198216635b5e139f60e01b145b80610a7b57506301ffc9a760e01b6001600160e01b0319831614610a7b565b600a5460ff16156129f95760405162461bcd60e51b8152600401610b8890613571565b610cbe838383612ba1565b612a0e8383612c59565b612a1b6000848484612aa3565b610cbe5760405162461bcd60e51b8152600401610b88906136fd565b600081815b84518110156115a6576000858281518110612a5957612a59613603565b60200260200101519050808311612a7f5760008381526020829052604090209250612a90565b600081815260208490526040902092505b5080612a9b816135e8565b915050612a3c565b60006001600160a01b0384163b15612b9657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612ae790339089908890889060040161378d565b6020604051808303816000875af1925050508015612b22575060408051601f3d908101601f19168201909252612b1f918101906137ca565b60015b612b7c573d808015612b50576040519150601f19603f3d011682016040523d82523d6000602084013e612b55565b606091505b508051612b745760405162461bcd60e51b8152600401610b88906136fd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612462565b506001949350505050565b6001600160a01b038316612bfc57612bf781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c1f565b816001600160a01b0316836001600160a01b031614612c1f57612c1f8382612da7565b6001600160a01b038216612c3657610cbe81612e44565b826001600160a01b0316826001600160a01b031614610cbe57610cbe8282612ef3565b6001600160a01b038216612caf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b88565b6000818152600260205260409020546001600160a01b031615612d145760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b88565b612d20600083836129d6565b6001600160a01b0382166000908152600360205260408120805460019290612d499084906135d0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612db48461186a565b612dbe91906136e6565b600083815260076020526040902054909150808214612e11576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612e56906001906136e6565b60008381526009602052604081205460088054939450909284908110612e7e57612e7e613603565b906000526020600020015490508060088381548110612e9f57612e9f613603565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612ed757612ed76137e7565b6001900381819060005260206000200160009055905550505050565b6000612efe8361186a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f43906134b0565b90600052602060002090601f016020900481019282612f655760008555612fab565b82601f10612f7e57805160ff1916838001178555612fab565b82800160010185558215612fab579182015b82811115612fab578251825591602001919060010190612f90565b50612fb7929150612fbb565b5090565b5b80821115612fb75760008155600101612fbc565b6001600160e01b0319811681146114b457600080fd5b600060208284031215612ff857600080fd5b8135611de381612fd0565b60005b8381101561301e578181015183820152602001613006565b83811115611e1c5750506000910152565b60008151808452613047816020860160208601613003565b601f01601f19169290920160200192915050565b602081526000611de3602083018461302f565b60006020828403121561308057600080fd5b5035919050565b80356001600160a01b038116811461309e57600080fd5b919050565b600080604083850312156130b657600080fd5b6130bf83613087565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156130fe576130fe6130cd565b604051601f8501601f19908116603f01168101908282118183101715613126576131266130cd565b8160405280935085815286868601111561313f57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561316b57600080fd5b813567ffffffffffffffff81111561318257600080fd5b8201601f8101841361319357600080fd5b612462848235602084016130e3565b6000806000606084860312156131b757600080fd5b6131c084613087565b92506131ce60208501613087565b9150604084013590509250925092565b60008083601f8401126131f057600080fd5b50813567ffffffffffffffff81111561320857600080fd5b6020830191508360208260051b850101111561322357600080fd5b9250929050565b6000806020838503121561323d57600080fd5b823567ffffffffffffffff81111561325457600080fd5b613260858286016131de565b90969095509350505050565b60006020828403121561327e57600080fd5b611de382613087565b6020808252825182820181905260009190848201906040850190845b818110156132bf578351835292840192918401916001016132a3565b50909695505050505050565b803560ff8116811461309e57600080fd5b6000602082840312156132ee57600080fd5b611de3826132cb565b6000806040838503121561330a57600080fd5b61331383613087565b91506020830135801515811461332857600080fd5b809150509250929050565b6000806040838503121561334657600080fd5b61334f836132cb565b915061335d60208401613087565b90509250929050565b60008060006040848603121561337b57600080fd5b61338484613087565b9250602084013567ffffffffffffffff8111156133a057600080fd5b6133ac868287016131de565b9497909650939450505050565b600080600080608085870312156133cf57600080fd5b6133d885613087565b93506133e660208601613087565b925060408501359150606085013567ffffffffffffffff81111561340957600080fd5b8501601f8101871361341a57600080fd5b613429878235602084016130e3565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016005831061346d57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561348557600080fd5b813560058110611de357600080fd5b600080604083850312156134a757600080fd5b61334f83613087565b600181811c908216806134c457607f821691505b602082108114156134e557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156135cb576135cb61359b565b500290565b600082198211156135e3576135e361359b565b500190565b60006000198214156135fc576135fc61359b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061363357607f831692505b602080841082141561365557634e487b7160e01b600052602260045260246000fd5b818015613669576001811461367a576136a7565b60ff198616895284890196506136a7565b60008881526020902060005b8681101561369f5781548b820152908501908301613686565b505084890196505b50505050505092915050565b60006136bf8286613619565b84516136cf818360208901613003565b6136db81830186613619565b979650505050505050565b6000828210156136f8576136f861359b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826137745761377461374f565b500490565b6000826137885761378861374f565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137c09083018461302f565b9695505050505050565b6000602082840312156137dc57600080fd5b8151611de381612fd0565b634e487b7160e01b600052603160045260246000fdfea264697066735822122079c892872283c8ae5f6b75100079d4bc693d91028b2ae8af1bfe2f1dba809a3764736f6c634300080b0033",
  "bytecodeSha1": "0ac2f3109f56849d35bd2ccbf867232619b05c1c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "201": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "203": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "200": [
            1643,
            1671,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "174": [
            2670,
            2688,
            true
          ],
          "175": [
            2731,
            2777,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "178": [
            5687,
            5712,
            true
          ],
          "179": [
            5759,
            5774,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "172": [
            6349,
            6381,
            true
          ],
          "173": [
            6431,
            6452,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "159": [
            4376,
            4401,
            true
          ],
          "160": [
            4450,
            4485,
            true
          ],
          "161": [
            4533,
            4579,
            true
          ],
          "162": [
            4640,
            4666,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "169": [
            5538,
            5553,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "157": [
            6078,
            6111,
            true
          ],
          "158": [
            6173,
            6194,
            true
          ]
        },
        "CryptidToken.setStage": {
          "177": [
            7238,
            7266,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "170": [
            3808,
            3831,
            true
          ],
          "171": [
            3878,
            3922,
            true
          ]
        },
        "CryptidToken.verify": {
          "176": [
            8552,
            8620,
            false
          ]
        },
        "CryptidToken.whitelistMint": {
          "163": [
            3197,
            3221,
            true
          ],
          "164": [
            3273,
            3295,
            true
          ],
          "165": [
            3343,
            3414,
            true
          ],
          "166": [
            3462,
            3490,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "167": [
            6964,
            6989,
            true
          ],
          "168": [
            7127,
            7134,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.whitelistMint": {
          "202": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "192": [
            9157,
            9173,
            true
          ]
        },
        "ERC721._safeMint": {
          "191": [
            8619,
            8673,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "190": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "189": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "187": [
            10579,
            10610,
            true
          ],
          "188": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "180": [
            3674,
            3685,
            true
          ],
          "181": [
            3755,
            3776,
            true
          ],
          "182": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "185": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "184": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "186": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.transferFrom": {
          "183": [
            4915,
            4956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "195": [
            2823,
            2841,
            false
          ],
          "196": [
            2918,
            2928,
            false
          ],
          "197": [
            3015,
            3031,
            false
          ],
          "198": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "199": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "194": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "193": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "109": [
            2378,
            2395
          ],
          "110": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "54": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "89": [
            1998,
            2071
          ],
          "90": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "111": [
            1922,
            1936
          ],
          "112": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "107": [
            2168,
            2183
          ],
          "108": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "24": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "26": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "118": [
            627,
            637
          ],
          "119": [
            743,
            751
          ],
          "120": [
            765,
            775
          ],
          "121": [
            877,
            888
          ],
          "122": [
            902,
            958
          ],
          "123": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "129": [
            1769,
            1826
          ],
          "130": [
            1943,
            2000
          ],
          "131": [
            1575,
            1578
          ]
        },
        "MerkleProof.verify": {
          "106": [
            999,
            1039
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "125": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "126": [
            8837,
            8882
          ]
        },
        "CryptidToken.airdropCryptid": {
          "68": [
            2662,
            2713
          ],
          "69": [
            2723,
            2824
          ],
          "70": [
            2890,
            2930
          ],
          "71": [
            2944,
            2971
          ],
          "72": [
            2871,
            2874
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "86": [
            5679,
            5741
          ],
          "87": [
            5751,
            5805
          ],
          "88": [
            5815,
            5836
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "62": [
            6341,
            6413
          ],
          "63": [
            6423,
            6491
          ],
          "64": [
            6501,
            6528
          ]
        },
        "CryptidToken.getTokensLeft": {
          "85": [
            8030,
            8068
          ]
        },
        "CryptidToken.lastMintAddress": {
          "51": [
            7551,
            7580
          ]
        },
        "CryptidToken.lastMintID": {
          "83": [
            7656,
            7677
          ]
        },
        "CryptidToken.pause": {
          "65": [
            4961,
            4969
          ]
        },
        "CryptidToken.publicMint": {
          "19": [
            4368,
            4432
          ],
          "20": [
            4442,
            4515
          ],
          "21": [
            4525,
            4622
          ],
          "22": [
            4632,
            4713
          ],
          "23": [
            4781,
            4829
          ],
          "25": [
            4843,
            4870
          ],
          "27": [
            4762,
            4765
          ]
        },
        "CryptidToken.setBaseExtension": {
          "84": [
            5937,
            5970
          ]
        },
        "CryptidToken.setBaseURI": {
          "46": [
            5530,
            5576
          ],
          "47": [
            5586,
            5607
          ]
        },
        "CryptidToken.setClaim": {
          "77": [
            5163,
            5188
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "49": [
            6858,
            6886
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "61": [
            5417,
            5441
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "13": [
            6070,
            6155
          ],
          "14": [
            6165,
            6225
          ],
          "15": [
            6235,
            6267
          ]
        },
        "CryptidToken.setSalePrice": {
          "16": [
            6746,
            6768
          ]
        },
        "CryptidToken.setStage": {
          "80": [
            7230,
            7327
          ],
          "81": [
            7337,
            7415
          ],
          "82": [
            7425,
            7439
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "91": [
            6626,
            6662
          ]
        },
        "CryptidToken.supportsInterface": {
          "4": [
            9082,
            9125
          ]
        },
        "CryptidToken.teamMint": {
          "55": [
            3800,
            3860
          ],
          "56": [
            3870,
            3970
          ],
          "57": [
            3985,
            4012
          ],
          "58": [
            4078,
            4126
          ],
          "59": [
            4140,
            4167
          ],
          "60": [
            4059,
            4062
          ]
        },
        "CryptidToken.tokenURI": {
          "78": [
            7788,
            7865
          ],
          "79": [
            7875,
            7950
          ]
        },
        "CryptidToken.undoClaim": {
          "48": [
            5305,
            5331
          ]
        },
        "CryptidToken.unpause": {
          "39": [
            5030,
            5040
          ]
        },
        "CryptidToken.verify": {
          "73": [
            8636,
            8647
          ],
          "74": [
            8667,
            8679
          ]
        },
        "CryptidToken.walletOfOwner": {
          "41": [
            8351,
            8395
          ],
          "42": [
            8332,
            8335
          ],
          "43": [
            8415,
            8431
          ]
        },
        "CryptidToken.whitelistMint": {
          "30": [
            3189,
            3255
          ],
          "31": [
            3265,
            3325
          ],
          "32": [
            3335,
            3444
          ],
          "33": [
            3454,
            3526
          ],
          "34": [
            3537,
            3563
          ],
          "35": [
            3573,
            3621
          ],
          "36": [
            3631,
            3658
          ]
        },
        "CryptidToken.withdraw": {
          "37": [
            6956,
            7016
          ],
          "38": [
            7119,
            7156
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "93": [
            11242,
            11271
          ],
          "94": [
            11281,
            11332
          ]
        },
        "ERC721._checkOnERC721Received": {
          "132": [
            12820,
            12880
          ],
          "133": [
            12654,
            12712
          ],
          "134": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "6": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "95": [
            7551,
            7624
          ],
          "96": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "141": [
            9149,
            9210
          ],
          "142": [
            9220,
            9278
          ],
          "143": [
            9289,
            9334
          ],
          "144": [
            9345,
            9363
          ],
          "145": [
            9373,
            9394
          ],
          "146": [
            9405,
            9443
          ]
        },
        "ERC721._safeMint": {
          "105": [
            8191,
            8217
          ],
          "127": [
            8570,
            8588
          ],
          "128": [
            8598,
            8749
          ]
        },
        "ERC721._safeTransfer": {
          "116": [
            6700,
            6728
          ],
          "117": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "113": [
            11607,
            11662
          ],
          "114": [
            11672,
            11718
          ],
          "115": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "97": [
            10571,
            10652
          ],
          "98": [
            10662,
            10727
          ],
          "99": [
            10738,
            10777
          ],
          "100": [
            10839,
            10868
          ],
          "101": [
            10879,
            10899
          ],
          "102": [
            10909,
            10927
          ],
          "103": [
            10937,
            10958
          ],
          "104": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "9": [
            3666,
            3723
          ],
          "11": [
            3734,
            3899
          ],
          "12": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "52": [
            2020,
            2094
          ],
          "53": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4094,
            4167
          ],
          "8": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "5": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "50": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "40": [
            5255,
            5294
          ],
          "75": [
            5528,
            5631
          ],
          "76": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "67": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "124": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "66": [
            2731,
            2745
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            4907,
            5010
          ],
          "18": [
            5021,
            5049
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "136": [
            3978,
            4022
          ],
          "137": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "155": [
            3621,
            3655
          ],
          "156": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "135": [
            2857,
            2897
          ],
          "138": [
            2944,
            2991
          ],
          "139": [
            3047,
            3092
          ],
          "140": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "151": [
            6669,
            6705
          ],
          "152": [
            6773,
            6814
          ],
          "153": [
            6935,
            6966
          ],
          "154": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "147": [
            5269,
            5313
          ],
          "148": [
            5385,
            5428
          ],
          "149": [
            5559,
            5592
          ],
          "150": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "92": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "44": [
            1892,
            1987
          ],
          "45": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "28": [
            1407,
            1494
          ],
          "29": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "60806040526004361061038c5760003560e01c80637b671780116101dc578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109f4578063f4efa3e614610a14578063f51f96dd14610a34578063ffa9cd3b14610a4a57600080fd5b8063de5f98661461096b578063de7fcb1d14610980578063e7bc820814610996578063e985e9c5146109ab57600080fd5b8063c884ef83116100dc578063c884ef83146108e6578063ce3cd99714610916578063d6d67a0914610936578063da3ef23f1461094b57600080fd5b8063c66828621461089c578063c6ab67a3146108b1578063c87b56dd146108c657600080fd5b8063a22cb4651161017a578063bb31b77b11610149578063bb31b77b14610825578063c040e6b814610845578063c29de6301461086c578063c32145811461088657600080fd5b8063a22cb465146107a5578063b3caad01146107c5578063b76a0df4146107e5578063b88d4fde1461080557600080fd5b80638456cb59116101b65780638456cb59146107395780638da5cb5b1461074e57806395d89b41146107715780639a2a9c3d1461078657600080fd5b80637b671780146106e45780637cb647591461070457806381c162f21461072457600080fd5b80633ccfd60b116102c15780635c975abb1161025f5780636cbb89851161022e5780636cbb89851461068457806370a0823114610699578063715018a6146106b957806378231978146106ce57600080fd5b80635c975abb14610617578063616cdb1e1461062f5780636352211e1461064f5780636c0360eb1461066f57600080fd5b8063438b63001161029b578063438b63001461058a5780634f6ccce7146105b757806355f804b3146105d757806357ed9e4e146105f757600080fd5b80633ccfd60b1461054d5780633f4ba83a1461055557806342842e0e1461056a57600080fd5b80631919fed71161032e5780632eb4a7ab116103085780632eb4a7ab146104ee5780632f745c591461050457806333e6141314610524578063372f657c1461053a57600080fd5b80631919fed71461049b57806323b872dd146104bb5780632db11544146104db57600080fd5b8063088139a61161036a578063088139a614610420578063095ea7b314610444578063109695231461046657806318160ddd1461048657600080fd5b806301ffc9a71461039157806306fdde03146103c6578063081812fc146103e8575b600080fd5b34801561039d57600080fd5b506103b16103ac366004612fe6565b610a70565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610a81565b6040516103bd919061305b565b3480156103f457600080fd5b5061040861040336600461306e565b610b13565b6040516001600160a01b0390911681526020016103bd565b34801561042c57600080fd5b5061043660165481565b6040519081526020016103bd565b34801561045057600080fd5b5061046461045f3660046130a3565b610bad565b005b34801561047257600080fd5b50610464610481366004613159565b610cc3565b34801561049257600080fd5b50600854610436565b3480156104a757600080fd5b506104646104b636600461306e565b610dc3565b3480156104c757600080fd5b506104646104d63660046131a2565b610df8565b6104646104e936600461306e565b610e29565b3480156104fa57600080fd5b50610436600d5481565b34801561051057600080fd5b5061043661051f3660046130a3565b611080565b34801561053057600080fd5b5061043660135481565b61046461054836600461322a565b611116565b61046461139e565b34801561056157600080fd5b506104646114b7565b34801561057657600080fd5b506104646105853660046131a2565b6114f1565b34801561059657600080fd5b506105aa6105a536600461326c565b61150c565b6040516103bd9190613287565b3480156105c357600080fd5b506104366105d236600461306e565b6115ae565b3480156105e357600080fd5b506104646105f2366004613159565b611641565b34801561060357600080fd5b5061046461061236600461326c565b6116cc565b34801561062357600080fd5b50600a5460ff166103b1565b34801561063b57600080fd5b5061046461064a36600461306e565b61171d565b34801561065b57600080fd5b5061040861066a36600461306e565b611752565b34801561067b57600080fd5b506103db6117c9565b34801561069057600080fd5b50610408611857565b3480156106a557600080fd5b506104366106b436600461326c565b61186a565b3480156106c557600080fd5b506104646118f1565b3480156106da57600080fd5b5061043660175481565b3480156106f057600080fd5b506104646106ff3660046132dc565b61192b565b34801561071057600080fd5b5061046461071f36600461306e565b611a8b565b34801561073057600080fd5b50610464611ac0565b34801561074557600080fd5b50610464611bc2565b34801561075a57600080fd5b50600a5461010090046001600160a01b0316610408565b34801561077d57600080fd5b506103db611bfa565b34801561079257600080fd5b506012546103b190610100900460ff1681565b3480156107b157600080fd5b506104646107c03660046132f7565b611c09565b3480156107d157600080fd5b506104646107e0366004613333565b611c14565b3480156107f157600080fd5b506103b1610800366004613366565b611d56565b34801561081157600080fd5b506104646108203660046133b9565b611dea565b34801561083157600080fd5b5061046461084036600461326c565b611e22565b34801561085157600080fd5b5060195461085f9060ff1681565b6040516103bd919061344b565b34801561087857600080fd5b506012546103b19060ff1681565b34801561089257600080fd5b5061043660155481565b3480156108a857600080fd5b506103db611e76565b3480156108bd57600080fd5b506103db611e83565b3480156108d257600080fd5b506103db6108e136600461306e565b611e90565b3480156108f257600080fd5b506103b161090136600461326c565b60146020526000908152604090205460ff1681565b34801561092257600080fd5b50610464610931366004613473565b611f45565b34801561094257600080fd5b50610436612089565b34801561095757600080fd5b50610464610966366004613159565b612094565b34801561097757600080fd5b506104366120d7565b34801561098c57600080fd5b5061043660115481565b3480156109a257600080fd5b506104646120ef565b3480156109b757600080fd5b506103b16109c6366004613494565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a0057600080fd5b50610464610a0f36600461326c565b6121df565b348015610a2057600080fd5b50610464610a2f36600461326c565b61227d565b348015610a4057600080fd5b5061043660185481565b348015610a5657600080fd5b50601254610408906201000090046001600160a01b031681565b6000610a7b826122e0565b92915050565b606060008054610a90906134b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906134b0565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b915760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bb882611752565b9050806001600160a01b0316836001600160a01b03161415610c265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b88565b336001600160a01b0382161480610c425750610c4281336109c6565b610cb45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b88565b610cbe8383612305565b505050565b600a546001600160a01b03610100909104163314610cf35760405162461bcd60e51b8152600401610b88906134eb565b6000815111610d545760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b88565b601254610100900460ff1615610dac5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b88565b8051610dbf90600e906020840190612f37565b5050565b600a546001600160a01b03610100909104163314610df35760405162461bcd60e51b8152600401610b88906134eb565b601855565b610e023382612373565b610e1e5760405162461bcd60e51b8152600401610b8890613520565b610cbe83838361246a565b6002600b541415610e7c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b88565b6002600b55600a5460ff1615610ea45760405162461bcd60e51b8152600401610b8890613571565b600460195460ff166004811115610ebd57610ebd613435565b14610f0a5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b88565b3481601854610f1991906135b1565b14610f625760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b88565b60175481610f6f60085490565b610f7991906135d0565b1115610fd65760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b88565b60115481111561103b5760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b88565b60015b8181116110775761105733611052600c5490565b612611565b611065600c80546001019055565b8061106f816135e8565b91505061103e565b50506001600b55565b600061108b8361186a565b82106110ed5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b88565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b5414156111695760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b88565b6002600b55600a5460ff16156111915760405162461bcd60e51b8152600401610b8890613571565b600260195460ff1660048111156111aa576111aa613435565b146111f75760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b88565b34601854146112445760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b88565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112bd91906034016040516020818303038152906040528051906020012084848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061262b9050565b6113095760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b88565b3360009081526014602052604090205460ff16156113695760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b88565b336000818152601460205260409020805460ff1916600117905561139090611052600c5490565b611077600c80546001019055565b600a546001600160a01b036101009091041633146113ce5760405162461bcd60e51b8152600401610b88906134eb565b600047116114175760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b88565b6012546040516000916201000090046001600160a01b03169047908381818185875af1925050503d806000811461146a576040519150601f19603f3d011682016040523d82523d6000602084013e61146f565b606091505b50509050806114b45760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b88565b50565b600a546001600160a01b036101009091041633146114e75760405162461bcd60e51b8152600401610b88906134eb565b6114ef612641565b565b610cbe83838360405180602001604052806000815250611dea565b606060006115198361186a565b905060008167ffffffffffffffff811115611536576115366130cd565b60405190808252806020026020018201604052801561155f578160200160208202803683370190505b50905060005b828110156115a6576115778582611080565b82828151811061158957611589613603565b60209081029190910101528061159e816135e8565b915050611565565b509392505050565b60006115b960085490565b821061161c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b88565b6008828154811061162f5761162f613603565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146116715760405162461bcd60e51b8152600401610b88906134eb565b60125460ff16156116b95760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b88565b8051610dbf90600f906020840190612f37565b600a546001600160a01b036101009091041633146116fc5760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b03166000908152601460205260409020805460ff19169055565b600a546001600160a01b0361010090910416331461174d5760405162461bcd60e51b8152600401610b88906134eb565b601155565b6000818152600260205260408120546001600160a01b031680610a7b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b88565b600f80546117d6906134b0565b80601f0160208091040260200160405190810160405280929190818152602001828054611802906134b0565b801561184f5780601f106118245761010080835404028352916020019161184f565b820191906000526020600020905b81548152906001019060200180831161183257829003601f168201915b505050505081565b600061186561066a60085490565b905090565b60006001600160a01b0382166118d55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b88565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146119215760405162461bcd60e51b8152600401610b88906134eb565b6114ef60006126d4565b600a546001600160a01b0361010090910416331461195b5760405162461bcd60e51b8152600401610b88906134eb565b600360195460ff16600481111561197457611974613435565b146119c15760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b88565b6015546016546119d49060ff84166135d0565b1115611a365760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b88565b8060ff1660166000828254611a4b91906135d0565b90915550600190505b8160ff168111610dbf57611a6b33611052600c5490565b611a79600c80546001019055565b80611a83816135e8565b915050611a54565b600a546001600160a01b03610100909104163314611abb5760405162461bcd60e51b8152600401610b88906134eb565b600d55565b600a546001600160a01b03610100909104163314611af05760405162461bcd60e51b8152600401610b88906134eb565b6000600e8054611aff906134b0565b905011611b4e5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b88565b601254610100900460ff1615611bb15760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b88565b6012805461ff001916610100179055565b600a546001600160a01b03610100909104163314611bf25760405162461bcd60e51b8152600401610b88906134eb565b6114ef61272e565b606060018054610a90906134b0565b610dbf338383612786565b600a546001600160a01b03610100909104163314611c445760405162461bcd60e51b8152600401610b88906134eb565b600060195460ff166004811115611c5d57611c5d613435565b11611ca15760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b88565b6017548260ff16611cb160085490565b611cbb91906135d0565b1115611d1c5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b88565b60015b8260ff168111610cbe57611d3682611052600c5490565b611d44600c80546001019055565b80611d4e816135e8565b915050611d1f565b600d546040516bffffffffffffffffffffffff19606086901b166020820152600091611dd2916034016040516020818303038152906040528051906020012085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061262b9050565b15611ddf57506001611de3565b5060005b9392505050565b611df43383612373565b611e105760405162461bcd60e51b8152600401610b8890613520565b611e1c84848484612855565b50505050565b600a546001600160a01b03610100909104163314611e525760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b03166000908152601460205260409020805460ff19166001179055565b601080546117d6906134b0565b600e80546117d6906134b0565b6000818152600260205260409020546060906001600160a01b0316611f105760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b88565b600f611f1b83612888565b6010604051602001611f2f939291906136b3565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f755760405162461bcd60e51b8152600401610b88906134eb565b60125460ff610100909104161515600114611ff85760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b88565b600d546120625760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b88565b6019805482919060ff1916600183600481111561208157612081613435565b021790555050565b600061186560085490565b600a546001600160a01b036101009091041633146120c45760405162461bcd60e51b8152600401610b88906134eb565b8051610dbf906010906020840190612f37565b60006120e260085490565b60175461186591906136e6565b600a546001600160a01b0361010090910416331461211f5760405162461bcd60e51b8152600401610b88906134eb565b6000600f805461212e906134b0565b90501161217d5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b88565b60125460ff16156121d05760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b88565b6012805460ff19166001179055565b600a546001600160a01b0361010090910416331461220f5760405162461bcd60e51b8152600401610b88906134eb565b6001600160a01b0381166122745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b88565b6114b4816126d4565b600a546001600160a01b036101009091041633146122ad5760405162461bcd60e51b8152600401610b88906134eb565b601280546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a7b5750610a7b82612986565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061233a82611752565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123ec5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b88565b60006123f783611752565b9050806001600160a01b0316846001600160a01b031614806124325750836001600160a01b031661242784610b13565b6001600160a01b0316145b8061246257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661247d82611752565b6001600160a01b0316146124e15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b88565b6001600160a01b0382166125435760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b88565b61254e8383836129d6565b612559600082612305565b6001600160a01b03831660009081526003602052604081208054600192906125829084906136e6565b90915550506001600160a01b03821660009081526003602052604081208054600192906125b09084906135d0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610dbf828260405180602001604052806000815250612a04565b6000826126388584612a37565b14949350505050565b600a5460ff1661268a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b88565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127515760405162461bcd60e51b8152600401610b8890613571565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126b73390565b816001600160a01b0316836001600160a01b031614156127e85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b88565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61286084848461246a565b61286c84848484612aa3565b611e1c5760405162461bcd60e51b8152600401610b88906136fd565b6060816128ac5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128d657806128c0816135e8565b91506128cf9050600a83613765565b91506128b0565b60008167ffffffffffffffff8111156128f1576128f16130cd565b6040519080825280601f01601f19166020018201604052801561291b576020820181803683370190505b5090505b8415612462576129306001836136e6565b915061293d600a86613779565b6129489060306135d0565b60f81b81838151811061295d5761295d613603565b60200101906001600160f81b031916908160001a90535061297f600a86613765565b945061291f565b60006001600160e01b031982166380ac58cd60e01b14806129b757506001600160e01b03198216635b5e139f60e01b145b80610a7b57506301ffc9a760e01b6001600160e01b0319831614610a7b565b600a5460ff16156129f95760405162461bcd60e51b8152600401610b8890613571565b610cbe838383612ba1565b612a0e8383612c59565b612a1b6000848484612aa3565b610cbe5760405162461bcd60e51b8152600401610b88906136fd565b600081815b84518110156115a6576000858281518110612a5957612a59613603565b60200260200101519050808311612a7f5760008381526020829052604090209250612a90565b600081815260208490526040902092505b5080612a9b816135e8565b915050612a3c565b60006001600160a01b0384163b15612b9657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612ae790339089908890889060040161378d565b6020604051808303816000875af1925050508015612b22575060408051601f3d908101601f19168201909252612b1f918101906137ca565b60015b612b7c573d808015612b50576040519150601f19603f3d011682016040523d82523d6000602084013e612b55565b606091505b508051612b745760405162461bcd60e51b8152600401610b88906136fd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612462565b506001949350505050565b6001600160a01b038316612bfc57612bf781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c1f565b816001600160a01b0316836001600160a01b031614612c1f57612c1f8382612da7565b6001600160a01b038216612c3657610cbe81612e44565b826001600160a01b0316826001600160a01b031614610cbe57610cbe8282612ef3565b6001600160a01b038216612caf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b88565b6000818152600260205260409020546001600160a01b031615612d145760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b88565b612d20600083836129d6565b6001600160a01b0382166000908152600360205260408120805460019290612d499084906135d0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612db48461186a565b612dbe91906136e6565b600083815260076020526040902054909150808214612e11576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612e56906001906136e6565b60008381526009602052604081205460088054939450909284908110612e7e57612e7e613603565b906000526020600020015490508060088381548110612e9f57612e9f613603565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612ed757612ed76137e7565b6001900381819060005260206000200160009055905550505050565b6000612efe8361186a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f43906134b0565b90600052602060002090601f016020900481019282612f655760008555612fab565b82601f10612f7e57805160ff1916838001178555612fab565b82800160010185558215612fab579182015b82811115612fab578251825591602001919060010190612f90565b50612fb7929150612fbb565b5090565b5b80821115612fb75760008155600101612fbc565b6001600160e01b0319811681146114b457600080fd5b600060208284031215612ff857600080fd5b8135611de381612fd0565b60005b8381101561301e578181015183820152602001613006565b83811115611e1c5750506000910152565b60008151808452613047816020860160208601613003565b601f01601f19169290920160200192915050565b602081526000611de3602083018461302f565b60006020828403121561308057600080fd5b5035919050565b80356001600160a01b038116811461309e57600080fd5b919050565b600080604083850312156130b657600080fd5b6130bf83613087565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156130fe576130fe6130cd565b604051601f8501601f19908116603f01168101908282118183101715613126576131266130cd565b8160405280935085815286868601111561313f57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561316b57600080fd5b813567ffffffffffffffff81111561318257600080fd5b8201601f8101841361319357600080fd5b612462848235602084016130e3565b6000806000606084860312156131b757600080fd5b6131c084613087565b92506131ce60208501613087565b9150604084013590509250925092565b60008083601f8401126131f057600080fd5b50813567ffffffffffffffff81111561320857600080fd5b6020830191508360208260051b850101111561322357600080fd5b9250929050565b6000806020838503121561323d57600080fd5b823567ffffffffffffffff81111561325457600080fd5b613260858286016131de565b90969095509350505050565b60006020828403121561327e57600080fd5b611de382613087565b6020808252825182820181905260009190848201906040850190845b818110156132bf578351835292840192918401916001016132a3565b50909695505050505050565b803560ff8116811461309e57600080fd5b6000602082840312156132ee57600080fd5b611de3826132cb565b6000806040838503121561330a57600080fd5b61331383613087565b91506020830135801515811461332857600080fd5b809150509250929050565b6000806040838503121561334657600080fd5b61334f836132cb565b915061335d60208401613087565b90509250929050565b60008060006040848603121561337b57600080fd5b61338484613087565b9250602084013567ffffffffffffffff8111156133a057600080fd5b6133ac868287016131de565b9497909650939450505050565b600080600080608085870312156133cf57600080fd5b6133d885613087565b93506133e660208601613087565b925060408501359150606085013567ffffffffffffffff81111561340957600080fd5b8501601f8101871361341a57600080fd5b613429878235602084016130e3565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016005831061346d57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561348557600080fd5b813560058110611de357600080fd5b600080604083850312156134a757600080fd5b61334f83613087565b600181811c908216806134c457607f821691505b602082108114156134e557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156135cb576135cb61359b565b500290565b600082198211156135e3576135e361359b565b500190565b60006000198214156135fc576135fc61359b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061363357607f831692505b602080841082141561365557634e487b7160e01b600052602260045260246000fd5b818015613669576001811461367a576136a7565b60ff198616895284890196506136a7565b60008881526020902060005b8681101561369f5781548b820152908501908301613686565b505084890196505b50505050505092915050565b60006136bf8286613619565b84516136cf818360208901613003565b6136db81830186613619565b979650505050505050565b6000828210156136f8576136f861359b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826137745761377461374f565b500490565b6000826137885761378861374f565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137c09083018461302f565b9695505050505050565b6000602082840312156137dc57600080fd5b8151611de381612fd0565b634e487b7160e01b600052603160045260246000fdfea264697066735822122079c892872283c8ae5f6b75100079d4bc693d91028b2ae8af1bfe2f1dba809a3764736f6c634300080b0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:20;;558:22;540:41;;528:2;513:18;8963:169:16;;;;;;;;2488:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;;;;;-1:-1:-1;3999:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;3999:217:3;1528:203:20;1815:28:16;;;;;;;;;;;;;;;;;;;1882:25:20;;;1870:2;1855:18;1815:28:16;1736:177:20;3537:401:3;;;;;;;;;;-1:-1:-1;3537:401:3;;;;;:::i;:::-;;:::i;:::-;;5983:291:16;;;;;;;;;;-1:-1:-1;5983:291:16;;;;;:::i;:::-;;:::i;1615:111:6:-;;;;;;;;;;-1:-1:-1;1702:10:6;:17;1615:111;;6675:100:16;;;;;;;;;;-1:-1:-1;6675:100:16;;;;;:::i;:::-;;:::i;4726:330:3:-;;;;;;;;;;-1:-1:-1;4726:330:3;;;;;:::i;:::-;;:::i;4219:668:16:-;;;;;;:::i;:::-;;:::i;1074:25::-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1604:30:16:-;;;;;;;;;;;;;;;;3026:639;;;;;;:::i;:::-;;:::i;6899:264::-;;;:::i;4982:65::-;;;;;;;;;;;;;:::i;5122:179:3:-;;;;;;;;;;-1:-1:-1;5122:179:3;;;;;:::i;:::-;;:::i;8085:353:16:-;;;;;;;;;;-1:-1:-1;8085:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5454:160:16:-;;;;;;;;;;-1:-1:-1;5454:160:16;;;;;:::i;:::-;;:::i;5239:99::-;;;;;;;;;;-1:-1:-1;5239:99:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;6781:112:16;;;;;;;;;;-1:-1:-1;6781:112:16;;;;;:::i;:::-;;:::i;2191:235:3:-;;;;;;;;;;-1:-1:-1;2191:235:3;;;;;:::i;:::-;;:::i;1139:26:16:-;;;;;;;;;;;;;:::i;7483:104::-;;;;;;;;;;;;;:::i;1929:205:3:-;;;;;;;;;;-1:-1:-1;1929:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1879:30:16:-;;;;;;;;;;;;;;;;3698:486;;;;;;;;;;-1:-1:-1;3698:486:16;;;;;:::i;:::-;;:::i;5344:104::-;;;;;;;;;;-1:-1:-1;5344:104:16;;;;;:::i;:::-;;:::i;6280:255::-;;;;;;;;;;;;;:::i;4915:61::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:3;;;;;;;;;;;;;:::i;1292:40:16:-;;;;;;;;;;-1:-1:-1;1292:40:16;;;;;;;;;;;4283:153:3;;;;;;;;;;-1:-1:-1;4283:153:3;;;;;:::i;:::-;;:::i;2534:454:16:-;;;;;;;;;;-1:-1:-1;2534:454:16;;;;;:::i;:::-;;:::i;8444:242::-;;;;;;;;;;-1:-1:-1;8444:242:16;;;;;:::i;:::-;;:::i;5367:320:3:-;;;;;;;;;;-1:-1:-1;5367:320:3;;;;;:::i;:::-;;:::i;5098:97:16:-;;;;;;;;;;-1:-1:-1;5098:97:16;;;;;:::i;:::-;;:::i;1970:18::-;;;;;;;;;;-1:-1:-1;1970:18:16;;;;;;;;;;;;;;;:::i;1252:34::-;;;;;;;;;;-1:-1:-1;1252:34:16;;;;;;;;1754:29;;;;;;;;;;;;;;;;1171:37;;;;;;;;;;;;;:::i;1105:28::-;;;;;;;;;;;;;:::i;7690:267::-;;;;;;;;;;-1:-1:-1;7690:267:16;;;;;:::i;:::-;;:::i;1663:39::-;;;;;;;;;;-1:-1:-1;1663:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;7169:277;;;;;;;;;;-1:-1:-1;7169:277:16;;;;;:::i;:::-;;:::i;7593:91::-;;;;;;;;;;;;;:::i;5849:128::-;;;;;;;;;;-1:-1:-1;5849:128:16;;;;;:::i;:::-;;:::i;7963:112::-;;;;;;;;;;;;;:::i;1214:27::-;;;;;;;;;;;;;;;;5625:218;;;;;;;;;;;;;:::i;4502:162:3:-;;;;;;;;;;-1:-1:-1;4502:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6541:128:16:-;;;;;;;;;;-1:-1:-1;6541:128:16;;;;;:::i;:::-;;:::i;1924:37::-;;;;;;;;;;;;;;;;1339:76;;;;;;;;;;-1:-1:-1;1339:76:16;;;;;;;-1:-1:-1;;;;;1339:76:16;;;8963:169;9066:4;9089:36;9113:11;9089:23;:36::i;:::-;9082:43;8963:169;-1:-1:-1;;8963:169:16:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;4094:73;;;;-1:-1:-1;;;4094:73:3;;9665:2:20;4094:73:3;;;9647:21:20;9704:2;9684:18;;;9677:30;9743:34;9723:18;;;9716:62;-1:-1:-1;;;9794:18:20;;;9787:42;9846:19;;4094:73:3;;;;;;;;;-1:-1:-1;4185:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:3;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:3;:2;-1:-1:-1;;;;;3674:11:3;;;3666:57;;;;-1:-1:-1;;;3666:57:3;;10078:2:20;3666:57:3;;;10060:21:20;10117:2;10097:18;;;10090:30;10156:34;10136:18;;;10129:62;-1:-1:-1;;;10207:18:20;;;10200:31;10248:19;;3666:57:3;9876:397:20;3666:57:3;719:10:10;-1:-1:-1;;;;;3755:21:3;;;;:62;;-1:-1:-1;3780:37:3;3797:5;719:10:10;4502:162:3;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:3;;10480:2:20;3734:165:3;;;10462:21:20;10519:2;10499:18;;;10492:30;10558:34;10538:18;;;10531:62;10629:26;10609:18;;;10602:54;10673:19;;3734:165:3;10278:420:20;3734:165:3;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;5983:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6110:1:16::1;6084:15;6078:29;:33;6070:85;;;::::0;-1:-1:-1;;;6070:85:16;;11266:2:20;6070:85:16::1;::::0;::::1;11248:21:20::0;11305:2;11285:18;;;11278:30;11344:34;11324:18;;;11317:62;-1:-1:-1;;;11395:18:20;;;11388:37;11442:19;;6070:85:16::1;11064:403:20::0;6070:85:16::1;6174:20;::::0;::::1;::::0;::::1;;;6173:21;6165:60;;;::::0;-1:-1:-1;;;6165:60:16;;11674:2:20;6165:60:16::1;::::0;::::1;11656:21:20::0;11713:2;11693:18;;;11686:30;11752:28;11732:18;;;11725:56;11798:18;;6165:60:16::1;11472:350:20::0;6165:60:16::1;6235:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;5983:291:::0;:::o;6675:100::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6746:9:16::1;:22:::0;6675:100::o;4726:330:3:-;4915:41;719:10:10;4948:7:3;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:3;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;4219:668:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12447:2:20;2317:63:2;;;12429:21:20;12486:2;12466:18;;;12459:30;12525:33;12505:18;;;12498:61;12576:18;;2317:63:2;12245:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;4385:16:16::2;4376:5;::::0;::::2;;:25;::::0;::::2;;;;;;:::i;:::-;;4368:64;;;::::0;-1:-1:-1;;;4368:64:16;;13152:2:20;4368:64:16::2;::::0;::::2;13134:21:20::0;13191:2;13171:18;;;13164:30;13230:28;13210:18;;;13203:56;13276:18;;4368:64:16::2;12950:350:20::0;4368:64:16::2;4476:9;4462:10;4450:9;;:22;;;;:::i;:::-;:35;4442:73;;;::::0;-1:-1:-1;;;4442:73:16;;13812:2:20;4442:73:16::2;::::0;::::2;13794:21:20::0;13851:2;13831:18;;;13824:30;-1:-1:-1;;;13870:18:20;;;13863:55;13935:18;;4442:73:16::2;13610:349:20::0;4442:73:16::2;4564:15;;4550:10;4533:13;1702:10:6::0;:17;;1615:111;4533:13:16::2;:27;;;;:::i;:::-;:46;;4525:97;;;::::0;-1:-1:-1;;;4525:97:16;;14299:2:20;4525:97:16::2;::::0;::::2;14281:21:20::0;14338:2;14318:18;;;14311:30;14377:34;14357:18;;;14350:62;-1:-1:-1;;;14428:18:20;;;14421:36;14474:19;;4525:97:16::2;14097:402:20::0;4525:97:16::2;4654:12;;4640:10;:26;;4632:81;;;::::0;-1:-1:-1;;;4632:81:16;;14706:2:20;4632:81:16::2;::::0;::::2;14688:21:20::0;14745:2;14725:18;;;14718:30;14784:34;14764:18;;;14757:62;-1:-1:-1;;;14835:18:20;;;14828:40;14885:19;;4632:81:16::2;14504:406:20::0;4632:81:16::2;4742:1;4725:156;4750:10;4745:1;:15;4725:156;;4781:48;4791:10;4803:25;:15;918:14:11::0;;827:112;4803:25:16::2;4781:9;:48::i;:::-;4843:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4843:27:16::2;4762:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4725:156;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;4219:668:16:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;15257:2:20;1407:87:6;;;15239:21:20;15296:2;15276:18;;;15269:30;15335:34;15315:18;;;15308:62;-1:-1:-1;;;15386:18:20;;;15379:41;15437:19;;1407:87:6;15055:407:20;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3026:639:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12447:2:20;2317:63:2;;;12429:21:20;12486:2;12466:18;;;12459:30;12525:33;12505:18;;;12498:61;12576:18;;2317:63:2;12245:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;3206:15:16::2;3197:5;::::0;::::2;;:24;::::0;::::2;;;;;;:::i;:::-;;3189:66;;;::::0;-1:-1:-1;;;3189:66:16;;15669:2:20;3189:66:16::2;::::0;::::2;15651:21:20::0;15708:2;15688:18;;;15681:30;15747:31;15727:18;;;15720:59;15796:18;;3189:66:16::2;15467:353:20::0;3189:66:16::2;3286:9;3273;;:22;3265:60;;;::::0;-1:-1:-1;;;3265:60:16;;13812:2:20;3265:60:16::2;::::0;::::2;13794:21:20::0;13851:2;13831:18;;;13824:30;-1:-1:-1;;;13870:18:20;;;13863:55;13935:18;;3265:60:16::2;13610:349:20::0;3265:60:16::2;3362:10;::::0;3384:28:::2;::::0;-1:-1:-1;;3401:10:16::2;15974:2:20::0;15970:15;15966:53;3384:28:16::2;::::0;::::2;15954:66:20::0;3343:71:16::2;::::0;3362:10;16036:12:20;;3384:28:16::2;;;;;;;;;;;;3374:39;;;;;;3343:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;3343:18:16;;:71;;-1:-1:-1;;3343:18:16::2;:71:::0;-1:-1:-1;3343:71:16:i:2;:::-;3335:109;;;::::0;-1:-1:-1;;;3335:109:16;;16261:2:20;3335:109:16::2;::::0;::::2;16243:21:20::0;16300:2;16280:18;;;16273:30;16339:27;16319:18;;;16312:55;16384:18;;3335:109:16::2;16059:349:20::0;3335:109:16::2;3470:10;3462:19;::::0;;;:7:::2;:19;::::0;;;;;::::2;;:28;3454:72;;;::::0;-1:-1:-1;;;3454:72:16;;16615:2:20;3454:72:16::2;::::0;::::2;16597:21:20::0;16654:2;16634:18;;;16627:30;16693:33;16673:18;;;16666:61;16744:18;;3454:72:16::2;16413:355:20::0;3454:72:16::2;3545:10;3537:19;::::0;;;:7:::2;:19;::::0;;;;:26;;-1:-1:-1;;3537:26:16::2;3559:4;3537:26;::::0;;3573:48:::2;::::0;3595:25:::2;:15;918:14:11::0;;827:112;3573:48:16::2;3631:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;6899:264:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6988:1:16::1;6964:21;:25;6956:60;;;::::0;-1:-1:-1;;;6956:60:16;;16975:2:20;6956:60:16::1;::::0;::::1;16957:21:20::0;17014:2;16994:18;;;16987:30;-1:-1:-1;;;17033:18:20;;;17026:52;17095:18;;6956:60:16::1;16773:346:20::0;6956:60:16::1;7053:16;::::0;7045:64:::1;::::0;7027:12:::1;::::0;7053:16;;::::1;-1:-1:-1::0;;;;;7053:16:16::1;::::0;7083:21:::1;::::0;7027:12;7045:64;7027:12;7045:64;7083:21;7053:16;7045:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7026:83;;;7127:7;7119:37;;;::::0;-1:-1:-1;;;7119:37:16;;17536:2:20;7119:37:16::1;::::0;::::1;17518:21:20::0;17575:2;17555:18;;;17548:30;-1:-1:-1;;;17594:18:20;;;17587:47;17651:18;;7119:37:16::1;17334:341:20::0;7119:37:16::1;6946:217;6899:264::o:0;4982:65::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5030:10:16::1;:8;:10::i;:::-;4982:65::o:0;5122:179:3:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;8085:353:16:-;8146:16;8174:23;8200:16;8210:5;8200:9;:16::i;:::-;8174:42;;8226:26;8269:15;8255:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8255:30:16;;8226:59;;8300:9;8295:111;8315:15;8311:1;:19;8295:111;;;8366:29;8386:5;8393:1;8366:19;:29::i;:::-;8351:9;8361:1;8351:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8332:3;;;;:::i;:::-;;;;8295:111;;;-1:-1:-1;8422:9:16;8085:353;-1:-1:-1;;;8085:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;18014:2:20;1892:95:6;;;17996:21:20;18053:2;18033:18;;;18026:30;18092:34;18072:18;;;18065:62;-1:-1:-1;;;18143:18:20;;;18136:42;18195:19;;1892:95:6;17812:408:20;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5454:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5539:14:16::1;::::0;::::1;;5538:15;5530:46;;;::::0;-1:-1:-1;;;5530:46:16;;18427:2:20;5530:46:16::1;::::0;::::1;18409:21:20::0;18466:2;18446:18;;;18439:30;-1:-1:-1;;;18485:18:20;;;18478:48;18543:18;;5530:46:16::1;18225:342:20::0;5530:46:16::1;5586:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;5239:99::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5305:18:16::1;5326:5;5305:18:::0;;;:7:::1;:18;::::0;;;;:26;;-1:-1:-1;;5305:26:16::1;::::0;;5239:99::o;6781:112::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6858:12:16::1;:28:::0;6781:112::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:3;;18774:2:20;2324:73:3;;;18756:21:20;18813:2;18793:18;;;18786:30;18852:34;18832:18;;;18825:62;-1:-1:-1;;;18903:18:20;;;18896:39;18952:19;;2324:73:3;18572:405:20;1139:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7483:104::-;7533:7;7558:22;7566:13;1702:10:6;:17;;1615:111;7558:22:16;7551:29;;7483:104;:::o;1929:205:3:-;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;19184:2:20;2020:74:3;;;19166:21:20;19223:2;19203:18;;;19196:30;19262:34;19242:18;;;19235:62;-1:-1:-1;;;19313:18:20;;;19306:40;19363:19;;2020:74:3;18982:406:20;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;3698:486:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3817:14:16::1;3808:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3800:60;;;::::0;-1:-1:-1;;;3800:60:16;;19595:2:20;3800:60:16::1;::::0;::::1;19577:21:20::0;19634:2;19614:18;;;19607:30;19673:26;19653:18;;;19646:54;19717:18;;3800:60:16::1;19393:348:20::0;3800:60:16::1;3908:14;::::0;3891:13:::1;::::0;3878:26:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:44;;3870:100;;;::::0;-1:-1:-1;;;3870:100:16;;19948:2:20;3870:100:16::1;::::0;::::1;19930:21:20::0;19987:2;19967:18;;;19960:30;20026:34;20006:18;;;19999:62;-1:-1:-1;;;20077:18:20;;;20070:41;20128:19;;3870:100:16::1;19746:407:20::0;3870:100:16::1;4002:10;3985:27;;:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4039:1:16::1;::::0;-1:-1:-1;4022:156:16::1;4047:10;4042:15;;:1;:15;4022:156;;4078:48;4088:10;4100:25;:15;918:14:11::0;;827:112;4078:48:16::1;4140:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4140:27:16::1;4059:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4022:156;;5344:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5417:10:16::1;:24:::0;5344:104::o;6280:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6380:1:16::1;6355:14;6349:28;;;;;:::i;:::-;;;:32;6341:72;;;::::0;-1:-1:-1;;;6341:72:16;;20360:2:20;6341:72:16::1;::::0;::::1;20342:21:20::0;20399:2;20379:18;;;20372:30;20438:29;20418:18;;;20411:57;20485:18;;6341:72:16::1;20158:351:20::0;6341:72:16::1;6432:20;::::0;::::1;::::0;::::1;;;6431:21;6423:68;;;::::0;-1:-1:-1;;;6423:68:16;;20716:2:20;6423:68:16::1;::::0;::::1;20698:21:20::0;20755:2;20735:18;;;20728:30;20794:34;20774:18;;;20767:62;-1:-1:-1;;;20845:18:20;;;20838:32;20887:19;;6423:68:16::1;20514:398:20::0;6423:68:16::1;6501:20;:27:::0;;-1:-1:-1;;6501:27:16::1;;;::::0;;6280:255::o;4915:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4961:8:16::1;:6;:8::i;2650:102:3:-:0;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:10;4410:8:3;4420;4377:18;:52::i;2534:454:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2678:10:16::1;2670:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;2662:51;;;::::0;-1:-1:-1;;;2662:51:16;;21119:2:20;2662:51:16::1;::::0;::::1;21101:21:20::0;21158:2;21138:18;;;21131:30;-1:-1:-1;;;21177:18:20;;;21170:50;21237:18;;2662:51:16::1;20917:344:20::0;2662:51:16::1;2762:15;;2748:10;2731:27;;:13;1702:10:6::0;:17;;1615:111;2731:13:16::1;:27;;;;:::i;:::-;:46;;2723:101;;;::::0;-1:-1:-1;;;2723:101:16;;21468:2:20;2723:101:16::1;::::0;::::1;21450:21:20::0;21507:2;21487:18;;;21480:30;21546:34;21526:18;;;21519:62;-1:-1:-1;;;21597:18:20;;;21590:40;21647:19;;2723:101:16::1;21266:406:20::0;2723:101:16::1;2851:1;2834:148;2859:10;2854:15;;:1;:15;2834:148;;2890:40;2900:2;2904:25;:15;918:14:11::0;;827:112;2890:40:16::1;2944:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2944:27:16::1;2871:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2834:148;;8444:242:::0;8571:10;;8593:25;;-1:-1:-1;;15974:2:20;15970:15;;;15966:53;8593:25:16;;;15954:66:20;8532:4:16;;8552:68;;16036:12:20;;8593:25:16;;;;;;;;;;;;8583:36;;;;;;8552:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8552:18:16;;:68;;-1:-1:-1;;8552:18:16;:68;-1:-1:-1;8552:68:16:i;:::-;8548:110;;;-1:-1:-1;8643:4:16;8636:11;;8548:110;-1:-1:-1;8674:5:16;8444:242;;;;;;:::o;5367:320:3:-;5536:41;719:10:10;5569:7:3;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:3;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;5098:97:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5163:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5163:25:16::1;5184:4;5163:25;::::0;;5098:97::o;1171:37::-;;;;;;;:::i;1105:28::-;;;;;;;:::i;7690:267::-;7224:4:3;7247:16;;;:7;:16;;;;;;7763:13:16;;-1:-1:-1;;;;;7247:16:3;7788:77:16;;;;-1:-1:-1;;;7788:77:16;;21879:2:20;7788:77:16;;;21861:21:20;21918:2;21898:18;;;21891:30;21957:34;21937:18;;;21930:62;-1:-1:-1;;;22008:18:20;;;22001:46;22064:19;;7788:77:16;21677:412:20;7788:77:16;7906:7;7915:18;:7;:16;:18::i;:::-;7935:13;7889:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7875:75;;7690:267;;;:::o;7169:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7238:20:16::1;::::0;::::1;;::::0;;::::1;;:28;;:20;:28;7230:97;;;::::0;-1:-1:-1;;;7230:97:16;;23861:2:20;7230:97:16::1;::::0;::::1;23843:21:20::0;23900:2;23880:18;;;23873:30;23939:34;23919:18;;;23912:62;24010:26;23990:18;;;23983:54;24054:19;;7230:97:16::1;23659:420:20::0;7230:97:16::1;7345:10;::::0;7337:78:::1;;;::::0;-1:-1:-1;;;7337:78:16;;24286:2:20;7337:78:16::1;::::0;::::1;24268:21:20::0;24325:2;24305:18;;;24298:30;24364:34;24344:18;;;24337:62;-1:-1:-1;;;24415:18:20;;;24408:48;24473:19;;7337:78:16::1;24084:414:20::0;7337:78:16::1;7425:5;:14:::0;;7433:6;;7425:5;-1:-1:-1;;7425:14:16::1;::::0;7433:6;7425:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7169:277:::0;:::o;7593:91::-;7638:7;7663:13;1702:10:6;:17;;1615:111;5849:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5937:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;7963:112::-:0;8011:7;8055:13;1702:10:6;:17;;1615:111;8055:13:16;8037:15;;:31;;;;:::i;5625:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5711:1:16::1;5693:7;5687:21;;;;;:::i;:::-;;;:25;5679:62;;;::::0;-1:-1:-1;;;5679:62:16;;24835:2:20;5679:62:16::1;::::0;::::1;24817:21:20::0;24874:2;24854:18;;;24847:30;24913:26;24893:18;;;24886:54;24957:18;;5679:62:16::1;24633:348:20::0;5679:62:16::1;5760:14;::::0;::::1;;5759:15;5751:54;;;::::0;-1:-1:-1;;;5751:54:16;;25188:2:20;5751:54:16::1;::::0;::::1;25170:21:20::0;25227:2;25207:18;;;25200:30;25266:28;25246:18;;;25239:56;25312:18;;5751:54:16::1;24986:350:20::0;5751:54:16::1;5815:14;:21:::0;;-1:-1:-1;;5815:21:16::1;5832:4;5815:21;::::0;;5625:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25543:2:20;1998:73:0::1;::::0;::::1;25525:21:20::0;25582:2;25562:18;;;25555:30;25621:34;25601:18;;;25594:62;-1:-1:-1;;;25672:18:20;;;25665:36;25718:19;;1998:73:0::1;25341:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;6541:128:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6626:16:16::1;:36:::0;;-1:-1:-1;;;;;6626:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6626:36:16;;::::1;::::0;;;::::1;::::0;;6541:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;11168:171:3:-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:3;-1:-1:-1;;;;;11242:29:3;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:3;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;7551:73;;;;-1:-1:-1;;;7551:73:3;;25950:2:20;7551:73:3;;;25932:21:20;25989:2;25969:18;;;25962:30;26028:34;26008:18;;;26001:62;-1:-1:-1;;;26079:18:20;;;26072:42;26131:19;;7551:73:3;25748:408:20;7551:73:3;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:3;:7;-1:-1:-1;;;;;7691:16:3;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:3;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:3;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;7683:96;7442:344;-1:-1:-1;;;;7442:344:3:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:3;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:3;;10571:81;;;;-1:-1:-1;;;10571:81:3;;26363:2:20;10571:81:3;;;26345:21:20;26402:2;26382:18;;;26375:30;26441:34;26421:18;;;26414:62;-1:-1:-1;;;26492:18:20;;;26485:35;26537:19;;10571:81:3;26161:401:20;10571:81:3;-1:-1:-1;;;;;10670:16:3;;10662:65;;;;-1:-1:-1;;;10662:65:3;;26769:2:20;10662:65:3;;;26751:21:20;26808:2;26788:18;;;26781:30;26847:34;26827:18;;;26820:62;-1:-1:-1;;;26898:18:20;;;26891:34;26942:19;;10662:65:3;26567:400:20;10662:65:3;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:3;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:3;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:3;-1:-1:-1;;;;;10937:21:3;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;8116:108::-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;862:184:13:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:13:o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;27174:2:20;1669:41:1;;;27156:21:20;27213:2;27193:18;;;27186:30;-1:-1:-1;;;27232:18:20;;;27225:50;27292:18;;1669:41:1;26972:344:20;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11474:307:3;11624:8;-1:-1:-1;;;;;11615:17:3;:5;-1:-1:-1;;;;;11615:17:3;;;11607:55;;;;-1:-1:-1;;;11607:55:3;;27523:2:20;11607:55:3;;;27505:21:20;27562:2;27542:18;;;27535:30;27601:27;27581:18;;;27574:55;27646:18;;11607:55:3;27321:349:20;11607:55:3;-1:-1:-1;;;;;11672:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:3;;;;;;;;;;11733:41;;540::20;;;11733::3;;513:18:20;11733:41:3;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1570:300:3;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:3;829:155:14;8696:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8837:45:16::1;8864:4;8870:2;8874:7;8837:26;:45::i;8445:311:3:-:0;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:3;;;;;;;:::i;1398:662:13:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:13;;;;:::i;:::-;;;;1537:488;;12334:778:3;12484:4;-1:-1:-1;;;;;12504:13:3;;1465:19:9;:23;12500:606:3;;12539:72;;-1:-1:-1;;;12539:72:3;;-1:-1:-1;;;;;12539:36:3;;;;;:72;;719:10:10;;12590:4:3;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:3;;;;;;;;-1:-1:-1;;12539:72:3;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:3;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:3;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:3;-1:-1:-1;;;12661:51:3;;-1:-1:-1;12654:58:3;;12500:606;-1:-1:-1;13091:4:3;12334:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9078:427:3:-;-1:-1:-1;;;;;9157:16:3;;9149:61;;;;-1:-1:-1;;;9149:61:3;;29418:2:20;9149:61:3;;;29400:21:20;;;29437:18;;;29430:30;29496:34;29476:18;;;29469:62;29548:18;;9149:61:3;29216:356:20;9149:61:3;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;:30;9220:58;;;;-1:-1:-1;;;9220:58:3;;29779:2:20;9220:58:3;;;29761:21:20;29818:2;29798:18;;;29791:30;29857;29837:18;;;29830:58;29905:18;;9220:58:3;29577:352:20;9220:58:3;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:3;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:3;-1:-1:-1;;;;;9373:21:3;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;6235:32:16::1;5983:291:::0;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:20;-1:-1:-1;;;;;;88:32:20;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:20;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:20;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:20:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:20;;1343:180;-1:-1:-1;1343:180:20:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:20;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:20:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:20;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:20;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:367::-;4158:8;4168:6;4222:3;4215:4;4207:6;4203:17;4199:27;4189:55;;4240:1;4237;4230:12;4189:55;-1:-1:-1;4263:20:20;;4306:18;4295:30;;4292:50;;;4338:1;4335;4328:12;4292:50;4375:4;4367:6;4363:17;4351:29;;4435:3;4428:4;4418:6;4415:1;4411:14;4403:6;4399:27;4395:38;4392:47;4389:67;;;4452:1;4449;4442:12;4389:67;4095:367;;;;;:::o;4467:437::-;4553:6;4561;4614:2;4602:9;4593:7;4589:23;4585:32;4582:52;;;4630:1;4627;4620:12;4582:52;4670:9;4657:23;4703:18;4695:6;4692:30;4689:50;;;4735:1;4732;4725:12;4689:50;4774:70;4836:7;4827:6;4816:9;4812:22;4774:70;:::i;:::-;4863:8;;4748:96;;-1:-1:-1;4467:437:20;-1:-1:-1;;;;4467:437:20:o;4909:186::-;4968:6;5021:2;5009:9;5000:7;4996:23;4992:32;4989:52;;;5037:1;5034;5027:12;4989:52;5060:29;5079:9;5060:29;:::i;5100:632::-;5271:2;5323:21;;;5393:13;;5296:18;;;5415:22;;;5242:4;;5271:2;5494:15;;;;5468:2;5453:18;;;5242:4;5537:169;5551:6;5548:1;5545:13;5537:169;;;5612:13;;5600:26;;5681:15;;;;5646:12;;;;5573:1;5566:9;5537:169;;;-1:-1:-1;5723:3:20;;5100:632;-1:-1:-1;;;;;;5100:632:20:o;5737:156::-;5803:20;;5863:4;5852:16;;5842:27;;5832:55;;5883:1;5880;5873:12;5898:182;5955:6;6008:2;5996:9;5987:7;5983:23;5979:32;5976:52;;;6024:1;6021;6014:12;5976:52;6047:27;6064:9;6047:27;:::i;6270:347::-;6335:6;6343;6396:2;6384:9;6375:7;6371:23;6367:32;6364:52;;;6412:1;6409;6402:12;6364:52;6435:29;6454:9;6435:29;:::i;:::-;6425:39;;6514:2;6503:9;6499:18;6486:32;6561:5;6554:13;6547:21;6540:5;6537:32;6527:60;;6583:1;6580;6573:12;6527:60;6606:5;6596:15;;;6270:347;;;;;:::o;6622:256::-;6688:6;6696;6749:2;6737:9;6728:7;6724:23;6720:32;6717:52;;;6765:1;6762;6755:12;6717:52;6788:27;6805:9;6788:27;:::i;:::-;6778:37;;6834:38;6868:2;6857:9;6853:18;6834:38;:::i;:::-;6824:48;;6622:256;;;;;:::o;6883:511::-;6978:6;6986;6994;7047:2;7035:9;7026:7;7022:23;7018:32;7015:52;;;7063:1;7060;7053:12;7015:52;7086:29;7105:9;7086:29;:::i;:::-;7076:39;;7166:2;7155:9;7151:18;7138:32;7193:18;7185:6;7182:30;7179:50;;;7225:1;7222;7215:12;7179:50;7264:70;7326:7;7317:6;7306:9;7302:22;7264:70;:::i;:::-;6883:511;;7353:8;;-1:-1:-1;7238:96:20;;-1:-1:-1;;;;6883:511:20:o;7399:667::-;7494:6;7502;7510;7518;7571:3;7559:9;7550:7;7546:23;7542:33;7539:53;;;7588:1;7585;7578:12;7539:53;7611:29;7630:9;7611:29;:::i;:::-;7601:39;;7659:38;7693:2;7682:9;7678:18;7659:38;:::i;:::-;7649:48;;7744:2;7733:9;7729:18;7716:32;7706:42;;7799:2;7788:9;7784:18;7771:32;7826:18;7818:6;7815:30;7812:50;;;7858:1;7855;7848:12;7812:50;7881:22;;7934:4;7926:13;;7922:27;-1:-1:-1;7912:55:20;;7963:1;7960;7953:12;7912:55;7986:74;8052:7;8047:2;8034:16;8029:2;8025;8021:11;7986:74;:::i;:::-;7976:84;;;7399:667;;;;;;;:::o;8071:127::-;8132:10;8127:3;8123:20;8120:1;8113:31;8163:4;8160:1;8153:15;8187:4;8184:1;8177:15;8203:336;8343:2;8328:18;;8376:1;8365:13;;8355:144;;8421:10;8416:3;8412:20;8409:1;8402:31;8456:4;8453:1;8446:15;8484:4;8481:1;8474:15;8355:144;8508:25;;;8203:336;:::o;8544:264::-;8611:6;8664:2;8652:9;8643:7;8639:23;8635:32;8632:52;;;8680:1;8677;8670:12;8632:52;8719:9;8706:23;8758:1;8751:5;8748:12;8738:40;;8774:1;8771;8764:12;8813:260;8881:6;8889;8942:2;8930:9;8921:7;8917:23;8913:32;8910:52;;;8958:1;8955;8948:12;8910:52;8981:29;9000:9;8981:29;:::i;9078:380::-;9157:1;9153:12;;;;9200;;;9221:61;;9275:4;9267:6;9263:17;9253:27;;9221:61;9328:2;9320:6;9317:14;9297:18;9294:38;9291:161;;;9374:10;9369:3;9365:20;9362:1;9355:31;9409:4;9406:1;9399:15;9437:4;9434:1;9427:15;9291:161;;9078:380;;;:::o;10703:356::-;10905:2;10887:21;;;10924:18;;;10917:30;10983:34;10978:2;10963:18;;10956:62;11050:2;11035:18;;10703:356::o;11827:413::-;12029:2;12011:21;;;12068:2;12048:18;;;12041:30;12107:34;12102:2;12087:18;;12080:62;-1:-1:-1;;;12173:2:20;12158:18;;12151:47;12230:3;12215:19;;11827:413::o;12605:340::-;12807:2;12789:21;;;12846:2;12826:18;;;12819:30;-1:-1:-1;;;12880:2:20;12865:18;;12858:46;12936:2;12921:18;;12605:340::o;13305:127::-;13366:10;13361:3;13357:20;13354:1;13347:31;13397:4;13394:1;13387:15;13421:4;13418:1;13411:15;13437:168;13477:7;13543:1;13539;13535:6;13531:14;13528:1;13525:21;13520:1;13513:9;13506:17;13502:45;13499:71;;;13550:18;;:::i;:::-;-1:-1:-1;13590:9:20;;13437:168::o;13964:128::-;14004:3;14035:1;14031:6;14028:1;14025:13;14022:39;;;14041:18;;:::i;:::-;-1:-1:-1;14077:9:20;;13964:128::o;14915:135::-;14954:3;-1:-1:-1;;14975:17:20;;14972:43;;;14995:18;;:::i;:::-;-1:-1:-1;15042:1:20;15031:13;;14915:135::o;17680:127::-;17741:10;17736:3;17732:20;17729:1;17722:31;17772:4;17769:1;17762:15;17796:4;17793:1;17786:15;22220:973;22305:12;;22270:3;;22360:1;22380:18;;;;22433;;;;22460:61;;22514:4;22506:6;22502:17;22492:27;;22460:61;22540:2;22588;22580:6;22577:14;22557:18;22554:38;22551:161;;;22634:10;22629:3;22625:20;22622:1;22615:31;22669:4;22666:1;22659:15;22697:4;22694:1;22687:15;22551:161;22728:18;22755:104;;;;22873:1;22868:319;;;;22721:466;;22755:104;-1:-1:-1;;22788:24:20;;22776:37;;22833:16;;;;-1:-1:-1;22755:104:20;;22868:319;22167:1;22160:14;;;22204:4;22191:18;;22962:1;22976:165;22990:6;22987:1;22984:13;22976:165;;;23068:14;;23055:11;;;23048:35;23111:16;;;;23005:10;;22976:165;;;22980:3;;23170:6;23165:3;23161:16;23154:23;;22721:466;;;;;;;22220:973;;;;:::o;23198:456::-;23419:3;23447:38;23481:3;23473:6;23447:38;:::i;:::-;23514:6;23508:13;23530:52;23575:6;23571:2;23564:4;23556:6;23552:17;23530:52;:::i;:::-;23598:50;23640:6;23636:2;23632:15;23624:6;23598:50;:::i;:::-;23591:57;23198:456;-1:-1:-1;;;;;;;23198:456:20:o;24503:125::-;24543:4;24571:1;24568;24565:8;24562:34;;;24576:18;;:::i;:::-;-1:-1:-1;24613:9:20;;24503:125::o;27675:414::-;27877:2;27859:21;;;27916:2;27896:18;;;27889:30;27955:34;27950:2;27935:18;;27928:62;-1:-1:-1;;;28021:2:20;28006:18;;27999:48;28079:3;28064:19;;27675:414::o;28094:127::-;28155:10;28150:3;28146:20;28143:1;28136:31;28186:4;28183:1;28176:15;28210:4;28207:1;28200:15;28226:120;28266:1;28292;28282:35;;28297:18;;:::i;:::-;-1:-1:-1;28331:9:20;;28226:120::o;28351:112::-;28383:1;28409;28399:35;;28414:18;;:::i;:::-;-1:-1:-1;28448:9:20;;28351:112::o;28468:489::-;-1:-1:-1;;;;;28737:15:20;;;28719:34;;28789:15;;28784:2;28769:18;;28762:43;28836:2;28821:18;;28814:34;;;28884:3;28879:2;28864:18;;28857:31;;;28662:4;;28905:46;;28931:19;;28923:6;28905:46;:::i;:::-;28897:54;28468:489;-1:-1:-1;;;;;;28468:489:20:o;28962:249::-;29031:6;29084:2;29072:9;29063:7;29059:23;29055:32;29052:52;;;29100:1;29097;29090:12;29052:52;29132:9;29126:16;29151:30;29175:5;29151:30;:::i;29934:127::-;29995:10;29990:3;29986:20;29983:1;29976:31;30026:4;30023:1;30016:15;30050:4;30047:1;30040:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, send, and interact with CRYPTIDS",
    "title": "CryptidToken NFT Contract",
    "version": 1
  },
  "offset": [
    710,
    9135
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B671780 GT PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE5F9866 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0xA14 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x96B JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x980 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x8B1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0xBB31B77B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xBB31B77B EQ PUSH2 0x825 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xB76A0DF4 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x25F JUMPI DUP1 PUSH4 0x6CBB8985 GT PUSH2 0x22E JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x438B6300 GT PUSH2 0x29B JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x57ED9E4E EQ PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1919FED7 GT PUSH2 0x32E JUMPI DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x308 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1919FED7 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x36A JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE6 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x30A3 JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x3159 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xE29 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x51F CALLDATASIZE PUSH1 0x4 PUSH2 0x30A3 JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x139E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x14B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0x14F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3287 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x5D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x5F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3159 JUMP JUMPDEST PUSH2 0x1641 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x16CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x66A CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x1752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x1857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x186A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x18F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x32DC JUMP JUMPDEST PUSH2 0x192B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x71F CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x1A8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x1AC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x1BC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1BFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F7 JUMP JUMPDEST PUSH2 0x1C09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3333 JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x1D56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x820 CALLDATASIZE PUSH1 0x4 PUSH2 0x33B9 JUMP JUMPDEST PUSH2 0x1DEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x840 CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x1E22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x19 SLOAD PUSH2 0x85F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x344B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x3B1 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1E76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1E83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x1E90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x901 CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x931 CALLDATASIZE PUSH1 0x4 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x1F45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x2089 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x966 CALLDATASIZE PUSH1 0x4 PUSH2 0x3159 JUMP JUMPDEST PUSH2 0x2094 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x20D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x20EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA0F CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x21DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA2F CALLDATASIZE PUSH1 0x4 PUSH2 0x326C JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x408 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0x22E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x34B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB09 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB09 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC42 JUMPI POP PUSH2 0xC42 DUP2 CALLER PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH2 0xCBE DUP4 DUP4 PUSH2 0x2305 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDBF SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH2 0xE02 CALLER DUP3 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3520 JUMP JUMPDEST PUSH2 0xCBE DUP4 DUP4 DUP4 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3571 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEBD PUSH2 0x3435 JUMP JUMPDEST EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST CALLVALUE DUP2 PUSH1 0x18 SLOAD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x35B1 JUMP JUMPDEST EQ PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 PUSH2 0xF6F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST GT ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x103B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0x1077 JUMPI PUSH2 0x1057 CALLER PUSH2 0x1052 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2611 JUMP JUMPDEST PUSH2 0x1065 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x106F DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x103E JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108B DUP4 PUSH2 0x186A JUMP JUMPDEST DUP3 LT PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1169 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3571 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11AA PUSH2 0x3435 JUMP JUMPDEST EQ PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST CALLVALUE PUSH1 0x18 SLOAD EQ PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12BD SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x262B SWAP1 POP JUMP JUMPDEST PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1390 SWAP1 PUSH2 0x1052 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1077 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2BB4BA34323930BBB6103330B4B632B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH2 0x14EF PUSH2 0x2641 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCBE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1519 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1536 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x155F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x1577 DUP6 DUP3 PUSH2 0x1080 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1589 JUMPI PUSH2 0x1589 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x159E DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1565 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x162F JUMPI PUSH2 0x162F PUSH2 0x3603 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDBF SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x174D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x17D6 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1802 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x184F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1824 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x184F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1832 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 PUSH2 0x66A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH2 0x14EF PUSH1 0x0 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x195B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1974 JUMPI PUSH2 0x1974 PUSH2 0x3435 JUMP JUMPDEST EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH2 0x19D4 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x35D0 JUMP JUMPDEST GT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x16 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A4B SWAP2 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xDBF JUMPI PUSH2 0x1A6B CALLER PUSH2 0x1052 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A79 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1A83 DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1ABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1AF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x1AFF SWAP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1B4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1BF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH2 0x14EF PUSH2 0x272E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xDBF CALLER DUP4 DUP4 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1C44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C5D JUMPI PUSH2 0x1C5D PUSH2 0x3435 JUMP JUMPDEST GT PUSH2 0x1CA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1CB1 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CBB SWAP2 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST GT ISZERO PUSH2 0x1D1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCBE JUMPI PUSH2 0x1D36 DUP3 PUSH2 0x1052 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D44 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1D4E DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1DD2 SWAP2 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x262B SWAP1 POP JUMP JUMPDEST ISZERO PUSH2 0x1DDF JUMPI POP PUSH1 0x1 PUSH2 0x1DE3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1DF4 CALLER DUP4 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0x1E10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3520 JUMP JUMPDEST PUSH2 0x1E1C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2855 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x17D6 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x17D6 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0xF PUSH2 0x1F1B DUP4 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1F75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2062 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x19 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2081 PUSH2 0x3435 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x20C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDBF SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E2 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x1865 SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x212E SWAP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x217D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x21D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x220F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA7B JUMPI POP PUSH2 0xA7B DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x233A DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F7 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2432 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2427 DUP5 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2462 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x247D DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x24E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x254E DUP4 DUP4 DUP4 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x2559 PUSH1 0x0 DUP3 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2582 SWAP1 DUP5 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x25B0 SWAP1 DUP5 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xDBF DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2638 DUP6 DUP5 PUSH2 0x2A37 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x268A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3571 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x26B7 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x27E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2860 DUP5 DUP5 DUP5 PUSH2 0x246A JUMP JUMPDEST PUSH2 0x286C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x1E1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x28AC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x28D6 JUMPI DUP1 PUSH2 0x28C0 DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CF SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28F1 JUMPI PUSH2 0x28F1 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x291B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2462 JUMPI PUSH2 0x2930 PUSH1 0x1 DUP4 PUSH2 0x36E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x293D PUSH1 0xA DUP7 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x2948 SWAP1 PUSH1 0x30 PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x295D JUMPI PUSH2 0x295D PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x297F PUSH1 0xA DUP7 PUSH2 0x3765 JUMP JUMPDEST SWAP5 POP PUSH2 0x291F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x29B7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA7B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA7B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x3571 JUMP JUMPDEST PUSH2 0xCBE DUP4 DUP4 DUP4 PUSH2 0x2BA1 JUMP JUMPDEST PUSH2 0x2A0E DUP4 DUP4 PUSH2 0x2C59 JUMP JUMPDEST PUSH2 0x2A1B PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x15A6 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A59 JUMPI PUSH2 0x2A59 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2A7F JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2A9B DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2B96 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2AE7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x378D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2B22 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2B1F SWAP2 DUP2 ADD SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B7C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2B74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP1 PUSH2 0x36FD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2462 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BFC JUMPI PUSH2 0x2BF7 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2C1F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C1F JUMPI PUSH2 0x2C1F DUP4 DUP3 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C36 JUMPI PUSH2 0xCBE DUP2 PUSH2 0x2E44 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCBE JUMPI PUSH2 0xCBE DUP3 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2D20 PUSH1 0x0 DUP4 DUP4 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2D49 SWAP1 DUP5 SWAP1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2DB4 DUP5 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x2DBE SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2E11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2E56 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2E7E JUMPI PUSH2 0x2E7E PUSH2 0x3603 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E9F JUMPI PUSH2 0x2E9F PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2ED7 JUMPI PUSH2 0x2ED7 PUSH2 0x37E7 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFE DUP4 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2F43 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2F65 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2FAB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2F7E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2FAB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2FAB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2FAB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F90 JUMP JUMPDEST POP PUSH2 0x2FB7 SWAP3 SWAP2 POP PUSH2 0x2FBB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2FB7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DE3 DUP2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x301E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3006 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E1C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3047 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1DE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x309E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30BF DUP4 PUSH2 0x3087 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x30FE JUMPI PUSH2 0x30FE PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3126 JUMPI PUSH2 0x3126 PUSH2 0x30CD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x313F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x316B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2462 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31C0 DUP5 PUSH2 0x3087 JUMP JUMPDEST SWAP3 POP PUSH2 0x31CE PUSH1 0x20 DUP6 ADD PUSH2 0x3087 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x31F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x323D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3260 DUP6 DUP3 DUP7 ADD PUSH2 0x31DE JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE3 DUP3 PUSH2 0x3087 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x32BF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32A3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x309E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE3 DUP3 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x330A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3313 DUP4 PUSH2 0x3087 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334F DUP4 PUSH2 0x32CB JUMP JUMPDEST SWAP2 POP PUSH2 0x335D PUSH1 0x20 DUP5 ADD PUSH2 0x3087 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x337B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3384 DUP5 PUSH2 0x3087 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33AC DUP7 DUP3 DUP8 ADD PUSH2 0x31DE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33D8 DUP6 PUSH2 0x3087 JUMP JUMPDEST SWAP4 POP PUSH2 0x33E6 PUSH1 0x20 DUP7 ADD PUSH2 0x3087 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x341A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3429 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x346D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x1DE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334F DUP4 PUSH2 0x3087 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x34C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x34E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x35CB JUMPI PUSH2 0x35CB PUSH2 0x359B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x35E3 JUMPI PUSH2 0x35E3 PUSH2 0x359B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x35FC JUMPI PUSH2 0x35FC PUSH2 0x359B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3633 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3655 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3669 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x367A JUMPI PUSH2 0x36A7 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x36A7 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x369F JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3686 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36BF DUP3 DUP7 PUSH2 0x3619 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x36CF DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x3003 JUMP JUMPDEST PUSH2 0x36DB DUP2 DUP4 ADD DUP7 PUSH2 0x3619 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36F8 JUMPI PUSH2 0x36F8 PUSH2 0x359B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3774 JUMPI PUSH2 0x3774 PUSH2 0x374F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3788 JUMPI PUSH2 0x3788 PUSH2 0x374F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x37C0 SWAP1 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DE3 DUP2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xC892872283C8AE5F6B75100079D4BC693D91028B2AE8AF1BFE2F SAR 0xBA DUP1 SWAP11 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38C"
    },
    "12": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "25": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "29": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "47": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9F4"
    },
    "73": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "80": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA14"
    },
    "84": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA34"
    },
    "95": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA4A"
    },
    "106": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "118": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x96B"
    },
    "122": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "129": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x980"
    },
    "133": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "140": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x996"
    },
    "144": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9AB"
    },
    "155": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "167": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "178": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E6"
    },
    "182": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "189": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x916"
    },
    "193": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "200": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x936"
    },
    "204": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "211": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94B"
    },
    "215": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89C"
    },
    "231": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B1"
    },
    "242": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C6"
    },
    "253": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "265": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "276": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "287": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x825"
    },
    "291": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "298": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x845"
    },
    "302": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "309": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86C"
    },
    "313": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "320": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x886"
    },
    "324": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "336": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A5"
    },
    "340": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "347": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C5"
    },
    "351": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB76A0DF4"
    },
    "358": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E5"
    },
    "362": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "369": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x805"
    },
    "373": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "374": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "376": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "378": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "385": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "396": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x739"
    },
    "400": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "407": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74E"
    },
    "411": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "418": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x771"
    },
    "422": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "424": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "429": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "430": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x786"
    },
    "433": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "436": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "437": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "445": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E4"
    },
    "449": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "456": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x704"
    },
    "460": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "467": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x724"
    },
    "471": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "472": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "474": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "476": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "483": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C1"
    },
    "487": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "494": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25F"
    },
    "498": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "505": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22E"
    },
    "509": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "516": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x684"
    },
    "520": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "527": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x699"
    },
    "531": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "538": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B9"
    },
    "542": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "544": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "549": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "550": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6CE"
    },
    "553": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "554": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "557": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "558": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "565": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x617"
    },
    "569": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x616CDB1E"
    },
    "576": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62F"
    },
    "580": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "587": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64F"
    },
    "591": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "598": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "599": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66F"
    },
    "602": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "603": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "605": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "606": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "607": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "614": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "618": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "625": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58A"
    },
    "629": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "636": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B7"
    },
    "640": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "647": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D7"
    },
    "651": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x57ED9E4E"
    },
    "658": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "659": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F7"
    },
    "662": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "663": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "665": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "667": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "674": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54D"
    },
    "678": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "685": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x555"
    },
    "689": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "696": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "697": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56A"
    },
    "700": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "701": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "703": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "704": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "705": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1919FED7"
    },
    "712": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32E"
    },
    "716": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "723": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x308"
    },
    "727": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "734": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4EE"
    },
    "738": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "745": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x504"
    },
    "749": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "756": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x524"
    },
    "760": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "767": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "768": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53A"
    },
    "771": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "772": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "774": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "775": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "776": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1919FED7"
    },
    "783": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49B"
    },
    "787": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "794": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BB"
    },
    "798": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2DB11544"
    },
    "805": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "806": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DB"
    },
    "809": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "810": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "812": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "813": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "814": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "821": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "GT",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36A"
    },
    "825": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "832": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "836": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "843": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x444"
    },
    "847": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "854": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x466"
    },
    "858": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "865": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "866": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x486"
    },
    "869": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "870": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "872": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "873": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "874": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "881": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x391"
    },
    "885": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "892": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "893": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C6"
    },
    "896": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "903": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "EQ",
      "path": "16"
    },
    "904": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "907": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "908": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "909": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "911": {
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "912": {
      "first_revert": true,
      "fn": null,
      "offset": [
        710,
        9135
      ],
      "op": "REVERT",
      "path": "16"
    },
    "913": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "914": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "915": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "916": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "917": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "920": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "921": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "923": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "924": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "REVERT",
      "path": "16"
    },
    "925": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "930": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AC"
    },
    "933": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "934": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "936": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FE6"
    },
    "939": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMP",
      "path": "16"
    },
    "940": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "941": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA70"
    },
    "944": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMP",
      "path": "16"
    },
    "945": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "946": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "948": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "949": {
      "op": "SWAP1"
    },
    "950": {
      "op": "ISZERO"
    },
    "951": {
      "op": "ISZERO"
    },
    "952": {
      "op": "DUP2"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "958": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "960": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "961": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "962": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "963": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "SUB",
      "path": "16"
    },
    "964": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "965": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "RETURN",
      "path": "16"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "970": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "976": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "REVERT",
      "path": "3"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "POP",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DB"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA81"
    },
    "986": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "987": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "995": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "996": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x305B"
    },
    "999": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1002": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1003": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1004": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1008": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x403"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306E"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1027": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB13"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "AND"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "1055": {
      "op": "JUMP"
    },
    "1056": {
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1060": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42C"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "POP",
      "path": "16"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1073": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1076": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1077": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1082": {
      "op": "SWAP1"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "1091": {
      "op": "JUMP"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1094": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1095": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30A3"
    },
    "1118": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1119": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1120": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBAD"
    },
    "1123": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1124": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1125": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "3"
    },
    "1126": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1128": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1129": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1130": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x472"
    },
    "1133": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1134": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1136": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1137": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1143": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x481"
    },
    "1146": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1147": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1149": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3159"
    },
    "1152": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1153": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1154": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCC3"
    },
    "1157": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1158": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1159": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1160": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1161": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1162": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x492"
    },
    "1165": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1166": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1168": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1169": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1170": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1174": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1175": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1178": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1179": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1181": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1182": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1183": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A7"
    },
    "1186": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1187": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1189": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1190": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1191": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1196": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1200": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1202": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306E"
    },
    "1205": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "i",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1206": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1207": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC3"
    },
    "1210": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "i",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C7"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D6"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A2"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF8"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1243": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1244": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1247": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E9"
    },
    "1250": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1251": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1253": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306E"
    },
    "1256": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1257": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1258": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE29"
    },
    "1261": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1262": {
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1263": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1264": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1265": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1266": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FA"
    },
    "1269": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1270": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1272": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1273": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1274": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1275": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "POP",
      "path": "16"
    },
    "1276": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1279": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1281": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1282": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1283": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1284": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1285": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1286": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1287": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1288": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x510"
    },
    "1291": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1292": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1294": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1295": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1297": {
      "op": "POP"
    },
    "1298": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1301": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51F"
    },
    "1304": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1305": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1307": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30A3"
    },
    "1310": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1311": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1312": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1080"
    },
    "1315": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1316": {
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1317": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1318": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1320": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x530"
    },
    "1323": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1324": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1326": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1327": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1328": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1329": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "POP",
      "path": "16"
    },
    "1330": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1335": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1336": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1337": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1338": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1339": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1342": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x548"
    },
    "1345": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1346": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "1351": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3026,
        3665
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1352": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1353": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1116"
    },
    "1356": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3026,
        3665
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1357": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6899,
        7163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1358": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6899,
        7163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1361": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6899,
        7163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x139E"
    },
    "1364": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        6899,
        7163
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1365": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1366": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1367": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1368": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1369": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x561"
    },
    "1372": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1373": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1375": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1376": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1377": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1378": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "POP",
      "path": "16"
    },
    "1379": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1382": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B7"
    },
    "1385": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1386": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x576"
    },
    "1393": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1397": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x585"
    },
    "1406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A2"
    },
    "1412": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1414": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F1"
    },
    "1417": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1418": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1419": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1420": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1421": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1422": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x596"
    },
    "1425": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1426": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1428": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1429": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1430": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AA"
    },
    "1435": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A5"
    },
    "1438": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1439": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1441": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326C"
    },
    "1444": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1445": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1446": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x150C"
    },
    "1449": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1450": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1451": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1453": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1454": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "1457": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1458": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1459": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3287"
    },
    "1462": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1463": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1464": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1465": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1466": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1467": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C3"
    },
    "1470": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1471": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1473": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1474": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1475": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1480": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D2"
    },
    "1483": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1484": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1486": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x306E"
    },
    "1489": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1490": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1491": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15AE"
    },
    "1494": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1495": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1496": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1497": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1498": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1499": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E3"
    },
    "1502": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1503": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1505": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1506": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1507": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1512": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F2"
    },
    "1515": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1516": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1518": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3159"
    },
    "1521": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1522": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1523": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1641"
    },
    "1526": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1527": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1528": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1529": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1530": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1531": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x603"
    },
    "1534": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1535": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1537": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1538": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1539": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1544": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x612"
    },
    "1547": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1548": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1550": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326C"
    },
    "1553": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1554": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1555": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16CC"
    },
    "1558": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1559": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1560": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1561": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1562": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1563": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x623"
    },
    "1566": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1567": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1569": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1570": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1571": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1575": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1576": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1578": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1579": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "1582": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1583": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1584": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1585": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1586": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1587": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63B"
    },
    "1590": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1591": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1593": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1594": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1595": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1600": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64A"
    },
    "1603": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1604": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1606": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306E"
    },
    "1609": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1610": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1611": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x171D"
    },
    "1614": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65B"
    },
    "1622": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1627": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66A"
    },
    "1635": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1636": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306E"
    },
    "1641": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1643": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1752"
    },
    "1646": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1647": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1648": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1649": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1650": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1651": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67B"
    },
    "1654": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1655": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1657": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1658": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1659": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1660": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "1661": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "1664": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17C9"
    },
    "1667": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1668": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1669": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1670": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1671": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1672": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x690"
    },
    "1675": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1676": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1678": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1679": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1680": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1681": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "POP",
      "path": "16"
    },
    "1682": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x408"
    },
    "1685": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1857"
    },
    "1688": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1689": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1690": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1691": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1692": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1693": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A5"
    },
    "1696": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1697": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1699": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1700": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1701": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x436"
    },
    "1706": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B4"
    },
    "1709": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1710": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1712": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x326C"
    },
    "1715": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1716": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1717": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186A"
    },
    "1720": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1723": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1733": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F1"
    },
    "1741": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1742": {
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DA"
    },
    "1749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "POP",
      "path": "16"
    },
    "1756": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "1761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1764": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1765": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1767": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1768": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F0"
    },
    "1771": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1772": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1774": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1775": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1776": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1781": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FF"
    },
    "1784": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1785": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1787": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32DC"
    },
    "1790": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1791": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1792": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x192B"
    },
    "1795": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1796": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1797": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1799": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1800": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x710"
    },
    "1803": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1804": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1806": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1807": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1808": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1813": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71F"
    },
    "1816": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1817": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1819": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306E"
    },
    "1822": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1823": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1824": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A8B"
    },
    "1827": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1828": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1829": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1830": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1831": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1832": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x730"
    },
    "1835": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1836": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1838": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1839": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1840": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1841": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "POP",
      "path": "16"
    },
    "1842": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1845": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC0"
    },
    "1848": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1849": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1850": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1851": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1852": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1853": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x745"
    },
    "1856": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1857": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1859": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1860": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1861": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1862": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "POP",
      "path": "16"
    },
    "1863": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1866": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BC2"
    },
    "1869": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4915,
        4976
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1870": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1871": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1872": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1873": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1874": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75A"
    },
    "1877": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1878": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1880": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1881": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1882": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1886": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1890": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1891": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1901": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1904": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1905": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1906": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1907": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1908": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1909": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x77D"
    },
    "1912": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1913": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1915": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1916": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1917": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1918": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "POP",
      "path": "3"
    },
    "1919": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DB"
    },
    "1922": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BFA"
    },
    "1925": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1926": {
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1927": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1928": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1929": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1930": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x792"
    },
    "1933": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1934": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1936": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1937": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1938": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1942": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1943": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "1946": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1947": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1950": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1951": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DIV",
      "path": "16"
    },
    "1952": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1954": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "AND",
      "path": "16"
    },
    "1955": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1956": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1957": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1960": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B1"
    },
    "1964": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1965": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1967": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1969": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1974": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C0"
    },
    "1977": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1978": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1980": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32F7"
    },
    "1983": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1984": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1985": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C09"
    },
    "1988": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1989": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1990": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1991": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1992": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1993": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1997": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1999": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2000": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2001": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2006": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E0"
    },
    "2009": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2010": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2012": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3333"
    },
    "2015": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2016": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2017": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C14"
    },
    "2020": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2021": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2022": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2023": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2024": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2025": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F1"
    },
    "2028": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2029": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2031": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2032": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2033": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "2038": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x800"
    },
    "2041": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2042": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2044": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3366"
    },
    "2047": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2048": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2049": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D56"
    },
    "2052": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x811"
    },
    "2060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2063": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "2070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x820"
    },
    "2073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33B9"
    },
    "2079": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DEA"
    },
    "2084": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2085": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2086": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2087": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2088": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2089": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x831"
    },
    "2092": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2093": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2095": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2096": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2097": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2102": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x840"
    },
    "2105": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2106": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2108": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326C"
    },
    "2111": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2112": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2113": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E22"
    },
    "2116": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2117": {
      "offset": [
        1970,
        1988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2118": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2119": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2120": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2121": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x851"
    },
    "2124": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2125": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2127": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2128": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2129": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "2133": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2134": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x85F"
    },
    "2137": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2138": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2140": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "AND",
      "path": "16"
    },
    "2141": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2142": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2143": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2146": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2147": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "2150": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2151": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2152": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1970,
        1988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x344B"
    },
    "2155": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1970,
        1988
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2156": {
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2157": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2160": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x878"
    },
    "2163": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2164": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2166": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2167": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2168": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "2172": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2173": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "2176": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2177": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2179": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "AND",
      "path": "16"
    },
    "2180": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2181": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2182": {
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2183": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2184": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2185": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2186": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x892"
    },
    "2189": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2190": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2192": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2193": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2194": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2195": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "POP",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2199": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "2201": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2203": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2204": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2205": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2206": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2207": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2208": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A8"
    },
    "2211": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2214": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2215": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2216": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2217": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "POP",
      "path": "16"
    },
    "2218": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2221": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E76"
    },
    "2224": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2225": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2226": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2227": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2228": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2229": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BD"
    },
    "2232": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2233": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2235": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2236": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2237": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2238": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "POP",
      "path": "16"
    },
    "2239": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2242": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E83"
    },
    "2245": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2246": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2247": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2248": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2250": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D2"
    },
    "2253": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2254": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2256": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2257": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2258": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2259": {
      "op": "POP"
    },
    "2260": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2263": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E1"
    },
    "2266": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2267": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306E"
    },
    "2272": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E90"
    },
    "2277": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2278": {
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2280": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2281": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2282": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F2"
    },
    "2285": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2290": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "2295": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x901"
    },
    "2298": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2299": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2301": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326C"
    },
    "2304": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2305": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2306": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2308": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2310": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2311": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2313": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2314": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2315": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2316": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2318": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2319": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2320": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2323": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "AND",
      "path": "16"
    },
    "2324": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2326": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2327": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2328": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2329": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2330": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x922"
    },
    "2333": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2336": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2337": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2338": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2343": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x931"
    },
    "2346": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2347": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2349": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3473"
    },
    "2352": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2353": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2354": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F45"
    },
    "2357": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2358": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2359": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2360": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2361": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2362": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x942"
    },
    "2365": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2368": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2369": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2370": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2371": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "POP",
      "path": "16"
    },
    "2372": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2375": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2089"
    },
    "2378": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7593,
        7684
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2379": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2380": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2381": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2382": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2383": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x957"
    },
    "2386": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2389": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2390": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2391": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2392": {
      "op": "POP"
    },
    "2393": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2396": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x966"
    },
    "2399": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2400": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2402": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3159"
    },
    "2405": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2406": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2407": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2094"
    },
    "2410": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2411": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2412": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2413": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2414": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2415": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x977"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2423": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2424": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "POP",
      "path": "16"
    },
    "2425": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2428": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20D7"
    },
    "2431": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        7963,
        8075
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2432": {
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2433": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2434": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2435": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2436": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98C"
    },
    "2439": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2440": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2442": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2443": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2444": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2445": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "POP",
      "path": "16"
    },
    "2446": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2449": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2451": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2452": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2453": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2454": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2455": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2456": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2457": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2458": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9A2"
    },
    "2461": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2462": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2464": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2465": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2466": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2467": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "POP",
      "path": "16"
    },
    "2468": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2471": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20EF"
    },
    "2474": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2478": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2479": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "2482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2486": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "2492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C6"
    },
    "2495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3494"
    },
    "2501": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "SUB"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "2512": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "2514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2531": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA00"
    },
    "2555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "2565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "2568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x326C"
    },
    "2574": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21DF"
    },
    "2579": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2580": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2581": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2583": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2584": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "2587": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2588": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2590": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2591": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2592": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2597": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA2F"
    },
    "2600": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2601": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2603": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326C"
    },
    "2606": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2607": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x227D"
    },
    "2611": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2612": {
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2613": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2614": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2615": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2616": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA40"
    },
    "2619": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2620": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2623": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2624": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2625": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "POP",
      "path": "16"
    },
    "2626": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2629": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2631": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2632": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2633": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2634": {
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2635": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2636": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2637": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2638": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA56"
    },
    "2641": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2642": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2644": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2645": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2646": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "2650": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2651": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x408"
    },
    "2654": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2655": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "2659": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2660": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DIV",
      "path": "16"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "SUB"
    },
    "2669": {
      "offset": [
        1339,
        1415
      ],
      "op": "AND",
      "path": "16"
    },
    "2670": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2671": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2672": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2673": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9066,
        9070
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2675": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9089,
        9125
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0xA7B"
    },
    "2678": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9113,
        9124
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2679": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9089,
        9112
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22E0"
    },
    "2682": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9089,
        9125
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2683": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9089,
        9125
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2684": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9082,
        9125
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2685": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8963,
        9132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        8963,
        9132
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2689": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2690": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "2694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA90"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B0"
    },
    "2703": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2705": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2711": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2728": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2738": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2739": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2740": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xABC"
    },
    "2743": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B0"
    },
    "2747": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2750": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2751": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB09"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2766": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2774": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2777": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB09"
    },
    "2781": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2782": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2785": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2786": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2787": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2789": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2790": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2792": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2794": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2799": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2800": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2804": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2808": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2809": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2810": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEC"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2817": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "3"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2821": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "3"
    },
    "2822": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2823": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2824": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2825": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2828": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2829": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2830": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2831": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2833": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2838": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2839": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2840": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2841": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2843": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2845": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2846": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2848": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "2860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0xB91"
    },
    "2863": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2864": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2866": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2875": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2878": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2880": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2881": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "3"
    },
    "2882": {
      "op": "MSTORE"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2887": {
      "op": "DUP3"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "op": "MSTORE"
    },
    "2890": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2925": {
      "op": "DUP3"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2946": {
      "op": "DUP3"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "op": "MSTORE"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2953": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2955": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2956": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2957": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2958": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "3"
    },
    "2959": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2960": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2961": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2965": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2966": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2967": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2968": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2970": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2972": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2973": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2975": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2976": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2977": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "SUB"
    },
    "2986": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2989": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2990": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2992": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB8"
    },
    "2995": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2996": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1752"
    },
    "2999": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3000": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3001": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3002": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "3"
    },
    "3003": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "op": "SUB"
    },
    "3012": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "3013": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "SUB"
    },
    "3022": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "3023": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "3"
    },
    "3024": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3025": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC26"
    },
    "3028": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3031": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3038": {
      "op": "SHL"
    },
    "3039": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3040": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3043": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3045": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3046": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "3"
    },
    "3047": {
      "op": "MSTORE"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "ADD"
    },
    "3054": {
      "op": "MSTORE"
    },
    "3055": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3090": {
      "op": "DUP3"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "op": "MSTORE"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3097": {
      "op": "SHL"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3100": {
      "op": "DUP3"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "op": "MSTORE"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "3109": {
      "op": "JUMP"
    },
    "3110": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3111": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "op": "SUB"
    },
    "3120": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "3121": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "3"
    },
    "3122": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "3"
    },
    "3123": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3124": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC42"
    },
    "3127": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC42"
    },
    "3132": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3133": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C6"
    },
    "3137": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3138": {
      "branch": 182,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3139": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB4"
    },
    "3142": {
      "branch": 182,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3143": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3145": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3154": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3159": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3160": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "3"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3242": {
      "op": "DUP3"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "3251": {
      "op": "JUMP"
    },
    "3252": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3253": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0xCBE"
    },
    "3256": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3257": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3258": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2305"
    },
    "3261": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3262": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3263": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3264": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3265": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3266": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3267": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3270": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3277": {
      "op": "SHL"
    },
    "3278": {
      "op": "SUB"
    },
    "3279": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3282": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3283": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3285": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3286": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3287": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3288": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF3"
    },
    "3291": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "3310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "3314": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3316": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6110,
        6111
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3318": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6084,
        6099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3319": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6078,
        6107
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3320": {
      "branch": 157,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6078,
        6111
      ],
      "op": "GT",
      "path": "16"
    },
    "3321": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD54"
    },
    "3324": {
      "branch": 157,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3325": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3327": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3336": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3339": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3341": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3342": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "ADD",
      "path": "16"
    },
    "3343": {
      "op": "MSTORE"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3348": {
      "op": "DUP3"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "op": "MSTORE"
    },
    "3351": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3386": {
      "op": "DUP3"
    },
    "3387": {
      "op": "ADD"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "MSTORE"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3407": {
      "op": "ADD"
    },
    "3408": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "3411": {
      "op": "JUMP"
    },
    "3412": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6070,
        6155
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3413": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x12"
    },
    "3415": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3416": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3419": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3420": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "DIV",
      "path": "16"
    },
    "3421": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3423": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6174,
        6194
      ],
      "op": "AND",
      "path": "16"
    },
    "3424": {
      "branch": 158,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6173,
        6194
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3425": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDAC"
    },
    "3428": {
      "branch": 158,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3429": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3431": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3440": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3443": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3445": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3446": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "ADD",
      "path": "16"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "MSTORE"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "3499": {
      "op": "JUMP"
    },
    "3500": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6165,
        6225
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3501": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "3502": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3503": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDBF"
    },
    "3506": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3507": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6249
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3509": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6249
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3510": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3512": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3513": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "ADD",
      "path": "16"
    },
    "3514": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3515": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F37"
    },
    "3518": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6235,
        6267
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3519": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3520": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "POP",
      "path": "16"
    },
    "3521": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "POP",
      "path": "16"
    },
    "3522": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3523": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3524": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3526": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "op": "SUB"
    },
    "3535": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3538": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3539": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3540": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3541": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3542": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3543": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3544": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF3"
    },
    "3547": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3548": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3550": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3562": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "3566": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3567": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "3570": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3571": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3572": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6746,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x18"
    },
    "3574": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6746,
        6768
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3575": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "o",
      "offset": [
        6675,
        6775
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3576": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3577": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0xE02"
    },
    "3580": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3581": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3582": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2373"
    },
    "3585": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3586": {
      "branch": 183,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3587": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE1E"
    },
    "3590": {
      "branch": 183,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "3"
    },
    "3606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "3609": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3610": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3520"
    },
    "3613": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3614": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3615": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xCBE"
    },
    "3618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x246A"
    },
    "3624": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3625": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3626": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3628": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3630": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3631": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "3632": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3633": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7C"
    },
    "3636": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3637": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3639": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3648": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3651": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3653": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3654": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3660": {
      "op": "DUP3"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "MSTORE"
    },
    "3663": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3698": {
      "op": "DUP3"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3703": {
      "op": "ADD"
    },
    "3704": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB88"
    },
    "3707": {
      "op": "JUMP"
    },
    "3708": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3709": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3711": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3713": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3714": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3716": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3717": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3719": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "3720": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3721": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA4"
    },
    "3724": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3725": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3727": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3736": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3737": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3739": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3740": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB88"
    },
    "3743": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3744": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3571"
    },
    "3747": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3748": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3749": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4385,
        4401
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x4"
    },
    "3751": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "3753": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4381
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3754": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3756": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4381
      ],
      "op": "AND",
      "path": "16"
    },
    "3757": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3759": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3760": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "GT",
      "path": "16"
    },
    "3761": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3762": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEBD"
    },
    "3765": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3766": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEBD"
    },
    "3769": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "3772": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4376,
        4401
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3773": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3774": {
      "branch": 159,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4376,
        4401
      ],
      "op": "EQ",
      "path": "16"
    },
    "3775": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF0A"
    },
    "3778": {
      "branch": 159,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3779": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3781": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3790": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3793": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3795": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3796": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "ADD",
      "path": "16"
    },
    "3797": {
      "op": "MSTORE"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3802": {
      "op": "DUP3"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3840": {
      "op": "DUP3"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "3849": {
      "op": "JUMP"
    },
    "3850": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4368,
        4432
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3851": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4476,
        4485
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 20
    },
    "3852": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4462,
        4472
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3853": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4459
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "3855": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4459
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3856": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4472
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF19"
    },
    "3859": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4472
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3860": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4472
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3861": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4472
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35B1"
    },
    "3864": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4450,
        4472
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3865": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4472
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3866": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4450,
        4485
      ],
      "op": "EQ",
      "path": "16"
    },
    "3867": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF62"
    },
    "3870": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3871": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3873": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3882": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3885": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3887": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3888": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "ADD",
      "path": "16"
    },
    "3889": {
      "op": "MSTORE"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3925": {
      "op": "SHL"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3933": {
      "op": "ADD"
    },
    "3934": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "3937": {
      "op": "JUMP"
    },
    "3938": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4442,
        4515
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3939": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4564,
        4579
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x17"
    },
    "3941": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4564,
        4579
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3942": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4550,
        4560
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3943": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4546
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF6F"
    },
    "3946": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3948": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3949": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3950": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3951": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4546
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3952": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF79"
    },
    "3955": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4560
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3956": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4560
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3957": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "3960": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4533,
        4560
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3961": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4560
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3962": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4579
      ],
      "op": "GT",
      "path": "16"
    },
    "3963": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4533,
        4579
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3964": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD6"
    },
    "3967": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3968": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3970": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3979": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3982": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3984": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3985": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "ADD",
      "path": "16"
    },
    "3986": {
      "op": "MSTORE"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3991": {
      "op": "DUP3"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4029": {
      "op": "DUP3"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MSTORE"
    },
    "4032": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4041": {
      "op": "SHL"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4049": {
      "op": "ADD"
    },
    "4050": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4053": {
      "op": "JUMP"
    },
    "4054": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4525,
        4622
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4055": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x11"
    },
    "4057": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4654,
        4666
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4058": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4640,
        4650
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4059": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4640,
        4666
      ],
      "op": "GT",
      "path": "16"
    },
    "4060": {
      "branch": 162,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4640,
        4666
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4061": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x103B"
    },
    "4064": {
      "branch": 162,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4065": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4067": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4076": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4079": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4081": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4082": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "ADD",
      "path": "16"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4145": {
      "op": "DUP3"
    },
    "4146": {
      "op": "ADD"
    },
    "4147": {
      "op": "MSTORE"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4150": {
      "op": "ADD"
    },
    "4151": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4154": {
      "op": "JUMP"
    },
    "4155": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4632,
        4713
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4156": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4742,
        4743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4158": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4159": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4160": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4746
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4161": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4745,
        4760
      ],
      "op": "GT",
      "path": "16"
    },
    "4162": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1077"
    },
    "4165": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4166": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4781,
        4829
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 23,
      "value": "0x1057"
    },
    "4169": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4791,
        4801
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4170": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4803,
        4828
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1052"
    },
    "4173": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4803,
        4818
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4175": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 24
    },
    "4176": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4177": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4178": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4803,
        4828
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4179": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4781,
        4790
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2611"
    },
    "4182": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4781,
        4829
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4183": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4781,
        4829
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4184": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4843,
        4870
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 25,
      "value": "0x1065"
    },
    "4187": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4843,
        4858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4189": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 26
    },
    "4190": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4191": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4193": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4194": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4195": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4196": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4197": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4843,
        4870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4198": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 27
    },
    "4199": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x106F"
    },
    "4202": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4203": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E8"
    },
    "4206": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4762,
        4765
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4207": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4208": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4209": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "POP",
      "path": "16"
    },
    "4210": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4762,
        4765
      ],
      "op": "POP",
      "path": "16"
    },
    "4211": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x103E"
    },
    "4214": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4215": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4725,
        4881
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4216": {
      "op": "POP"
    },
    "4217": {
      "op": "POP"
    },
    "4218": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4220": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4222": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4223": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4219,
        4887
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4224": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4225": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4227": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 28,
      "value": "0x108B"
    },
    "4230": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4231": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186A"
    },
    "4234": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4235": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4236": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4237": {
      "branch": 193,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "4238": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10ED"
    },
    "4241": {
      "branch": 193,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4244": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4253": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4256": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4258": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4259": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB88"
    },
    "4332": {
      "op": "JUMP"
    },
    "4333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4334": {
      "op": "POP"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "op": "SUB"
    },
    "4343": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 29
    },
    "4344": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4345": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4346": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "4347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4349": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4350": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4351": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4352": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4354": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4356": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4357": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4358": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4359": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4361": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4362": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4363": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4364": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4365": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4366": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4367": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4368": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4369": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4370": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4371": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4372": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4373": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4374": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3026,
        3665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4375": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4377": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4379": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4380": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4381": {
      "branch": 202,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4382": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1169"
    },
    "4385": {
      "branch": 202,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4386": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4388": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4397": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4402": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4403": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB88"
    },
    "4456": {
      "op": "JUMP"
    },
    "4457": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4458": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4460": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4462": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4463": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4465": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4466": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4468": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4469": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4470": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1191"
    },
    "4473": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4474": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4476": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4485": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4486": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4488": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4489": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB88"
    },
    "4492": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4493": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3571"
    },
    "4496": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4497": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4498": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3206,
        3221
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x2"
    },
    "4500": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3202
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "4502": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3202
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4503": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3202
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4505": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3202
      ],
      "op": "AND",
      "path": "16"
    },
    "4506": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4508": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4509": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "GT",
      "path": "16"
    },
    "4510": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4511": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11AA"
    },
    "4514": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4515": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11AA"
    },
    "4518": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "4521": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3197,
        3221
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4522": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4523": {
      "branch": 163,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3197,
        3221
      ],
      "op": "EQ",
      "path": "16"
    },
    "4524": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11F7"
    },
    "4527": {
      "branch": 163,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4528": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4530": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4537": {
      "op": "SHL"
    },
    "4538": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4539": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4542": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4544": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4545": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "ADD",
      "path": "16"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4589": {
      "op": "DUP3"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "MSTORE"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4598": {
      "op": "JUMP"
    },
    "4599": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3189,
        3255
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4600": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3286,
        3295
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 31
    },
    "4601": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3273,
        3282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "4603": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3273,
        3282
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4604": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3273,
        3295
      ],
      "op": "EQ",
      "path": "16"
    },
    "4605": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1244"
    },
    "4608": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4609": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4611": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4618": {
      "op": "SHL"
    },
    "4619": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4620": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4623": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4625": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4626": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "ADD",
      "path": "16"
    },
    "4627": {
      "op": "MSTORE"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4632": {
      "op": "DUP3"
    },
    "4633": {
      "op": "ADD"
    },
    "4634": {
      "op": "MSTORE"
    },
    "4635": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4666": {
      "op": "DUP3"
    },
    "4667": {
      "op": "ADD"
    },
    "4668": {
      "op": "MSTORE"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4671": {
      "op": "ADD"
    },
    "4672": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4675": {
      "op": "JUMP"
    },
    "4676": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3265,
        3325
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4677": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3362,
        3372
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 32,
      "value": "0xD"
    },
    "4679": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3362,
        3372
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4680": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4682": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4683": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4696": {
      "op": "NOT"
    },
    "4697": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3401,
        3411
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "op": "AND"
    },
    "4702": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4704": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4705": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "ADD",
      "path": "16"
    },
    "4706": {
      "op": "MSTORE"
    },
    "4707": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12BD"
    },
    "4710": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4711": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3362,
        3372
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4717": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4718": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4720": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4721": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4722": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "SUB",
      "path": "16"
    },
    "4723": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "SUB",
      "path": "16"
    },
    "4724": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4725": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4726": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4727": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4729": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3384,
        3412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4732": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4733": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4735": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "ADD",
      "path": "16"
    },
    "4736": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3374,
        3413
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4737": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3354
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4738": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3354
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4739": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4740": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4741": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4743": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MUL",
      "path": "16"
    },
    "4744": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4746": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "ADD",
      "path": "16"
    },
    "4747": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4749": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4750": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4751": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4752": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "ADD",
      "path": "16"
    },
    "4753": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4755": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4756": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4757": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4758": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4759": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4760": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4761": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4762": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4763": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4764": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4766": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "ADD",
      "path": "16"
    },
    "4767": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4768": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4769": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4771": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MUL",
      "path": "16"
    },
    "4772": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4773": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4774": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4775": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4776": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4778": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4779": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "ADD",
      "path": "16"
    },
    "4780": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4781": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4782": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4783": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4784": {
      "op": "POP"
    },
    "4785": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4786": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4787": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4788": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4789": {
      "op": "POP"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3361
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x262B"
    },
    "4794": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4795": {
      "op": "POP"
    },
    "4796": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3343,
        3414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4797": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3343,
        3414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4798": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1309"
    },
    "4801": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4802": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4804": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4811": {
      "op": "SHL"
    },
    "4812": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4813": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4816": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4818": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4819": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "ADD",
      "path": "16"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "ADD"
    },
    "4827": {
      "op": "MSTORE"
    },
    "4828": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4863": {
      "op": "DUP3"
    },
    "4864": {
      "op": "ADD"
    },
    "4865": {
      "op": "MSTORE"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4868": {
      "op": "ADD"
    },
    "4869": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4872": {
      "op": "JUMP"
    },
    "4873": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3335,
        3444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4874": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3470,
        3480
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 33
    },
    "4875": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4877": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4878": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4879": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4880": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "4882": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4884": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4885": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4887": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4888": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4889": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4890": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4892": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3481
      ],
      "op": "AND",
      "path": "16"
    },
    "4893": {
      "branch": 166,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3462,
        3490
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4894": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1369"
    },
    "4897": {
      "branch": 166,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4898": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4900": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4907": {
      "op": "SHL"
    },
    "4908": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4909": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4912": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4914": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4915": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "ADD",
      "path": "16"
    },
    "4916": {
      "op": "MSTORE"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4921": {
      "op": "DUP3"
    },
    "4922": {
      "op": "ADD"
    },
    "4923": {
      "op": "MSTORE"
    },
    "4924": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4959": {
      "op": "DUP3"
    },
    "4960": {
      "op": "ADD"
    },
    "4961": {
      "op": "MSTORE"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "4968": {
      "op": "JUMP"
    },
    "4969": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3454,
        3526
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4970": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3545,
        3555
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 34
    },
    "4971": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4973": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4974": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4975": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4976": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3544
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "4978": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4980": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4981": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4983": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4984": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3556
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4985": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4986": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4989": {
      "op": "NOT"
    },
    "4990": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "AND",
      "path": "16"
    },
    "4991": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3559,
        3563
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4993": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "OR",
      "path": "16"
    },
    "4994": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4995": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3537,
        3563
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4996": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3573,
        3621
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0x1390"
    },
    "4999": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3573,
        3621
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5000": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3620
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1052"
    },
    "5003": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "5005": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5006": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5007": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5008": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3573,
        3621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5009": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3631,
        3658
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 36,
      "value": "0x1077"
    },
    "5012": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3631,
        3646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "5014": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5015": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5016": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5018": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "5019": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5020": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5021": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5022": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6899,
        7163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5023": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5025": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5037": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5038": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5039": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5040": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5041": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5042": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5043": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CE"
    },
    "5046": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5056": {
      "op": "SHL"
    },
    "5057": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5061": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "5065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "5069": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5070": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6988,
        6989
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 37,
      "value": "0x0"
    },
    "5073": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6964,
        6985
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5074": {
      "branch": 167,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6964,
        6989
      ],
      "op": "GT",
      "path": "16"
    },
    "5075": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1417"
    },
    "5078": {
      "branch": 167,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5079": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5081": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5088": {
      "op": "SHL"
    },
    "5089": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5090": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5093": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5095": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5096": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "ADD",
      "path": "16"
    },
    "5097": {
      "op": "MSTORE"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "MSTORE"
    },
    "5105": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5133": {
      "op": "DUP3"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "MSTORE"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5138": {
      "op": "ADD"
    },
    "5139": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "5142": {
      "op": "JUMP"
    },
    "5143": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6956,
        7016
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5144": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "5146": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5147": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5149": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5150": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7027,
        7039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5152": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7027,
        7039
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5153": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "5157": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5158": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "DIV",
      "path": "16"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "op": "SUB"
    },
    "5167": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "AND",
      "path": "16"
    },
    "5168": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5169": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7083,
        7104
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5170": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7083,
        7104
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5171": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7027,
        7039
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5172": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5173": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7027,
        7039
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5174": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5175": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7083,
        7104
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5176": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7053,
        7069
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5177": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "GAS",
      "path": "16"
    },
    "5178": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "CALL",
      "path": "16"
    },
    "5179": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5180": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5181": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5182": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5183": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5184": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5185": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5187": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5188": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "EQ",
      "path": "16"
    },
    "5189": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x146A"
    },
    "5192": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5193": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5195": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5196": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5197": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5198": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5200": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "NOT",
      "path": "16"
    },
    "5201": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5203": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5204": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "ADD",
      "path": "16"
    },
    "5205": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "AND",
      "path": "16"
    },
    "5206": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5207": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "ADD",
      "path": "16"
    },
    "5208": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5210": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5211": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5212": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5213": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5214": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5215": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5217": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5219": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5220": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "ADD",
      "path": "16"
    },
    "5221": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x146F"
    },
    "5225": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5226": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5227": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5229": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5230": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5231": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5232": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7045,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5233": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7026,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5234": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7026,
        7109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5235": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7026,
        7109
      ],
      "op": "POP",
      "path": "16"
    },
    "5236": {
      "branch": 168,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7127,
        7134
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 38
    },
    "5237": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B4"
    },
    "5240": {
      "branch": 168,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5241": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5243": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5252": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5255": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5257": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5258": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "ADD",
      "path": "16"
    },
    "5259": {
      "op": "MSTORE"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5264": {
      "op": "DUP3"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "MSTORE"
    },
    "5267": {
      "op": "PUSH17",
      "value": "0x2BB4BA34323930BBB6103330B4B632B217"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "5287": {
      "op": "SHL"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5290": {
      "op": "DUP3"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "MSTORE"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "5299": {
      "op": "JUMP"
    },
    "5300": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7119,
        7156
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5301": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6946,
        7163
      ],
      "op": "POP",
      "path": "16"
    },
    "5302": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        6899,
        7163
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5303": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5304": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5306": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5313": {
      "op": "SHL"
    },
    "5314": {
      "op": "SUB"
    },
    "5315": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5318": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5320": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5321": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5322": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5323": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5324": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E7"
    },
    "5327": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5330": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5337": {
      "op": "SHL"
    },
    "5338": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5339": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5342": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5343": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "5346": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "5350": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5352": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5030,
        5040
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 39,
      "value": "0x14EF"
    },
    "5355": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5030,
        5038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2641"
    },
    "5358": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5030,
        5040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5359": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5030,
        5040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5360": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4982,
        5047
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5362": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xCBE"
    },
    "5365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5372": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5374": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "3"
    },
    "5375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5381": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "3"
    },
    "5384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DEA"
    },
    "5387": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5388": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5389": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8146,
        8162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5391": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8174,
        8197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5393": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8200,
        8216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1519"
    },
    "5396": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8215
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5397": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8200,
        8209
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186A"
    },
    "5400": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8200,
        8216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5401": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8200,
        8216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5402": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8174,
        8216
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5403": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8174,
        8216
      ],
      "op": "POP",
      "path": "16"
    },
    "5404": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8226,
        8252
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5406": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8269,
        8284
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5407": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5416": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5417": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "GT",
      "path": "16"
    },
    "5418": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5419": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1536"
    },
    "5422": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5423": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1536"
    },
    "5426": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30CD"
    },
    "5429": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8255,
        8285
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5430": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5431": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5433": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5434": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5435": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5436": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5437": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5438": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5439": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5441": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "MUL",
      "path": "16"
    },
    "5442": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5444": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ADD",
      "path": "16"
    },
    "5445": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5446": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ADD",
      "path": "16"
    },
    "5447": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5449": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5450": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5451": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5452": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155F"
    },
    "5455": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5456": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5457": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5459": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ADD",
      "path": "16"
    },
    "5460": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5462": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5463": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "MUL",
      "path": "16"
    },
    "5464": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5465": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "5466": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5467": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "5468": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "ADD",
      "path": "16"
    },
    "5469": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5472": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8255,
        8285
      ],
      "op": "POP",
      "path": "16"
    },
    "5473": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8226,
        8285
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5474": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8226,
        8285
      ],
      "op": "POP",
      "path": "16"
    },
    "5475": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8300,
        8309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5477": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5478": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8315,
        8330
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5479": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8311,
        8312
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5480": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8311,
        8330
      ],
      "op": "LT",
      "path": "16"
    },
    "5481": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5482": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15A6"
    },
    "5485": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5486": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8366,
        8395
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 41,
      "value": "0x1577"
    },
    "5489": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8386,
        8391
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5490": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8393,
        8394
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5491": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8366,
        8385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1080"
    },
    "5494": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8366,
        8395
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5495": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8366,
        8395
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5496": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8360
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5497": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8361,
        8362
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5498": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5499": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5500": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5501": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "LT",
      "path": "16"
    },
    "5502": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1589"
    },
    "5505": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5506": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1589"
    },
    "5509": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3603"
    },
    "5512": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8351,
        8363
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5513": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5514": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5516": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5517": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5518": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "MUL",
      "path": "16"
    },
    "5519": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5520": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5521": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5522": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "ADD",
      "path": "16"
    },
    "5523": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8363
      ],
      "op": "ADD",
      "path": "16"
    },
    "5524": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8351,
        8395
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5525": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 42
    },
    "5526": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159E"
    },
    "5529": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5530": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E8"
    },
    "5533": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8332,
        8335
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5534": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5535": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5536": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "POP",
      "path": "16"
    },
    "5537": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8332,
        8335
      ],
      "op": "POP",
      "path": "16"
    },
    "5538": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1565"
    },
    "5541": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5542": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8295,
        8406
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5543": {
      "op": "POP"
    },
    "5544": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8422,
        8431
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 43
    },
    "5545": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8085,
        8438
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        8085,
        8438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5550": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5551": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5553": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 44,
      "value": "0x15B9"
    },
    "5556": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5558": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5559": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5560": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5561": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5562": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5563": {
      "branch": 194,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5564": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x161C"
    },
    "5567": {
      "branch": 194,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5568": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5570": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5577": {
      "op": "SHL"
    },
    "5578": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5579": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5582": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5584": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5585": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5586": {
      "op": "MSTORE"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5591": {
      "op": "DUP3"
    },
    "5592": {
      "op": "ADD"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5629": {
      "op": "DUP3"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5650": {
      "op": "DUP3"
    },
    "5651": {
      "op": "ADD"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB88"
    },
    "5659": {
      "op": "JUMP"
    },
    "5660": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5661": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x8"
    },
    "5663": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5664": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5665": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5666": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5667": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5668": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x162F"
    },
    "5671": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5672": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x162F"
    },
    "5675": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3603"
    },
    "5678": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5679": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5680": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5681": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5683": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5684": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5686": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5688": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5689": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5690": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5691": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5692": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5693": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5694": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5695": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5696": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5697": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5454,
        5614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5698": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "op": "SUB"
    },
    "5709": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5712": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5713": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5715": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5716": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5717": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5718": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1671"
    },
    "5721": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5722": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5731": {
      "op": "SHL"
    },
    "5732": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5733": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5734": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5737": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "5740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "5744": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5745": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5746": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5539,
        5553
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 46,
      "value": "0x12"
    },
    "5748": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5539,
        5553
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5749": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5539,
        5553
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5751": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5539,
        5553
      ],
      "op": "AND",
      "path": "16"
    },
    "5752": {
      "branch": 169,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5538,
        5553
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5753": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16B9"
    },
    "5756": {
      "branch": 169,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5757": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5759": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5766": {
      "op": "SHL"
    },
    "5767": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5768": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5771": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5773": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5774": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "ADD",
      "path": "16"
    },
    "5775": {
      "op": "MSTORE"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5804": {
      "op": "SHL"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5807": {
      "op": "DUP3"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "MSTORE"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "5816": {
      "op": "JUMP"
    },
    "5817": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5530,
        5576
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5818": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 47
    },
    "5819": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5820": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDBF"
    },
    "5823": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5824": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5593
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5826": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5593
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5827": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5829": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5830": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "ADD",
      "path": "16"
    },
    "5831": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5832": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5586,
        5607
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F37"
    },
    "5835": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5586,
        5607
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5836": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5837": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5839": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5846": {
      "op": "SHL"
    },
    "5847": {
      "op": "SUB"
    },
    "5848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5851": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5852": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5853": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5854": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5855": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5856": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5857": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16FC"
    },
    "5860": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5870": {
      "op": "SHL"
    },
    "5871": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5872": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "5879": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "5883": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5891": {
      "op": "SHL"
    },
    "5892": {
      "op": "SUB"
    },
    "5893": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "AND",
      "path": "16",
      "statement": 48
    },
    "5894": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5326,
        5331
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5896": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5897": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5898": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5899": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5312
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "5901": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5903": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5904": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5906": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5907": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5323
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5908": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5331
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5909": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5331
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5912": {
      "op": "NOT"
    },
    "5913": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5331
      ],
      "op": "AND",
      "path": "16"
    },
    "5914": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5331
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5915": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5305,
        5331
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5916": {
      "fn": "CryptidToken.undoClaim",
      "jump": "o",
      "offset": [
        5239,
        5338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5917": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5918": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5920": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5927": {
      "op": "SHL"
    },
    "5928": {
      "op": "SUB"
    },
    "5929": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5932": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5933": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5934": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5935": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5936": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5937": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5938": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174D"
    },
    "5941": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5942": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5944": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5951": {
      "op": "SHL"
    },
    "5952": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5954": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "5960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5961": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "5964": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5965": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5966": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6858,
        6870
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0x11"
    },
    "5968": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6858,
        6886
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5969": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        6781,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5970": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5971": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5973": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5974": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5975": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5978": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5980": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5981": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5983": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5984": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5985": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5992": {
      "op": "SHL"
    },
    "5993": {
      "op": "SUB"
    },
    "5994": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "3"
    },
    "5995": {
      "branch": 184,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 50
    },
    "5996": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "5999": {
      "branch": 184,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6000": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6002": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6011": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6014": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6016": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6017": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "3"
    },
    "6018": {
      "op": "MSTORE"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6023": {
      "op": "DUP3"
    },
    "6024": {
      "op": "ADD"
    },
    "6025": {
      "op": "MSTORE"
    },
    "6026": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6061": {
      "op": "DUP3"
    },
    "6062": {
      "op": "ADD"
    },
    "6063": {
      "op": "MSTORE"
    },
    "6064": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6076": {
      "op": "SHL"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6079": {
      "op": "DUP3"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "MSTORE"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6084": {
      "op": "ADD"
    },
    "6085": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "6088": {
      "op": "JUMP"
    },
    "6089": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6090": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6092": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6093": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6094": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17D6"
    },
    "6097": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6098": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "6101": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6102": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6103": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6104": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6106": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6107": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6109": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6110": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6111": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "6112": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "6113": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6115": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6116": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6118": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6119": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6120": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6121": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6122": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6124": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6125": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6126": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6127": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6128": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6129": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6130": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6131": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6132": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6134": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6135": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6136": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6137": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6138": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1802"
    },
    "6141": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6142": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "6145": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6146": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6147": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6148": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6149": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x184F"
    },
    "6152": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6153": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6154": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6156": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "LT",
      "path": "16"
    },
    "6157": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1824"
    },
    "6160": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6161": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6164": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6165": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6166": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6167": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "6168": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "6169": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6170": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6171": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6172": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6174": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6175": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6176": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x184F"
    },
    "6179": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6180": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6181": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6183": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6184": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6185": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6187": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6188": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6190": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6192": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6193": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6194": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6195": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6196": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6197": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6200": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6204": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6208": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "GT",
      "path": "16"
    },
    "6210": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1832"
    },
    "6213": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6214": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6215": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6216": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SUB",
      "path": "16"
    },
    "6217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6219": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "AND",
      "path": "16"
    },
    "6220": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6222": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6225": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6226": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6227": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6228": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6229": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6230": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6231": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6232": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7533,
        7540
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6234": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7558,
        7580
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 51,
      "value": "0x1865"
    },
    "6237": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7566,
        7579
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66A"
    },
    "6240": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6242": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6243": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6244": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6245": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7558,
        7580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6246": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7551,
        7580
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6247": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7551,
        7580
      ],
      "op": "POP",
      "path": "16"
    },
    "6248": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7483,
        7587
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6249": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "o",
      "offset": [
        7483,
        7587
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6250": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6251": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6259": {
      "op": "SHL"
    },
    "6260": {
      "op": "SUB"
    },
    "6261": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 52
    },
    "6262": {
      "branch": 185,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "6263": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D5"
    },
    "6266": {
      "branch": 185,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6267": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6269": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6276": {
      "op": "SHL"
    },
    "6277": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6278": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6281": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6283": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6284": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6285": {
      "op": "MSTORE"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6290": {
      "op": "DUP3"
    },
    "6291": {
      "op": "ADD"
    },
    "6292": {
      "op": "MSTORE"
    },
    "6293": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6328": {
      "op": "DUP3"
    },
    "6329": {
      "op": "ADD"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6344": {
      "op": "SHL"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6347": {
      "op": "DUP3"
    },
    "6348": {
      "op": "ADD"
    },
    "6349": {
      "op": "MSTORE"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "6356": {
      "op": "JUMP"
    },
    "6357": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6365": {
      "op": "SHL"
    },
    "6366": {
      "op": "SUB"
    },
    "6367": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "3",
      "statement": 53
    },
    "6368": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6370": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6371": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6372": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6373": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6380": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6381": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6383": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6384": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6386": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6388": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "op": "SUB"
    },
    "6397": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6400": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6401": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6402": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6403": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6404": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6405": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6406": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1921"
    },
    "6409": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6419": {
      "op": "SHL"
    },
    "6420": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6421": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6424": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6425": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "6428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "6432": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6434": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x14EF"
    },
    "6437": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6439": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D4"
    },
    "6442": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6443": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3698,
        4184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6446": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6453": {
      "op": "SHL"
    },
    "6454": {
      "op": "SUB"
    },
    "6455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6458": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6459": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6460": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6461": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6462": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6463": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6464": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195B"
    },
    "6467": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6470": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6471": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "6486": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6487": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "6490": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6491": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6492": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3817,
        3831
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x3"
    },
    "6494": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3813
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "6496": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3813
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6497": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3813
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6499": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3813
      ],
      "op": "AND",
      "path": "16"
    },
    "6500": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6502": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6503": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "GT",
      "path": "16"
    },
    "6504": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6505": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1974"
    },
    "6508": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6509": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1974"
    },
    "6512": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "6515": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3808,
        3831
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6516": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6517": {
      "branch": 170,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3808,
        3831
      ],
      "op": "EQ",
      "path": "16"
    },
    "6518": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19C1"
    },
    "6521": {
      "branch": 170,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6522": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6524": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6531": {
      "op": "SHL"
    },
    "6532": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6533": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6536": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6538": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6539": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "ADD",
      "path": "16"
    },
    "6540": {
      "op": "MSTORE"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6545": {
      "op": "DUP3"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "MSTORE"
    },
    "6548": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6583": {
      "op": "DUP3"
    },
    "6584": {
      "op": "ADD"
    },
    "6585": {
      "op": "MSTORE"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6588": {
      "op": "ADD"
    },
    "6589": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "6592": {
      "op": "JUMP"
    },
    "6593": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3800,
        3860
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6594": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3922
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x15"
    },
    "6596": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3908,
        3922
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6597": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3891,
        3904
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "6599": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3891,
        3904
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6600": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19D4"
    },
    "6603": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6604": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6606": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6607": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "AND",
      "path": "16"
    },
    "6608": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "6611": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3878,
        3904
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6612": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3904
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6613": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3922
      ],
      "op": "GT",
      "path": "16"
    },
    "6614": {
      "branch": 171,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3878,
        3922
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6615": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A36"
    },
    "6618": {
      "branch": 171,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6619": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6621": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6630": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6633": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6635": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6636": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "ADD",
      "path": "16"
    },
    "6637": {
      "op": "MSTORE"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6642": {
      "op": "DUP3"
    },
    "6643": {
      "op": "ADD"
    },
    "6644": {
      "op": "MSTORE"
    },
    "6645": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6680": {
      "op": "DUP3"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6697": {
      "op": "SHL"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6700": {
      "op": "DUP3"
    },
    "6701": {
      "op": "ADD"
    },
    "6702": {
      "op": "MSTORE"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6705": {
      "op": "ADD"
    },
    "6706": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "6709": {
      "op": "JUMP"
    },
    "6710": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3870,
        3970
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6711": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4002,
        4012
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 57
    },
    "6712": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6714": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "AND",
      "path": "16"
    },
    "6715": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        3998
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "6717": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        3998
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6719": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6720": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6721": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6722": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A4B"
    },
    "6725": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6726": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6727": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "6730": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3985,
        4012
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6731": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6732": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6733": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6734": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3985,
        4012
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6735": {
      "op": "POP"
    },
    "6736": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4039,
        4040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6738": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4039,
        4040
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4022,
        4178
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6741": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4047,
        4057
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6742": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4042,
        4057
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6744": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4042,
        4057
      ],
      "op": "AND",
      "path": "16"
    },
    "6745": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4042,
        4043
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6746": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4042,
        4057
      ],
      "op": "GT",
      "path": "16"
    },
    "6747": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4022,
        4178
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDBF"
    },
    "6750": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4022,
        4178
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6751": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4078,
        4126
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 58,
      "value": "0x1A6B"
    },
    "6754": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4088,
        4098
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6755": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4100,
        4125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1052"
    },
    "6758": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4100,
        4115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6760": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6761": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6762": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6763": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4078,
        4126
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6764": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4140,
        4167
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 59,
      "value": "0x1A79"
    },
    "6767": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4140,
        4155
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6769": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6770": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6771": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6773": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6774": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6775": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6776": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6777": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4140,
        4167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6778": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 60
    },
    "6779": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A83"
    },
    "6782": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6783": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E8"
    },
    "6786": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4059,
        4062
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6787": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6788": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6789": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "POP",
      "path": "16"
    },
    "6790": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4059,
        4062
      ],
      "op": "POP",
      "path": "16"
    },
    "6791": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4022,
        4178
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A54"
    },
    "6794": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4022,
        4178
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6795": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6796": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6798": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6805": {
      "op": "SHL"
    },
    "6806": {
      "op": "SUB"
    },
    "6807": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6810": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6811": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6812": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6813": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6814": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6815": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6816": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ABB"
    },
    "6819": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6820": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6822": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6829": {
      "op": "SHL"
    },
    "6830": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6832": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6835": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "6838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6839": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "6842": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6844": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5417,
        5427
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0xD"
    },
    "6846": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5417,
        5441
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6847": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5344,
        5448
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6848": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6849": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6851": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6858": {
      "op": "SHL"
    },
    "6859": {
      "op": "SUB"
    },
    "6860": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6863": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6865": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6866": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6867": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6868": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6869": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF0"
    },
    "6872": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6882": {
      "op": "SHL"
    },
    "6883": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "6891": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "6895": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6897": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6380,
        6381
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x0"
    },
    "6899": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6355,
        6369
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6901": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6902": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6903": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AFF"
    },
    "6906": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6907": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "6910": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6349,
        6377
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6911": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6912": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6913": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6377
      ],
      "op": "POP",
      "path": "16"
    },
    "6914": {
      "branch": 172,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6349,
        6381
      ],
      "op": "GT",
      "path": "16"
    },
    "6915": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B4E"
    },
    "6918": {
      "branch": 172,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6919": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6921": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6930": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6933": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6935": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6936": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "ADD",
      "path": "16"
    },
    "6937": {
      "op": "MSTORE"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6942": {
      "op": "DUP3"
    },
    "6943": {
      "op": "ADD"
    },
    "6944": {
      "op": "MSTORE"
    },
    "6945": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6980": {
      "op": "DUP3"
    },
    "6981": {
      "op": "ADD"
    },
    "6982": {
      "op": "MSTORE"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6985": {
      "op": "ADD"
    },
    "6986": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "6989": {
      "op": "JUMP"
    },
    "6990": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6341,
        6413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6991": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0x12"
    },
    "6993": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6994": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6997": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6998": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "DIV",
      "path": "16"
    },
    "6999": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7001": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6432,
        6452
      ],
      "op": "AND",
      "path": "16"
    },
    "7002": {
      "branch": 173,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6431,
        6452
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7003": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BB1"
    },
    "7006": {
      "branch": 173,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7007": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7009": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7018": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7021": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7023": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7024": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "ADD",
      "path": "16"
    },
    "7025": {
      "op": "MSTORE"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7030": {
      "op": "DUP3"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "MSTORE"
    },
    "7033": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7068": {
      "op": "DUP3"
    },
    "7069": {
      "op": "ADD"
    },
    "7070": {
      "op": "MSTORE"
    },
    "7071": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7076": {
      "op": "SHL"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7079": {
      "op": "DUP3"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "op": "MSTORE"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "7088": {
      "op": "JUMP"
    },
    "7089": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6423,
        6491
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7090": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6521
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 64,
      "value": "0x12"
    },
    "7092": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7093": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7094": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "7097": {
      "op": "NOT"
    },
    "7098": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "AND",
      "path": "16"
    },
    "7099": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "7102": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "OR",
      "path": "16"
    },
    "7103": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7104": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6501,
        6528
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7105": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6280,
        6535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7106": {
      "fn": "CryptidToken.pause",
      "offset": [
        4915,
        4976
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7107": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7109": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7116": {
      "op": "SHL"
    },
    "7117": {
      "op": "SUB"
    },
    "7118": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7121": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7122": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7123": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7124": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7125": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7126": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7127": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF2"
    },
    "7130": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7133": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7140": {
      "op": "SHL"
    },
    "7141": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7142": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7145": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7146": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "7149": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7150": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "7153": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7155": {
      "fn": "CryptidToken.pause",
      "offset": [
        4961,
        4969
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 65,
      "value": "0x14EF"
    },
    "7158": {
      "fn": "CryptidToken.pause",
      "offset": [
        4961,
        4967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x272E"
    },
    "7161": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4961,
        4969
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7162": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7163": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7165": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0x1"
    },
    "7167": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7168": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7169": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA90"
    },
    "7172": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7173": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B0"
    },
    "7176": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7177": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7178": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 67,
      "value": "0xDBF"
    },
    "7181": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7182": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7183": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7184": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2786"
    },
    "7187": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7188": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2534,
        2988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7189": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7191": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7198": {
      "op": "SHL"
    },
    "7199": {
      "op": "SUB"
    },
    "7200": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7203": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7204": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7205": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7206": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7207": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7208": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7209": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C44"
    },
    "7212": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7213": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7215": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7222": {
      "op": "SHL"
    },
    "7223": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7224": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7225": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "7231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "7235": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7237": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2688
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 68,
      "value": "0x0"
    },
    "7239": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "7241": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2675
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7242": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7244": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2675
      ],
      "op": "AND",
      "path": "16"
    },
    "7245": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7247": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7248": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "GT",
      "path": "16"
    },
    "7249": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7250": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C5D"
    },
    "7253": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7254": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C5D"
    },
    "7257": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "7260": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2670,
        2688
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7261": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7262": {
      "branch": 174,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2670,
        2688
      ],
      "op": "GT",
      "path": "16"
    },
    "7263": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CA1"
    },
    "7266": {
      "branch": 174,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7267": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7269": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7276": {
      "op": "SHL"
    },
    "7277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7278": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7281": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7283": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7284": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "ADD",
      "path": "16"
    },
    "7285": {
      "op": "MSTORE"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7290": {
      "op": "DUP3"
    },
    "7291": {
      "op": "ADD"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7316": {
      "op": "SHL"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7319": {
      "op": "DUP3"
    },
    "7320": {
      "op": "ADD"
    },
    "7321": {
      "op": "MSTORE"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7324": {
      "op": "ADD"
    },
    "7325": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "7328": {
      "op": "JUMP"
    },
    "7329": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2662,
        2713
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7330": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2762,
        2777
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0x17"
    },
    "7332": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2762,
        2777
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2748,
        2758
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7334": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7336": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "AND",
      "path": "16"
    },
    "7337": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB1"
    },
    "7340": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7342": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7343": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7344": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2744
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7346": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CBB"
    },
    "7349": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7350": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7351": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "7354": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2731,
        2758
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7355": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2758
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7356": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2777
      ],
      "op": "GT",
      "path": "16"
    },
    "7357": {
      "branch": 175,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2731,
        2777
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7358": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D1C"
    },
    "7361": {
      "branch": 175,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7362": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7364": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7373": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7376": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7378": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7379": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "ADD",
      "path": "16"
    },
    "7380": {
      "op": "MSTORE"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7385": {
      "op": "DUP3"
    },
    "7386": {
      "op": "ADD"
    },
    "7387": {
      "op": "MSTORE"
    },
    "7388": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7423": {
      "op": "DUP3"
    },
    "7424": {
      "op": "ADD"
    },
    "7425": {
      "op": "MSTORE"
    },
    "7426": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7439": {
      "op": "SHL"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7442": {
      "op": "DUP3"
    },
    "7443": {
      "op": "ADD"
    },
    "7444": {
      "op": "MSTORE"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "7451": {
      "op": "JUMP"
    },
    "7452": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2723,
        2824
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7453": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2851,
        2852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7455": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2834,
        2982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7456": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2859,
        2869
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7457": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        2869
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7459": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        2869
      ],
      "op": "AND",
      "path": "16"
    },
    "7460": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        2855
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7461": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2854,
        2869
      ],
      "op": "GT",
      "path": "16"
    },
    "7462": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2834,
        2982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBE"
    },
    "7465": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2834,
        2982
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7466": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2890,
        2930
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 70,
      "value": "0x1D36"
    },
    "7469": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2900,
        2902
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7470": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2904,
        2929
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1052"
    },
    "7473": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2904,
        2919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7475": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7476": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7477": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7478": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2890,
        2930
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7479": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2944,
        2971
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 71,
      "value": "0x1D44"
    },
    "7482": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2944,
        2959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7484": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7485": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7486": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7488": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7489": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7490": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7491": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7492": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2944,
        2971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7493": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 72
    },
    "7494": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D4E"
    },
    "7497": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7498": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E8"
    },
    "7501": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2871,
        2874
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7502": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7503": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7504": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "POP",
      "path": "16"
    },
    "7505": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2871,
        2874
      ],
      "op": "POP",
      "path": "16"
    },
    "7506": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2834,
        2982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D1F"
    },
    "7509": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2834,
        2982
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7510": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7511": {
      "fn": "CryptidToken.verify",
      "offset": [
        8571,
        8581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "7513": {
      "fn": "CryptidToken.verify",
      "offset": [
        8571,
        8581
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7514": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7516": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7517": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7530": {
      "op": "NOT"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7533": {
      "op": "DUP7"
    },
    "7534": {
      "op": "SWAP1"
    },
    "7535": {
      "op": "SHL"
    },
    "7536": {
      "op": "AND"
    },
    "7537": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7539": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7540": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "ADD",
      "path": "16"
    },
    "7541": {
      "op": "MSTORE"
    },
    "7542": {
      "fn": "CryptidToken.verify",
      "offset": [
        8532,
        8536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7544": {
      "fn": "CryptidToken.verify",
      "offset": [
        8532,
        8536
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7545": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DD2"
    },
    "7548": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7554": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7555": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7557": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7558": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7559": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "SUB",
      "path": "16"
    },
    "7560": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "SUB",
      "path": "16"
    },
    "7561": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7562": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7563": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7564": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7566": {
      "fn": "CryptidToken.verify",
      "offset": [
        8593,
        8618
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7567": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7568": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7569": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7570": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7572": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "ADD",
      "path": "16"
    },
    "7573": {
      "fn": "CryptidToken.verify",
      "offset": [
        8583,
        8619
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7574": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8563
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7575": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8563
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7576": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7577": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7578": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7580": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MUL",
      "path": "16"
    },
    "7581": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7583": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "ADD",
      "path": "16"
    },
    "7584": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7586": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7587": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7588": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7589": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "ADD",
      "path": "16"
    },
    "7590": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7592": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7593": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7594": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7595": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7596": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7597": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7598": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7599": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7600": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7601": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7603": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "ADD",
      "path": "16"
    },
    "7604": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7605": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7606": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7608": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MUL",
      "path": "16"
    },
    "7609": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7610": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7611": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7612": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "7613": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7615": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7616": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "ADD",
      "path": "16"
    },
    "7617": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7618": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7619": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7620": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7621": {
      "op": "POP"
    },
    "7622": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7623": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "7624": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7625": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "op": "POP"
    },
    "7628": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8570
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x262B"
    },
    "7631": {
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8552,
        8620
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7634": {
      "branch": 176,
      "fn": "CryptidToken.verify",
      "offset": [
        8552,
        8620
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7635": {
      "fn": "CryptidToken.verify",
      "offset": [
        8548,
        8658
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7636": {
      "fn": "CryptidToken.verify",
      "offset": [
        8548,
        8658
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DDF"
    },
    "7639": {
      "branch": 176,
      "fn": "CryptidToken.verify",
      "offset": [
        8548,
        8658
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7640": {
      "op": "POP"
    },
    "7641": {
      "fn": "CryptidToken.verify",
      "offset": [
        8643,
        8647
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 73,
      "value": "0x1"
    },
    "7643": {
      "fn": "CryptidToken.verify",
      "offset": [
        8636,
        8647
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE3"
    },
    "7646": {
      "fn": "CryptidToken.verify",
      "offset": [
        8636,
        8647
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7647": {
      "fn": "CryptidToken.verify",
      "offset": [
        8548,
        8658
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7648": {
      "op": "POP"
    },
    "7649": {
      "fn": "CryptidToken.verify",
      "offset": [
        8674,
        8679
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 74,
      "value": "0x0"
    },
    "7651": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7652": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7653": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7654": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "POP",
      "path": "16"
    },
    "7655": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "POP",
      "path": "16"
    },
    "7656": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8686
      ],
      "op": "POP",
      "path": "16"
    },
    "7657": {
      "fn": "CryptidToken.verify",
      "jump": "o",
      "offset": [
        8444,
        8686
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7658": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7659": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x1DF4"
    },
    "7662": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7663": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7664": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2373"
    },
    "7667": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7668": {
      "branch": 186,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7669": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E10"
    },
    "7672": {
      "branch": 186,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7673": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7675": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7682": {
      "op": "SHL"
    },
    "7683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7687": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "3"
    },
    "7688": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "7691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3520"
    },
    "7695": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7696": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 76,
      "value": "0x1E1C"
    },
    "7700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2855"
    },
    "7707": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7708": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7709": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7710": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7713": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7714": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7715": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7717": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7724": {
      "op": "SHL"
    },
    "7725": {
      "op": "SUB"
    },
    "7726": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7729": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7730": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7731": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7732": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7733": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7734": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7735": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E52"
    },
    "7738": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7748": {
      "op": "SHL"
    },
    "7749": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7751": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7753": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7754": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "7757": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "7761": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7769": {
      "op": "SHL"
    },
    "7770": {
      "op": "SUB"
    },
    "7771": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "AND",
      "path": "16",
      "statement": 77
    },
    "7772": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7774": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7775": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7776": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7777": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "7779": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7781": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7782": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7784": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7785": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5181
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7786": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7787": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7790": {
      "op": "NOT"
    },
    "7791": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "AND",
      "path": "16"
    },
    "7792": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5184,
        5188
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7794": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "OR",
      "path": "16"
    },
    "7795": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7796": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5163,
        5188
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7797": {
      "fn": "CryptidToken.setClaim",
      "jump": "o",
      "offset": [
        5098,
        5195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7798": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7799": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7801": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7802": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7803": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17D6"
    },
    "7806": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7807": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "7810": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7811": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7812": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7814": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7815": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7816": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17D6"
    },
    "7819": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7820": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "7823": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7824": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7825": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7827": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7828": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7829": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7830": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7832": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7834": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7835": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7837": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7838": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7839": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7840": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7763,
        7776
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7842": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7763,
        7776
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7849": {
      "op": "SHL"
    },
    "7850": {
      "op": "SUB"
    },
    "7851": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "7852": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 78,
      "value": "0x1F10"
    },
    "7855": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7856": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7858": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7865": {
      "op": "SHL"
    },
    "7866": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7867": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7870": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7872": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7873": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "ADD",
      "path": "16"
    },
    "7874": {
      "op": "MSTORE"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7879": {
      "op": "DUP3"
    },
    "7880": {
      "op": "ADD"
    },
    "7881": {
      "op": "MSTORE"
    },
    "7882": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7917": {
      "op": "DUP3"
    },
    "7918": {
      "op": "ADD"
    },
    "7919": {
      "op": "MSTORE"
    },
    "7920": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7939": {
      "op": "SHL"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7942": {
      "op": "DUP3"
    },
    "7943": {
      "op": "ADD"
    },
    "7944": {
      "op": "MSTORE"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7947": {
      "op": "ADD"
    },
    "7948": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "7951": {
      "op": "JUMP"
    },
    "7952": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7788,
        7865
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7953": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7906,
        7913
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 79,
      "value": "0xF"
    },
    "7955": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F1B"
    },
    "7958": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7915,
        7922
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7959": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7915,
        7931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2888"
    },
    "7962": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7915,
        7933
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7963": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7915,
        7933
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7964": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7935,
        7948
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7966": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7968": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7969": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7971": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "ADD",
      "path": "16"
    },
    "7972": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F2F"
    },
    "7975": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7976": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7977": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7978": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7979": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36B3"
    },
    "7982": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7889,
        7949
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7983": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7984": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7986": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7987": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7989": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7990": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7991": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SUB",
      "path": "16"
    },
    "7992": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SUB",
      "path": "16"
    },
    "7993": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7994": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7995": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7996": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7998": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7889,
        7949
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7999": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7875,
        7950
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8000": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7875,
        7950
      ],
      "op": "POP",
      "path": "16"
    },
    "8001": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8002": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8003": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7690,
        7957
      ],
      "op": "POP",
      "path": "16"
    },
    "8004": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        7690,
        7957
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8005": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8006": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8008": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8015": {
      "op": "SHL"
    },
    "8016": {
      "op": "SUB"
    },
    "8017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8020": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8021": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8023": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8024": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8025": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8026": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F75"
    },
    "8029": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8032": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8039": {
      "op": "SHL"
    },
    "8040": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8045": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "8052": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8054": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0x12"
    },
    "8056": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8057": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8059": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8062": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8063": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8064": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "DIV",
      "path": "16"
    },
    "8065": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "AND",
      "path": "16"
    },
    "8066": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7266
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8067": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7266
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8068": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7258
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8070": {
      "branch": 177,
      "fn": "CryptidToken.setStage",
      "offset": [
        7238,
        7266
      ],
      "op": "EQ",
      "path": "16"
    },
    "8071": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FF8"
    },
    "8074": {
      "branch": 177,
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8075": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8077": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8086": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8089": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8091": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8092": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "ADD",
      "path": "16"
    },
    "8093": {
      "op": "MSTORE"
    },
    "8094": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8098": {
      "op": "DUP3"
    },
    "8099": {
      "op": "ADD"
    },
    "8100": {
      "op": "MSTORE"
    },
    "8101": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8136": {
      "op": "DUP3"
    },
    "8137": {
      "op": "ADD"
    },
    "8138": {
      "op": "MSTORE"
    },
    "8139": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8174": {
      "op": "DUP3"
    },
    "8175": {
      "op": "ADD"
    },
    "8176": {
      "op": "MSTORE"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "8183": {
      "op": "JUMP"
    },
    "8184": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7230,
        7327
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8185": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7345,
        7355
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 81,
      "value": "0xD"
    },
    "8187": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7345,
        7355
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8188": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2062"
    },
    "8191": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8192": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8194": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8203": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8206": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8208": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8209": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "ADD",
      "path": "16"
    },
    "8210": {
      "op": "MSTORE"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8215": {
      "op": "DUP3"
    },
    "8216": {
      "op": "ADD"
    },
    "8217": {
      "op": "MSTORE"
    },
    "8218": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8253": {
      "op": "DUP3"
    },
    "8254": {
      "op": "ADD"
    },
    "8255": {
      "op": "MSTORE"
    },
    "8256": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8277": {
      "op": "SHL"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8280": {
      "op": "DUP3"
    },
    "8281": {
      "op": "ADD"
    },
    "8282": {
      "op": "MSTORE"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8285": {
      "op": "ADD"
    },
    "8286": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "8289": {
      "op": "JUMP"
    },
    "8290": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7337,
        7415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8291": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7430
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 82,
      "value": "0x19"
    },
    "8293": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8294": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8295": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7433,
        7439
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8296": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7433,
        7439
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8297": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7430
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8300": {
      "op": "NOT"
    },
    "8301": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "AND",
      "path": "16"
    },
    "8302": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8304": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7433,
        7439
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8305": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8307": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8308": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "GT",
      "path": "16"
    },
    "8309": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8310": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2081"
    },
    "8313": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8314": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2081"
    },
    "8317": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "8320": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7425,
        7439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8321": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8322": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "MUL",
      "path": "16"
    },
    "8323": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "OR",
      "path": "16"
    },
    "8324": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8325": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8326": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7425,
        7439
      ],
      "op": "POP",
      "path": "16"
    },
    "8327": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7169,
        7446
      ],
      "op": "POP",
      "path": "16"
    },
    "8328": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        7169,
        7446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8329": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7593,
        7684
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8330": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7638,
        7645
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8332": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7663,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 83,
      "value": "0x1865"
    },
    "8335": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8337": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8338": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8339": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8340": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5849,
        5977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8341": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8343": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8350": {
      "op": "SHL"
    },
    "8351": {
      "op": "SUB"
    },
    "8352": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8355": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8357": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8360": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8361": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C4"
    },
    "8364": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "8387": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8389": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 84
    },
    "8390": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8391": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDBF"
    },
    "8394": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8395": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8397": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5950
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8398": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8400": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8401": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "ADD",
      "path": "16"
    },
    "8402": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8403": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5937,
        5970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F37"
    },
    "8406": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5937,
        5970
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8407": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7963,
        8075
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8408": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8011,
        8018
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8410": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8055,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 85,
      "value": "0x20E2"
    },
    "8413": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8415": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8416": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8417": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8055,
        8068
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "8421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8052
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1865"
    },
    "8425": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8068
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8426": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8427": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8037,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36E6"
    },
    "8430": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8037,
        8068
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8431": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8432": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8434": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8441": {
      "op": "SHL"
    },
    "8442": {
      "op": "SUB"
    },
    "8443": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8446": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8448": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8449": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8450": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8451": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8452": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211F"
    },
    "8455": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8465": {
      "op": "SHL"
    },
    "8466": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8470": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8474": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "8478": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8480": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5711,
        5712
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0x0"
    },
    "8482": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5693,
        5700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8484": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8485": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8486": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212E"
    },
    "8489": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8490": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B0"
    },
    "8493": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5687,
        5708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8494": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8495": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8496": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5708
      ],
      "op": "POP",
      "path": "16"
    },
    "8497": {
      "branch": 178,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5687,
        5712
      ],
      "op": "GT",
      "path": "16"
    },
    "8498": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x217D"
    },
    "8501": {
      "branch": 178,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8502": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8504": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8511": {
      "op": "SHL"
    },
    "8512": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8513": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8516": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8518": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8519": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "ADD",
      "path": "16"
    },
    "8520": {
      "op": "MSTORE"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8525": {
      "op": "DUP3"
    },
    "8526": {
      "op": "ADD"
    },
    "8527": {
      "op": "MSTORE"
    },
    "8528": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8563": {
      "op": "DUP3"
    },
    "8564": {
      "op": "ADD"
    },
    "8565": {
      "op": "MSTORE"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8568": {
      "op": "ADD"
    },
    "8569": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "8572": {
      "op": "JUMP"
    },
    "8573": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5679,
        5741
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8574": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5760,
        5774
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0x12"
    },
    "8576": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5760,
        5774
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8577": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5760,
        5774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8579": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5760,
        5774
      ],
      "op": "AND",
      "path": "16"
    },
    "8580": {
      "branch": 179,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5759,
        5774
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8581": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21D0"
    },
    "8584": {
      "branch": 179,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8585": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8587": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8594": {
      "op": "SHL"
    },
    "8595": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8596": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8599": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8601": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8602": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "ADD",
      "path": "16"
    },
    "8603": {
      "op": "MSTORE"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8608": {
      "op": "DUP3"
    },
    "8609": {
      "op": "ADD"
    },
    "8610": {
      "op": "MSTORE"
    },
    "8611": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8646": {
      "op": "DUP3"
    },
    "8647": {
      "op": "ADD"
    },
    "8648": {
      "op": "MSTORE"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8651": {
      "op": "ADD"
    },
    "8652": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB88"
    },
    "8655": {
      "op": "JUMP"
    },
    "8656": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5751,
        5805
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8657": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5829
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 88,
      "value": "0x12"
    },
    "8659": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8660": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8663": {
      "op": "NOT"
    },
    "8664": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "AND",
      "path": "16"
    },
    "8665": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5832,
        5836
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8667": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "OR",
      "path": "16"
    },
    "8668": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8669": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5815,
        5836
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8670": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5625,
        5843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8681": {
      "op": "SHL"
    },
    "8682": {
      "op": "SUB"
    },
    "8683": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8686": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8687": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8688": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8689": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8690": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8691": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8692": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220F"
    },
    "8695": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8698": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8705": {
      "op": "SHL"
    },
    "8706": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8710": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8714": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "8718": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8726": {
      "op": "SHL"
    },
    "8727": {
      "op": "SUB"
    },
    "8728": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 89
    },
    "8729": {
      "branch": 201,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2274"
    },
    "8733": {
      "branch": 201,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8736": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8743": {
      "op": "SHL"
    },
    "8744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8752": {
      "op": "MSTORE"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8757": {
      "op": "DUP3"
    },
    "8758": {
      "op": "ADD"
    },
    "8759": {
      "op": "MSTORE"
    },
    "8760": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8795": {
      "op": "DUP3"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "op": "MSTORE"
    },
    "8798": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8810": {
      "op": "DUP3"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "MSTORE"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8819": {
      "op": "JUMP"
    },
    "8820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 90,
      "value": "0x14B4"
    },
    "8824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D4"
    },
    "8828": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8829": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8830": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8839": {
      "op": "SHL"
    },
    "8840": {
      "op": "SUB"
    },
    "8841": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8844": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8845": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8846": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8847": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8848": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8849": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8850": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22AD"
    },
    "8853": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8854": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8857": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8863": {
      "op": "SHL"
    },
    "8864": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8868": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "8872": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34EB"
    },
    "8876": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8878": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6642
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 91,
      "value": "0x12"
    },
    "8880": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8881": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8888": {
      "op": "SHL"
    },
    "8889": {
      "op": "SUB"
    },
    "8890": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8891": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8892": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "AND",
      "path": "16"
    },
    "8893": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "8897": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "MUL",
      "path": "16"
    },
    "8898": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8906": {
      "op": "SHL"
    },
    "8907": {
      "op": "SUB"
    },
    "8908": {
      "op": "NOT"
    },
    "8909": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8910": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8911": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "AND",
      "path": "16"
    },
    "8912": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8913": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8914": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8915": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "OR",
      "path": "16"
    },
    "8916": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8917": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6626,
        6662
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8918": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6541,
        6669
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8919": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8920": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8921": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8922": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8924": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8925": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8926": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8927": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8928": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8929": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8937": {
      "op": "SHL"
    },
    "8938": {
      "op": "SUB"
    },
    "8939": {
      "op": "NOT"
    },
    "8940": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 92
    },
    "8941": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8942": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8949": {
      "op": "SHL"
    },
    "8950": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8951": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8952": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7B"
    },
    "8955": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8956": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8957": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7B"
    },
    "8960": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8961": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2986"
    },
    "8964": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8965": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8966": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 93,
      "value": "0x0"
    },
    "8968": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8969": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8970": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8971": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8973": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8975": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8976": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8978": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8979": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8980": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8981": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8988": {
      "op": "SHL"
    },
    "8989": {
      "op": "SUB"
    },
    "8990": {
      "op": "NOT"
    },
    "8991": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8998": {
      "op": "SHL"
    },
    "8999": {
      "op": "SUB"
    },
    "9000": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9001": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "9002": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9003": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9004": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "3"
    },
    "9005": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9006": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9007": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9008": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9009": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9010": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 94,
      "value": "0x233A"
    },
    "9013": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9014": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1752"
    },
    "9017": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9018": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9025": {
      "op": "SHL"
    },
    "9026": {
      "op": "SUB"
    },
    "9027": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "3"
    },
    "9028": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9061": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9063": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9064": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9066": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9067": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9068": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9069": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "3"
    },
    "9070": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9071": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9072": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "9073": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "9074": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9075": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9076": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9078": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9079": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9080": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9081": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9083": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9085": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9086": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9088": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9089": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9090": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9097": {
      "op": "SHL"
    },
    "9098": {
      "op": "SUB"
    },
    "9099": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "9100": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 95,
      "value": "0x23EC"
    },
    "9103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9106": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9113": {
      "op": "SHL"
    },
    "9114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9120": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9121": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "3"
    },
    "9122": {
      "op": "MSTORE"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9127": {
      "op": "DUP3"
    },
    "9128": {
      "op": "ADD"
    },
    "9129": {
      "op": "MSTORE"
    },
    "9130": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9165": {
      "op": "DUP3"
    },
    "9166": {
      "op": "ADD"
    },
    "9167": {
      "op": "MSTORE"
    },
    "9168": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9183": {
      "op": "SHL"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9186": {
      "op": "DUP3"
    },
    "9187": {
      "op": "ADD"
    },
    "9188": {
      "op": "MSTORE"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9191": {
      "op": "ADD"
    },
    "9192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "9195": {
      "op": "JUMP"
    },
    "9196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9199": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23F7"
    },
    "9202": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9203": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1752"
    },
    "9206": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9207": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "3"
    },
    "9210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 96
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9217": {
      "op": "SHL"
    },
    "9218": {
      "op": "SUB"
    },
    "9219": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9227": {
      "op": "SHL"
    },
    "9228": {
      "op": "SUB"
    },
    "9229": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "3"
    },
    "9231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9232": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2432"
    },
    "9235": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9236": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "3"
    },
    "9237": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9244": {
      "op": "SHL"
    },
    "9245": {
      "op": "SUB"
    },
    "9246": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9247": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2427"
    },
    "9250": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB13"
    },
    "9254": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9255": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "op": "SUB"
    },
    "9264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9265": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "3"
    },
    "9266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9268": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2462"
    },
    "9271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9279": {
      "op": "SHL"
    },
    "9280": {
      "op": "SUB"
    },
    "9281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9283": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "9284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9286": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9287": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9288": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9289": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9291": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9294": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9295": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9296": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9298": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9299": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9304": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9313": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9314": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9315": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7683,
        7779
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9316": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9317": {
      "op": "POP"
    },
    "9318": {
      "op": "POP"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "op": "POP"
    },
    "9321": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9322": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9323": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 97
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9330": {
      "op": "SHL"
    },
    "9331": {
      "op": "SUB"
    },
    "9332": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9333": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247D"
    },
    "9336": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9337": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1752"
    },
    "9340": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9341": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9348": {
      "op": "SHL"
    },
    "9349": {
      "op": "SUB"
    },
    "9350": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9351": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "3"
    },
    "9352": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E1"
    },
    "9355": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9356": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9358": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9365": {
      "op": "SHL"
    },
    "9366": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9367": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9370": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9372": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9373": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "3"
    },
    "9374": {
      "op": "MSTORE"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9379": {
      "op": "DUP3"
    },
    "9380": {
      "op": "ADD"
    },
    "9381": {
      "op": "MSTORE"
    },
    "9382": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9417": {
      "op": "DUP3"
    },
    "9418": {
      "op": "ADD"
    },
    "9419": {
      "op": "MSTORE"
    },
    "9420": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9428": {
      "op": "SHL"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9431": {
      "op": "DUP3"
    },
    "9432": {
      "op": "ADD"
    },
    "9433": {
      "op": "MSTORE"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "9440": {
      "op": "JUMP"
    },
    "9441": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9448": {
      "op": "SHL"
    },
    "9449": {
      "op": "SUB"
    },
    "9450": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 98
    },
    "9451": {
      "branch": 188,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "3"
    },
    "9452": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2543"
    },
    "9455": {
      "branch": 188,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9456": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9458": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9465": {
      "op": "SHL"
    },
    "9466": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9467": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9470": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9472": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9473": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "3"
    },
    "9474": {
      "op": "MSTORE"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9477": {
      "op": "DUP1"
    },
    "9478": {
      "op": "DUP3"
    },
    "9479": {
      "op": "ADD"
    },
    "9480": {
      "op": "MSTORE"
    },
    "9481": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9516": {
      "op": "DUP3"
    },
    "9517": {
      "op": "ADD"
    },
    "9518": {
      "op": "MSTORE"
    },
    "9519": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9526": {
      "op": "SHL"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9529": {
      "op": "DUP3"
    },
    "9530": {
      "op": "ADD"
    },
    "9531": {
      "op": "MSTORE"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9534": {
      "op": "ADD"
    },
    "9535": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "9538": {
      "op": "JUMP"
    },
    "9539": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9540": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 99,
      "value": "0x254E"
    },
    "9543": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9544": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9545": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9546": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "9549": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9550": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9551": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 100,
      "value": "0x2559"
    },
    "9554": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9556": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9557": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2305"
    },
    "9560": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9561": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9568": {
      "op": "SHL"
    },
    "9569": {
      "op": "SUB"
    },
    "9570": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 101
    },
    "9571": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "3"
    },
    "9572": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9574": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9575": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9576": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9577": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9579": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9581": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9582": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9584": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9585": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9586": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9587": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9588": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9590": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9591": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9592": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2582"
    },
    "9595": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9596": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9597": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9598": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36E6"
    },
    "9601": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9602": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9603": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9604": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9605": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9606": {
      "op": "POP"
    },
    "9607": {
      "op": "POP"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9614": {
      "op": "SHL"
    },
    "9615": {
      "op": "SUB"
    },
    "9616": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 102
    },
    "9617": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "3"
    },
    "9618": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9620": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9621": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9622": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9623": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9625": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9627": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9628": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9630": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9631": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9632": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9633": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9634": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9636": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9637": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9638": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25B0"
    },
    "9641": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9642": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9643": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9644": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35D0"
    },
    "9647": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9648": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9649": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9650": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9651": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9652": {
      "op": "POP"
    },
    "9653": {
      "op": "POP"
    },
    "9654": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 103,
      "value": "0x0"
    },
    "9656": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9657": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9658": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9659": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9661": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9663": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9664": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9666": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9667": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9668": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9669": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9670": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9677": {
      "op": "SHL"
    },
    "9678": {
      "op": "SUB"
    },
    "9679": {
      "op": "NOT"
    },
    "9680": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9687": {
      "op": "SHL"
    },
    "9688": {
      "op": "SUB"
    },
    "9689": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9690": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9691": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9692": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9693": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9694": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "3"
    },
    "9695": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9696": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9697": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9698": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 104
    },
    "9699": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9700": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9701": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9702": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9703": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9704": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "3"
    },
    "9705": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9706": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9739": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9740": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9741": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9742": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9743": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9744": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9745": {
      "fn": "ERC721._safeMint",
      "offset": [
        8116,
        8224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9746": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 105,
      "value": "0xDBF"
    },
    "9749": {
      "fn": "ERC721._safeMint",
      "offset": [
        8201,
        8203
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9750": {
      "fn": "ERC721._safeMint",
      "offset": [
        8205,
        8212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9751": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9753": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9754": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9755": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9757": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "ADD",
      "path": "3"
    },
    "9758": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9760": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9761": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9762": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9764": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9765": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9766": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "POP",
      "path": "3"
    },
    "9767": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A04"
    },
    "9770": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8191,
        8217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9771": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9772": {
      "fn": "MerkleProof.verify",
      "offset": [
        983,
        987
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9774": {
      "fn": "MerkleProof.verify",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 106
    },
    "9775": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2638"
    },
    "9778": {
      "fn": "MerkleProof.verify",
      "offset": [
        1019,
        1024
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9779": {
      "fn": "MerkleProof.verify",
      "offset": [
        1026,
        1030
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9780": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A37"
    },
    "9783": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9784": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9785": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "EQ",
      "path": "13"
    },
    "9786": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9787": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9788": {
      "op": "POP"
    },
    "9789": {
      "op": "POP"
    },
    "9790": {
      "op": "POP"
    },
    "9791": {
      "op": "POP"
    },
    "9792": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        862,
        1046
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9793": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9794": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9796": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9797": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9799": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9800": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x268A"
    },
    "9803": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9804": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9806": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9813": {
      "op": "SHL"
    },
    "9814": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9815": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9818": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9820": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9821": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9822": {
      "op": "MSTORE"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9827": {
      "op": "DUP3"
    },
    "9828": {
      "op": "ADD"
    },
    "9829": {
      "op": "MSTORE"
    },
    "9830": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9853": {
      "op": "SHL"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9856": {
      "op": "DUP3"
    },
    "9857": {
      "op": "ADD"
    },
    "9858": {
      "op": "MSTORE"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9861": {
      "op": "ADD"
    },
    "9862": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB88"
    },
    "9865": {
      "op": "JUMP"
    },
    "9866": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9867": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 107,
      "value": "0xA"
    },
    "9869": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9870": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9873": {
      "op": "NOT"
    },
    "9874": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9875": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9876": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9877": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 108,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9910": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9911": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9912": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9914": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9921": {
      "op": "SHL"
    },
    "9922": {
      "op": "SUB"
    },
    "9923": {
      "op": "SWAP1"
    },
    "9924": {
      "op": "SWAP2"
    },
    "9925": {
      "op": "AND"
    },
    "9926": {
      "op": "DUP2"
    },
    "9927": {
      "op": "MSTORE"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9930": {
      "op": "ADD"
    },
    "9931": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9933": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9934": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9935": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9936": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9937": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9938": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9939": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9944": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9951": {
      "op": "SHL"
    },
    "9952": {
      "op": "SUB"
    },
    "9953": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 109
    },
    "9954": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9955": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9956": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9959": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9960": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9961": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9962": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9969": {
      "op": "SHL"
    },
    "9970": {
      "op": "SUB"
    },
    "9971": {
      "op": "NOT"
    },
    "9972": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9973": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9974": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9975": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9976": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9978": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 110,
      "value": "0x40"
    },
    "9980": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9981": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9982": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9983": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9984": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "9985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9986": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9987": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10022": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10023": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10025": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10026": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10027": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10028": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10029": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10030": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10031": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10033": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10034": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10036": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10037": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10038": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2751"
    },
    "10041": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10042": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10044": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10051": {
      "op": "SHL"
    },
    "10052": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10053": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10054": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10056": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10057": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB88"
    },
    "10060": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10061": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3571"
    },
    "10064": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10065": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10066": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 111,
      "value": "0xA"
    },
    "10068": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10069": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10072": {
      "op": "NOT"
    },
    "10073": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "10074": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10076": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "10077": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10078": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10079": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 112,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "10112": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B7"
    },
    "10115": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10116": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10117": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10118": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10119": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 113
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10126": {
      "op": "SHL"
    },
    "10127": {
      "op": "SUB"
    },
    "10128": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10129": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10136": {
      "op": "SHL"
    },
    "10137": {
      "op": "SUB"
    },
    "10138": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10139": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "3"
    },
    "10140": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10141": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27E8"
    },
    "10144": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10145": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10147": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10154": {
      "op": "SHL"
    },
    "10155": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10156": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10159": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10161": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10162": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "3"
    },
    "10163": {
      "op": "MSTORE"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10168": {
      "op": "DUP3"
    },
    "10169": {
      "op": "ADD"
    },
    "10170": {
      "op": "MSTORE"
    },
    "10171": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10206": {
      "op": "DUP3"
    },
    "10207": {
      "op": "ADD"
    },
    "10208": {
      "op": "MSTORE"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10211": {
      "op": "ADD"
    },
    "10212": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "10215": {
      "op": "JUMP"
    },
    "10216": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10223": {
      "op": "SHL"
    },
    "10224": {
      "op": "SUB"
    },
    "10225": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 114
    },
    "10226": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10227": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "3"
    },
    "10228": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10230": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10231": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10232": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10233": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10235": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10237": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10238": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10239": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10240": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10242": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10243": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10244": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10245": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10246": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10247": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "3"
    },
    "10248": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10249": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10250": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10251": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10252": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10253": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10254": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10255": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10256": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10257": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10258": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10259": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10260": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10262": {
      "op": "NOT"
    },
    "10263": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "3"
    },
    "10264": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10265": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10266": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10267": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10268": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10269": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "3"
    },
    "10270": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 115
    },
    "10274": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10275": {
      "op": "SWAP2"
    },
    "10276": {
      "op": "DUP3"
    },
    "10277": {
      "op": "MSTORE"
    },
    "10278": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10311": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10312": {
      "op": "ADD"
    },
    "10313": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10315": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10316": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10317": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10318": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "3"
    },
    "10319": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10320": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10321": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10322": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10323": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10324": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10325": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10326": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 116,
      "value": "0x2860"
    },
    "10329": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10330": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10331": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10332": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x246A"
    },
    "10335": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10336": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10337": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 117,
      "value": "0x286C"
    },
    "10340": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10341": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10342": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10343": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10344": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA3"
    },
    "10347": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10348": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10349": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E1C"
    },
    "10352": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10353": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10355": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10362": {
      "op": "SHL"
    },
    "10363": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10364": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10365": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10367": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "3"
    },
    "10368": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "10371": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10372": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36FD"
    },
    "10375": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10376": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10377": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10379": {
      "branch": 203,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10380": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28AC"
    },
    "10383": {
      "branch": 203,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10384": {
      "op": "POP"
    },
    "10385": {
      "op": "POP"
    },
    "10386": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 118,
      "value": "0x40"
    },
    "10388": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10389": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10390": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10391": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10392": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10393": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10394": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10395": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10396": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10398": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10399": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10404": {
      "op": "SHL"
    },
    "10405": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10407": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10408": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10409": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10410": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10411": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10412": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10413": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10414": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10416": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10417": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10418": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10419": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28D6"
    },
    "10422": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10423": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 119
    },
    "10424": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C0"
    },
    "10427": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10428": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35E8"
    },
    "10431": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10432": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10433": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10434": {
      "op": "POP"
    },
    "10435": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x28CF"
    },
    "10438": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10439": {
      "op": "POP"
    },
    "10440": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10442": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10443": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3765"
    },
    "10446": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10447": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10448": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10449": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10450": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B0"
    },
    "10453": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10454": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10455": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10457": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10458": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10467": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10468": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10469": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10470": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F1"
    },
    "10473": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10474": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F1"
    },
    "10477": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30CD"
    },
    "10480": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10481": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10482": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10484": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10485": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10486": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10487": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10488": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10489": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10490": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10492": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10493": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10495": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10496": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10497": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10499": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10500": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10501": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10502": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10504": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10505": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10506": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10507": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x291B"
    },
    "10510": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10511": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10513": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10514": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10515": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10516": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10517": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10518": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10519": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10520": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10521": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10522": {
      "op": "POP"
    },
    "10523": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10524": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10525": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10526": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10527": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10528": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10529": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10530": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2462"
    },
    "10533": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10534": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x2930"
    },
    "10537": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10539": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10540": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36E6"
    },
    "10543": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10544": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10545": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x293D"
    },
    "10550": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10552": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10553": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3779"
    },
    "10556": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10557": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10558": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2948"
    },
    "10561": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10562": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10564": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D0"
    },
    "10567": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10568": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10569": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10571": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10572": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10573": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10574": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10575": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10576": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10577": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10578": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295D"
    },
    "10581": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10582": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295D"
    },
    "10585": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3603"
    },
    "10588": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10589": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10590": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10592": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10593": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10594": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10599": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10601": {
      "op": "SHL"
    },
    "10602": {
      "op": "SUB"
    },
    "10603": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10604": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10605": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10606": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10607": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10609": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10610": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10611": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10612": {
      "op": "POP"
    },
    "10613": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 123,
      "value": "0x297F"
    },
    "10616": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10618": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10619": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3765"
    },
    "10622": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10623": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10624": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10625": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10626": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x291F"
    },
    "10629": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10631": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10639": {
      "op": "SHL"
    },
    "10640": {
      "op": "SUB"
    },
    "10641": {
      "op": "NOT"
    },
    "10642": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 124
    },
    "10643": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "10644": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10651": {
      "op": "SHL"
    },
    "10652": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "10653": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10654": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29B7"
    },
    "10657": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10658": {
      "op": "POP"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10665": {
      "op": "SHL"
    },
    "10666": {
      "op": "SUB"
    },
    "10667": {
      "op": "NOT"
    },
    "10668": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10669": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "10670": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10675": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10677": {
      "op": "SHL"
    },
    "10678": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "10679": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10680": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10681": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "10684": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10685": {
      "op": "POP"
    },
    "10686": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10693": {
      "op": "SHL"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10700": {
      "op": "SHL"
    },
    "10701": {
      "op": "SUB"
    },
    "10702": {
      "op": "NOT"
    },
    "10703": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 125
    },
    "10704": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10705": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10706": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "10709": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10710": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8696,
        8889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10711": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10713": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10714": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10716": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10717": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10718": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29F9"
    },
    "10721": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10722": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10724": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10731": {
      "op": "SHL"
    },
    "10732": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10733": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10734": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10736": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10737": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB88"
    },
    "10740": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10741": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3571"
    },
    "10744": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10745": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10746": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8837,
        8882
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 126,
      "value": "0xCBE"
    },
    "10749": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8864,
        8868
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10750": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8870,
        8872
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10751": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8874,
        8881
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10752": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8837,
        8863
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BA1"
    },
    "10755": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8837,
        8882
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10756": {
      "fn": "ERC721._safeMint",
      "offset": [
        8445,
        8756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10757": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 127,
      "value": "0x2A0E"
    },
    "10760": {
      "fn": "ERC721._safeMint",
      "offset": [
        8576,
        8578
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10761": {
      "fn": "ERC721._safeMint",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10762": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C59"
    },
    "10765": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10766": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10767": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 128,
      "value": "0x2A1B"
    },
    "10770": {
      "fn": "ERC721._safeMint",
      "offset": [
        8650,
        8651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10772": {
      "fn": "ERC721._safeMint",
      "offset": [
        8654,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10773": {
      "fn": "ERC721._safeMint",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10774": {
      "fn": "ERC721._safeMint",
      "offset": [
        8667,
        8672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10775": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA3"
    },
    "10778": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10779": {
      "branch": 191,
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10780": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBE"
    },
    "10783": {
      "branch": 191,
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10784": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10786": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10793": {
      "op": "SHL"
    },
    "10794": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10795": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10796": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10798": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "ADD",
      "path": "3"
    },
    "10799": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "10802": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10803": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36FD"
    },
    "10806": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10807": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1398,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10808": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10810": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1523,
        1527
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10811": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10812": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10813": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1566
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10814": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10815": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10816": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1573
      ],
      "op": "LT",
      "path": "13"
    },
    "10817": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10818": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A6"
    },
    "10821": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10822": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1614
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10824": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1622
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10825": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1623,
        1624
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10826": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10827": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10828": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10829": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "LT",
      "path": "13"
    },
    "10830": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A59"
    },
    "10833": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10834": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A59"
    },
    "10837": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3603"
    },
    "10840": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10841": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10842": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10844": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MUL",
      "path": "13"
    },
    "10845": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10847": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10848": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10849": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10850": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10851": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "POP",
      "path": "13"
    },
    "10852": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1659,
        1671
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10853": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10854": {
      "branch": 200,
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1671
      ],
      "op": "GT",
      "path": "13"
    },
    "10855": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A7F"
    },
    "10858": {
      "branch": 200,
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10859": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10861": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10862": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10863": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10864": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10866": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10867": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10868": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10869": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10871": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10872": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10873": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 129
    },
    "10874": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "POP",
      "path": "13"
    },
    "10875": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A90"
    },
    "10878": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10879": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10880": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10882": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10883": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10884": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10885": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10887": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10888": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10889": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10890": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10892": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10893": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10894": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 130
    },
    "10895": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "POP",
      "path": "13"
    },
    "10896": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10897": {
      "op": "POP"
    },
    "10898": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 131
    },
    "10899": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A9B"
    },
    "10902": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10903": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35E8"
    },
    "10906": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10907": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10908": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10909": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10910": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10911": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A3C"
    },
    "10914": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10924": {
      "op": "SHL"
    },
    "10925": {
      "op": "SUB"
    },
    "10926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "10928": {
      "op": "EXTCODESIZE"
    },
    "10929": {
      "op": "ISZERO"
    },
    "10930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B96"
    },
    "10933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10937": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10942": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10944": {
      "op": "SHL"
    },
    "10945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10953": {
      "op": "SHL"
    },
    "10954": {
      "op": "SUB"
    },
    "10955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "3"
    },
    "10957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "10963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AE7"
    },
    "10967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10968": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10969": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "10971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378D"
    },
    "10982": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "3"
    },
    "10992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "3"
    },
    "10997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "3"
    },
    "10998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "11002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B22"
    },
    "11007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11008": {
      "op": "POP"
    },
    "11009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11016": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11021": {
      "op": "NOT"
    },
    "11022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "3"
    },
    "11023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B1F"
    },
    "11031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "11034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37CA"
    },
    "11038": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B7C"
    },
    "11046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B50"
    },
    "11054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "3"
    },
    "11063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "11065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "3"
    },
    "11068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "11084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B55"
    },
    "11087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "11091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11094": {
      "op": "POP"
    },
    "11095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B74"
    },
    "11100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 132,
      "value": "0x40"
    },
    "11103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11110": {
      "op": "SHL"
    },
    "11111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "11119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36FD"
    },
    "11123": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "3"
    },
    "11131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11139": {
      "op": "SHL"
    },
    "11140": {
      "op": "SUB"
    },
    "11141": {
      "op": "NOT"
    },
    "11142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "3",
      "statement": 133
    },
    "11143": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11150": {
      "op": "SHL"
    },
    "11151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "3"
    },
    "11152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11153": {
      "op": "POP"
    },
    "11154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2462"
    },
    "11157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11159": {
      "op": "POP"
    },
    "11160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 134,
      "value": "0x1"
    },
    "11162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "11164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11168": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11169": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11176": {
      "op": "SHL"
    },
    "11177": {
      "op": "SUB"
    },
    "11178": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11179": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "11180": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BFC"
    },
    "11183": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11184": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 135,
      "value": "0x2BF7"
    },
    "11187": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11188": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 136,
      "value": "0x8"
    },
    "11190": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11191": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11192": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11194": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11195": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11196": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11197": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11199": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11201": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11202": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11204": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11205": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11206": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11207": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11208": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11209": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 137,
      "value": "0x1"
    },
    "11211": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11212": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11213": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11214": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11215": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11216": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11217": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11218": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11219": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11252": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11253": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11254": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11255": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11256": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1F"
    },
    "11259": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11260": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11261": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11268": {
      "op": "SHL"
    },
    "11269": {
      "op": "SUB"
    },
    "11270": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11271": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11278": {
      "op": "SHL"
    },
    "11279": {
      "op": "SUB"
    },
    "11280": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11281": {
      "branch": 196,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11282": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1F"
    },
    "11285": {
      "branch": 196,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11286": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 138,
      "value": "0x2C1F"
    },
    "11289": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11290": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11291": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DA7"
    },
    "11294": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11295": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11302": {
      "op": "SHL"
    },
    "11303": {
      "op": "SUB"
    },
    "11304": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11305": {
      "branch": 197,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11306": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C36"
    },
    "11309": {
      "branch": 197,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11310": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 139,
      "value": "0xCBE"
    },
    "11313": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11314": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E44"
    },
    "11317": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11318": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11319": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11326": {
      "op": "SHL"
    },
    "11327": {
      "op": "SUB"
    },
    "11328": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11329": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11336": {
      "op": "SHL"
    },
    "11337": {
      "op": "SUB"
    },
    "11338": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11339": {
      "branch": 198,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11340": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCBE"
    },
    "11343": {
      "branch": 198,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11344": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 140,
      "value": "0xCBE"
    },
    "11347": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11348": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11349": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EF3"
    },
    "11352": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11353": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11360": {
      "op": "SHL"
    },
    "11361": {
      "op": "SUB"
    },
    "11362": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 141
    },
    "11363": {
      "branch": 192,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "3"
    },
    "11364": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CAF"
    },
    "11367": {
      "branch": 192,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11368": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11370": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11379": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11382": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11384": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11385": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "3"
    },
    "11386": {
      "op": "DUP2"
    },
    "11387": {
      "op": "SWAP1"
    },
    "11388": {
      "op": "MSTORE"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11391": {
      "op": "DUP3"
    },
    "11392": {
      "op": "ADD"
    },
    "11393": {
      "op": "MSTORE"
    },
    "11394": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11429": {
      "op": "DUP3"
    },
    "11430": {
      "op": "ADD"
    },
    "11431": {
      "op": "MSTORE"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11434": {
      "op": "ADD"
    },
    "11435": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "11438": {
      "op": "JUMP"
    },
    "11439": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11440": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11442": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11443": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11444": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11445": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11447": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11449": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11450": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11452": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11453": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11454": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11461": {
      "op": "SHL"
    },
    "11462": {
      "op": "SUB"
    },
    "11463": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "11464": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11465": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 142,
      "value": "0x2D14"
    },
    "11468": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11469": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11471": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11478": {
      "op": "SHL"
    },
    "11479": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11480": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11483": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11485": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11486": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "3"
    },
    "11487": {
      "op": "MSTORE"
    },
    "11488": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11492": {
      "op": "DUP3"
    },
    "11493": {
      "op": "ADD"
    },
    "11494": {
      "op": "MSTORE"
    },
    "11495": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11528": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11530": {
      "op": "DUP3"
    },
    "11531": {
      "op": "ADD"
    },
    "11532": {
      "op": "MSTORE"
    },
    "11533": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11535": {
      "op": "ADD"
    },
    "11536": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB88"
    },
    "11539": {
      "op": "JUMP"
    },
    "11540": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11541": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 143,
      "value": "0x2D20"
    },
    "11544": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11546": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11547": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11548": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "11551": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11552": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11559": {
      "op": "SHL"
    },
    "11560": {
      "op": "SUB"
    },
    "11561": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 144
    },
    "11562": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "3"
    },
    "11563": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11565": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11566": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11567": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11568": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11570": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11572": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11573": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11575": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11576": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11577": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11578": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11579": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11581": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11582": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11583": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D49"
    },
    "11586": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11587": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11588": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11589": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35D0"
    },
    "11592": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11593": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11594": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11595": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11596": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11597": {
      "op": "POP"
    },
    "11598": {
      "op": "POP"
    },
    "11599": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 145,
      "value": "0x0"
    },
    "11601": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11602": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11603": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11604": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11606": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11608": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11609": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11611": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11612": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11613": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11614": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11615": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11622": {
      "op": "SHL"
    },
    "11623": {
      "op": "SUB"
    },
    "11624": {
      "op": "NOT"
    },
    "11625": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11632": {
      "op": "SHL"
    },
    "11633": {
      "op": "SUB"
    },
    "11634": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11635": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11636": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11637": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11638": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "3"
    },
    "11639": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11640": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11641": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11642": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 146
    },
    "11643": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11644": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11645": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11646": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11647": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11680": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11681": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11682": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11683": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11684": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6235,
        6267
      ],
      "op": "POP",
      "path": "16"
    },
    "11685": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5983,
        6274
      ],
      "op": "POP",
      "path": "16"
    },
    "11686": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5983,
        6274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11687": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11688": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11690": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11692": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DB4"
    },
    "11695": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11696": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186A"
    },
    "11699": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DBE"
    },
    "11704": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11706": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36E6"
    },
    "11709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11728": {
      "op": "POP"
    },
    "11729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11731": {
      "branch": 199,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E11"
    },
    "11735": {
      "branch": 199,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11742": {
      "op": "SHL"
    },
    "11743": {
      "op": "SUB"
    },
    "11744": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11748": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11750": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11753": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11755": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11756": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11760": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11768": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11770": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11772": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 147
    },
    "11773": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11776": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11781": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 148
    },
    "11782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11794": {
      "op": "POP"
    },
    "11795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 149,
      "value": "0x0"
    },
    "11797": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11798": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11802": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11804": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11805": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11806": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11807": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11809": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11810": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11811": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11812": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11813": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11814": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11821": {
      "op": "SHL"
    },
    "11822": {
      "op": "SUB"
    },
    "11823": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 150
    },
    "11824": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11825": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11826": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11827": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11828": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11830": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11831": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11832": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11833": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11834": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11835": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11836": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11837": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11838": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11839": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11840": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11841": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11842": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11843": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11844": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11845": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11850": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E56"
    },
    "11854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36E6"
    },
    "11861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11862": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11865": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11870": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11872": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11877": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11884": {
      "op": "POP"
    },
    "11885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E7E"
    },
    "11894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E7E"
    },
    "11898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3603"
    },
    "11901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11909": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11911": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11916": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 151
    },
    "11917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11921": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "11924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E9F"
    },
    "11927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E9F"
    },
    "11931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3603"
    },
    "11934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11938": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11943": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11945": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "11949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 152
    },
    "11954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11955": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11963": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 153
    },
    "11970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11974": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11975": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 154,
      "value": "0x8"
    },
    "11977": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11978": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11979": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11980": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ED7"
    },
    "11983": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11984": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ED7"
    },
    "11987": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37E7"
    },
    "11990": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11991": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11992": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11994": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11995": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "11996": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11997": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11998": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11999": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12001": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12002": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12004": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12006": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12007": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "12008": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12010": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12011": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12012": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12013": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12014": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12015": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12016": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12017": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12018": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12019": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12020": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12022": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EFE"
    },
    "12025": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12026": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186A"
    },
    "12029": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12030": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12037": {
      "op": "SHL"
    },
    "12038": {
      "op": "SUB"
    },
    "12039": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 155
    },
    "12040": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "12041": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "12042": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12044": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12045": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12046": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12047": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "12049": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12051": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12052": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12053": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12054": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12056": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12057": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12058": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12059": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "12060": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12061": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12062": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12063": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12064": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12065": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12066": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12067": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "12068": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12069": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12070": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 156
    },
    "12071": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12072": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12073": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "12075": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12076": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12077": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12078": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12079": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12080": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12081": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12082": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12083": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12084": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12085": {
      "op": "POP"
    },
    "12086": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12087": {
      "op": "JUMPDEST"
    },
    "12088": {
      "op": "DUP3"
    },
    "12089": {
      "op": "DUP1"
    },
    "12090": {
      "op": "SLOAD"
    },
    "12091": {
      "op": "PUSH2",
      "value": "0x2F43"
    },
    "12094": {
      "op": "SWAP1"
    },
    "12095": {
      "op": "PUSH2",
      "value": "0x34B0"
    },
    "12098": {
      "jump": "i",
      "op": "JUMP"
    },
    "12099": {
      "op": "JUMPDEST"
    },
    "12100": {
      "op": "SWAP1"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12103": {
      "op": "MSTORE"
    },
    "12104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12108": {
      "op": "KECCAK256"
    },
    "12109": {
      "op": "SWAP1"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12112": {
      "op": "ADD"
    },
    "12113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12115": {
      "op": "SWAP1"
    },
    "12116": {
      "op": "DIV"
    },
    "12117": {
      "op": "DUP2"
    },
    "12118": {
      "op": "ADD"
    },
    "12119": {
      "op": "SWAP3"
    },
    "12120": {
      "op": "DUP3"
    },
    "12121": {
      "op": "PUSH2",
      "value": "0x2F65"
    },
    "12124": {
      "op": "JUMPI"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12127": {
      "op": "DUP6"
    },
    "12128": {
      "op": "SSTORE"
    },
    "12129": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12132": {
      "op": "JUMP"
    },
    "12133": {
      "op": "JUMPDEST"
    },
    "12134": {
      "op": "DUP3"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12137": {
      "op": "LT"
    },
    "12138": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "12141": {
      "op": "JUMPI"
    },
    "12142": {
      "op": "DUP1"
    },
    "12143": {
      "op": "MLOAD"
    },
    "12144": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12146": {
      "op": "NOT"
    },
    "12147": {
      "op": "AND"
    },
    "12148": {
      "op": "DUP4"
    },
    "12149": {
      "op": "DUP1"
    },
    "12150": {
      "op": "ADD"
    },
    "12151": {
      "op": "OR"
    },
    "12152": {
      "op": "DUP6"
    },
    "12153": {
      "op": "SSTORE"
    },
    "12154": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12157": {
      "op": "JUMP"
    },
    "12158": {
      "op": "JUMPDEST"
    },
    "12159": {
      "op": "DUP3"
    },
    "12160": {
      "op": "DUP1"
    },
    "12161": {
      "op": "ADD"
    },
    "12162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12164": {
      "op": "ADD"
    },
    "12165": {
      "op": "DUP6"
    },
    "12166": {
      "op": "SSTORE"
    },
    "12167": {
      "op": "DUP3"
    },
    "12168": {
      "op": "ISZERO"
    },
    "12169": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12172": {
      "op": "JUMPI"
    },
    "12173": {
      "op": "SWAP2"
    },
    "12174": {
      "op": "DUP3"
    },
    "12175": {
      "op": "ADD"
    },
    "12176": {
      "op": "JUMPDEST"
    },
    "12177": {
      "op": "DUP3"
    },
    "12178": {
      "op": "DUP2"
    },
    "12179": {
      "op": "GT"
    },
    "12180": {
      "op": "ISZERO"
    },
    "12181": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12184": {
      "op": "JUMPI"
    },
    "12185": {
      "op": "DUP3"
    },
    "12186": {
      "op": "MLOAD"
    },
    "12187": {
      "op": "DUP3"
    },
    "12188": {
      "op": "SSTORE"
    },
    "12189": {
      "op": "SWAP2"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12192": {
      "op": "ADD"
    },
    "12193": {
      "op": "SWAP2"
    },
    "12194": {
      "op": "SWAP1"
    },
    "12195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12197": {
      "op": "ADD"
    },
    "12198": {
      "op": "SWAP1"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2F90"
    },
    "12202": {
      "op": "JUMP"
    },
    "12203": {
      "op": "JUMPDEST"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "op": "PUSH2",
      "value": "0x2FB7"
    },
    "12208": {
      "op": "SWAP3"
    },
    "12209": {
      "op": "SWAP2"
    },
    "12210": {
      "op": "POP"
    },
    "12211": {
      "op": "PUSH2",
      "value": "0x2FBB"
    },
    "12214": {
      "jump": "i",
      "op": "JUMP"
    },
    "12215": {
      "op": "JUMPDEST"
    },
    "12216": {
      "op": "POP"
    },
    "12217": {
      "op": "SWAP1"
    },
    "12218": {
      "jump": "o",
      "op": "JUMP"
    },
    "12219": {
      "op": "JUMPDEST"
    },
    "12220": {
      "op": "JUMPDEST"
    },
    "12221": {
      "op": "DUP1"
    },
    "12222": {
      "op": "DUP3"
    },
    "12223": {
      "op": "GT"
    },
    "12224": {
      "op": "ISZERO"
    },
    "12225": {
      "op": "PUSH2",
      "value": "0x2FB7"
    },
    "12228": {
      "op": "JUMPI"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12231": {
      "op": "DUP2"
    },
    "12232": {
      "op": "SSTORE"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12235": {
      "op": "ADD"
    },
    "12236": {
      "op": "PUSH2",
      "value": "0x2FBC"
    },
    "12239": {
      "op": "JUMP"
    },
    "12240": {
      "op": "JUMPDEST"
    },
    "12241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12247": {
      "op": "SHL"
    },
    "12248": {
      "op": "SUB"
    },
    "12249": {
      "op": "NOT"
    },
    "12250": {
      "op": "DUP2"
    },
    "12251": {
      "op": "AND"
    },
    "12252": {
      "op": "DUP2"
    },
    "12253": {
      "op": "EQ"
    },
    "12254": {
      "op": "PUSH2",
      "value": "0x14B4"
    },
    "12257": {
      "op": "JUMPI"
    },
    "12258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12260": {
      "op": "DUP1"
    },
    "12261": {
      "op": "REVERT"
    },
    "12262": {
      "op": "JUMPDEST"
    },
    "12263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12267": {
      "op": "DUP3"
    },
    "12268": {
      "op": "DUP5"
    },
    "12269": {
      "op": "SUB"
    },
    "12270": {
      "op": "SLT"
    },
    "12271": {
      "op": "ISZERO"
    },
    "12272": {
      "op": "PUSH2",
      "value": "0x2FF8"
    },
    "12275": {
      "op": "JUMPI"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12278": {
      "op": "DUP1"
    },
    "12279": {
      "op": "REVERT"
    },
    "12280": {
      "op": "JUMPDEST"
    },
    "12281": {
      "op": "DUP2"
    },
    "12282": {
      "op": "CALLDATALOAD"
    },
    "12283": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "12286": {
      "op": "DUP2"
    },
    "12287": {
      "op": "PUSH2",
      "value": "0x2FD0"
    },
    "12290": {
      "jump": "i",
      "op": "JUMP"
    },
    "12291": {
      "op": "JUMPDEST"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12294": {
      "op": "JUMPDEST"
    },
    "12295": {
      "op": "DUP4"
    },
    "12296": {
      "op": "DUP2"
    },
    "12297": {
      "op": "LT"
    },
    "12298": {
      "op": "ISZERO"
    },
    "12299": {
      "op": "PUSH2",
      "value": "0x301E"
    },
    "12302": {
      "op": "JUMPI"
    },
    "12303": {
      "op": "DUP2"
    },
    "12304": {
      "op": "DUP2"
    },
    "12305": {
      "op": "ADD"
    },
    "12306": {
      "op": "MLOAD"
    },
    "12307": {
      "op": "DUP4"
    },
    "12308": {
      "op": "DUP3"
    },
    "12309": {
      "op": "ADD"
    },
    "12310": {
      "op": "MSTORE"
    },
    "12311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12313": {
      "op": "ADD"
    },
    "12314": {
      "op": "PUSH2",
      "value": "0x3006"
    },
    "12317": {
      "op": "JUMP"
    },
    "12318": {
      "op": "JUMPDEST"
    },
    "12319": {
      "op": "DUP4"
    },
    "12320": {
      "op": "DUP2"
    },
    "12321": {
      "op": "GT"
    },
    "12322": {
      "op": "ISZERO"
    },
    "12323": {
      "op": "PUSH2",
      "value": "0x1E1C"
    },
    "12326": {
      "op": "JUMPI"
    },
    "12327": {
      "op": "POP"
    },
    "12328": {
      "op": "POP"
    },
    "12329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12331": {
      "op": "SWAP2"
    },
    "12332": {
      "op": "ADD"
    },
    "12333": {
      "op": "MSTORE"
    },
    "12334": {
      "jump": "o",
      "op": "JUMP"
    },
    "12335": {
      "op": "JUMPDEST"
    },
    "12336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12338": {
      "op": "DUP2"
    },
    "12339": {
      "op": "MLOAD"
    },
    "12340": {
      "op": "DUP1"
    },
    "12341": {
      "op": "DUP5"
    },
    "12342": {
      "op": "MSTORE"
    },
    "12343": {
      "op": "PUSH2",
      "value": "0x3047"
    },
    "12346": {
      "op": "DUP2"
    },
    "12347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12349": {
      "op": "DUP7"
    },
    "12350": {
      "op": "ADD"
    },
    "12351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12353": {
      "op": "DUP7"
    },
    "12354": {
      "op": "ADD"
    },
    "12355": {
      "op": "PUSH2",
      "value": "0x3003"
    },
    "12358": {
      "jump": "i",
      "op": "JUMP"
    },
    "12359": {
      "op": "JUMPDEST"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12362": {
      "op": "ADD"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12365": {
      "op": "NOT"
    },
    "12366": {
      "op": "AND"
    },
    "12367": {
      "op": "SWAP3"
    },
    "12368": {
      "op": "SWAP1"
    },
    "12369": {
      "op": "SWAP3"
    },
    "12370": {
      "op": "ADD"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12373": {
      "op": "ADD"
    },
    "12374": {
      "op": "SWAP3"
    },
    "12375": {
      "op": "SWAP2"
    },
    "12376": {
      "op": "POP"
    },
    "12377": {
      "op": "POP"
    },
    "12378": {
      "jump": "o",
      "op": "JUMP"
    },
    "12379": {
      "op": "JUMPDEST"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12382": {
      "op": "DUP2"
    },
    "12383": {
      "op": "MSTORE"
    },
    "12384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12386": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12391": {
      "op": "DUP4"
    },
    "12392": {
      "op": "ADD"
    },
    "12393": {
      "op": "DUP5"
    },
    "12394": {
      "op": "PUSH2",
      "value": "0x302F"
    },
    "12397": {
      "jump": "i",
      "op": "JUMP"
    },
    "12398": {
      "op": "JUMPDEST"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12403": {
      "op": "DUP3"
    },
    "12404": {
      "op": "DUP5"
    },
    "12405": {
      "op": "SUB"
    },
    "12406": {
      "op": "SLT"
    },
    "12407": {
      "op": "ISZERO"
    },
    "12408": {
      "op": "PUSH2",
      "value": "0x3080"
    },
    "12411": {
      "op": "JUMPI"
    },
    "12412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12414": {
      "op": "DUP1"
    },
    "12415": {
      "op": "REVERT"
    },
    "12416": {
      "op": "JUMPDEST"
    },
    "12417": {
      "op": "POP"
    },
    "12418": {
      "op": "CALLDATALOAD"
    },
    "12419": {
      "op": "SWAP2"
    },
    "12420": {
      "op": "SWAP1"
    },
    "12421": {
      "op": "POP"
    },
    "12422": {
      "jump": "o",
      "op": "JUMP"
    },
    "12423": {
      "op": "JUMPDEST"
    },
    "12424": {
      "op": "DUP1"
    },
    "12425": {
      "op": "CALLDATALOAD"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12432": {
      "op": "SHL"
    },
    "12433": {
      "op": "SUB"
    },
    "12434": {
      "op": "DUP2"
    },
    "12435": {
      "op": "AND"
    },
    "12436": {
      "op": "DUP2"
    },
    "12437": {
      "op": "EQ"
    },
    "12438": {
      "op": "PUSH2",
      "value": "0x309E"
    },
    "12441": {
      "op": "JUMPI"
    },
    "12442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12444": {
      "op": "DUP1"
    },
    "12445": {
      "op": "REVERT"
    },
    "12446": {
      "op": "JUMPDEST"
    },
    "12447": {
      "op": "SWAP2"
    },
    "12448": {
      "op": "SWAP1"
    },
    "12449": {
      "op": "POP"
    },
    "12450": {
      "jump": "o",
      "op": "JUMP"
    },
    "12451": {
      "op": "JUMPDEST"
    },
    "12452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12454": {
      "op": "DUP1"
    },
    "12455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12457": {
      "op": "DUP4"
    },
    "12458": {
      "op": "DUP6"
    },
    "12459": {
      "op": "SUB"
    },
    "12460": {
      "op": "SLT"
    },
    "12461": {
      "op": "ISZERO"
    },
    "12462": {
      "op": "PUSH2",
      "value": "0x30B6"
    },
    "12465": {
      "op": "JUMPI"
    },
    "12466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12468": {
      "op": "DUP1"
    },
    "12469": {
      "op": "REVERT"
    },
    "12470": {
      "op": "JUMPDEST"
    },
    "12471": {
      "op": "PUSH2",
      "value": "0x30BF"
    },
    "12474": {
      "op": "DUP4"
    },
    "12475": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "12478": {
      "jump": "i",
      "op": "JUMP"
    },
    "12479": {
      "op": "JUMPDEST"
    },
    "12480": {
      "op": "SWAP5"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12483": {
      "op": "SWAP4"
    },
    "12484": {
      "op": "SWAP1"
    },
    "12485": {
      "op": "SWAP4"
    },
    "12486": {
      "op": "ADD"
    },
    "12487": {
      "op": "CALLDATALOAD"
    },
    "12488": {
      "op": "SWAP4"
    },
    "12489": {
      "op": "POP"
    },
    "12490": {
      "op": "POP"
    },
    "12491": {
      "op": "POP"
    },
    "12492": {
      "jump": "o",
      "op": "JUMP"
    },
    "12493": {
      "op": "JUMPDEST"
    },
    "12494": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12501": {
      "op": "SHL"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12504": {
      "op": "MSTORE"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12507": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12509": {
      "op": "MSTORE"
    },
    "12510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12514": {
      "op": "REVERT"
    },
    "12515": {
      "op": "JUMPDEST"
    },
    "12516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12518": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12527": {
      "op": "DUP1"
    },
    "12528": {
      "op": "DUP5"
    },
    "12529": {
      "op": "GT"
    },
    "12530": {
      "op": "ISZERO"
    },
    "12531": {
      "op": "PUSH2",
      "value": "0x30FE"
    },
    "12534": {
      "op": "JUMPI"
    },
    "12535": {
      "op": "PUSH2",
      "value": "0x30FE"
    },
    "12538": {
      "op": "PUSH2",
      "value": "0x30CD"
    },
    "12541": {
      "jump": "i",
      "op": "JUMP"
    },
    "12542": {
      "op": "JUMPDEST"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12545": {
      "op": "MLOAD"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12548": {
      "op": "DUP6"
    },
    "12549": {
      "op": "ADD"
    },
    "12550": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12552": {
      "op": "NOT"
    },
    "12553": {
      "op": "SWAP1"
    },
    "12554": {
      "op": "DUP2"
    },
    "12555": {
      "op": "AND"
    },
    "12556": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12558": {
      "op": "ADD"
    },
    "12559": {
      "op": "AND"
    },
    "12560": {
      "op": "DUP2"
    },
    "12561": {
      "op": "ADD"
    },
    "12562": {
      "op": "SWAP1"
    },
    "12563": {
      "op": "DUP3"
    },
    "12564": {
      "op": "DUP3"
    },
    "12565": {
      "op": "GT"
    },
    "12566": {
      "op": "DUP2"
    },
    "12567": {
      "op": "DUP4"
    },
    "12568": {
      "op": "LT"
    },
    "12569": {
      "op": "OR"
    },
    "12570": {
      "op": "ISZERO"
    },
    "12571": {
      "op": "PUSH2",
      "value": "0x3126"
    },
    "12574": {
      "op": "JUMPI"
    },
    "12575": {
      "op": "PUSH2",
      "value": "0x3126"
    },
    "12578": {
      "op": "PUSH2",
      "value": "0x30CD"
    },
    "12581": {
      "jump": "i",
      "op": "JUMP"
    },
    "12582": {
      "op": "JUMPDEST"
    },
    "12583": {
      "op": "DUP2"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12586": {
      "op": "MSTORE"
    },
    "12587": {
      "op": "DUP1"
    },
    "12588": {
      "op": "SWAP4"
    },
    "12589": {
      "op": "POP"
    },
    "12590": {
      "op": "DUP6"
    },
    "12591": {
      "op": "DUP2"
    },
    "12592": {
      "op": "MSTORE"
    },
    "12593": {
      "op": "DUP7"
    },
    "12594": {
      "op": "DUP7"
    },
    "12595": {
      "op": "DUP7"
    },
    "12596": {
      "op": "ADD"
    },
    "12597": {
      "op": "GT"
    },
    "12598": {
      "op": "ISZERO"
    },
    "12599": {
      "op": "PUSH2",
      "value": "0x313F"
    },
    "12602": {
      "op": "JUMPI"
    },
    "12603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12605": {
      "op": "DUP1"
    },
    "12606": {
      "op": "REVERT"
    },
    "12607": {
      "op": "JUMPDEST"
    },
    "12608": {
      "op": "DUP6"
    },
    "12609": {
      "op": "DUP6"
    },
    "12610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12612": {
      "op": "DUP4"
    },
    "12613": {
      "op": "ADD"
    },
    "12614": {
      "op": "CALLDATACOPY"
    },
    "12615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12619": {
      "op": "DUP8"
    },
    "12620": {
      "op": "DUP4"
    },
    "12621": {
      "op": "ADD"
    },
    "12622": {
      "op": "ADD"
    },
    "12623": {
      "op": "MSTORE"
    },
    "12624": {
      "op": "POP"
    },
    "12625": {
      "op": "POP"
    },
    "12626": {
      "op": "POP"
    },
    "12627": {
      "op": "SWAP4"
    },
    "12628": {
      "op": "SWAP3"
    },
    "12629": {
      "op": "POP"
    },
    "12630": {
      "op": "POP"
    },
    "12631": {
      "op": "POP"
    },
    "12632": {
      "jump": "o",
      "op": "JUMP"
    },
    "12633": {
      "op": "JUMPDEST"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12638": {
      "op": "DUP3"
    },
    "12639": {
      "op": "DUP5"
    },
    "12640": {
      "op": "SUB"
    },
    "12641": {
      "op": "SLT"
    },
    "12642": {
      "op": "ISZERO"
    },
    "12643": {
      "op": "PUSH2",
      "value": "0x316B"
    },
    "12646": {
      "op": "JUMPI"
    },
    "12647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12649": {
      "op": "DUP1"
    },
    "12650": {
      "op": "REVERT"
    },
    "12651": {
      "op": "JUMPDEST"
    },
    "12652": {
      "op": "DUP2"
    },
    "12653": {
      "op": "CALLDATALOAD"
    },
    "12654": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12663": {
      "op": "DUP2"
    },
    "12664": {
      "op": "GT"
    },
    "12665": {
      "op": "ISZERO"
    },
    "12666": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12669": {
      "op": "JUMPI"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12672": {
      "op": "DUP1"
    },
    "12673": {
      "op": "REVERT"
    },
    "12674": {
      "op": "JUMPDEST"
    },
    "12675": {
      "op": "DUP3"
    },
    "12676": {
      "op": "ADD"
    },
    "12677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12679": {
      "op": "DUP2"
    },
    "12680": {
      "op": "ADD"
    },
    "12681": {
      "op": "DUP5"
    },
    "12682": {
      "op": "SGT"
    },
    "12683": {
      "op": "PUSH2",
      "value": "0x3193"
    },
    "12686": {
      "op": "JUMPI"
    },
    "12687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12689": {
      "op": "DUP1"
    },
    "12690": {
      "op": "REVERT"
    },
    "12691": {
      "op": "JUMPDEST"
    },
    "12692": {
      "op": "PUSH2",
      "value": "0x2462"
    },
    "12695": {
      "op": "DUP5"
    },
    "12696": {
      "op": "DUP3"
    },
    "12697": {
      "op": "CALLDATALOAD"
    },
    "12698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12700": {
      "op": "DUP5"
    },
    "12701": {
      "op": "ADD"
    },
    "12702": {
      "op": "PUSH2",
      "value": "0x30E3"
    },
    "12705": {
      "jump": "i",
      "op": "JUMP"
    },
    "12706": {
      "op": "JUMPDEST"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12709": {
      "op": "DUP1"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12714": {
      "op": "DUP5"
    },
    "12715": {
      "op": "DUP7"
    },
    "12716": {
      "op": "SUB"
    },
    "12717": {
      "op": "SLT"
    },
    "12718": {
      "op": "ISZERO"
    },
    "12719": {
      "op": "PUSH2",
      "value": "0x31B7"
    },
    "12722": {
      "op": "JUMPI"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12725": {
      "op": "DUP1"
    },
    "12726": {
      "op": "REVERT"
    },
    "12727": {
      "op": "JUMPDEST"
    },
    "12728": {
      "op": "PUSH2",
      "value": "0x31C0"
    },
    "12731": {
      "op": "DUP5"
    },
    "12732": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "12735": {
      "jump": "i",
      "op": "JUMP"
    },
    "12736": {
      "op": "JUMPDEST"
    },
    "12737": {
      "op": "SWAP3"
    },
    "12738": {
      "op": "POP"
    },
    "12739": {
      "op": "PUSH2",
      "value": "0x31CE"
    },
    "12742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12744": {
      "op": "DUP6"
    },
    "12745": {
      "op": "ADD"
    },
    "12746": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "12749": {
      "jump": "i",
      "op": "JUMP"
    },
    "12750": {
      "op": "JUMPDEST"
    },
    "12751": {
      "op": "SWAP2"
    },
    "12752": {
      "op": "POP"
    },
    "12753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12755": {
      "op": "DUP5"
    },
    "12756": {
      "op": "ADD"
    },
    "12757": {
      "op": "CALLDATALOAD"
    },
    "12758": {
      "op": "SWAP1"
    },
    "12759": {
      "op": "POP"
    },
    "12760": {
      "op": "SWAP3"
    },
    "12761": {
      "op": "POP"
    },
    "12762": {
      "op": "SWAP3"
    },
    "12763": {
      "op": "POP"
    },
    "12764": {
      "op": "SWAP3"
    },
    "12765": {
      "jump": "o",
      "op": "JUMP"
    },
    "12766": {
      "op": "JUMPDEST"
    },
    "12767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12769": {
      "op": "DUP1"
    },
    "12770": {
      "op": "DUP4"
    },
    "12771": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12773": {
      "op": "DUP5"
    },
    "12774": {
      "op": "ADD"
    },
    "12775": {
      "op": "SLT"
    },
    "12776": {
      "op": "PUSH2",
      "value": "0x31F0"
    },
    "12779": {
      "op": "JUMPI"
    },
    "12780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12782": {
      "op": "DUP1"
    },
    "12783": {
      "op": "REVERT"
    },
    "12784": {
      "op": "JUMPDEST"
    },
    "12785": {
      "op": "POP"
    },
    "12786": {
      "op": "DUP2"
    },
    "12787": {
      "op": "CALLDATALOAD"
    },
    "12788": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12797": {
      "op": "DUP2"
    },
    "12798": {
      "op": "GT"
    },
    "12799": {
      "op": "ISZERO"
    },
    "12800": {
      "op": "PUSH2",
      "value": "0x3208"
    },
    "12803": {
      "op": "JUMPI"
    },
    "12804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12806": {
      "op": "DUP1"
    },
    "12807": {
      "op": "REVERT"
    },
    "12808": {
      "op": "JUMPDEST"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12811": {
      "op": "DUP4"
    },
    "12812": {
      "op": "ADD"
    },
    "12813": {
      "op": "SWAP2"
    },
    "12814": {
      "op": "POP"
    },
    "12815": {
      "op": "DUP4"
    },
    "12816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12818": {
      "op": "DUP3"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12821": {
      "op": "SHL"
    },
    "12822": {
      "op": "DUP6"
    },
    "12823": {
      "op": "ADD"
    },
    "12824": {
      "op": "ADD"
    },
    "12825": {
      "op": "GT"
    },
    "12826": {
      "op": "ISZERO"
    },
    "12827": {
      "op": "PUSH2",
      "value": "0x3223"
    },
    "12830": {
      "op": "JUMPI"
    },
    "12831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12833": {
      "op": "DUP1"
    },
    "12834": {
      "op": "REVERT"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "SWAP3"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "SWAP3"
    },
    "12839": {
      "op": "SWAP1"
    },
    "12840": {
      "op": "POP"
    },
    "12841": {
      "jump": "o",
      "op": "JUMP"
    },
    "12842": {
      "op": "JUMPDEST"
    },
    "12843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12845": {
      "op": "DUP1"
    },
    "12846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12848": {
      "op": "DUP4"
    },
    "12849": {
      "op": "DUP6"
    },
    "12850": {
      "op": "SUB"
    },
    "12851": {
      "op": "SLT"
    },
    "12852": {
      "op": "ISZERO"
    },
    "12853": {
      "op": "PUSH2",
      "value": "0x323D"
    },
    "12856": {
      "op": "JUMPI"
    },
    "12857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12859": {
      "op": "DUP1"
    },
    "12860": {
      "op": "REVERT"
    },
    "12861": {
      "op": "JUMPDEST"
    },
    "12862": {
      "op": "DUP3"
    },
    "12863": {
      "op": "CALLDATALOAD"
    },
    "12864": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12873": {
      "op": "DUP2"
    },
    "12874": {
      "op": "GT"
    },
    "12875": {
      "op": "ISZERO"
    },
    "12876": {
      "op": "PUSH2",
      "value": "0x3254"
    },
    "12879": {
      "op": "JUMPI"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12882": {
      "op": "DUP1"
    },
    "12883": {
      "op": "REVERT"
    },
    "12884": {
      "op": "JUMPDEST"
    },
    "12885": {
      "op": "PUSH2",
      "value": "0x3260"
    },
    "12888": {
      "op": "DUP6"
    },
    "12889": {
      "op": "DUP3"
    },
    "12890": {
      "op": "DUP7"
    },
    "12891": {
      "op": "ADD"
    },
    "12892": {
      "op": "PUSH2",
      "value": "0x31DE"
    },
    "12895": {
      "jump": "i",
      "op": "JUMP"
    },
    "12896": {
      "op": "JUMPDEST"
    },
    "12897": {
      "op": "SWAP1"
    },
    "12898": {
      "op": "SWAP7"
    },
    "12899": {
      "op": "SWAP1"
    },
    "12900": {
      "op": "SWAP6"
    },
    "12901": {
      "op": "POP"
    },
    "12902": {
      "op": "SWAP4"
    },
    "12903": {
      "op": "POP"
    },
    "12904": {
      "op": "POP"
    },
    "12905": {
      "op": "POP"
    },
    "12906": {
      "op": "POP"
    },
    "12907": {
      "jump": "o",
      "op": "JUMP"
    },
    "12908": {
      "op": "JUMPDEST"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12913": {
      "op": "DUP3"
    },
    "12914": {
      "op": "DUP5"
    },
    "12915": {
      "op": "SUB"
    },
    "12916": {
      "op": "SLT"
    },
    "12917": {
      "op": "ISZERO"
    },
    "12918": {
      "op": "PUSH2",
      "value": "0x327E"
    },
    "12921": {
      "op": "JUMPI"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12924": {
      "op": "DUP1"
    },
    "12925": {
      "op": "REVERT"
    },
    "12926": {
      "op": "JUMPDEST"
    },
    "12927": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "12930": {
      "op": "DUP3"
    },
    "12931": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "12934": {
      "jump": "i",
      "op": "JUMP"
    },
    "12935": {
      "op": "JUMPDEST"
    },
    "12936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12938": {
      "op": "DUP1"
    },
    "12939": {
      "op": "DUP3"
    },
    "12940": {
      "op": "MSTORE"
    },
    "12941": {
      "op": "DUP3"
    },
    "12942": {
      "op": "MLOAD"
    },
    "12943": {
      "op": "DUP3"
    },
    "12944": {
      "op": "DUP3"
    },
    "12945": {
      "op": "ADD"
    },
    "12946": {
      "op": "DUP2"
    },
    "12947": {
      "op": "SWAP1"
    },
    "12948": {
      "op": "MSTORE"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12951": {
      "op": "SWAP2"
    },
    "12952": {
      "op": "SWAP1"
    },
    "12953": {
      "op": "DUP5"
    },
    "12954": {
      "op": "DUP3"
    },
    "12955": {
      "op": "ADD"
    },
    "12956": {
      "op": "SWAP1"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12959": {
      "op": "DUP6"
    },
    "12960": {
      "op": "ADD"
    },
    "12961": {
      "op": "SWAP1"
    },
    "12962": {
      "op": "DUP5"
    },
    "12963": {
      "op": "JUMPDEST"
    },
    "12964": {
      "op": "DUP2"
    },
    "12965": {
      "op": "DUP2"
    },
    "12966": {
      "op": "LT"
    },
    "12967": {
      "op": "ISZERO"
    },
    "12968": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "12971": {
      "op": "JUMPI"
    },
    "12972": {
      "op": "DUP4"
    },
    "12973": {
      "op": "MLOAD"
    },
    "12974": {
      "op": "DUP4"
    },
    "12975": {
      "op": "MSTORE"
    },
    "12976": {
      "op": "SWAP3"
    },
    "12977": {
      "op": "DUP5"
    },
    "12978": {
      "op": "ADD"
    },
    "12979": {
      "op": "SWAP3"
    },
    "12980": {
      "op": "SWAP2"
    },
    "12981": {
      "op": "DUP5"
    },
    "12982": {
      "op": "ADD"
    },
    "12983": {
      "op": "SWAP2"
    },
    "12984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12986": {
      "op": "ADD"
    },
    "12987": {
      "op": "PUSH2",
      "value": "0x32A3"
    },
    "12990": {
      "op": "JUMP"
    },
    "12991": {
      "op": "JUMPDEST"
    },
    "12992": {
      "op": "POP"
    },
    "12993": {
      "op": "SWAP1"
    },
    "12994": {
      "op": "SWAP7"
    },
    "12995": {
      "op": "SWAP6"
    },
    "12996": {
      "op": "POP"
    },
    "12997": {
      "op": "POP"
    },
    "12998": {
      "op": "POP"
    },
    "12999": {
      "op": "POP"
    },
    "13000": {
      "op": "POP"
    },
    "13001": {
      "op": "POP"
    },
    "13002": {
      "jump": "o",
      "op": "JUMP"
    },
    "13003": {
      "op": "JUMPDEST"
    },
    "13004": {
      "op": "DUP1"
    },
    "13005": {
      "op": "CALLDATALOAD"
    },
    "13006": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13008": {
      "op": "DUP2"
    },
    "13009": {
      "op": "AND"
    },
    "13010": {
      "op": "DUP2"
    },
    "13011": {
      "op": "EQ"
    },
    "13012": {
      "op": "PUSH2",
      "value": "0x309E"
    },
    "13015": {
      "op": "JUMPI"
    },
    "13016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13018": {
      "op": "DUP1"
    },
    "13019": {
      "op": "REVERT"
    },
    "13020": {
      "op": "JUMPDEST"
    },
    "13021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13025": {
      "op": "DUP3"
    },
    "13026": {
      "op": "DUP5"
    },
    "13027": {
      "op": "SUB"
    },
    "13028": {
      "op": "SLT"
    },
    "13029": {
      "op": "ISZERO"
    },
    "13030": {
      "op": "PUSH2",
      "value": "0x32EE"
    },
    "13033": {
      "op": "JUMPI"
    },
    "13034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13036": {
      "op": "DUP1"
    },
    "13037": {
      "op": "REVERT"
    },
    "13038": {
      "op": "JUMPDEST"
    },
    "13039": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "13042": {
      "op": "DUP3"
    },
    "13043": {
      "op": "PUSH2",
      "value": "0x32CB"
    },
    "13046": {
      "jump": "i",
      "op": "JUMP"
    },
    "13047": {
      "op": "JUMPDEST"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13050": {
      "op": "DUP1"
    },
    "13051": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13053": {
      "op": "DUP4"
    },
    "13054": {
      "op": "DUP6"
    },
    "13055": {
      "op": "SUB"
    },
    "13056": {
      "op": "SLT"
    },
    "13057": {
      "op": "ISZERO"
    },
    "13058": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13061": {
      "op": "JUMPI"
    },
    "13062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13064": {
      "op": "DUP1"
    },
    "13065": {
      "op": "REVERT"
    },
    "13066": {
      "op": "JUMPDEST"
    },
    "13067": {
      "op": "PUSH2",
      "value": "0x3313"
    },
    "13070": {
      "op": "DUP4"
    },
    "13071": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13074": {
      "jump": "i",
      "op": "JUMP"
    },
    "13075": {
      "op": "JUMPDEST"
    },
    "13076": {
      "op": "SWAP2"
    },
    "13077": {
      "op": "POP"
    },
    "13078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13080": {
      "op": "DUP4"
    },
    "13081": {
      "op": "ADD"
    },
    "13082": {
      "op": "CALLDATALOAD"
    },
    "13083": {
      "op": "DUP1"
    },
    "13084": {
      "op": "ISZERO"
    },
    "13085": {
      "op": "ISZERO"
    },
    "13086": {
      "op": "DUP2"
    },
    "13087": {
      "op": "EQ"
    },
    "13088": {
      "op": "PUSH2",
      "value": "0x3328"
    },
    "13091": {
      "op": "JUMPI"
    },
    "13092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13094": {
      "op": "DUP1"
    },
    "13095": {
      "op": "REVERT"
    },
    "13096": {
      "op": "JUMPDEST"
    },
    "13097": {
      "op": "DUP1"
    },
    "13098": {
      "op": "SWAP2"
    },
    "13099": {
      "op": "POP"
    },
    "13100": {
      "op": "POP"
    },
    "13101": {
      "op": "SWAP3"
    },
    "13102": {
      "op": "POP"
    },
    "13103": {
      "op": "SWAP3"
    },
    "13104": {
      "op": "SWAP1"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "jump": "o",
      "op": "JUMP"
    },
    "13107": {
      "op": "JUMPDEST"
    },
    "13108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13110": {
      "op": "DUP1"
    },
    "13111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13113": {
      "op": "DUP4"
    },
    "13114": {
      "op": "DUP6"
    },
    "13115": {
      "op": "SUB"
    },
    "13116": {
      "op": "SLT"
    },
    "13117": {
      "op": "ISZERO"
    },
    "13118": {
      "op": "PUSH2",
      "value": "0x3346"
    },
    "13121": {
      "op": "JUMPI"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13124": {
      "op": "DUP1"
    },
    "13125": {
      "op": "REVERT"
    },
    "13126": {
      "op": "JUMPDEST"
    },
    "13127": {
      "op": "PUSH2",
      "value": "0x334F"
    },
    "13130": {
      "op": "DUP4"
    },
    "13131": {
      "op": "PUSH2",
      "value": "0x32CB"
    },
    "13134": {
      "jump": "i",
      "op": "JUMP"
    },
    "13135": {
      "op": "JUMPDEST"
    },
    "13136": {
      "op": "SWAP2"
    },
    "13137": {
      "op": "POP"
    },
    "13138": {
      "op": "PUSH2",
      "value": "0x335D"
    },
    "13141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13143": {
      "op": "DUP5"
    },
    "13144": {
      "op": "ADD"
    },
    "13145": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13148": {
      "jump": "i",
      "op": "JUMP"
    },
    "13149": {
      "op": "JUMPDEST"
    },
    "13150": {
      "op": "SWAP1"
    },
    "13151": {
      "op": "POP"
    },
    "13152": {
      "op": "SWAP3"
    },
    "13153": {
      "op": "POP"
    },
    "13154": {
      "op": "SWAP3"
    },
    "13155": {
      "op": "SWAP1"
    },
    "13156": {
      "op": "POP"
    },
    "13157": {
      "jump": "o",
      "op": "JUMP"
    },
    "13158": {
      "op": "JUMPDEST"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13161": {
      "op": "DUP1"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13166": {
      "op": "DUP5"
    },
    "13167": {
      "op": "DUP7"
    },
    "13168": {
      "op": "SUB"
    },
    "13169": {
      "op": "SLT"
    },
    "13170": {
      "op": "ISZERO"
    },
    "13171": {
      "op": "PUSH2",
      "value": "0x337B"
    },
    "13174": {
      "op": "JUMPI"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13177": {
      "op": "DUP1"
    },
    "13178": {
      "op": "REVERT"
    },
    "13179": {
      "op": "JUMPDEST"
    },
    "13180": {
      "op": "PUSH2",
      "value": "0x3384"
    },
    "13183": {
      "op": "DUP5"
    },
    "13184": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13187": {
      "jump": "i",
      "op": "JUMP"
    },
    "13188": {
      "op": "JUMPDEST"
    },
    "13189": {
      "op": "SWAP3"
    },
    "13190": {
      "op": "POP"
    },
    "13191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13193": {
      "op": "DUP5"
    },
    "13194": {
      "op": "ADD"
    },
    "13195": {
      "op": "CALLDATALOAD"
    },
    "13196": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13205": {
      "op": "DUP2"
    },
    "13206": {
      "op": "GT"
    },
    "13207": {
      "op": "ISZERO"
    },
    "13208": {
      "op": "PUSH2",
      "value": "0x33A0"
    },
    "13211": {
      "op": "JUMPI"
    },
    "13212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13214": {
      "op": "DUP1"
    },
    "13215": {
      "op": "REVERT"
    },
    "13216": {
      "op": "JUMPDEST"
    },
    "13217": {
      "op": "PUSH2",
      "value": "0x33AC"
    },
    "13220": {
      "op": "DUP7"
    },
    "13221": {
      "op": "DUP3"
    },
    "13222": {
      "op": "DUP8"
    },
    "13223": {
      "op": "ADD"
    },
    "13224": {
      "op": "PUSH2",
      "value": "0x31DE"
    },
    "13227": {
      "jump": "i",
      "op": "JUMP"
    },
    "13228": {
      "op": "JUMPDEST"
    },
    "13229": {
      "op": "SWAP5"
    },
    "13230": {
      "op": "SWAP8"
    },
    "13231": {
      "op": "SWAP1"
    },
    "13232": {
      "op": "SWAP7"
    },
    "13233": {
      "op": "POP"
    },
    "13234": {
      "op": "SWAP4"
    },
    "13235": {
      "op": "SWAP5"
    },
    "13236": {
      "op": "POP"
    },
    "13237": {
      "op": "POP"
    },
    "13238": {
      "op": "POP"
    },
    "13239": {
      "op": "POP"
    },
    "13240": {
      "jump": "o",
      "op": "JUMP"
    },
    "13241": {
      "op": "JUMPDEST"
    },
    "13242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13244": {
      "op": "DUP1"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13247": {
      "op": "DUP1"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13250": {
      "op": "DUP6"
    },
    "13251": {
      "op": "DUP8"
    },
    "13252": {
      "op": "SUB"
    },
    "13253": {
      "op": "SLT"
    },
    "13254": {
      "op": "ISZERO"
    },
    "13255": {
      "op": "PUSH2",
      "value": "0x33CF"
    },
    "13258": {
      "op": "JUMPI"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13261": {
      "op": "DUP1"
    },
    "13262": {
      "op": "REVERT"
    },
    "13263": {
      "op": "JUMPDEST"
    },
    "13264": {
      "op": "PUSH2",
      "value": "0x33D8"
    },
    "13267": {
      "op": "DUP6"
    },
    "13268": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13271": {
      "jump": "i",
      "op": "JUMP"
    },
    "13272": {
      "op": "JUMPDEST"
    },
    "13273": {
      "op": "SWAP4"
    },
    "13274": {
      "op": "POP"
    },
    "13275": {
      "op": "PUSH2",
      "value": "0x33E6"
    },
    "13278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13280": {
      "op": "DUP7"
    },
    "13281": {
      "op": "ADD"
    },
    "13282": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13285": {
      "jump": "i",
      "op": "JUMP"
    },
    "13286": {
      "op": "JUMPDEST"
    },
    "13287": {
      "op": "SWAP3"
    },
    "13288": {
      "op": "POP"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13291": {
      "op": "DUP6"
    },
    "13292": {
      "op": "ADD"
    },
    "13293": {
      "op": "CALLDATALOAD"
    },
    "13294": {
      "op": "SWAP2"
    },
    "13295": {
      "op": "POP"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13298": {
      "op": "DUP6"
    },
    "13299": {
      "op": "ADD"
    },
    "13300": {
      "op": "CALLDATALOAD"
    },
    "13301": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13310": {
      "op": "DUP2"
    },
    "13311": {
      "op": "GT"
    },
    "13312": {
      "op": "ISZERO"
    },
    "13313": {
      "op": "PUSH2",
      "value": "0x3409"
    },
    "13316": {
      "op": "JUMPI"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13319": {
      "op": "DUP1"
    },
    "13320": {
      "op": "REVERT"
    },
    "13321": {
      "op": "JUMPDEST"
    },
    "13322": {
      "op": "DUP6"
    },
    "13323": {
      "op": "ADD"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13326": {
      "op": "DUP2"
    },
    "13327": {
      "op": "ADD"
    },
    "13328": {
      "op": "DUP8"
    },
    "13329": {
      "op": "SGT"
    },
    "13330": {
      "op": "PUSH2",
      "value": "0x341A"
    },
    "13333": {
      "op": "JUMPI"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13336": {
      "op": "DUP1"
    },
    "13337": {
      "op": "REVERT"
    },
    "13338": {
      "op": "JUMPDEST"
    },
    "13339": {
      "op": "PUSH2",
      "value": "0x3429"
    },
    "13342": {
      "op": "DUP8"
    },
    "13343": {
      "op": "DUP3"
    },
    "13344": {
      "op": "CALLDATALOAD"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13347": {
      "op": "DUP5"
    },
    "13348": {
      "op": "ADD"
    },
    "13349": {
      "op": "PUSH2",
      "value": "0x30E3"
    },
    "13352": {
      "jump": "i",
      "op": "JUMP"
    },
    "13353": {
      "op": "JUMPDEST"
    },
    "13354": {
      "op": "SWAP2"
    },
    "13355": {
      "op": "POP"
    },
    "13356": {
      "op": "POP"
    },
    "13357": {
      "op": "SWAP3"
    },
    "13358": {
      "op": "SWAP6"
    },
    "13359": {
      "op": "SWAP2"
    },
    "13360": {
      "op": "SWAP5"
    },
    "13361": {
      "op": "POP"
    },
    "13362": {
      "op": "SWAP3"
    },
    "13363": {
      "op": "POP"
    },
    "13364": {
      "jump": "o",
      "op": "JUMP"
    },
    "13365": {
      "op": "JUMPDEST"
    },
    "13366": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13373": {
      "op": "SHL"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13376": {
      "op": "MSTORE"
    },
    "13377": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13379": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13381": {
      "op": "MSTORE"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13386": {
      "op": "REVERT"
    },
    "13387": {
      "op": "JUMPDEST"
    },
    "13388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13390": {
      "op": "DUP2"
    },
    "13391": {
      "op": "ADD"
    },
    "13392": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13394": {
      "op": "DUP4"
    },
    "13395": {
      "op": "LT"
    },
    "13396": {
      "op": "PUSH2",
      "value": "0x346D"
    },
    "13399": {
      "op": "JUMPI"
    },
    "13400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13407": {
      "op": "SHL"
    },
    "13408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13410": {
      "op": "MSTORE"
    },
    "13411": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13415": {
      "op": "MSTORE"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13420": {
      "op": "REVERT"
    },
    "13421": {
      "op": "JUMPDEST"
    },
    "13422": {
      "op": "SWAP2"
    },
    "13423": {
      "op": "SWAP1"
    },
    "13424": {
      "op": "MSTORE"
    },
    "13425": {
      "op": "SWAP1"
    },
    "13426": {
      "jump": "o",
      "op": "JUMP"
    },
    "13427": {
      "op": "JUMPDEST"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13432": {
      "op": "DUP3"
    },
    "13433": {
      "op": "DUP5"
    },
    "13434": {
      "op": "SUB"
    },
    "13435": {
      "op": "SLT"
    },
    "13436": {
      "op": "ISZERO"
    },
    "13437": {
      "op": "PUSH2",
      "value": "0x3485"
    },
    "13440": {
      "op": "JUMPI"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13443": {
      "op": "DUP1"
    },
    "13444": {
      "op": "REVERT"
    },
    "13445": {
      "op": "JUMPDEST"
    },
    "13446": {
      "op": "DUP2"
    },
    "13447": {
      "op": "CALLDATALOAD"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13450": {
      "op": "DUP2"
    },
    "13451": {
      "op": "LT"
    },
    "13452": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "13455": {
      "op": "JUMPI"
    },
    "13456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13458": {
      "op": "DUP1"
    },
    "13459": {
      "op": "REVERT"
    },
    "13460": {
      "op": "JUMPDEST"
    },
    "13461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13463": {
      "op": "DUP1"
    },
    "13464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13466": {
      "op": "DUP4"
    },
    "13467": {
      "op": "DUP6"
    },
    "13468": {
      "op": "SUB"
    },
    "13469": {
      "op": "SLT"
    },
    "13470": {
      "op": "ISZERO"
    },
    "13471": {
      "op": "PUSH2",
      "value": "0x34A7"
    },
    "13474": {
      "op": "JUMPI"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13477": {
      "op": "DUP1"
    },
    "13478": {
      "op": "REVERT"
    },
    "13479": {
      "op": "JUMPDEST"
    },
    "13480": {
      "op": "PUSH2",
      "value": "0x334F"
    },
    "13483": {
      "op": "DUP4"
    },
    "13484": {
      "op": "PUSH2",
      "value": "0x3087"
    },
    "13487": {
      "jump": "i",
      "op": "JUMP"
    },
    "13488": {
      "op": "JUMPDEST"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13491": {
      "op": "DUP2"
    },
    "13492": {
      "op": "DUP2"
    },
    "13493": {
      "op": "SHR"
    },
    "13494": {
      "op": "SWAP1"
    },
    "13495": {
      "op": "DUP3"
    },
    "13496": {
      "op": "AND"
    },
    "13497": {
      "op": "DUP1"
    },
    "13498": {
      "op": "PUSH2",
      "value": "0x34C4"
    },
    "13501": {
      "op": "JUMPI"
    },
    "13502": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13504": {
      "op": "DUP3"
    },
    "13505": {
      "op": "AND"
    },
    "13506": {
      "op": "SWAP2"
    },
    "13507": {
      "op": "POP"
    },
    "13508": {
      "op": "JUMPDEST"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13511": {
      "op": "DUP3"
    },
    "13512": {
      "op": "LT"
    },
    "13513": {
      "op": "DUP2"
    },
    "13514": {
      "op": "EQ"
    },
    "13515": {
      "op": "ISZERO"
    },
    "13516": {
      "op": "PUSH2",
      "value": "0x34E5"
    },
    "13519": {
      "op": "JUMPI"
    },
    "13520": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13527": {
      "op": "SHL"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13530": {
      "op": "MSTORE"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13535": {
      "op": "MSTORE"
    },
    "13536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13540": {
      "op": "REVERT"
    },
    "13541": {
      "op": "JUMPDEST"
    },
    "13542": {
      "op": "POP"
    },
    "13543": {
      "op": "SWAP2"
    },
    "13544": {
      "op": "SWAP1"
    },
    "13545": {
      "op": "POP"
    },
    "13546": {
      "jump": "o",
      "op": "JUMP"
    },
    "13547": {
      "op": "JUMPDEST"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13550": {
      "op": "DUP1"
    },
    "13551": {
      "op": "DUP3"
    },
    "13552": {
      "op": "MSTORE"
    },
    "13553": {
      "op": "DUP2"
    },
    "13554": {
      "op": "DUP2"
    },
    "13555": {
      "op": "ADD"
    },
    "13556": {
      "op": "MSTORE"
    },
    "13557": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13592": {
      "op": "DUP3"
    },
    "13593": {
      "op": "ADD"
    },
    "13594": {
      "op": "MSTORE"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13597": {
      "op": "ADD"
    },
    "13598": {
      "op": "SWAP1"
    },
    "13599": {
      "jump": "o",
      "op": "JUMP"
    },
    "13600": {
      "op": "JUMPDEST"
    },
    "13601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13603": {
      "op": "DUP1"
    },
    "13604": {
      "op": "DUP3"
    },
    "13605": {
      "op": "MSTORE"
    },
    "13606": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13608": {
      "op": "SWAP1"
    },
    "13609": {
      "op": "DUP3"
    },
    "13610": {
      "op": "ADD"
    },
    "13611": {
      "op": "MSTORE"
    },
    "13612": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13647": {
      "op": "DUP3"
    },
    "13648": {
      "op": "ADD"
    },
    "13649": {
      "op": "MSTORE"
    },
    "13650": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13670": {
      "op": "SHL"
    },
    "13671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13673": {
      "op": "DUP3"
    },
    "13674": {
      "op": "ADD"
    },
    "13675": {
      "op": "MSTORE"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13678": {
      "op": "ADD"
    },
    "13679": {
      "op": "SWAP1"
    },
    "13680": {
      "jump": "o",
      "op": "JUMP"
    },
    "13681": {
      "op": "JUMPDEST"
    },
    "13682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13684": {
      "op": "DUP1"
    },
    "13685": {
      "op": "DUP3"
    },
    "13686": {
      "op": "MSTORE"
    },
    "13687": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13689": {
      "op": "SWAP1"
    },
    "13690": {
      "op": "DUP3"
    },
    "13691": {
      "op": "ADD"
    },
    "13692": {
      "op": "MSTORE"
    },
    "13693": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13712": {
      "op": "SHL"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13715": {
      "op": "DUP3"
    },
    "13716": {
      "op": "ADD"
    },
    "13717": {
      "op": "MSTORE"
    },
    "13718": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13720": {
      "op": "ADD"
    },
    "13721": {
      "op": "SWAP1"
    },
    "13722": {
      "jump": "o",
      "op": "JUMP"
    },
    "13723": {
      "op": "JUMPDEST"
    },
    "13724": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13731": {
      "op": "SHL"
    },
    "13732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13734": {
      "op": "MSTORE"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13739": {
      "op": "MSTORE"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13744": {
      "op": "REVERT"
    },
    "13745": {
      "op": "JUMPDEST"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13748": {
      "op": "DUP2"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13751": {
      "op": "NOT"
    },
    "13752": {
      "op": "DIV"
    },
    "13753": {
      "op": "DUP4"
    },
    "13754": {
      "op": "GT"
    },
    "13755": {
      "op": "DUP3"
    },
    "13756": {
      "op": "ISZERO"
    },
    "13757": {
      "op": "ISZERO"
    },
    "13758": {
      "op": "AND"
    },
    "13759": {
      "op": "ISZERO"
    },
    "13760": {
      "op": "PUSH2",
      "value": "0x35CB"
    },
    "13763": {
      "op": "JUMPI"
    },
    "13764": {
      "op": "PUSH2",
      "value": "0x35CB"
    },
    "13767": {
      "op": "PUSH2",
      "value": "0x359B"
    },
    "13770": {
      "jump": "i",
      "op": "JUMP"
    },
    "13771": {
      "op": "JUMPDEST"
    },
    "13772": {
      "op": "POP"
    },
    "13773": {
      "op": "MUL"
    },
    "13774": {
      "op": "SWAP1"
    },
    "13775": {
      "jump": "o",
      "op": "JUMP"
    },
    "13776": {
      "op": "JUMPDEST"
    },
    "13777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13779": {
      "op": "DUP3"
    },
    "13780": {
      "op": "NOT"
    },
    "13781": {
      "op": "DUP3"
    },
    "13782": {
      "op": "GT"
    },
    "13783": {
      "op": "ISZERO"
    },
    "13784": {
      "op": "PUSH2",
      "value": "0x35E3"
    },
    "13787": {
      "op": "JUMPI"
    },
    "13788": {
      "op": "PUSH2",
      "value": "0x35E3"
    },
    "13791": {
      "op": "PUSH2",
      "value": "0x359B"
    },
    "13794": {
      "jump": "i",
      "op": "JUMP"
    },
    "13795": {
      "op": "JUMPDEST"
    },
    "13796": {
      "op": "POP"
    },
    "13797": {
      "op": "ADD"
    },
    "13798": {
      "op": "SWAP1"
    },
    "13799": {
      "jump": "o",
      "op": "JUMP"
    },
    "13800": {
      "op": "JUMPDEST"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13805": {
      "op": "NOT"
    },
    "13806": {
      "op": "DUP3"
    },
    "13807": {
      "op": "EQ"
    },
    "13808": {
      "op": "ISZERO"
    },
    "13809": {
      "op": "PUSH2",
      "value": "0x35FC"
    },
    "13812": {
      "op": "JUMPI"
    },
    "13813": {
      "op": "PUSH2",
      "value": "0x35FC"
    },
    "13816": {
      "op": "PUSH2",
      "value": "0x359B"
    },
    "13819": {
      "jump": "i",
      "op": "JUMP"
    },
    "13820": {
      "op": "JUMPDEST"
    },
    "13821": {
      "op": "POP"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13824": {
      "op": "ADD"
    },
    "13825": {
      "op": "SWAP1"
    },
    "13826": {
      "jump": "o",
      "op": "JUMP"
    },
    "13827": {
      "op": "JUMPDEST"
    },
    "13828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13835": {
      "op": "SHL"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13838": {
      "op": "MSTORE"
    },
    "13839": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13843": {
      "op": "MSTORE"
    },
    "13844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13848": {
      "op": "REVERT"
    },
    "13849": {
      "op": "JUMPDEST"
    },
    "13850": {
      "op": "DUP1"
    },
    "13851": {
      "op": "SLOAD"
    },
    "13852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13854": {
      "op": "SWAP1"
    },
    "13855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13857": {
      "op": "DUP2"
    },
    "13858": {
      "op": "DUP2"
    },
    "13859": {
      "op": "SHR"
    },
    "13860": {
      "op": "SWAP1"
    },
    "13861": {
      "op": "DUP1"
    },
    "13862": {
      "op": "DUP4"
    },
    "13863": {
      "op": "AND"
    },
    "13864": {
      "op": "DUP1"
    },
    "13865": {
      "op": "PUSH2",
      "value": "0x3633"
    },
    "13868": {
      "op": "JUMPI"
    },
    "13869": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13871": {
      "op": "DUP4"
    },
    "13872": {
      "op": "AND"
    },
    "13873": {
      "op": "SWAP3"
    },
    "13874": {
      "op": "POP"
    },
    "13875": {
      "op": "JUMPDEST"
    },
    "13876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13878": {
      "op": "DUP1"
    },
    "13879": {
      "op": "DUP5"
    },
    "13880": {
      "op": "LT"
    },
    "13881": {
      "op": "DUP3"
    },
    "13882": {
      "op": "EQ"
    },
    "13883": {
      "op": "ISZERO"
    },
    "13884": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "13887": {
      "op": "JUMPI"
    },
    "13888": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13895": {
      "op": "SHL"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13898": {
      "op": "MSTORE"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13901": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13903": {
      "op": "MSTORE"
    },
    "13904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13908": {
      "op": "REVERT"
    },
    "13909": {
      "op": "JUMPDEST"
    },
    "13910": {
      "op": "DUP2"
    },
    "13911": {
      "op": "DUP1"
    },
    "13912": {
      "op": "ISZERO"
    },
    "13913": {
      "op": "PUSH2",
      "value": "0x3669"
    },
    "13916": {
      "op": "JUMPI"
    },
    "13917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13919": {
      "op": "DUP2"
    },
    "13920": {
      "op": "EQ"
    },
    "13921": {
      "op": "PUSH2",
      "value": "0x367A"
    },
    "13924": {
      "op": "JUMPI"
    },
    "13925": {
      "op": "PUSH2",
      "value": "0x36A7"
    },
    "13928": {
      "op": "JUMP"
    },
    "13929": {
      "op": "JUMPDEST"
    },
    "13930": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13932": {
      "op": "NOT"
    },
    "13933": {
      "op": "DUP7"
    },
    "13934": {
      "op": "AND"
    },
    "13935": {
      "op": "DUP10"
    },
    "13936": {
      "op": "MSTORE"
    },
    "13937": {
      "op": "DUP5"
    },
    "13938": {
      "op": "DUP10"
    },
    "13939": {
      "op": "ADD"
    },
    "13940": {
      "op": "SWAP7"
    },
    "13941": {
      "op": "POP"
    },
    "13942": {
      "op": "PUSH2",
      "value": "0x36A7"
    },
    "13945": {
      "op": "JUMP"
    },
    "13946": {
      "op": "JUMPDEST"
    },
    "13947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13949": {
      "op": "DUP9"
    },
    "13950": {
      "op": "DUP2"
    },
    "13951": {
      "op": "MSTORE"
    },
    "13952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13954": {
      "op": "SWAP1"
    },
    "13955": {
      "op": "KECCAK256"
    },
    "13956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13958": {
      "op": "JUMPDEST"
    },
    "13959": {
      "op": "DUP7"
    },
    "13960": {
      "op": "DUP2"
    },
    "13961": {
      "op": "LT"
    },
    "13962": {
      "op": "ISZERO"
    },
    "13963": {
      "op": "PUSH2",
      "value": "0x369F"
    },
    "13966": {
      "op": "JUMPI"
    },
    "13967": {
      "op": "DUP2"
    },
    "13968": {
      "op": "SLOAD"
    },
    "13969": {
      "op": "DUP12"
    },
    "13970": {
      "op": "DUP3"
    },
    "13971": {
      "op": "ADD"
    },
    "13972": {
      "op": "MSTORE"
    },
    "13973": {
      "op": "SWAP1"
    },
    "13974": {
      "op": "DUP6"
    },
    "13975": {
      "op": "ADD"
    },
    "13976": {
      "op": "SWAP1"
    },
    "13977": {
      "op": "DUP4"
    },
    "13978": {
      "op": "ADD"
    },
    "13979": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "13982": {
      "op": "JUMP"
    },
    "13983": {
      "op": "JUMPDEST"
    },
    "13984": {
      "op": "POP"
    },
    "13985": {
      "op": "POP"
    },
    "13986": {
      "op": "DUP5"
    },
    "13987": {
      "op": "DUP10"
    },
    "13988": {
      "op": "ADD"
    },
    "13989": {
      "op": "SWAP7"
    },
    "13990": {
      "op": "POP"
    },
    "13991": {
      "op": "JUMPDEST"
    },
    "13992": {
      "op": "POP"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "POP"
    },
    "13995": {
      "op": "POP"
    },
    "13996": {
      "op": "POP"
    },
    "13997": {
      "op": "POP"
    },
    "13998": {
      "op": "SWAP3"
    },
    "13999": {
      "op": "SWAP2"
    },
    "14000": {
      "op": "POP"
    },
    "14001": {
      "op": "POP"
    },
    "14002": {
      "jump": "o",
      "op": "JUMP"
    },
    "14003": {
      "op": "JUMPDEST"
    },
    "14004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14006": {
      "op": "PUSH2",
      "value": "0x36BF"
    },
    "14009": {
      "op": "DUP3"
    },
    "14010": {
      "op": "DUP7"
    },
    "14011": {
      "op": "PUSH2",
      "value": "0x3619"
    },
    "14014": {
      "jump": "i",
      "op": "JUMP"
    },
    "14015": {
      "op": "JUMPDEST"
    },
    "14016": {
      "op": "DUP5"
    },
    "14017": {
      "op": "MLOAD"
    },
    "14018": {
      "op": "PUSH2",
      "value": "0x36CF"
    },
    "14021": {
      "op": "DUP2"
    },
    "14022": {
      "op": "DUP4"
    },
    "14023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14025": {
      "op": "DUP10"
    },
    "14026": {
      "op": "ADD"
    },
    "14027": {
      "op": "PUSH2",
      "value": "0x3003"
    },
    "14030": {
      "jump": "i",
      "op": "JUMP"
    },
    "14031": {
      "op": "JUMPDEST"
    },
    "14032": {
      "op": "PUSH2",
      "value": "0x36DB"
    },
    "14035": {
      "op": "DUP2"
    },
    "14036": {
      "op": "DUP4"
    },
    "14037": {
      "op": "ADD"
    },
    "14038": {
      "op": "DUP7"
    },
    "14039": {
      "op": "PUSH2",
      "value": "0x3619"
    },
    "14042": {
      "jump": "i",
      "op": "JUMP"
    },
    "14043": {
      "op": "JUMPDEST"
    },
    "14044": {
      "op": "SWAP8"
    },
    "14045": {
      "op": "SWAP7"
    },
    "14046": {
      "op": "POP"
    },
    "14047": {
      "op": "POP"
    },
    "14048": {
      "op": "POP"
    },
    "14049": {
      "op": "POP"
    },
    "14050": {
      "op": "POP"
    },
    "14051": {
      "op": "POP"
    },
    "14052": {
      "op": "POP"
    },
    "14053": {
      "jump": "o",
      "op": "JUMP"
    },
    "14054": {
      "op": "JUMPDEST"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14057": {
      "op": "DUP3"
    },
    "14058": {
      "op": "DUP3"
    },
    "14059": {
      "op": "LT"
    },
    "14060": {
      "op": "ISZERO"
    },
    "14061": {
      "op": "PUSH2",
      "value": "0x36F8"
    },
    "14064": {
      "op": "JUMPI"
    },
    "14065": {
      "op": "PUSH2",
      "value": "0x36F8"
    },
    "14068": {
      "op": "PUSH2",
      "value": "0x359B"
    },
    "14071": {
      "jump": "i",
      "op": "JUMP"
    },
    "14072": {
      "op": "JUMPDEST"
    },
    "14073": {
      "op": "POP"
    },
    "14074": {
      "op": "SUB"
    },
    "14075": {
      "op": "SWAP1"
    },
    "14076": {
      "jump": "o",
      "op": "JUMP"
    },
    "14077": {
      "op": "JUMPDEST"
    },
    "14078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14080": {
      "op": "DUP1"
    },
    "14081": {
      "op": "DUP3"
    },
    "14082": {
      "op": "MSTORE"
    },
    "14083": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14085": {
      "op": "SWAP1"
    },
    "14086": {
      "op": "DUP3"
    },
    "14087": {
      "op": "ADD"
    },
    "14088": {
      "op": "MSTORE"
    },
    "14089": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14124": {
      "op": "DUP3"
    },
    "14125": {
      "op": "ADD"
    },
    "14126": {
      "op": "MSTORE"
    },
    "14127": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14148": {
      "op": "SHL"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14151": {
      "op": "DUP3"
    },
    "14152": {
      "op": "ADD"
    },
    "14153": {
      "op": "MSTORE"
    },
    "14154": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14156": {
      "op": "ADD"
    },
    "14157": {
      "op": "SWAP1"
    },
    "14158": {
      "jump": "o",
      "op": "JUMP"
    },
    "14159": {
      "op": "JUMPDEST"
    },
    "14160": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14167": {
      "op": "SHL"
    },
    "14168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14170": {
      "op": "MSTORE"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14175": {
      "op": "MSTORE"
    },
    "14176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14180": {
      "op": "REVERT"
    },
    "14181": {
      "op": "JUMPDEST"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14184": {
      "op": "DUP3"
    },
    "14185": {
      "op": "PUSH2",
      "value": "0x3774"
    },
    "14188": {
      "op": "JUMPI"
    },
    "14189": {
      "op": "PUSH2",
      "value": "0x3774"
    },
    "14192": {
      "op": "PUSH2",
      "value": "0x374F"
    },
    "14195": {
      "jump": "i",
      "op": "JUMP"
    },
    "14196": {
      "op": "JUMPDEST"
    },
    "14197": {
      "op": "POP"
    },
    "14198": {
      "op": "DIV"
    },
    "14199": {
      "op": "SWAP1"
    },
    "14200": {
      "jump": "o",
      "op": "JUMP"
    },
    "14201": {
      "op": "JUMPDEST"
    },
    "14202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14204": {
      "op": "DUP3"
    },
    "14205": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14208": {
      "op": "JUMPI"
    },
    "14209": {
      "op": "PUSH2",
      "value": "0x3788"
    },
    "14212": {
      "op": "PUSH2",
      "value": "0x374F"
    },
    "14215": {
      "jump": "i",
      "op": "JUMP"
    },
    "14216": {
      "op": "JUMPDEST"
    },
    "14217": {
      "op": "POP"
    },
    "14218": {
      "op": "MOD"
    },
    "14219": {
      "op": "SWAP1"
    },
    "14220": {
      "jump": "o",
      "op": "JUMP"
    },
    "14221": {
      "op": "JUMPDEST"
    },
    "14222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14228": {
      "op": "SHL"
    },
    "14229": {
      "op": "SUB"
    },
    "14230": {
      "op": "DUP6"
    },
    "14231": {
      "op": "DUP2"
    },
    "14232": {
      "op": "AND"
    },
    "14233": {
      "op": "DUP3"
    },
    "14234": {
      "op": "MSTORE"
    },
    "14235": {
      "op": "DUP5"
    },
    "14236": {
      "op": "AND"
    },
    "14237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14239": {
      "op": "DUP3"
    },
    "14240": {
      "op": "ADD"
    },
    "14241": {
      "op": "MSTORE"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14244": {
      "op": "DUP2"
    },
    "14245": {
      "op": "ADD"
    },
    "14246": {
      "op": "DUP4"
    },
    "14247": {
      "op": "SWAP1"
    },
    "14248": {
      "op": "MSTORE"
    },
    "14249": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14253": {
      "op": "DUP3"
    },
    "14254": {
      "op": "ADD"
    },
    "14255": {
      "op": "DUP2"
    },
    "14256": {
      "op": "SWAP1"
    },
    "14257": {
      "op": "MSTORE"
    },
    "14258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14260": {
      "op": "SWAP1"
    },
    "14261": {
      "op": "PUSH2",
      "value": "0x37C0"
    },
    "14264": {
      "op": "SWAP1"
    },
    "14265": {
      "op": "DUP4"
    },
    "14266": {
      "op": "ADD"
    },
    "14267": {
      "op": "DUP5"
    },
    "14268": {
      "op": "PUSH2",
      "value": "0x302F"
    },
    "14271": {
      "jump": "i",
      "op": "JUMP"
    },
    "14272": {
      "op": "JUMPDEST"
    },
    "14273": {
      "op": "SWAP7"
    },
    "14274": {
      "op": "SWAP6"
    },
    "14275": {
      "op": "POP"
    },
    "14276": {
      "op": "POP"
    },
    "14277": {
      "op": "POP"
    },
    "14278": {
      "op": "POP"
    },
    "14279": {
      "op": "POP"
    },
    "14280": {
      "op": "POP"
    },
    "14281": {
      "jump": "o",
      "op": "JUMP"
    },
    "14282": {
      "op": "JUMPDEST"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14287": {
      "op": "DUP3"
    },
    "14288": {
      "op": "DUP5"
    },
    "14289": {
      "op": "SUB"
    },
    "14290": {
      "op": "SLT"
    },
    "14291": {
      "op": "ISZERO"
    },
    "14292": {
      "op": "PUSH2",
      "value": "0x37DC"
    },
    "14295": {
      "op": "JUMPI"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14298": {
      "op": "DUP1"
    },
    "14299": {
      "op": "REVERT"
    },
    "14300": {
      "op": "JUMPDEST"
    },
    "14301": {
      "op": "DUP2"
    },
    "14302": {
      "op": "MLOAD"
    },
    "14303": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "14306": {
      "op": "DUP2"
    },
    "14307": {
      "op": "PUSH2",
      "value": "0x2FD0"
    },
    "14310": {
      "jump": "i",
      "op": "JUMP"
    },
    "14311": {
      "op": "JUMPDEST"
    },
    "14312": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14319": {
      "op": "SHL"
    },
    "14320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14322": {
      "op": "MSTORE"
    },
    "14323": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14327": {
      "op": "MSTORE"
    },
    "14328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14332": {
      "op": "REVERT"
    }
  },
  "sha1": "b6c8d9d6ac73c61f923841f159b0d6164629aabd",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title CryptidToken NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, send, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint256 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.01 ether;  \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint256 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(salePrice == msg.value, \"Incorrect ETH value sent.\");\n        require(merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] = true;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");     \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint256 mintAmount\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(salePrice * mintAmount == msg.value, \"Incorrect ETH value sent.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function setClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    // to be used in case of WL error\n    function undoClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = false;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function setSalePrice(uint256 _salePrice) external onlyOwner {\n        salePrice = _salePrice;\n    }\n\n    function setMaxMintPerTx(uint256 _maxMintPerTx) external onlyOwner {\n        maxMintPerTx = _maxMintPerTx;\n    }\n\n    function withdraw() external payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawl failed.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n\n    function verify(address account, bytes32[] calldata merkleProof) external view returns (bool) {\n        if (merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(account)))) {\n            return true;\n        }\n        return false;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "1139:26:16:-:0;710:8425;1139:26;;;-1:-1:-1;710:8425:16;1139:26;;;;;;;;:::i;:::-;-1:-1:-1;1171:37:16;;;;;;;;;;;;;-1:-1:-1;;;1171:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1252:34:16;;;-1:-1:-1;;;;;;1339:76:16;;;;;1951:10;1924:37;;1995:508;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:3;;2247:5:16;;2254:7;;1456:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2273:15:16::1;:34:::0;;;2317:14:::1;:32:::0;;;2359:15:::1;:34:::0;;;2403:12:::1;:28:::0;;;2441:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2469:27;:15;:25;;;;;:27;;:::i;:::-;1995:508:::0;;;;;;;710:8425;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;710:8425:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:8425:16;;;-1:-1:-1;710:8425:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:1014::-;1190:6;1198;1206;1214;1222;1230;1238;1291:3;1279:9;1270:7;1266:23;1262:33;1259:53;;;1308:1;1305;1298:12;1259:53;1335:16;;-1:-1:-1;;;;;1400:14:20;;;1397:34;;;1427:1;1424;1417:12;1397:34;1450:61;1503:7;1494:6;1483:9;1479:22;1450:61;:::i;:::-;1440:71;;1557:2;1546:9;1542:18;1536:25;1520:41;;1586:2;1576:8;1573:16;1570:36;;;1602:1;1599;1592:12;1570:36;1625:63;1680:7;1669:8;1658:9;1654:24;1625:63;:::i;:::-;1615:73;;1734:2;1723:9;1719:18;1713:25;1697:41;;1763:2;1753:8;1750:16;1747:36;;;1779:1;1776;1769:12;1747:36;;1802:63;1857:7;1846:8;1835:9;1831:24;1802:63;:::i;:::-;1792:73;;;1905:2;1894:9;1890:18;1884:25;1874:35;;1949:3;1938:9;1934:19;1928:26;1918:36;;1994:3;1983:9;1979:19;1973:26;1963:36;;2039:3;2028:9;2024:19;2018:26;2008:36;;1036:1014;;;;;;;;;;:::o;2055:380::-;2134:1;2130:12;;;;2177;;;2198:61;;2252:4;2244:6;2240:17;2230:27;;2198:61;2305:2;2297:6;2294:14;2274:18;2271:38;2268:161;;;2351:10;2346:3;2342:20;2339:1;2332:31;2386:4;2383:1;2376:15;2414:4;2411:1;2404:15;2268:161;;2055:380;;;:::o;:::-;710:8425:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}