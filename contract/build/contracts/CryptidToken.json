{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "freeMintCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "freeUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prevStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeFreetUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeWhitelistUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newWhitelistPrice",
          "type": "uint256"
        }
      ],
      "name": "setWhitelistPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "setWhitelistUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dest1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest2",
          "type": "address"
        }
      ],
      "name": "setWithdrawAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_mints",
          "type": "uint8[]"
        }
      ],
      "name": "setfreeUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistMintCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistMintMax",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
    "15": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "5": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "9": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2964
      ],
      "Context": [
        2506
      ],
      "Counters": [
        2084
      ],
      "CryptidToken": [
        952
      ],
      "ERC165": [
        3191
      ],
      "ERC721": [
        1980
      ],
      "ERC721Burnable": [
        2010
      ],
      "IERC165": [
        3203
      ],
      "IERC721": [
        2622
      ],
      "IERC721Metadata": [
        2667
      ],
      "IERC721Receiver": [
        2640
      ],
      "MerkleProof": [
        2172
      ],
      "Ownable": [
        1057
      ],
      "Pausable": [
        1149
      ],
      "SafeMath": [
        2484
      ],
      "Strings": [
        3167
      ]
    },
    "id": 953,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:15"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 1981,
        "src": "58:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 1058,
        "src": "116:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 2485,
        "src": "169:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 2085,
        "src": "227:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 1150,
        "src": "280:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 2011,
        "src": "336:76:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 953,
        "sourceUnit": 2173,
        "src": "413:68:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1980,
              "src": "508:6:15"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "508:6:15"
          },
          {
            "baseName": {
              "id": 11,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1149,
              "src": "516:8:15"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "516:8:15"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1057,
              "src": "526:7:15"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "526:7:15"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2010,
              "src": "535:14:15"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "535:14:15"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 952,
        "linearizedBaseContracts": [
          952,
          2010,
          1057,
          1149,
          1980,
          2667,
          2622,
          3191,
          3203,
          2506
        ],
        "name": "CryptidToken",
        "nameLocation": "492:12:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "id": 17,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3167,
              "src": "562:7:15"
            },
            "nodeType": "UsingForDirective",
            "src": "556:26:15",
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2484,
              "src": "593:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "587:27:15",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2084,
              "src": "625:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "619:36:15",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2016,
                "src": "638:16:15"
              },
              "referencedDeclaration": 2016,
              "src": "638:16:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2016_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "686:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "661:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2016_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2016,
                "src": "661:16:15"
              },
              "referencedDeclaration": 2016,
              "src": "661:16:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2016_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 31,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "723:10:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "708:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 33,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "753:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "739:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "739:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 36,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "787:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "773:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "773:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "797:2:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 39,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "819:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "805:37:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 37,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "805:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "835:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "862:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "848:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 40,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "848:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "870:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 44,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "890:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "877:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 43,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "877:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 47,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "925:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "913:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 45,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "913:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "942:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 50,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "965:20:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "953:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 48,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "953:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "988:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61869a93",
            "id": 53,
            "mutability": "mutable",
            "name": "withdrawDest1",
            "nameLocation": "1014:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "999:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1030:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1214392",
            "id": 56,
            "mutability": "mutable",
            "name": "withdrawDest2",
            "nameLocation": "1093:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1078:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1078:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1109:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b7353de6",
            "id": 60,
            "mutability": "mutable",
            "name": "freeUsers",
            "nameLocation": "1376:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1343:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 57,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1351:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1343:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 58,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1362:5:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5ecf8a80",
            "id": 64,
            "mutability": "mutable",
            "name": "freeMintCount",
            "nameLocation": "1424:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1391:46:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 61,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1399:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1391:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 62,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1410:5:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6ec55dbc",
            "id": 68,
            "mutability": "mutable",
            "name": "whitelistUsers",
            "nameLocation": "1508:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1476:46:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1484:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1476:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1495:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 70,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1543:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1528:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1528:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc1a1c36",
            "id": 73,
            "mutability": "mutable",
            "name": "whitelistPrice",
            "nameLocation": "1602:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1587:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1587:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3038",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1619:10:15",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80000000000000000_by_1",
                "typeString": "int_const 80000000000000000"
              },
              "value": "0.08"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a62248a9",
            "id": 76,
            "mutability": "mutable",
            "name": "whitelistMintMax",
            "nameLocation": "1648:16:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1635:33:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 74,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1635:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 75,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1667:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3bdf4ac6",
            "id": 80,
            "mutability": "mutable",
            "name": "whitelistMintCount",
            "nameLocation": "1725:18:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1692:51:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1700:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1692:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 78,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1711:5:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 82,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1792:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1777:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1777:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 84,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1853:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1838:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1838:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 87,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1917:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1902:37:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3038",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1929:10:15",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80000000000000000_by_1",
                "typeString": "int_const 80000000000000000"
              },
              "value": "0.08"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 89,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1960:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 952,
            "src": "1945:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1945:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2257:240:15",
              "statements": [
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2267:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2285:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2267:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:34:15"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "2311:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 115,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2328:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2311:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:32:15"
                },
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "2353:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2371:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2353:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:34:15"
                },
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2397:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "2412:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2397:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:28:15"
                },
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2435:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2445:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2435:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:18:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 130,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2463:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2016_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2042,
                      "src": "2463:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2016_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:27:15"
                }
              ]
            },
            "id": 136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 106,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "2241:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 107,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 93,
                    "src": "2248:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 108,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 105,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "2234:6:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:22:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2026:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2012:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2055:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2041:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2086:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2072:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2112:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2104:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2146:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2138:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2179:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2171:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2211:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2205:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2002:229:15"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:0:15"
            },
            "scope": 952,
            "src": "1991:506:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "2592:1827:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 144,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2610:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2618:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2610:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c79206f6e20737461676520302028696e6974292e",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2621:52:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98985e7aa1506f348a395bdb1977c508b8b78e4a707047e44d8fdd1212852832",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0 (init).\""
                        },
                        "value": "Minting not initiated. Currenly on stage 0 (init)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98985e7aa1506f348a395bdb1977c508b8b78e4a707047e44d8fdd1212852832",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0 (init).\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2602:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2602:72:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2692:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2706:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2692:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2684:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:63:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 158,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2765:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 159,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2780:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2765:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e2e",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2794:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c32c4ae7a2ddca381d4cdf387d78bb586513f4b09bdc5074d8282746668b24b",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction.\""
                        },
                        "value": "Exceeds max allowed amount per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c32c4ae7a2ddca381d4cdf387d78bb586513f4b09bdc5074d8282746668b24b",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction.\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2757:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2757:83:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2757:83:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 164,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2854:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2863:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2854:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 200,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3174:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3183:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "3174:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 252,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "3724:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3733:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3724:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 299,
                        "nodeType": "Block",
                        "src": "4015:232:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 279,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4060:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "4060:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 283,
                                        "name": "_mintAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 138,
                                        "src": "4087:11:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "expression": {
                                        "id": 281,
                                        "name": "salePrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87,
                                        "src": "4073:9:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2378,
                                      "src": "4073:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 284,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4073:26:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4060:39:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4e6f7420656e6f7567682065746865722073656e74",
                                  "id": 286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4101:23:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                    "typeString": "literal_string \"Not enough ether sent\""
                                  },
                                  "value": "Not enough ether sent"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                    "typeString": "literal_string \"Not enough ether sent\""
                                  }
                                ],
                                "id": 278,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4052:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4052:73:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 288,
                            "nodeType": "ExpressionStatement",
                            "src": "4052:73:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 290,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 882,
                                        "src": "4147:11:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 291,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4147:13:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 292,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 138,
                                      "src": "4164:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "4147:28:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 294,
                                    "name": "totalSaleSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "4179:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4147:47:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                                  "id": 296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4196:39:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                    "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                  },
                                  "value": "Transaction exceeds total sale supply"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                    "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                  }
                                ],
                                "id": 289,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4139:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4139:97:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 298,
                            "nodeType": "ExpressionStatement",
                            "src": "4139:97:15"
                          }
                        ]
                      },
                      "id": 300,
                      "nodeType": "IfStatement",
                      "src": "3720:527:15",
                      "trueBody": {
                        "id": 277,
                        "nodeType": "Block",
                        "src": "3736:271:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 256,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 985,
                                      "src": "3779:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3779:7:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 258,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3790:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 259,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3790:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3779:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4f6e6c79204f776e65722063616e206d696e742061742074686973207374616765",
                                  "id": 261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3802:35:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                    "typeString": "literal_string \"Only Owner can mint at this stage\""
                                  },
                                  "value": "Only Owner can mint at this stage"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                    "typeString": "literal_string \"Only Owner can mint at this stage\""
                                  }
                                ],
                                "id": 255,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3771:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3771:67:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 263,
                            "nodeType": "ExpressionStatement",
                            "src": "3771:67:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 265,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 138,
                                      "src": "3860:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 266,
                                      "name": "teamMintCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 84,
                                      "src": "3874:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3860:27:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 268,
                                    "name": "teamMintSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "3891:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3860:45:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                                  "id": 270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3907:44:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                    "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                  },
                                  "value": "Transaction exceeds total team-sale supply"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                    "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                  }
                                ],
                                "id": 264,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3852:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3852:100:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 272,
                            "nodeType": "ExpressionStatement",
                            "src": "3852:100:15"
                          },
                          {
                            "expression": {
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 273,
                                "name": "teamMintCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "3972:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 274,
                                "name": "_mintAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138,
                                "src": "3989:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "3972:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 276,
                            "nodeType": "ExpressionStatement",
                            "src": "3972:28:15"
                          }
                        ]
                      }
                    },
                    "id": 301,
                    "nodeType": "IfStatement",
                    "src": "3170:1077:15",
                    "trueBody": {
                      "id": 251,
                      "nodeType": "Block",
                      "src": "3186:526:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 204,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3242:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3242:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 208,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 138,
                                      "src": "3274:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "expression": {
                                      "id": 206,
                                      "name": "whitelistPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "3255:14:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2378,
                                    "src": "3255:18:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3255:31:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3242:44:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4e6f7420656e6f7567682065746865722073656e742e",
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3288:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_cf260361dfcdca5b78700bf9bb94c82eed77c586ed45e620d579f38012520955",
                                  "typeString": "literal_string \"Not enough ether sent.\""
                                },
                                "value": "Not enough ether sent."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cf260361dfcdca5b78700bf9bb94c82eed77c586ed45e620d579f38012520955",
                                  "typeString": "literal_string \"Not enough ether sent.\""
                                }
                              ],
                              "id": 203,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3234:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:79:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 213,
                          "nodeType": "ExpressionStatement",
                          "src": "3234:79:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 215,
                                  "name": "whitelistUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "3335:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 218,
                                "indexExpression": {
                                  "expression": {
                                    "id": 216,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3350:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3350:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3335:26:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "41646472657373206e6f74206f6e2077686974656c6973742e",
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3363:27:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b1a8af3360b538c64e5c11885463a8341519a2dc44dda436d6153a948929d014",
                                  "typeString": "literal_string \"Address not on whitelist.\""
                                },
                                "value": "Address not on whitelist."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b1a8af3360b538c64e5c11885463a8341519a2dc44dda436d6153a948929d014",
                                  "typeString": "literal_string \"Address not on whitelist.\""
                                }
                              ],
                              "id": 214,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3327:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3327:64:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 221,
                          "nodeType": "ExpressionStatement",
                          "src": "3327:64:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 226,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 223,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 882,
                                      "src": "3413:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3413:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 225,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "3429:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "3413:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 227,
                                  "name": "whitelistSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70,
                                  "src": "3444:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3413:46:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e20657863656564732077686974656c69737420737570706c792e",
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3461:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                                  "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                                },
                                "value": "Transaction exceeds whitelist supply."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                                  "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                                }
                              ],
                              "id": 222,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3405:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3405:96:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 231,
                          "nodeType": "ExpressionStatement",
                          "src": "3405:96:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 233,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "3523:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "baseExpression": {
                                      "id": 234,
                                      "name": "whitelistMintCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80,
                                      "src": "3537:18:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                        "typeString": "mapping(address => uint8)"
                                      }
                                    },
                                    "id": 237,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 235,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3556:3:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3556:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3537:30:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "3523:44:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 239,
                                  "name": "whitelistMintMax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "3571:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3523:64:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642077686974656c697374206d696e74732e",
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3589:50:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b06fa4f9de6cbc69574a4f404b010e0e11696b6cdd46470c6f0ba53036b6aa2e",
                                  "typeString": "literal_string \"Transaction exceeds max allowed whitelist mints.\""
                                },
                                "value": "Transaction exceeds max allowed whitelist mints."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b06fa4f9de6cbc69574a4f404b010e0e11696b6cdd46470c6f0ba53036b6aa2e",
                                  "typeString": "literal_string \"Transaction exceeds max allowed whitelist mints.\""
                                }
                              ],
                              "id": 232,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3515:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3515:125:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 243,
                          "nodeType": "ExpressionStatement",
                          "src": "3515:125:15"
                        },
                        {
                          "expression": {
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 244,
                                "name": "whitelistMintCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "3660:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                  "typeString": "mapping(address => uint8)"
                                }
                              },
                              "id": 247,
                              "indexExpression": {
                                "expression": {
                                  "id": 245,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3679:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3679:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "3660:30:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 248,
                              "name": "_mintAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "3694:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "3660:45:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 250,
                          "nodeType": "ExpressionStatement",
                          "src": "3660:45:15"
                        }
                      ]
                    }
                  },
                  "id": 302,
                  "nodeType": "IfStatement",
                  "src": "2850:1397:15",
                  "trueBody": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "2866:296:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 168,
                                  "name": "freeUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "2909:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                    "typeString": "mapping(address => uint8)"
                                  }
                                },
                                "id": 171,
                                "indexExpression": {
                                  "expression": {
                                    "id": 169,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2919:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2919:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2909:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2933:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2909:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e746572206e6f7420617761726465642066726565206d696e74732e",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2936:32:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba6c9d4e79a71fa3307f04be320a2e64ae5e8185399fe190e6cbc0e6eadc165",
                                "typeString": "literal_string \"Minter not awarded free mints.\""
                              },
                              "value": "Minter not awarded free mints."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba6c9d4e79a71fa3307f04be320a2e64ae5e8185399fe190e6cbc0e6eadc165",
                                "typeString": "literal_string \"Minter not awarded free mints.\""
                              }
                            ],
                            "id": 167,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2901:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2901:68:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "2901:68:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 178,
                                  "name": "_mintAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "2991:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 179,
                                    "name": "freeMintCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "3005:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                      "typeString": "mapping(address => uint8)"
                                    }
                                  },
                                  "id": 182,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 180,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3019:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3019:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3005:25:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2991:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 184,
                                  "name": "freeUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "3034:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                    "typeString": "mapping(address => uint8)"
                                  }
                                },
                                "id": 187,
                                "indexExpression": {
                                  "expression": {
                                    "id": 185,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3044:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3044:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3034:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "2991:64:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73616374696f6e20657863656564732072656d61696e696e672066726565206d696e74732e",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3057:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6767c911c291172d69c46750754a234ae1be939c9b9de7f8768a086731cac9ec",
                                "typeString": "literal_string \"Transaction exceeds remaining free mints.\""
                              },
                              "value": "Transaction exceeds remaining free mints."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6767c911c291172d69c46750754a234ae1be939c9b9de7f8768a086731cac9ec",
                                "typeString": "literal_string \"Transaction exceeds remaining free mints.\""
                              }
                            ],
                            "id": 177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2983:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2983:118:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "2983:118:15"
                      },
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 192,
                              "name": "freeMintCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "3115:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                "typeString": "mapping(address => uint8)"
                              }
                            },
                            "id": 195,
                            "indexExpression": {
                              "expression": {
                                "id": 193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3129:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3129:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3115:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 196,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3144:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3115:40:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "3115:40:15"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "4299:114:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 314,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4323:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4323:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 316,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "4335:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2016_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 317,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2028,
                                "src": "4335:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2016_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4335:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 313,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1644,
                              1673
                            ],
                            "referencedDeclaration": 1644,
                            "src": "4313:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4313:48:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "4313:48:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 321,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4375:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2016_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2042,
                            "src": "4375:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2016_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4375:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "4375:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4276:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 308,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "4281:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4276:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "initializationExpression": {
                    "assignments": [
                      304
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4269:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "4261:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4261:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 306,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4273:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4261:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4294:3:15",
                      "subExpression": {
                        "id": 310,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "4294:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 312,
                    "nodeType": "ExpressionStatement",
                    "src": "4294:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "4256:157:15"
                }
              ]
            },
            "functionSelector": "6ecd2306",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 140,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1105,
                  "src": "2578:13:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2578:13:15"
              }
            ],
            "name": "mint",
            "nameLocation": "2539:4:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "2550:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "2544:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:19:15"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2592:0:15"
            },
            "scope": 952,
            "src": "2530:1889:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "4481:25:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 334,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "4491:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4491:8:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4491:8:15"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 331,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "4471:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4471:9:15"
              }
            ],
            "name": "pause",
            "nameLocation": "4456:5:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4461:2:15"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4481:0:15"
            },
            "scope": 952,
            "src": "4447:59:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "4548:27:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 343,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "4558:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4558:10:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "4558:10:15"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "4538:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4538:9:15"
              }
            ],
            "name": "unpause",
            "nameLocation": "4521:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4528:2:15"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:15"
            },
            "scope": 952,
            "src": "4512:63:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "4654:601:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 357,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "4672:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4696:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4672:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4702:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4664:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "4664:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 364,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "4779:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4787:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4779:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506173742066726565206d696e742073616c652e",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4790:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fbc1c2b4ab3cb61c8998e1ac0c4ef5391186d43c24f646b55872e4445c5cf72",
                          "typeString": "literal_string \"Past free mint sale.\""
                        },
                        "value": "Past free mint sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fbc1c2b4ab3cb61c8998e1ac0c4ef5391186d43c24f646b55872e4445c5cf72",
                          "typeString": "literal_string \"Past free mint sale.\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4771:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4771:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 371,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "4831:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 372,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4846:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4831:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4860:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        },
                        "value": "Exceeds max allowed amount per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4823:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:82:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 378,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "4923:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4937:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4923:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4940:39:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        },
                        "value": "Airdrop amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4915:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 385,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "4998:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4998:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 387,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "5013:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4998:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 389,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "5028:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4998:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5045:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4990:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4990:99:15"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "5142:107:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 405,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "5166:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 406,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "5171:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2016_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2028,
                                "src": "5171:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2016_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5171:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 404,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1644,
                              1673
                            ],
                            "referencedDeclaration": 1644,
                            "src": "5156:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5156:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "5156:41:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 411,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "5211:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2016_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2042,
                            "src": "5211:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2016_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5211:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 415,
                        "nodeType": "ExpressionStatement",
                        "src": "5211:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 398,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "5119:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 399,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "5124:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5119:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "initializationExpression": {
                    "assignments": [
                      395
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5112:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "5104:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5104:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 397,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5116:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5104:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5137:3:15",
                      "subExpression": {
                        "id": 401,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "5137:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 403,
                    "nodeType": "ExpressionStatement",
                    "src": "5137:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "5099:150:15"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 354,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 353,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "4644:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4644:9:15"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "4590:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4611:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "4605:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4605:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4632:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "4624:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4624:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4604:32:15"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4654:0:15"
            },
            "scope": 952,
            "src": "4581:674:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "5348:154:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 431,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5366:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5374:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5366:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c6520697320636f6e636c756465642e",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5377:30:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        },
                        "value": "Whitelist sale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5358:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5358:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5358:50:15"
                },
                {
                  "body": {
                    "expression": {
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 448,
                          "name": "freeUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "5463:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                            "typeString": "mapping(address => uint8)"
                          }
                        },
                        "id": 452,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 449,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "5473:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 451,
                          "indexExpression": {
                            "id": 450,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "5480:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5473:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5463:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 453,
                          "name": "_mints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "5486:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        "id": 455,
                        "indexExpression": {
                          "id": 454,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "5493:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5486:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "5463:32:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 457,
                    "nodeType": "ExpressionStatement",
                    "src": "5463:32:15"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 441,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "5434:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 442,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "5436:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5436:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5434:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 458,
                  "initializationExpression": {
                    "assignments": [
                      438
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5430:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "5422:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5422:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 440,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5432:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5422:11:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5450:3:15",
                      "subExpression": {
                        "id": 445,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5450:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 447,
                    "nodeType": "ExpressionStatement",
                    "src": "5450:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "5418:77:15"
                }
              ]
            },
            "functionSelector": "a84ffcfc",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 427,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "5338:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5338:9:15"
              }
            ],
            "name": "setfreeUsers",
            "nameLocation": "5270:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "5300:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "5283:23:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 420,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5283:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 421,
                    "nodeType": "ArrayTypeName",
                    "src": "5283:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_mints",
                  "nameLocation": "5323:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "5308:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 423,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "5308:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 424,
                    "nodeType": "ArrayTypeName",
                    "src": "5308:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5282:48:15"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5348:0:15"
            },
            "scope": 952,
            "src": "5261:241:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "5577:149:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 469,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5595:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5603:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5595:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c69737420697320636f6e636c756465642e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5606:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7dd059f297d7910c4f5eee2fcb63eaf5480407553ed52e7a1b8e49f2f5b9e1",
                          "typeString": "literal_string \"Whitelist is concluded.\""
                        },
                        "value": "Whitelist is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7dd059f297d7910c4f5eee2fcb63eaf5480407553ed52e7a1b8e49f2f5b9e1",
                          "typeString": "literal_string \"Whitelist is concluded.\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5587:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5587:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:45:15"
                },
                {
                  "body": {
                    "expression": {
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 486,
                          "name": "whitelistUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5687:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 490,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "5702:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "id": 488,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "5709:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5702:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5687:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5715:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "5687:32:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 493,
                    "nodeType": "ExpressionStatement",
                    "src": "5687:32:15"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 479,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "5658:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 480,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "5660:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5660:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5658:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 494,
                  "initializationExpression": {
                    "assignments": [
                      476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5654:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "5646:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5646:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 478,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5656:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5646:11:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5674:3:15",
                      "subExpression": {
                        "id": 483,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "5674:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "nodeType": "ExpressionStatement",
                    "src": "5674:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "5642:77:15"
                }
              ]
            },
            "functionSelector": "2beab4b7",
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 465,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "5567:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5567:9:15"
              }
            ],
            "name": "setWhitelistUsers",
            "nameLocation": "5517:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "5552:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "5535:23:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 461,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5535:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 462,
                    "nodeType": "ArrayTypeName",
                    "src": "5535:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5534:25:15"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5577:0:15"
            },
            "scope": 952,
            "src": "5508:218:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "5789:167:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 504,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5807:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5815:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5807:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46726565206d696e742073616c6520697320636f6e636c756465642e",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5818:30:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13f30d24e23be182513154520dc859f43c27153ebdf1e568fbd9524a82809271",
                          "typeString": "literal_string \"Free mint sale is concluded.\""
                        },
                        "value": "Free mint sale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13f30d24e23be182513154520dc859f43c27153ebdf1e568fbd9524a82809271",
                          "typeString": "literal_string \"Free mint sale is concluded.\""
                        }
                      ],
                      "id": 503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5799:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5799:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "5799:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 511,
                            "name": "freeUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "5867:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "5877:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5867:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5886:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5867:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420617761726465642066726565206d696e742e",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5889:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd5cdbfe6dcd5d3f177385d7619204c90d1ca3be755ffb283bae169b6b32dfe",
                          "typeString": "literal_string \"User not awarded free mint.\""
                        },
                        "value": "User not awarded free mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd5cdbfe6dcd5d3f177385d7619204c90d1ca3be755ffb283bae169b6b32dfe",
                          "typeString": "literal_string \"User not awarded free mint.\""
                        }
                      ],
                      "id": 510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5859:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5859:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "5859:60:15"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 519,
                        "name": "freeUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "5929:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 521,
                      "indexExpression": {
                        "id": 520,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "5939:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5929:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5948:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5929:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "5929:20:15"
                }
              ]
            },
            "functionSelector": "30ba7bf9",
            "id": 526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 500,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "5779:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5779:9:15"
              }
            ],
            "name": "removeFreetUser",
            "nameLocation": "5741:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5765:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "5757:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5757:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5756:15:15"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5789:0:15"
            },
            "scope": 952,
            "src": "5732:224:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 546,
              "nodeType": "Block",
              "src": "6023:117:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 534,
                          "name": "whitelistUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "6041:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 536,
                        "indexExpression": {
                          "id": 535,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "6056:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6041:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f74206f6e2077686974656c697374206c6973742e",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6064:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bb22fecb409702124036f5b7515b17a16f03e9f5a67aee06e3828cfedc605da",
                          "typeString": "literal_string \"User not on whitelist list.\""
                        },
                        "value": "User not on whitelist list."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bb22fecb409702124036f5b7515b17a16f03e9f5a67aee06e3828cfedc605da",
                          "typeString": "literal_string \"User not on whitelist list.\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6033:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6033:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "6033:61:15"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 540,
                        "name": "whitelistUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "6104:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 542,
                      "indexExpression": {
                        "id": 541,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "6119:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6104:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6128:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6104:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:29:15"
                }
              ]
            },
            "functionSelector": "30cc7ae0",
            "id": 547,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 530,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "6013:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6013:9:15"
              }
            ],
            "name": "removeWhitelistUser",
            "nameLocation": "5971:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5999:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 547,
                  "src": "5991:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5991:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5990:15:15"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6023:0:15"
            },
            "scope": 952,
            "src": "5962:178:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "6210:94:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6228:15:15",
                        "subExpression": {
                          "id": 555,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "6229:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6245:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6220:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6220:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "6220:46:15"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 560,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6276:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 561,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "6286:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6276:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "6276:21:15"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 552,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 551,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "6200:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6200:9:15"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "6155:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "6180:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6166:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6166:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6165:27:15"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6210:0:15"
            },
            "scope": 952,
            "src": "6146:158:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "6357:173:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 573,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "6381:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6375:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 571,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6375:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6375:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6375:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6399:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6375:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6402:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6367:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6367:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "6367:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6446:15:15",
                        "subExpression": {
                          "id": 582,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "6447:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6463:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6438:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6438:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "6438:54:15"
                },
                {
                  "expression": {
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 587,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "6502:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6519:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6502:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:21:15"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 568,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "6347:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6347:9:15"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "6324:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6337:2:15"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6357:0:15"
            },
            "scope": 952,
            "src": "6315:215:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "6574:190:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 598,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "6592:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6616:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6592:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6622:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6584:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6584:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "6584:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 605,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6699:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6707:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6699:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206166746572207075626c69632073616c65",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6710:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        },
                        "value": "No stages after public sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6691:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6691:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "6691:49:15"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6750:7:15",
                    "subExpression": {
                      "id": 611,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "6750:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "6750:7:15"
                }
              ]
            },
            "functionSelector": "ee3743ab",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 594,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "6564:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6564:9:15"
              }
            ],
            "name": "nextStage",
            "nameLocation": "6545:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6554:2:15"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6574:0:15"
            },
            "scope": 952,
            "src": "6536:228:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "6808:184:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 621,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "6826:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6850:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6826:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6856:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6818:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6818:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "6818:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 628,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6933:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6941:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6933:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206265666f726520696e6974",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6944:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c4680713414538b672030036a277cadf019ad78db592b34009b5e4834cd49cf",
                          "typeString": "literal_string \"No stages before init\""
                        },
                        "value": "No stages before init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c4680713414538b672030036a277cadf019ad78db592b34009b5e4834cd49cf",
                          "typeString": "literal_string \"No stages before init\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6925:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6925:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "6925:43:15"
                },
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6978:7:15",
                    "subExpression": {
                      "id": 634,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "6978:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "6978:7:15"
                }
              ]
            },
            "functionSelector": "cbd0a2b5",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 617,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "6798:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6798:9:15"
              }
            ],
            "name": "prevStage",
            "nameLocation": "6779:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6788:2:15"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6808:0:15"
            },
            "scope": 952,
            "src": "6770:222:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "7074:52:15",
              "statements": [
                {
                  "expression": {
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 645,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "7084:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 646,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "7101:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7084:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:35:15"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 642,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7064:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7064:9:15"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "7011:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "7037:18:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "7029:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7028:28:15"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7074:0:15"
            },
            "scope": 952,
            "src": "7002:124:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "7208:50:15",
              "statements": [
                {
                  "expression": {
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 657,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "7218:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 658,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "7234:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7218:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "7218:33:15"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 654,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7198:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7198:9:15"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "7141:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "7172:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "7158:31:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7158:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7157:33:15"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7208:0:15"
            },
            "scope": 952,
            "src": "7132:126:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "7336:107:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 670,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "7354:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7362:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "7354:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c69737420697320636f6e636c756465642e",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7365:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7dd059f297d7910c4f5eee2fcb63eaf5480407553ed52e7a1b8e49f2f5b9e1",
                          "typeString": "literal_string \"Whitelist is concluded.\""
                        },
                        "value": "Whitelist is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7dd059f297d7910c4f5eee2fcb63eaf5480407553ed52e7a1b8e49f2f5b9e1",
                          "typeString": "literal_string \"Whitelist is concluded.\""
                        }
                      ],
                      "id": 669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7346:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7346:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "7346:45:15"
                },
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 676,
                      "name": "whitelistPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7401:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_newWhitelistPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "7418:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7401:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "7401:35:15"
                }
              ]
            },
            "functionSelector": "717d57d3",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 666,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7326:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7326:9:15"
              }
            ],
            "name": "setWhitelistPrice",
            "nameLocation": "7273:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_newWhitelistPrice",
                  "nameLocation": "7299:18:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7291:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7291:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7290:28:15"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7336:0:15"
            },
            "scope": 952,
            "src": "7264:179:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "7517:42:15",
              "statements": [
                {
                  "expression": {
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 688,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "7527:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 689,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "7539:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7527:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "7527:25:15"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 686,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 685,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7507:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7507:9:15"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "7458:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "7485:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "7477:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7476:23:15"
            },
            "returnParameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7517:0:15"
            },
            "scope": 952,
            "src": "7449:110:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "7631:48:15",
              "statements": [
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 700,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "7641:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 701,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "7656:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "7641:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "7641:31:15"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 697,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7621:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7621:9:15"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "7574:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "7596:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7590:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7589:24:15"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7631:0:15"
            },
            "scope": 952,
            "src": "7565:114:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "7760:119:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7778:21:15",
                        "subExpression": {
                          "id": 713,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "7779:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7801:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7770:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7770:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "7770:60:15"
                },
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 718,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "7840:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 719,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "7857:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7840:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:32:15"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 709,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7750:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7750:9:15"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "7694:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "7726:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "7712:29:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7712:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7711:31:15"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7760:0:15"
            },
            "scope": 952,
            "src": "7685:194:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "7962:71:15",
              "statements": [
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 732,
                      "name": "withdrawDest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "7972:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 733,
                      "name": "_dest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "7988:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7972:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "7972:22:15"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 736,
                      "name": "withdrawDest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "8004:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 737,
                      "name": "_dest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "8020:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8004:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "8004:22:15"
                }
              ]
            },
            "functionSelector": "e59a2f99",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 730,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 729,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "7952:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7952:9:15"
              }
            ],
            "name": "setWithdrawAddress",
            "nameLocation": "7894:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_dest1",
                  "nameLocation": "7921:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "7913:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7913:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "_dest2",
                  "nameLocation": "7937:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "7929:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7929:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7912:32:15"
            },
            "returnParameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7962:0:15"
            },
            "scope": 952,
            "src": "7885:148:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "8088:209:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 749,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "8112:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8106:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 747,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "8106:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8106:21:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8106:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8137:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8106:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8140:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8098:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8098:77:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8098:77:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8193:21:15",
                        "subExpression": {
                          "id": 758,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "8194:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8216:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8185:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8185:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "8185:68:15"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 763,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "8263:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8286:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8263:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "8263:27:15"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 743,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "8078:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "8078:9:15"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "8048:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8068:2:15"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8088:0:15"
            },
            "scope": 952,
            "src": "8039:258:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "8348:350:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 776,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8374:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$952",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$952",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8366:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 774,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8366:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8366:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8366:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8390:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8366:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8393:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8358:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8358:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "8358:60:15"
                },
                {
                  "assignments": [
                    785,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "hs",
                      "nameLocation": "8434:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 832,
                      "src": "8429:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8429:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 805,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8517:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 788,
                              "name": "withdrawDest1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "8450:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8442:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 786,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8442:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8442:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8442:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030",
                              "id": 800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8511:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "3530",
                                  "id": 797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8503:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 793,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8485:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$952",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$952",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8477:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 791,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8477:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8477:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8477:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2378,
                                "src": "8477:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8477:29:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2393,
                            "src": "8477:33:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8477:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8442:74:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8442:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8428:92:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 807,
                        "name": "hs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "8538:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2031206661696c6564",
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8542:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        },
                        "value": "withdrawl 1 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        }
                      ],
                      "id": 806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8530:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8530:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "8530:33:15"
                },
                {
                  "assignments": [
                    812,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "os",
                      "nameLocation": "8579:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 832,
                      "src": "8574:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8574:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 826,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8645:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 815,
                              "name": "withdrawDest2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "8595:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8587:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 813,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8587:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8587:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8587:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 820,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8630:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$952",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$952",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8622:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 818,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8622:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8622:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8622:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8587:57:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8587:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8573:75:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 828,
                        "name": "os",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "8666:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2032206661696c6564",
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8670:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        },
                        "value": "withdrawl 2 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8658:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8658:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "8658:33:15"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 771,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 770,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 999,
                  "src": "8338:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "8338:9:15"
              }
            ],
            "name": "withdraw",
            "nameLocation": "8312:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8320:2:15"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8348:0:15"
            },
            "scope": 952,
            "src": "8303:395:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "8789:108:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 839,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "8807:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8807:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8823:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8807:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8826:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8799:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:52:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 847,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "8876:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8876:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 846,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "8868:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8868:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 837,
                  "id": 850,
                  "nodeType": "Return",
                  "src": "8861:29:15"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "8742:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8757:2:15"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8781:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8780:9:15"
            },
            "scope": 952,
            "src": "8733:164:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "8954:100:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 858,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "8972:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8972:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8988:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8972:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8991:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8964:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8964:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "8964:52:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 865,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "9033:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9033:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 867,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9032:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 856,
                  "id": 868,
                  "nodeType": "Return",
                  "src": "9026:21:15"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "8912:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8922:2:15"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "8946:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8946:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8945:9:15"
            },
            "scope": 952,
            "src": "8903:151:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "9113:53:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 875,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "9130:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$2016_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2028,
                        "src": "9130:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2016_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2016_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9130:25:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9158:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9130:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 874,
                  "id": 880,
                  "nodeType": "Return",
                  "src": "9123:36:15"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9069:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9080:2:15"
            },
            "returnParameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9104:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9104:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9103:9:15"
            },
            "scope": 952,
            "src": "9060:106:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1357
            ],
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "9260:191:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 892,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "9286:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 891,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "9278:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9278:16:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9296:49:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9270:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9270:76:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "9270:76:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 901,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "9387:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 902,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 884,
                                "src": "9396:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3049,
                              "src": "9396:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9396:18:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 905,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "9416:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 899,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9370:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9370:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9370:60:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9363:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 897,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9363:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9363:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 889,
                  "id": 908,
                  "nodeType": "Return",
                  "src": "9356:75:15"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9181:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9227:8:15"
            },
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9198:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "9190:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9190:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9189:17:15"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "9245:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9245:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9244:15:15"
            },
            "scope": 952,
            "src": "9172:279:15",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 920,
              "nodeType": "Block",
              "src": "9512:55:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 915,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "9529:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 916,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "9547:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9547:13:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9529:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 914,
                  "id": 919,
                  "nodeType": "Return",
                  "src": "9522:38:15"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "9466:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9479:2:15"
            },
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 921,
                  "src": "9503:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9503:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9502:9:15"
            },
            "scope": 952,
            "src": "9457:110:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "9625:29:15",
              "statements": [
                {
                  "expression": {
                    "id": 926,
                    "name": "stage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "9642:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 925,
                  "id": 927,
                  "nodeType": "Return",
                  "src": "9635:12:15"
                }
              ]
            },
            "functionSelector": "fcaa7664",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStage",
            "nameLocation": "9586:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9594:2:15"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "9618:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9618:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9617:7:15"
            },
            "scope": 952,
            "src": "9577:77:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1979
            ],
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "9773:62:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 945,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 931,
                        "src": "9810:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 946,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "9816:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 947,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "9820:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 942,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9783:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$952_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1979,
                      "src": "9783:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9783:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "9783:45:15"
                }
              ]
            },
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 938,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 937,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1105,
                  "src": "9742:13:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "9742:13:15"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9669:20:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 940,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 939,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "9765:6:15"
                }
              ],
              "src": "9756:16:15"
            },
            "parameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9698:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "9690:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9690:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9712:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "9704:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9704:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9724:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "9716:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9716:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9689:43:15"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9773:0:15"
            },
            "scope": 952,
            "src": "9660:175:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 953,
        "src": "483:9355:15",
        "usedErrors": []
      }
    ],
    "src": "32:9806:15"
  },
  "bytecode": "60a06040819052600060808190526200001b91600a91620001f3565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600b91620001f3565b50600c8054771953bc1ff76f5e61cd775a4482bd85bac56ad1eb0000000061ff01600160c01b0319909116179055600d80546001600160a01b0319167312b58f5331a6dc897932aa7fb5101667acdf03e217905567011c37937e08000060128190556013805460ff19166002179055601755348015620000c957600080fd5b50604051620040d9380380620040d9833981016040819052620000ec9162000366565b86518790879062000105906000906020850190620001f3565b5080516200011b906001906020840190620001f3565b50506006805460ff1916905550620001333362000190565b601184905560158390556018829055600c805461ff00191661010060ff84160217905584516200016b90600a906020880190620001f3565b50620001836007620001ea60201b620028bb1760201c565b505050505050506200046d565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620002019062000430565b90600052602060002090601f01602090048101928262000225576000855562000270565b82601f106200024057805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200027057825182559160200191906001019062000253565b506200027e92915062000282565b5090565b5b808211156200027e576000815560010162000283565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002c157600080fd5b81516001600160401b0380821115620002de57620002de62000299565b604051601f8301601f19908116603f0116810190828211818310171562000309576200030962000299565b816040528381526020925086838588010111156200032657600080fd5b600091505b838210156200034a57858201830151818301840152908201906200032b565b838211156200035c5760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200038257600080fd5b87516001600160401b03808211156200039a57600080fd5b620003a88b838c01620002af565b985060208a0151915080821115620003bf57600080fd5b620003cd8b838c01620002af565b975060408a0151915080821115620003e457600080fd5b50620003f38a828b01620002af565b955050606088015193506080880151925060a0880151915060c088015160ff811681146200042057600080fd5b8091505092959891949750929550565b600181811c908216806200044557607f821691505b602082108114156200046757634e487b7160e01b600052602260045260246000fd5b50919050565b613c5c806200047d6000396000f3fe6080604052600436106103c35760003560e01c806378231978116101f2578063c66828621161010d578063e59a2f99116100a0578063f2fde38b1161006f578063f2fde38b14610b03578063f51f96dd14610b23578063fc1a1c3614610b39578063fcaa766414610b4f57600080fd5b8063e59a2f9914610a70578063e7bc820814610a90578063e985e9c514610aa5578063ee3743ab14610aee57600080fd5b8063d6d67a09116100dc578063d6d67a0914610a07578063da3ef23f14610a1c578063de5f986614610a3c578063de7fcb1d14610a5157600080fd5b8063c6682862146109a8578063c6ab67a3146109bd578063c87b56dd146109d2578063cbd0a2b5146109f257600080fd5b8063a62248a911610185578063b7353de611610154578063b7353de614610922578063b88d4fde14610952578063c29de63014610972578063c32145811461099257600080fd5b8063a62248a9146108a8578063a84ffcfc146108c2578063b1214392146108e2578063b3caad011461090257600080fd5b80638da5cb5b116101c15780638da5cb5b1461082f57806395d89b41146108525780639a2a9c3d14610867578063a22cb4651461088857600080fd5b806378231978146107cf578063791a2519146107e557806381c162f2146108055780638456cb591461081a57600080fd5b80633f4ba83a116102e25780636352211e116102755780636ecd2306116102445780636ecd23061461076757806370a082311461077a578063715018a61461079a578063717d57d3146107af57600080fd5b80636352211e146106ed5780636c0360eb1461070d5780636cbb8985146107225780636ec55dbc1461073757600080fd5b80635c975abb116102b15780635c975abb1461065d5780635ecf8a801461067557806361869a93146106a5578063622e4e78146106cd57600080fd5b80633f4ba83a146105e857806342842e0e146105fd57806342966c681461061d57806355f804b31461063d57600080fd5b806323b872dd1161035a57806330cc7ae01161032957806330cc7ae01461056857806333e61413146105885780633bdf4ac61461059e5780633ccfd60b146105e057600080fd5b806323b872dd146104f25780632beab4b7146105125780632eb4a7ab1461053257806330ba7bf91461054857600080fd5b8063095ea7b311610396578063095ea7b31461047b578063109695231461049d57806318160ddd146104bd57806320841a6a146104d257600080fd5b806301ffc9a7146103c857806306fdde03146103fd578063081812fc1461041f578063088139a614610457575b600080fd5b3480156103d457600080fd5b506103e86103e336600461334a565b610b67565b60405190151581526020015b60405180910390f35b34801561040957600080fd5b50610412610bb9565b6040516103f491906133bf565b34801561042b57600080fd5b5061043f61043a3660046133d2565b610c4b565b6040516001600160a01b0390911681526020016103f4565b34801561046357600080fd5b5061046d60165481565b6040519081526020016103f4565b34801561048757600080fd5b5061049b610496366004613407565b610ce5565b005b3480156104a957600080fd5b5061049b6104b83660046134d0565b610dfb565b3480156104c957600080fd5b5061046d610e9c565b3480156104de57600080fd5b5061049b6104ed3660046133d2565b610eb8565b3480156104fe57600080fd5b5061049b61050d366004613519565b610eed565b34801561051e57600080fd5b5061049b61052d3660046135eb565b610f1f565b34801561053e57600080fd5b5061046d60085481565b34801561055457600080fd5b5061049b610563366004613620565b611008565b34801561057457600080fd5b5061049b610583366004613620565b611118565b34801561059457600080fd5b5061046d60115481565b3480156105aa57600080fd5b506105ce6105b9366004613620565b60146020526000908152604090205460ff1681565b60405160ff90911681526020016103f4565b61049b6111d1565b3480156105f457600080fd5b5061049b611396565b34801561060957600080fd5b5061049b610618366004613519565b6113d0565b34801561062957600080fd5b5061049b6106383660046133d2565b6113eb565b34801561064957600080fd5b5061049b6106583660046134d0565b611465565b34801561066957600080fd5b5060065460ff166103e8565b34801561068157600080fd5b506105ce610690366004613620565b600f6020526000908152604090205460ff1681565b3480156106b157600080fd5b50600c5461043f9064010000000090046001600160a01b031681565b3480156106d957600080fd5b5061049b6106e836600461364c565b6114f6565b3480156106f957600080fd5b5061043f6107083660046133d2565b611542565b34801561071957600080fd5b506104126115b9565b34801561072e57600080fd5b5061043f611647565b34801561074357600080fd5b506103e8610752366004613620565b60106020526000908152604090205460ff1681565b61049b61077536600461364c565b6116a3565b34801561078657600080fd5b5061046d610795366004613620565b611d41565b3480156107a657600080fd5b5061049b611dc8565b3480156107bb57600080fd5b5061049b6107ca3660046133d2565b611e02565b3480156107db57600080fd5b5061046d60185481565b3480156107f157600080fd5b5061049b6108003660046133d2565b611e88565b34801561081157600080fd5b5061049b611ebd565b34801561082657600080fd5b5061049b611fc5565b34801561083b57600080fd5b5060065461010090046001600160a01b031661043f565b34801561085e57600080fd5b50610412611ffd565b34801561087357600080fd5b50600c546103e8906301000000900460ff1681565b34801561089457600080fd5b5061049b6108a3366004613667565b61200c565b3480156108b457600080fd5b506013546105ce9060ff1681565b3480156108ce57600080fd5b5061049b6108dd3660046136a3565b612017565b3480156108ee57600080fd5b50600d5461043f906001600160a01b031681565b34801561090e57600080fd5b5061049b61091d366004613765565b61212d565b34801561092e57600080fd5b506105ce61093d366004613620565b600e6020526000908152604090205460ff1681565b34801561095e57600080fd5b5061049b61096d366004613798565b61235e565b34801561097e57600080fd5b50600c546103e89062010000900460ff1681565b34801561099e57600080fd5b5061046d60155481565b3480156109b457600080fd5b50610412612396565b3480156109c957600080fd5b506104126123a3565b3480156109de57600080fd5b506104126109ed3660046133d2565b6123b0565b3480156109fe57600080fd5b5061049b612464565b348015610a1357600080fd5b5061046d61253a565b348015610a2857600080fd5b5061049b610a373660046134d0565b612593565b348015610a4857600080fd5b5061046d6125d6565b348015610a5d57600080fd5b50600c546105ce90610100900460ff1681565b348015610a7c57600080fd5b5061049b610a8b366004613814565b6125ed565b348015610a9c57600080fd5b5061049b61265b565b348015610ab157600080fd5b506103e8610ac0366004613814565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610afa57600080fd5b5061049b612755565b348015610b0f57600080fd5b5061049b610b1e366004613620565b61281d565b348015610b2f57600080fd5b5061046d60175481565b348015610b4557600080fd5b5061046d60125481565b348015610b5b57600080fd5b50600c5460ff166105ce565b60006001600160e01b031982166380ac58cd60e01b1480610b9857506001600160e01b03198216635b5e139f60e01b145b80610bb357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610bc890613830565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf490613830565b8015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610cc95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610cf082611542565b9050806001600160a01b0316836001600160a01b03161415610d5e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610cc0565b336001600160a01b0382161480610d7a5750610d7a8133610ac0565b610dec5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610cc0565b610df683836128c4565b505050565b6006546001600160a01b03610100909104163314610e2b5760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615610e855760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610cc0565b8051610e9890600990602084019061329b565b5050565b60006001610ea960075490565b610eb391906138b6565b905090565b6006546001600160a01b03610100909104163314610ee85760405162461bcd60e51b8152600401610cc09061386b565b601555565b610ef8335b82612932565b610f145760405162461bcd60e51b8152600401610cc0906138cd565b610df6838383612a29565b6006546001600160a01b03610100909104163314610f4f5760405162461bcd60e51b8152600401610cc09061386b565b600c54600360ff90911610610fa05760405162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba1034b99031b7b731b63ab232b21760491b6044820152606401610cc0565b60005b8151811015610e9857600160106000848481518110610fc457610fc461391e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061100081613934565b915050610fa3565b6006546001600160a01b036101009091041633146110385760405162461bcd60e51b8152600401610cc09061386b565b600c54600260ff9091161061108f5760405162461bcd60e51b815260206004820152601c60248201527f46726565206d696e742073616c6520697320636f6e636c756465642e000000006044820152606401610cc0565b6001600160a01b0381166000908152600e602052604090205460ff166110f75760405162461bcd60e51b815260206004820152601b60248201527f55736572206e6f7420617761726465642066726565206d696e742e00000000006044820152606401610cc0565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146111485760405162461bcd60e51b8152600401610cc09061386b565b6001600160a01b03811660009081526010602052604090205460ff166111b05760405162461bcd60e51b815260206004820152601b60248201527f55736572206e6f74206f6e2077686974656c697374206c6973742e00000000006044820152606401610cc0565b6001600160a01b03166000908152601060205260409020805460ff19169055565b6006546001600160a01b036101009091041633146112015760405162461bcd60e51b8152600401610cc09061386b565b6000471161124a5760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610cc0565b600c5460009064010000000090046001600160a01b03166112776064611271476032612bd4565b90612be7565b604051600081818185875af1925050503d80600081146112b3576040519150601f19603f3d011682016040523d82523d6000602084013e6112b8565b606091505b50509050806112fe5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610cc0565b600d546040516000916001600160a01b03169047908381818185875af1925050503d806000811461134b576040519150601f19603f3d011682016040523d82523d6000602084013e611350565b606091505b5050905080610e985760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610cc0565b6006546001600160a01b036101009091041633146113c65760405162461bcd60e51b8152600401610cc09061386b565b6113ce612bf3565b565b610df68383836040518060200160405280600081525061235e565b6113f433610ef2565b6114595760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610cc0565b61146281612c86565b50565b6006546001600160a01b036101009091041633146114955760405162461bcd60e51b8152600401610cc09061386b565b600c5462010000900460ff16156114e35760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610cc0565b8051610e9890600a90602084019061329b565b6006546001600160a01b036101009091041633146115265760405162461bcd60e51b8152600401610cc09061386b565b600c805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610bb35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610cc0565b600a80546115c690613830565b80601f01602080910402602001604051908101604052809291908181526020018280546115f290613830565b801561163f5780601f106116145761010080835404028352916020019161163f565b820191906000526020600020905b81548152906001019060200180831161162257829003601f168201915b505050505081565b600080611652610e9c565b116116985760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610cc0565b610eb3610708610e9c565b60065460ff16156116c65760405162461bcd60e51b8152600401610cc09061394f565b600c5460ff166117335760405162461bcd60e51b815260206004820152603260248201527f4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c792060448201527137b71039ba30b3b29018101434b734ba149760711b6064820152608401610cc0565b60008160ff16116117925760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610cc0565b600c5460ff610100909104811690821611156118045760405162461bcd60e51b815260206004820152602b60248201527f45786365656473206d617820616c6c6f77656420616d6f756e7420706572207460448201526a3930b739b0b1ba34b7b71760a91b6064820152608401610cc0565b600c5460ff166001141561194057336000908152600e602052604090205460ff166118715760405162461bcd60e51b815260206004820152601e60248201527f4d696e746572206e6f7420617761726465642066726565206d696e74732e00006044820152606401610cc0565b336000908152600e6020908152604080832054600f9092529091205460ff9182169161189e911683613979565b60ff1611156119015760405162461bcd60e51b815260206004820152602960248201527f5472616e73616374696f6e20657863656564732072656d61696e696e6720667260448201526832b29036b4b73a399760b91b6064820152608401610cc0565b336000908152600f60205260408120805483929061192390849060ff16613979565b92506101000a81548160ff021916908360ff160217905550611d02565b600c5460ff1660021415611b2a5760125461195e9060ff8316612bd4565b3410156119a65760405162461bcd60e51b81526020600482015260166024820152752737ba1032b737bab3b41032ba3432b91039b2b73a1760511b6044820152606401610cc0565b3360009081526010602052604090205460ff16611a055760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610cc0565b6011548160ff16611a14610e9c565b611a1e919061399e565b1115611a7a5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e20657863656564732077686974656c6973742073756044820152643838363c9760d91b6064820152608401610cc0565b6013543360009081526014602052604090205460ff91821691611a9e911683613979565b60ff161115611b085760405162461bcd60e51b815260206004820152603060248201527f5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642060448201526f3bb434ba32b634b9ba1036b4b73a399760811b6064820152608401610cc0565b336000908152601460205260408120805483929061192390849060ff16613979565b600c5460ff1660031415611c36576006546001600160a01b03610100909104163314611ba25760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204f776e65722063616e206d696e74206174207468697320737461676044820152606560f81b6064820152608401610cc0565b601554601654611bb59060ff841661399e565b1115611c165760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610cc0565b8060ff1660166000828254611c2b919061399e565b90915550611d029050565b601754611c469060ff8316612bd4565b341015611c8d5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610cc0565b6018548160ff16611c9c610e9c565b611ca6919061399e565b1115611d025760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610cc0565b60015b8160ff168111610e9857611d2133611d1c60075490565b612d2d565b611d2f600780546001019055565b80611d3981613934565b915050611d05565b60006001600160a01b038216611dac5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610cc0565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03610100909104163314611df85760405162461bcd60e51b8152600401610cc09061386b565b6113ce6000612d47565b6006546001600160a01b03610100909104163314611e325760405162461bcd60e51b8152600401610cc09061386b565b600c54600360ff90911610611e835760405162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba1034b99031b7b731b63ab232b21760491b6044820152606401610cc0565b601255565b6006546001600160a01b03610100909104163314611eb85760405162461bcd60e51b8152600401610cc09061386b565b601755565b6006546001600160a01b03610100909104163314611eed5760405162461bcd60e51b8152600401610cc09061386b565b600060098054611efc90613830565b905011611f4b5760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610cc0565b600c546301000000900460ff1615611fb05760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610cc0565b600c805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611ff55760405162461bcd60e51b8152600401610cc09061386b565b6113ce612da1565b606060018054610bc890613830565b610e98338383612df9565b6006546001600160a01b036101009091041633146120475760405162461bcd60e51b8152600401610cc09061386b565b600c54600260ff9091161061209e5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610cc0565b60005b8251811015610df6578181815181106120bc576120bc61391e565b6020026020010151600e60008584815181106120da576120da61391e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff160217905550808061212590613934565b9150506120a1565b6006546001600160a01b0361010090910416331461215d5760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff16151560011461218b5760405162461bcd60e51b8152600401610cc0906139b6565b600c54600260ff909116106121d95760405162461bcd60e51b81526020600482015260146024820152732830b9ba10333932b29036b4b73a1039b0b6329760611b6044820152606401610cc0565b600c5460ff6101009091048116908316111561224a5760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f77656420616d6f756e742070657220746044820152693930b739b0b1ba34b7b760b11b6064820152608401610cc0565b60008260ff16116122ab5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610cc0565b6011548260ff166122ba610e9c565b6122c4919061399e565b11156123245760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610cc0565b60015b8260ff168111610df65761233e82611d1c60075490565b61234c600780546001019055565b8061235681613934565b915050612327565b6123683383612932565b6123845760405162461bcd60e51b8152600401610cc0906138cd565b61239084848484612ec8565b50505050565b600b80546115c690613830565b600980546115c690613830565b6000818152600260205260409020546060906001600160a01b031661242f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610cc0565b600a61243a83612efb565b600b60405160200161244e93929190613aad565b6040516020818303038152906040529050919050565b6006546001600160a01b036101009091041633146124945760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615156001146124c25760405162461bcd60e51b8152600401610cc0906139b6565b600c5460ff1661250c5760405162461bcd60e51b8152602060048201526015602482015274139bc81cdd1859d95cc81899599bdc99481a5b9a5d605a1b6044820152606401610cc0565b600c805460ff1690600061251f83613ae0565b91906101000a81548160ff021916908360ff16021790555050565b600080612545610e9c565b1161258b5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610cc0565b610eb3610e9c565b6006546001600160a01b036101009091041633146125c35760405162461bcd60e51b8152600401610cc09061386b565b8051610e9890600b90602084019061329b565b60006125e0610e9c565b601854610eb391906138b6565b6006546001600160a01b0361010090910416331461261d5760405162461bcd60e51b8152600401610cc09061386b565b600c8054640100000000600160c01b0319166401000000006001600160a01b0394851602179055600d80546001600160a01b03191691909216179055565b6006546001600160a01b0361010090910416331461268b5760405162461bcd60e51b8152600401610cc09061386b565b6000600a805461269a90613830565b9050116126e95760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610cc0565b600c5462010000900460ff16156127425760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610cc0565b600c805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146127855760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615156001146127b35760405162461bcd60e51b8152600401610cc0906139b6565b600c54600460ff9091161061280a5760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610cc0565b600c805460ff1690600061251f83613afd565b6006546001600160a01b0361010090910416331461284d5760405162461bcd60e51b8152600401610cc09061386b565b6001600160a01b0381166128b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cc0565b61146281612d47565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906128f982611542565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166129ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610cc0565b60006129b683611542565b9050806001600160a01b0316846001600160a01b031614806129f15750836001600160a01b03166129e684610c4b565b6001600160a01b0316145b80612a2157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316612a3c82611542565b6001600160a01b031614612aa45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610cc0565b6001600160a01b038216612b065760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610cc0565b612b11838383612ff9565b612b1c6000826128c4565b6001600160a01b0383166000908152600360205260408120805460019290612b459084906138b6565b90915550506001600160a01b0382166000908152600360205260408120805460019290612b7390849061399e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000612be08284613b1d565b9392505050565b6000612be08284613b52565b60065460ff16612c3c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610cc0565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612c9182611542565b9050612c9f81600084612ff9565b612caa6000836128c4565b6001600160a01b0381166000908152600360205260408120805460019290612cd39084906138b6565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610e9882826040518060200160405280600081525061301c565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612dc45760405162461bcd60e51b8152600401610cc09061394f565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612c693390565b816001600160a01b0316836001600160a01b03161415612e5b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610cc0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612ed3848484612a29565b612edf8484848461304f565b6123905760405162461bcd60e51b8152600401610cc090613b66565b606081612f1f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612f495780612f3381613934565b9150612f429050600a83613b52565b9150612f23565b60008167ffffffffffffffff811115612f6457612f64613431565b6040519080825280601f01601f191660200182016040528015612f8e576020820181803683370190505b5090505b8415612a2157612fa36001836138b6565b9150612fb0600a86613bb8565b612fbb90603061399e565b60f81b818381518110612fd057612fd061391e565b60200101906001600160f81b031916908160001a905350612ff2600a86613b52565b9450612f92565b60065460ff1615610df65760405162461bcd60e51b8152600401610cc09061394f565b613026838361314d565b613033600084848461304f565b610df65760405162461bcd60e51b8152600401610cc090613b66565b60006001600160a01b0384163b1561314257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613093903390899088908890600401613bcc565b6020604051808303816000875af19250505080156130ce575060408051601f3d908101601f191682019092526130cb91810190613c09565b60015b613128573d8080156130fc576040519150601f19603f3d011682016040523d82523d6000602084013e613101565b606091505b5080516131205760405162461bcd60e51b8152600401610cc090613b66565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612a21565b506001949350505050565b6001600160a01b0382166131a35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610cc0565b6000818152600260205260409020546001600160a01b0316156132085760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610cc0565b61321460008383612ff9565b6001600160a01b038216600090815260036020526040812080546001929061323d90849061399e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546132a790613830565b90600052602060002090601f0160209004810192826132c9576000855561330f565b82601f106132e257805160ff191683800117855561330f565b8280016001018555821561330f579182015b8281111561330f5782518255916020019190600101906132f4565b5061331b92915061331f565b5090565b5b8082111561331b5760008155600101613320565b6001600160e01b03198116811461146257600080fd5b60006020828403121561335c57600080fd5b8135612be081613334565b60005b8381101561338257818101518382015260200161336a565b838111156123905750506000910152565b600081518084526133ab816020860160208601613367565b601f01601f19169290920160200192915050565b602081526000612be06020830184613393565b6000602082840312156133e457600080fd5b5035919050565b80356001600160a01b038116811461340257600080fd5b919050565b6000806040838503121561341a57600080fd5b613423836133eb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561347057613470613431565b604052919050565b600067ffffffffffffffff83111561349257613492613431565b6134a5601f8401601f1916602001613447565b90508281528383830111156134b957600080fd5b828260208301376000602084830101529392505050565b6000602082840312156134e257600080fd5b813567ffffffffffffffff8111156134f957600080fd5b8201601f8101841361350a57600080fd5b612a2184823560208401613478565b60008060006060848603121561352e57600080fd5b613537846133eb565b9250613545602085016133eb565b9150604084013590509250925092565b600067ffffffffffffffff82111561356f5761356f613431565b5060051b60200190565b600082601f83011261358a57600080fd5b8135602061359f61359a83613555565b613447565b82815260059290921b840181019181810190868411156135be57600080fd5b8286015b848110156135e0576135d3816133eb565b83529183019183016135c2565b509695505050505050565b6000602082840312156135fd57600080fd5b813567ffffffffffffffff81111561361457600080fd5b612a2184828501613579565b60006020828403121561363257600080fd5b612be0826133eb565b803560ff8116811461340257600080fd5b60006020828403121561365e57600080fd5b612be08261363b565b6000806040838503121561367a57600080fd5b613683836133eb565b91506020830135801515811461369857600080fd5b809150509250929050565b600080604083850312156136b657600080fd5b823567ffffffffffffffff808211156136ce57600080fd5b6136da86838701613579565b93506020915081850135818111156136f157600080fd5b85019050601f8101861361370457600080fd5b803561371261359a82613555565b81815260059190911b8201830190838101908883111561373157600080fd5b928401925b82841015613756576137478461363b565b82529284019290840190613736565b80955050505050509250929050565b6000806040838503121561377857600080fd5b6137818361363b565b915061378f602084016133eb565b90509250929050565b600080600080608085870312156137ae57600080fd5b6137b7856133eb565b93506137c5602086016133eb565b925060408501359150606085013567ffffffffffffffff8111156137e857600080fd5b8501601f810187136137f957600080fd5b61380887823560208401613478565b91505092959194509250565b6000806040838503121561382757600080fd5b613781836133eb565b600181811c9082168061384457607f821691505b6020821081141561386557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156138c8576138c86138a0565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613948576139486138a0565b5060010190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600060ff821660ff84168060ff03821115613996576139966138a0565b019392505050565b600082198211156139b1576139b16138a0565b500190565b60208082526038908201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260408201527f65666f7265206d696e74696e672063616e2073746172742e0000000000000000606082015260800190565b8054600090600181811c9080831680613a2d57607f831692505b6020808410821415613a4f57634e487b7160e01b600052602260045260246000fd5b818015613a635760018114613a7457613aa1565b60ff19861689528489019650613aa1565b60008881526020902060005b86811015613a995781548b820152908501908301613a80565b505084890196505b50505050505092915050565b6000613ab98286613a13565b8451613ac9818360208901613367565b613ad581830186613a13565b979650505050505050565b600060ff821680613af357613af36138a0565b6000190192915050565b600060ff821660ff811415613b1457613b146138a0565b60010192915050565b6000816000190483118215151615613b3757613b376138a0565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613b6157613b61613b3c565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082613bc757613bc7613b3c565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613bff90830184613393565b9695505050505050565b600060208284031215613c1b57600080fd5b8151612be08161333456fea2646970667358221220702615b099562ddab1f9b5c0942f4521c605e7b4b59755b3a1f4cb7d75a749d164736f6c634300080a0033",
  "bytecodeSha1": "40e5a3fce09f950a9cb7f63a2ec0b9f7914471b8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "206": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "Strings.toString": {
          "207": [
            601,
            611,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {
        "CryptidToken.airdropCryptid": {
          "181": [
            4672,
            4700,
            true
          ],
          "182": [
            4779,
            4788,
            true
          ],
          "183": [
            4831,
            4858,
            true
          ],
          "184": [
            4923,
            4938,
            true
          ],
          "185": [
            4998,
            5043,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "188": [
            6375,
            6400,
            true
          ],
          "189": [
            6446,
            6461,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "178": [
            8106,
            8138,
            true
          ],
          "179": [
            8193,
            8214,
            true
          ]
        },
        "CryptidToken.lastMintAddress": {
          "162": [
            8807,
            8824,
            true
          ]
        },
        "CryptidToken.lastMintID": {
          "187": [
            8972,
            8989,
            true
          ]
        },
        "CryptidToken.mint": {
          "163": [
            2692,
            2707,
            true
          ],
          "164": [
            2765,
            2792,
            true
          ],
          "165": [
            2854,
            2864,
            false
          ],
          "166": [
            2991,
            3055,
            true
          ],
          "167": [
            3174,
            3184,
            false
          ],
          "168": [
            3242,
            3286,
            true
          ],
          "169": [
            3335,
            3361,
            true
          ],
          "170": [
            3413,
            3459,
            true
          ],
          "171": [
            3523,
            3587,
            true
          ],
          "172": [
            3724,
            3734,
            false
          ],
          "173": [
            3779,
            3800,
            true
          ],
          "174": [
            3860,
            3905,
            true
          ],
          "175": [
            4060,
            4099,
            true
          ],
          "176": [
            4147,
            4194,
            true
          ]
        },
        "CryptidToken.nextStage": {
          "190": [
            6592,
            6620,
            true
          ],
          "191": [
            6699,
            6708,
            true
          ]
        },
        "CryptidToken.prevStage": {
          "186": [
            6826,
            6854,
            true
          ]
        },
        "CryptidToken.removeFreetUser": {
          "156": [
            5807,
            5816,
            true
          ]
        },
        "CryptidToken.removeWhitelistUser": {
          "157": [
            6041,
            6062,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "161": [
            6228,
            6243,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "154": [
            7778,
            7799,
            true
          ]
        },
        "CryptidToken.setWhitelistPrice": {
          "177": [
            7354,
            7363,
            true
          ]
        },
        "CryptidToken.setWhitelistUsers": {
          "155": [
            5595,
            5604,
            true
          ]
        },
        "CryptidToken.setfreeUsers": {
          "180": [
            5366,
            5375,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "158": [
            8366,
            8391,
            true
          ],
          "159": [
            8538,
            8540,
            true
          ],
          "160": [
            8666,
            8668,
            true
          ]
        }
      },
      "2": {
        "ERC721._mint": {
          "204": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeMint": {
          "203": [
            8604,
            8658,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "202": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "201": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "199": [
            10451,
            10482,
            true
          ],
          "200": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "192": [
            3659,
            3670,
            true
          ],
          "193": [
            3740,
            3761,
            true
          ],
          "194": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "197": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "196": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "198": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "195": [
            4900,
            4941,
            true
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "205": [
            645,
            686,
            true
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "128": [
            2378,
            2395
          ],
          "129": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "64": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "104": [
            1998,
            2071
          ],
          "105": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "130": [
            1922,
            1936
          ],
          "131": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "120": [
            2168,
            2183
          ],
          "121": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Strings.toString": {
          "137": [
            627,
            637
          ],
          "138": [
            743,
            751
          ],
          "139": [
            765,
            775
          ],
          "140": [
            877,
            888
          ],
          "141": [
            902,
            958
          ],
          "142": [
            972,
            983
          ]
        }
      },
      "12": {
        "ERC165.supportsInterface": {
          "5": [
            930,
            977
          ]
        }
      },
      "13": {},
      "14": {
        "SafeMath.div": {
          "119": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "118": [
            3528,
            3540
          ]
        }
      },
      "15": {
        "CryptidToken.airdropCryptid": {
          "77": [
            4664,
            4761
          ],
          "78": [
            4771,
            4813
          ],
          "79": [
            4823,
            4905
          ],
          "80": [
            4915,
            4980
          ],
          "81": [
            4990,
            5089
          ],
          "82": [
            5156,
            5197
          ],
          "83": [
            5211,
            5238
          ],
          "84": [
            5137,
            5140
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "98": [
            6367,
            6428
          ],
          "99": [
            6438,
            6492
          ],
          "100": [
            6502,
            6523
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "68": [
            8098,
            8175
          ],
          "69": [
            8185,
            8253
          ],
          "70": [
            8263,
            8290
          ]
        },
        "CryptidToken.getStage": {
          "3": [
            9635,
            9647
          ]
        },
        "CryptidToken.getTokensLeft": {
          "95": [
            9522,
            9560
          ]
        },
        "CryptidToken.lastMintAddress": {
          "40": [
            8799,
            8851
          ],
          "41": [
            8861,
            8890
          ]
        },
        "CryptidToken.lastMintID": {
          "92": [
            8964,
            9016
          ],
          "93": [
            9026,
            9047
          ]
        },
        "CryptidToken.mint": {
          "42": [
            2602,
            2674
          ],
          "43": [
            2684,
            2747
          ],
          "44": [
            2757,
            2840
          ],
          "45": [
            2901,
            2969
          ],
          "46": [
            2983,
            3101
          ],
          "47": [
            3115,
            3155
          ],
          "48": [
            3234,
            3313
          ],
          "49": [
            3327,
            3391
          ],
          "50": [
            3405,
            3501
          ],
          "51": [
            3515,
            3640
          ],
          "52": [
            3660,
            3705
          ],
          "53": [
            3771,
            3838
          ],
          "54": [
            3852,
            3952
          ],
          "55": [
            3972,
            4000
          ],
          "56": [
            4052,
            4125
          ],
          "57": [
            4139,
            4236
          ],
          "58": [
            4313,
            4361
          ],
          "59": [
            4375,
            4402
          ],
          "61": [
            4294,
            4297
          ]
        },
        "CryptidToken.nextStage": {
          "101": [
            6584,
            6681
          ],
          "102": [
            6691,
            6740
          ],
          "103": [
            6750,
            6757
          ]
        },
        "CryptidToken.pause": {
          "71": [
            4491,
            4499
          ]
        },
        "CryptidToken.prevStage": {
          "89": [
            6818,
            6915
          ],
          "90": [
            6925,
            6968
          ],
          "91": [
            6978,
            6985
          ]
        },
        "CryptidToken.removeFreetUser": {
          "24": [
            5799,
            5849
          ],
          "25": [
            5859,
            5919
          ],
          "26": [
            5929,
            5949
          ]
        },
        "CryptidToken.removeWhitelistUser": {
          "27": [
            6033,
            6094
          ],
          "28": [
            6104,
            6133
          ]
        },
        "CryptidToken.setBaseExtension": {
          "94": [
            7218,
            7251
          ]
        },
        "CryptidToken.setBaseURI": {
          "36": [
            6220,
            6266
          ],
          "37": [
            6276,
            6297
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "38": [
            7641,
            7672
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "14": [
            7770,
            7830
          ],
          "15": [
            7840,
            7872
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "67": [
            7527,
            7552
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "18": [
            7084,
            7119
          ]
        },
        "CryptidToken.setWhitelistPrice": {
          "65": [
            7346,
            7391
          ],
          "66": [
            7401,
            7436
          ]
        },
        "CryptidToken.setWhitelistUsers": {
          "21": [
            5587,
            5632
          ],
          "22": [
            5687,
            5719
          ],
          "23": [
            5674,
            5677
          ]
        },
        "CryptidToken.setWithdrawAddress": {
          "96": [
            7972,
            7994
          ],
          "97": [
            8004,
            8026
          ]
        },
        "CryptidToken.setfreeUsers": {
          "74": [
            5358,
            5408
          ],
          "75": [
            5463,
            5495
          ],
          "76": [
            5450,
            5453
          ]
        },
        "CryptidToken.tokenURI": {
          "87": [
            9270,
            9346
          ],
          "88": [
            9356,
            9431
          ]
        },
        "CryptidToken.totalSupply": {
          "16": [
            9123,
            9159
          ]
        },
        "CryptidToken.unpause": {
          "32": [
            4558,
            4568
          ]
        },
        "CryptidToken.withdraw": {
          "29": [
            8358,
            8418
          ],
          "30": [
            8530,
            8563
          ],
          "31": [
            8658,
            8691
          ]
        }
      },
      "2": {
        "ERC721._approve": {
          "106": [
            11069,
            11098
          ],
          "107": [
            11108,
            11159
          ]
        },
        "ERC721._burn": {
          "122": [
            9761,
            9809
          ],
          "123": [
            9847,
            9876
          ],
          "124": [
            9887,
            9908
          ],
          "125": [
            9918,
            9941
          ],
          "126": [
            9952,
            9993
          ]
        },
        "ERC721._checkOnERC721Received": {
          "145": [
            12647,
            12707
          ],
          "146": [
            12481,
            12539
          ],
          "147": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "7": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "108": [
            7536,
            7609
          ],
          "109": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "148": [
            9134,
            9195
          ],
          "149": [
            9205,
            9263
          ],
          "150": [
            9274,
            9319
          ],
          "151": [
            9330,
            9348
          ],
          "152": [
            9358,
            9379
          ],
          "153": [
            9390,
            9428
          ]
        },
        "ERC721._safeMint": {
          "127": [
            8176,
            8202
          ],
          "143": [
            8555,
            8573
          ],
          "144": [
            8583,
            8734
          ]
        },
        "ERC721._safeTransfer": {
          "135": [
            6685,
            6713
          ],
          "136": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "132": [
            11434,
            11489
          ],
          "133": [
            11499,
            11545
          ],
          "134": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "110": [
            10443,
            10528
          ],
          "111": [
            10538,
            10603
          ],
          "112": [
            10614,
            10653
          ],
          "113": [
            10715,
            10744
          ],
          "114": [
            10755,
            10775
          ],
          "115": [
            10785,
            10803
          ],
          "116": [
            10813,
            10834
          ],
          "117": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "10": [
            3651,
            3708
          ],
          "12": [
            3719,
            3884
          ],
          "13": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "62": [
            2005,
            2079
          ],
          "63": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4079,
            4152
          ],
          "9": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "6": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "39": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "33": [
            5240,
            5279
          ],
          "85": [
            5513,
            5616
          ],
          "86": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "73": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "4": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "72": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "19": [
            4892,
            4995
          ],
          "20": [
            5006,
            5034
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "34": [
            637,
            739
          ],
          "35": [
            749,
            763
          ]
        }
      },
      "6": {},
      "8": {
        "Context._msgSender": {
          "11": [
            712,
            729
          ]
        }
      },
      "9": {
        "Counters.current": {
          "17": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "60": [
            1032,
            1051
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "6080604052600436106103c35760003560e01c806378231978116101f2578063c66828621161010d578063e59a2f99116100a0578063f2fde38b1161006f578063f2fde38b14610b03578063f51f96dd14610b23578063fc1a1c3614610b39578063fcaa766414610b4f57600080fd5b8063e59a2f9914610a70578063e7bc820814610a90578063e985e9c514610aa5578063ee3743ab14610aee57600080fd5b8063d6d67a09116100dc578063d6d67a0914610a07578063da3ef23f14610a1c578063de5f986614610a3c578063de7fcb1d14610a5157600080fd5b8063c6682862146109a8578063c6ab67a3146109bd578063c87b56dd146109d2578063cbd0a2b5146109f257600080fd5b8063a62248a911610185578063b7353de611610154578063b7353de614610922578063b88d4fde14610952578063c29de63014610972578063c32145811461099257600080fd5b8063a62248a9146108a8578063a84ffcfc146108c2578063b1214392146108e2578063b3caad011461090257600080fd5b80638da5cb5b116101c15780638da5cb5b1461082f57806395d89b41146108525780639a2a9c3d14610867578063a22cb4651461088857600080fd5b806378231978146107cf578063791a2519146107e557806381c162f2146108055780638456cb591461081a57600080fd5b80633f4ba83a116102e25780636352211e116102755780636ecd2306116102445780636ecd23061461076757806370a082311461077a578063715018a61461079a578063717d57d3146107af57600080fd5b80636352211e146106ed5780636c0360eb1461070d5780636cbb8985146107225780636ec55dbc1461073757600080fd5b80635c975abb116102b15780635c975abb1461065d5780635ecf8a801461067557806361869a93146106a5578063622e4e78146106cd57600080fd5b80633f4ba83a146105e857806342842e0e146105fd57806342966c681461061d57806355f804b31461063d57600080fd5b806323b872dd1161035a57806330cc7ae01161032957806330cc7ae01461056857806333e61413146105885780633bdf4ac61461059e5780633ccfd60b146105e057600080fd5b806323b872dd146104f25780632beab4b7146105125780632eb4a7ab1461053257806330ba7bf91461054857600080fd5b8063095ea7b311610396578063095ea7b31461047b578063109695231461049d57806318160ddd146104bd57806320841a6a146104d257600080fd5b806301ffc9a7146103c857806306fdde03146103fd578063081812fc1461041f578063088139a614610457575b600080fd5b3480156103d457600080fd5b506103e86103e336600461334a565b610b67565b60405190151581526020015b60405180910390f35b34801561040957600080fd5b50610412610bb9565b6040516103f491906133bf565b34801561042b57600080fd5b5061043f61043a3660046133d2565b610c4b565b6040516001600160a01b0390911681526020016103f4565b34801561046357600080fd5b5061046d60165481565b6040519081526020016103f4565b34801561048757600080fd5b5061049b610496366004613407565b610ce5565b005b3480156104a957600080fd5b5061049b6104b83660046134d0565b610dfb565b3480156104c957600080fd5b5061046d610e9c565b3480156104de57600080fd5b5061049b6104ed3660046133d2565b610eb8565b3480156104fe57600080fd5b5061049b61050d366004613519565b610eed565b34801561051e57600080fd5b5061049b61052d3660046135eb565b610f1f565b34801561053e57600080fd5b5061046d60085481565b34801561055457600080fd5b5061049b610563366004613620565b611008565b34801561057457600080fd5b5061049b610583366004613620565b611118565b34801561059457600080fd5b5061046d60115481565b3480156105aa57600080fd5b506105ce6105b9366004613620565b60146020526000908152604090205460ff1681565b60405160ff90911681526020016103f4565b61049b6111d1565b3480156105f457600080fd5b5061049b611396565b34801561060957600080fd5b5061049b610618366004613519565b6113d0565b34801561062957600080fd5b5061049b6106383660046133d2565b6113eb565b34801561064957600080fd5b5061049b6106583660046134d0565b611465565b34801561066957600080fd5b5060065460ff166103e8565b34801561068157600080fd5b506105ce610690366004613620565b600f6020526000908152604090205460ff1681565b3480156106b157600080fd5b50600c5461043f9064010000000090046001600160a01b031681565b3480156106d957600080fd5b5061049b6106e836600461364c565b6114f6565b3480156106f957600080fd5b5061043f6107083660046133d2565b611542565b34801561071957600080fd5b506104126115b9565b34801561072e57600080fd5b5061043f611647565b34801561074357600080fd5b506103e8610752366004613620565b60106020526000908152604090205460ff1681565b61049b61077536600461364c565b6116a3565b34801561078657600080fd5b5061046d610795366004613620565b611d41565b3480156107a657600080fd5b5061049b611dc8565b3480156107bb57600080fd5b5061049b6107ca3660046133d2565b611e02565b3480156107db57600080fd5b5061046d60185481565b3480156107f157600080fd5b5061049b6108003660046133d2565b611e88565b34801561081157600080fd5b5061049b611ebd565b34801561082657600080fd5b5061049b611fc5565b34801561083b57600080fd5b5060065461010090046001600160a01b031661043f565b34801561085e57600080fd5b50610412611ffd565b34801561087357600080fd5b50600c546103e8906301000000900460ff1681565b34801561089457600080fd5b5061049b6108a3366004613667565b61200c565b3480156108b457600080fd5b506013546105ce9060ff1681565b3480156108ce57600080fd5b5061049b6108dd3660046136a3565b612017565b3480156108ee57600080fd5b50600d5461043f906001600160a01b031681565b34801561090e57600080fd5b5061049b61091d366004613765565b61212d565b34801561092e57600080fd5b506105ce61093d366004613620565b600e6020526000908152604090205460ff1681565b34801561095e57600080fd5b5061049b61096d366004613798565b61235e565b34801561097e57600080fd5b50600c546103e89062010000900460ff1681565b34801561099e57600080fd5b5061046d60155481565b3480156109b457600080fd5b50610412612396565b3480156109c957600080fd5b506104126123a3565b3480156109de57600080fd5b506104126109ed3660046133d2565b6123b0565b3480156109fe57600080fd5b5061049b612464565b348015610a1357600080fd5b5061046d61253a565b348015610a2857600080fd5b5061049b610a373660046134d0565b612593565b348015610a4857600080fd5b5061046d6125d6565b348015610a5d57600080fd5b50600c546105ce90610100900460ff1681565b348015610a7c57600080fd5b5061049b610a8b366004613814565b6125ed565b348015610a9c57600080fd5b5061049b61265b565b348015610ab157600080fd5b506103e8610ac0366004613814565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610afa57600080fd5b5061049b612755565b348015610b0f57600080fd5b5061049b610b1e366004613620565b61281d565b348015610b2f57600080fd5b5061046d60175481565b348015610b4557600080fd5b5061046d60125481565b348015610b5b57600080fd5b50600c5460ff166105ce565b60006001600160e01b031982166380ac58cd60e01b1480610b9857506001600160e01b03198216635b5e139f60e01b145b80610bb357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610bc890613830565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf490613830565b8015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610cc95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610cf082611542565b9050806001600160a01b0316836001600160a01b03161415610d5e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610cc0565b336001600160a01b0382161480610d7a5750610d7a8133610ac0565b610dec5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610cc0565b610df683836128c4565b505050565b6006546001600160a01b03610100909104163314610e2b5760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615610e855760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610cc0565b8051610e9890600990602084019061329b565b5050565b60006001610ea960075490565b610eb391906138b6565b905090565b6006546001600160a01b03610100909104163314610ee85760405162461bcd60e51b8152600401610cc09061386b565b601555565b610ef8335b82612932565b610f145760405162461bcd60e51b8152600401610cc0906138cd565b610df6838383612a29565b6006546001600160a01b03610100909104163314610f4f5760405162461bcd60e51b8152600401610cc09061386b565b600c54600360ff90911610610fa05760405162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba1034b99031b7b731b63ab232b21760491b6044820152606401610cc0565b60005b8151811015610e9857600160106000848481518110610fc457610fc461391e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061100081613934565b915050610fa3565b6006546001600160a01b036101009091041633146110385760405162461bcd60e51b8152600401610cc09061386b565b600c54600260ff9091161061108f5760405162461bcd60e51b815260206004820152601c60248201527f46726565206d696e742073616c6520697320636f6e636c756465642e000000006044820152606401610cc0565b6001600160a01b0381166000908152600e602052604090205460ff166110f75760405162461bcd60e51b815260206004820152601b60248201527f55736572206e6f7420617761726465642066726565206d696e742e00000000006044820152606401610cc0565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146111485760405162461bcd60e51b8152600401610cc09061386b565b6001600160a01b03811660009081526010602052604090205460ff166111b05760405162461bcd60e51b815260206004820152601b60248201527f55736572206e6f74206f6e2077686974656c697374206c6973742e00000000006044820152606401610cc0565b6001600160a01b03166000908152601060205260409020805460ff19169055565b6006546001600160a01b036101009091041633146112015760405162461bcd60e51b8152600401610cc09061386b565b6000471161124a5760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610cc0565b600c5460009064010000000090046001600160a01b03166112776064611271476032612bd4565b90612be7565b604051600081818185875af1925050503d80600081146112b3576040519150601f19603f3d011682016040523d82523d6000602084013e6112b8565b606091505b50509050806112fe5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610cc0565b600d546040516000916001600160a01b03169047908381818185875af1925050503d806000811461134b576040519150601f19603f3d011682016040523d82523d6000602084013e611350565b606091505b5050905080610e985760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610cc0565b6006546001600160a01b036101009091041633146113c65760405162461bcd60e51b8152600401610cc09061386b565b6113ce612bf3565b565b610df68383836040518060200160405280600081525061235e565b6113f433610ef2565b6114595760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610cc0565b61146281612c86565b50565b6006546001600160a01b036101009091041633146114955760405162461bcd60e51b8152600401610cc09061386b565b600c5462010000900460ff16156114e35760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610cc0565b8051610e9890600a90602084019061329b565b6006546001600160a01b036101009091041633146115265760405162461bcd60e51b8152600401610cc09061386b565b600c805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610bb35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610cc0565b600a80546115c690613830565b80601f01602080910402602001604051908101604052809291908181526020018280546115f290613830565b801561163f5780601f106116145761010080835404028352916020019161163f565b820191906000526020600020905b81548152906001019060200180831161162257829003601f168201915b505050505081565b600080611652610e9c565b116116985760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610cc0565b610eb3610708610e9c565b60065460ff16156116c65760405162461bcd60e51b8152600401610cc09061394f565b600c5460ff166117335760405162461bcd60e51b815260206004820152603260248201527f4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c792060448201527137b71039ba30b3b29018101434b734ba149760711b6064820152608401610cc0565b60008160ff16116117925760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610cc0565b600c5460ff610100909104811690821611156118045760405162461bcd60e51b815260206004820152602b60248201527f45786365656473206d617820616c6c6f77656420616d6f756e7420706572207460448201526a3930b739b0b1ba34b7b71760a91b6064820152608401610cc0565b600c5460ff166001141561194057336000908152600e602052604090205460ff166118715760405162461bcd60e51b815260206004820152601e60248201527f4d696e746572206e6f7420617761726465642066726565206d696e74732e00006044820152606401610cc0565b336000908152600e6020908152604080832054600f9092529091205460ff9182169161189e911683613979565b60ff1611156119015760405162461bcd60e51b815260206004820152602960248201527f5472616e73616374696f6e20657863656564732072656d61696e696e6720667260448201526832b29036b4b73a399760b91b6064820152608401610cc0565b336000908152600f60205260408120805483929061192390849060ff16613979565b92506101000a81548160ff021916908360ff160217905550611d02565b600c5460ff1660021415611b2a5760125461195e9060ff8316612bd4565b3410156119a65760405162461bcd60e51b81526020600482015260166024820152752737ba1032b737bab3b41032ba3432b91039b2b73a1760511b6044820152606401610cc0565b3360009081526010602052604090205460ff16611a055760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610cc0565b6011548160ff16611a14610e9c565b611a1e919061399e565b1115611a7a5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e20657863656564732077686974656c6973742073756044820152643838363c9760d91b6064820152608401610cc0565b6013543360009081526014602052604090205460ff91821691611a9e911683613979565b60ff161115611b085760405162461bcd60e51b815260206004820152603060248201527f5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642060448201526f3bb434ba32b634b9ba1036b4b73a399760811b6064820152608401610cc0565b336000908152601460205260408120805483929061192390849060ff16613979565b600c5460ff1660031415611c36576006546001600160a01b03610100909104163314611ba25760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204f776e65722063616e206d696e74206174207468697320737461676044820152606560f81b6064820152608401610cc0565b601554601654611bb59060ff841661399e565b1115611c165760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610cc0565b8060ff1660166000828254611c2b919061399e565b90915550611d029050565b601754611c469060ff8316612bd4565b341015611c8d5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610cc0565b6018548160ff16611c9c610e9c565b611ca6919061399e565b1115611d025760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610cc0565b60015b8160ff168111610e9857611d2133611d1c60075490565b612d2d565b611d2f600780546001019055565b80611d3981613934565b915050611d05565b60006001600160a01b038216611dac5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610cc0565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03610100909104163314611df85760405162461bcd60e51b8152600401610cc09061386b565b6113ce6000612d47565b6006546001600160a01b03610100909104163314611e325760405162461bcd60e51b8152600401610cc09061386b565b600c54600360ff90911610611e835760405162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba1034b99031b7b731b63ab232b21760491b6044820152606401610cc0565b601255565b6006546001600160a01b03610100909104163314611eb85760405162461bcd60e51b8152600401610cc09061386b565b601755565b6006546001600160a01b03610100909104163314611eed5760405162461bcd60e51b8152600401610cc09061386b565b600060098054611efc90613830565b905011611f4b5760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610cc0565b600c546301000000900460ff1615611fb05760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610cc0565b600c805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611ff55760405162461bcd60e51b8152600401610cc09061386b565b6113ce612da1565b606060018054610bc890613830565b610e98338383612df9565b6006546001600160a01b036101009091041633146120475760405162461bcd60e51b8152600401610cc09061386b565b600c54600260ff9091161061209e5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610cc0565b60005b8251811015610df6578181815181106120bc576120bc61391e565b6020026020010151600e60008584815181106120da576120da61391e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff160217905550808061212590613934565b9150506120a1565b6006546001600160a01b0361010090910416331461215d5760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff16151560011461218b5760405162461bcd60e51b8152600401610cc0906139b6565b600c54600260ff909116106121d95760405162461bcd60e51b81526020600482015260146024820152732830b9ba10333932b29036b4b73a1039b0b6329760611b6044820152606401610cc0565b600c5460ff6101009091048116908316111561224a5760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f77656420616d6f756e742070657220746044820152693930b739b0b1ba34b7b760b11b6064820152608401610cc0565b60008260ff16116122ab5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610cc0565b6011548260ff166122ba610e9c565b6122c4919061399e565b11156123245760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610cc0565b60015b8260ff168111610df65761233e82611d1c60075490565b61234c600780546001019055565b8061235681613934565b915050612327565b6123683383612932565b6123845760405162461bcd60e51b8152600401610cc0906138cd565b61239084848484612ec8565b50505050565b600b80546115c690613830565b600980546115c690613830565b6000818152600260205260409020546060906001600160a01b031661242f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610cc0565b600a61243a83612efb565b600b60405160200161244e93929190613aad565b6040516020818303038152906040529050919050565b6006546001600160a01b036101009091041633146124945760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615156001146124c25760405162461bcd60e51b8152600401610cc0906139b6565b600c5460ff1661250c5760405162461bcd60e51b8152602060048201526015602482015274139bc81cdd1859d95cc81899599bdc99481a5b9a5d605a1b6044820152606401610cc0565b600c805460ff1690600061251f83613ae0565b91906101000a81548160ff021916908360ff16021790555050565b600080612545610e9c565b1161258b5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610cc0565b610eb3610e9c565b6006546001600160a01b036101009091041633146125c35760405162461bcd60e51b8152600401610cc09061386b565b8051610e9890600b90602084019061329b565b60006125e0610e9c565b601854610eb391906138b6565b6006546001600160a01b0361010090910416331461261d5760405162461bcd60e51b8152600401610cc09061386b565b600c8054640100000000600160c01b0319166401000000006001600160a01b0394851602179055600d80546001600160a01b03191691909216179055565b6006546001600160a01b0361010090910416331461268b5760405162461bcd60e51b8152600401610cc09061386b565b6000600a805461269a90613830565b9050116126e95760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610cc0565b600c5462010000900460ff16156127425760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610cc0565b600c805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146127855760405162461bcd60e51b8152600401610cc09061386b565b600c546301000000900460ff1615156001146127b35760405162461bcd60e51b8152600401610cc0906139b6565b600c54600460ff9091161061280a5760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610cc0565b600c805460ff1690600061251f83613afd565b6006546001600160a01b0361010090910416331461284d5760405162461bcd60e51b8152600401610cc09061386b565b6001600160a01b0381166128b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cc0565b61146281612d47565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906128f982611542565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166129ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610cc0565b60006129b683611542565b9050806001600160a01b0316846001600160a01b031614806129f15750836001600160a01b03166129e684610c4b565b6001600160a01b0316145b80612a2157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316612a3c82611542565b6001600160a01b031614612aa45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610cc0565b6001600160a01b038216612b065760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610cc0565b612b11838383612ff9565b612b1c6000826128c4565b6001600160a01b0383166000908152600360205260408120805460019290612b459084906138b6565b90915550506001600160a01b0382166000908152600360205260408120805460019290612b7390849061399e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000612be08284613b1d565b9392505050565b6000612be08284613b52565b60065460ff16612c3c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610cc0565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612c9182611542565b9050612c9f81600084612ff9565b612caa6000836128c4565b6001600160a01b0381166000908152600360205260408120805460019290612cd39084906138b6565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610e9882826040518060200160405280600081525061301c565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612dc45760405162461bcd60e51b8152600401610cc09061394f565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612c693390565b816001600160a01b0316836001600160a01b03161415612e5b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610cc0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612ed3848484612a29565b612edf8484848461304f565b6123905760405162461bcd60e51b8152600401610cc090613b66565b606081612f1f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612f495780612f3381613934565b9150612f429050600a83613b52565b9150612f23565b60008167ffffffffffffffff811115612f6457612f64613431565b6040519080825280601f01601f191660200182016040528015612f8e576020820181803683370190505b5090505b8415612a2157612fa36001836138b6565b9150612fb0600a86613bb8565b612fbb90603061399e565b60f81b818381518110612fd057612fd061391e565b60200101906001600160f81b031916908160001a905350612ff2600a86613b52565b9450612f92565b60065460ff1615610df65760405162461bcd60e51b8152600401610cc09061394f565b613026838361314d565b613033600084848461304f565b610df65760405162461bcd60e51b8152600401610cc090613b66565b60006001600160a01b0384163b1561314257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613093903390899088908890600401613bcc565b6020604051808303816000875af19250505080156130ce575060408051601f3d908101601f191682019092526130cb91810190613c09565b60015b613128573d8080156130fc576040519150601f19603f3d011682016040523d82523d6000602084013e613101565b606091505b5080516131205760405162461bcd60e51b8152600401610cc090613b66565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612a21565b506001949350505050565b6001600160a01b0382166131a35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610cc0565b6000818152600260205260409020546001600160a01b0316156132085760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610cc0565b61321460008383612ff9565b6001600160a01b038216600090815260036020526040812080546001929061323d90849061399e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546132a790613830565b90600052602060002090601f0160209004810192826132c9576000855561330f565b82601f106132e257805160ff191683800117855561330f565b8280016001018555821561330f579182015b8281111561330f5782518255916020019190600101906132f4565b5061331b92915061331f565b5090565b5b8082111561331b5760008155600101613320565b6001600160e01b03198116811461146257600080fd5b60006020828403121561335c57600080fd5b8135612be081613334565b60005b8381101561338257818101518382015260200161336a565b838111156123905750506000910152565b600081518084526133ab816020860160208601613367565b601f01601f19169290920160200192915050565b602081526000612be06020830184613393565b6000602082840312156133e457600080fd5b5035919050565b80356001600160a01b038116811461340257600080fd5b919050565b6000806040838503121561341a57600080fd5b613423836133eb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561347057613470613431565b604052919050565b600067ffffffffffffffff83111561349257613492613431565b6134a5601f8401601f1916602001613447565b90508281528383830111156134b957600080fd5b828260208301376000602084830101529392505050565b6000602082840312156134e257600080fd5b813567ffffffffffffffff8111156134f957600080fd5b8201601f8101841361350a57600080fd5b612a2184823560208401613478565b60008060006060848603121561352e57600080fd5b613537846133eb565b9250613545602085016133eb565b9150604084013590509250925092565b600067ffffffffffffffff82111561356f5761356f613431565b5060051b60200190565b600082601f83011261358a57600080fd5b8135602061359f61359a83613555565b613447565b82815260059290921b840181019181810190868411156135be57600080fd5b8286015b848110156135e0576135d3816133eb565b83529183019183016135c2565b509695505050505050565b6000602082840312156135fd57600080fd5b813567ffffffffffffffff81111561361457600080fd5b612a2184828501613579565b60006020828403121561363257600080fd5b612be0826133eb565b803560ff8116811461340257600080fd5b60006020828403121561365e57600080fd5b612be08261363b565b6000806040838503121561367a57600080fd5b613683836133eb565b91506020830135801515811461369857600080fd5b809150509250929050565b600080604083850312156136b657600080fd5b823567ffffffffffffffff808211156136ce57600080fd5b6136da86838701613579565b93506020915081850135818111156136f157600080fd5b85019050601f8101861361370457600080fd5b803561371261359a82613555565b81815260059190911b8201830190838101908883111561373157600080fd5b928401925b82841015613756576137478461363b565b82529284019290840190613736565b80955050505050509250929050565b6000806040838503121561377857600080fd5b6137818361363b565b915061378f602084016133eb565b90509250929050565b600080600080608085870312156137ae57600080fd5b6137b7856133eb565b93506137c5602086016133eb565b925060408501359150606085013567ffffffffffffffff8111156137e857600080fd5b8501601f810187136137f957600080fd5b61380887823560208401613478565b91505092959194509250565b6000806040838503121561382757600080fd5b613781836133eb565b600181811c9082168061384457607f821691505b6020821081141561386557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156138c8576138c86138a0565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613948576139486138a0565b5060010190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600060ff821660ff84168060ff03821115613996576139966138a0565b019392505050565b600082198211156139b1576139b16138a0565b500190565b60208082526038908201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260408201527f65666f7265206d696e74696e672063616e2073746172742e0000000000000000606082015260800190565b8054600090600181811c9080831680613a2d57607f831692505b6020808410821415613a4f57634e487b7160e01b600052602260045260246000fd5b818015613a635760018114613a7457613aa1565b60ff19861689528489019650613aa1565b60008881526020902060005b86811015613a995781548b820152908501908301613a80565b505084890196505b50505050505092915050565b6000613ab98286613a13565b8451613ac9818360208901613367565b613ad581830186613a13565b979650505050505050565b600060ff821680613af357613af36138a0565b6000190192915050565b600060ff821660ff811415613b1457613b146138a0565b60010192915050565b6000816000190483118215151615613b3757613b376138a0565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613b6157613b61613b3c565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082613bc757613bc7613b3c565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613bff90830184613393565b9695505050505050565b600060208284031215613c1b57600080fd5b8151612be08161333456fea2646970667358221220702615b099562ddab1f9b5c0942f4521c605e7b4b59755b3a1f4cb7d75a749d164736f6c634300080a0033",
  "deployedSourceMap": "483:9355:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300:2;;;;;;;;;;-1:-1:-1;1555:300:2;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;1555:300:2;;;;;;;;2473:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;3984:217:2;1528:203:16;1838:28:15;;;;;;;;;;;;;;;;;;;1882:25:16;;;1870:2;1855:18;1838:28:15;1736:177:16;3522:401:2;;;;;;;;;;-1:-1:-1;3522:401:2;;;;;:::i;:::-;;:::i;:::-;;7685:194:15;;;;;;;;;;-1:-1:-1;7685:194:15;;;;;:::i;:::-;;:::i;9060:106::-;;;;;;;;;;;;;:::i;7002:124::-;;;;;;;;;;-1:-1:-1;7002:124:15;;;;;:::i;:::-;;:::i;4711:330:2:-;;;;;;;;;;-1:-1:-1;4711:330:2;;;;;:::i;:::-;;:::i;5508:218:15:-;;;;;;;;;;-1:-1:-1;5508:218:15;;;;;:::i;:::-;;:::i;708:25::-;;;;;;;;;;;;;;;;5732:224;;;;;;;;;;-1:-1:-1;5732:224:15;;;;;:::i;:::-;;:::i;5962:178::-;;;;;;;;;;-1:-1:-1;5962:178:15;;;;;:::i;:::-;;:::i;1528:30::-;;;;;;;;;;;;;;;;1692:51;;;;;;;;;;-1:-1:-1;1692:51:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5727:4:16;5715:17;;;5697:36;;5685:2;5670:18;1692:51:15;5555:184:16;8303:395:15;;;:::i;4512:63::-;;;;;;;;;;;;;:::i;5107:179:2:-;;;;;;;;;;-1:-1:-1;5107:179:2;;;;;:::i;:::-;;:::i;529:241:5:-;;;;;;;;;;-1:-1:-1;529:241:5;;;;;:::i;:::-;;:::i;6146:158:15:-;;;;;;;;;;-1:-1:-1;6146:158:15;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;1391:46:15;;;;;;;;;;-1:-1:-1;1391:46:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;999:73;;;;;;;;;;-1:-1:-1;999:73:15;;;;;;;-1:-1:-1;;;;;999:73:15;;;7565:114;;;;;;;;;;-1:-1:-1;7565:114:15;;;;;:::i;:::-;;:::i;2176:235:2:-;;;;;;;;;;-1:-1:-1;2176:235:2;;;;;:::i;:::-;;:::i;773:26:15:-;;;;;;;;;;;;;:::i;8733:164::-;;;;;;;;;;;;;:::i;1476:46::-;;;;;;;;;;-1:-1:-1;1476:46:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;2530:1889;;;;;;:::i;:::-;;:::i;1914:205:2:-;;;;;;;;;;-1:-1:-1;1914:205:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;7264:179:15:-;;;;;;;;;;-1:-1:-1;7264:179:15;;;;;:::i;:::-;;:::i;1945:30::-;;;;;;;;;;;;;;;;7449:110;;;;;;;;;;-1:-1:-1;7449:110:15;;;;;:::i;:::-;;:::i;8039:258::-;;;;;;;;;;;;;:::i;4447:59::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:2;;;;;;;;;;;;;:::i;953:40:15:-;;;;;;;;;;-1:-1:-1;953:40:15;;;;;;;;;;;4268:153:2;;;;;;;;;;-1:-1:-1;4268:153:2;;;;;:::i;:::-;;:::i;1635:33:15:-;;;;;;;;;;-1:-1:-1;1635:33:15;;;;;;;;5261:241;;;;;;;;;;-1:-1:-1;5261:241:15;;;;;:::i;:::-;;:::i;1078:73::-;;;;;;;;;;-1:-1:-1;1078:73:15;;;;-1:-1:-1;;;;;1078:73:15;;;4581:674;;;;;;;;;;-1:-1:-1;4581:674:15;;;;;:::i;:::-;;:::i;1343:42::-;;;;;;;;;;-1:-1:-1;1343:42:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;5352:320:2;;;;;;;;;;-1:-1:-1;5352:320:2;;;;;:::i;:::-;;:::i;913:34:15:-;;;;;;;;;;-1:-1:-1;913:34:15;;;;;;;;;;;1777:29;;;;;;;;;;;;;;;;805:37;;;;;;;;;;;;;:::i;739:28::-;;;;;;;;;;;;;:::i;9172:279::-;;;;;;;;;;-1:-1:-1;9172:279:15;;;;;:::i;:::-;;:::i;6770:222::-;;;;;;;;;;;;;:::i;8903:151::-;;;;;;;;;;;;;:::i;7132:126::-;;;;;;;;;;-1:-1:-1;7132:126:15;;;;;:::i;:::-;;:::i;9457:110::-;;;;;;;;;;;;;:::i;877:25::-;;;;;;;;;;-1:-1:-1;877:25:15;;;;;;;;;;;7885:148;;;;;;;;;;-1:-1:-1;7885:148:15;;;;;:::i;:::-;;:::i;6315:215::-;;;;;;;;;;;;;:::i;4487:162:2:-;;;;;;;;;;-1:-1:-1;4487:162:2;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;6536:228:15;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1902:37:15:-;;;;;;;;;;;;;;;;1587:42;;;;;;;;;;;;;;;;9577:77;;;;;;;;;;-1:-1:-1;9642:5:15;;;;9577:77;;1555:300:2;1657:4;-1:-1:-1;;;;;;1692:40:2;;-1:-1:-1;;;1692:40:2;;:104;;-1:-1:-1;;;;;;;1748:48:2;;-1:-1:-1;;;1748:48:2;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:12;;;1812:36:2;1673:175;1555:300;-1:-1:-1;;1555:300:2:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;4079:73;;;;-1:-1:-1;;;4079:73:2;;9374:2:16;4079:73:2;;;9356:21:16;9413:2;9393:18;;;9386:30;9452:34;9432:18;;;9425:62;-1:-1:-1;;;9503:18:16;;;9496:42;9555:19;;4079:73:2;;;;;;;;;-1:-1:-1;4170:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:2;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:2;:2;-1:-1:-1;;;;;3659:11:2;;;3651:57;;;;-1:-1:-1;;;3651:57:2;;9787:2:16;3651:57:2;;;9769:21:16;9826:2;9806:18;;;9799:30;9865:34;9845:18;;;9838:62;-1:-1:-1;;;9916:18:16;;;9909:31;9957:19;;3651:57:2;9585:397:16;3651:57:2;719:10:8;-1:-1:-1;;;;;3740:21:2;;;;:62;;-1:-1:-1;3765:37:2;3782:5;719:10:8;4487:162:2;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:2;;10189:2:16;3719:165:2;;;10171:21:16;10228:2;10208:18;;;10201:30;10267:34;10247:18;;;10240:62;10338:26;10318:18;;;10311:54;10382:19;;3719:165:2;9987:420:16;3719:165:2;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;7685:194:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7779:20:15::1;::::0;;;::::1;;;7778:21;7770:60;;;::::0;-1:-1:-1;;;7770:60:15;;10975:2:16;7770:60:15::1;::::0;::::1;10957:21:16::0;11014:2;10994:18;;;10987:30;11053:28;11033:18;;;11026:56;11099:18;;7770:60:15::1;10773:350:16::0;7770:60:15::1;7840:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;7685:194:::0;:::o;9060:106::-;9104:7;9158:1;9130:25;:15;918:14:9;;827:112;9130:25:15;:29;;;;:::i;:::-;9123:36;;9060:106;:::o;7002:124::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7084:14:15::1;:35:::0;7002:124::o;4711:330:2:-;4900:41;719:10:8;4919:12:2;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:2;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5508:218:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5595:5:15::1;::::0;5603:1:::1;5595:5;::::0;;::::1;:9;5587:45;;;::::0;-1:-1:-1;;;5587:45:15;;12010:2:16;5587:45:15::1;::::0;::::1;11992:21:16::0;12049:2;12029:18;;;12022:30;-1:-1:-1;;;12068:18:16;;;12061:53;12131:18;;5587:45:15::1;11808:347:16::0;5587:45:15::1;5646:9;5642:77;5660:6;:13;5658:1;:15;5642:77;;;5715:4;5687:14;:25;5702:6;5709:1;5702:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;5687:25:15::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5687:25:15;:32;;-1:-1:-1;;5687:32:15::1;::::0;::::1;;::::0;;;::::1;::::0;;5674:3;::::1;::::0;::::1;:::i;:::-;;;;5642:77;;5732:224:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5807:5:15::1;::::0;5815:1:::1;5807:5;::::0;;::::1;:9;5799:50;;;::::0;-1:-1:-1;;;5799:50:15;;12634:2:16;5799:50:15::1;::::0;::::1;12616:21:16::0;12673:2;12653:18;;;12646:30;12712;12692:18;;;12685:58;12760:18;;5799:50:15::1;12432:352:16::0;5799:50:15::1;-1:-1:-1::0;;;;;5867:16:15;::::1;5886:1;5867:16:::0;;;:9:::1;:16;::::0;;;;;::::1;;5859:60;;;::::0;-1:-1:-1;;;5859:60:15;;12991:2:16;5859:60:15::1;::::0;::::1;12973:21:16::0;13030:2;13010:18;;;13003:30;13069:29;13049:18;;;13042:57;13116:18;;5859:60:15::1;12789:351:16::0;5859:60:15::1;-1:-1:-1::0;;;;;5929:16:15::1;5948:1;5929:16:::0;;;:9:::1;:16;::::0;;;;:20;;-1:-1:-1;;5929:20:15::1;::::0;;5732:224::o;5962:178::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6041:21:15;::::1;;::::0;;;:14:::1;:21;::::0;;;;;::::1;;6033:61;;;::::0;-1:-1:-1;;;6033:61:15;;13347:2:16;6033:61:15::1;::::0;::::1;13329:21:16::0;13386:2;13366:18;;;13359:30;13425:29;13405:18;;;13398:57;13472:18;;6033:61:15::1;13145:351:16::0;6033:61:15::1;-1:-1:-1::0;;;;;6104:21:15::1;6128:5;6104:21:::0;;;:14:::1;:21;::::0;;;;:29;;-1:-1:-1;;6104:29:15::1;::::0;;5962:178::o;8303:395::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8390:1:15::1;8366:21;:25;8358:60;;;::::0;-1:-1:-1;;;8358:60:15;;13703:2:16;8358:60:15::1;::::0;::::1;13685:21:16::0;13742:2;13722:18;;;13715:30;-1:-1:-1;;;13761:18:16;;;13754:52;13823:18;;8358:60:15::1;13501:346:16::0;8358:60:15::1;8450:13;::::0;8429:7:::1;::::0;8450:13;;::::1;-1:-1:-1::0;;;;;8450:13:15::1;8477:38;8511:3;8477:29;:21;8503:2;8477:25;:29::i;:::-;:33:::0;::::1;:38::i;:::-;8442:78;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8428:92;;;8538:2;8530:33;;;::::0;-1:-1:-1;;;8530:33:15;;14264:2:16;8530:33:15::1;::::0;::::1;14246:21:16::0;14303:2;14283:18;;;14276:30;-1:-1:-1;;;14322:18:16;;;14315:48;14380:18;;8530:33:15::1;14062:342:16::0;8530:33:15::1;8595:13;::::0;8587:61:::1;::::0;8574:7:::1;::::0;-1:-1:-1;;;;;8595:13:15::1;::::0;8622:21:::1;::::0;8574:7;8587:61;8574:7;8587:61;8622:21;8595:13;8587:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8573:75;;;8666:2;8658:33;;;::::0;-1:-1:-1;;;8658:33:15;;14611:2:16;8658:33:15::1;::::0;::::1;14593:21:16::0;14650:2;14630:18;;;14623:30;-1:-1:-1;;;14669:18:16;;;14662:48;14727:18;;8658:33:15::1;14409:342:16::0;4512:63:15;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4558:10:15::1;:8;:10::i;:::-;4512:63::o:0;5107:179:2:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:5:-;645:41;719:10:8;664:12:5;640:96:8;645:41:5;637:102;;;;-1:-1:-1;;;637:102:5;;14958:2:16;637:102:5;;;14940:21:16;14997:2;14977:18;;;14970:30;15036:34;15016:18;;;15009:62;-1:-1:-1;;;15087:18:16;;;15080:46;15143:19;;637:102:5;14756:412:16;637:102:5;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;6146:158:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6229:14:15::1;::::0;;;::::1;;;6228:15;6220:46;;;::::0;-1:-1:-1;;;6220:46:15;;15375:2:16;6220:46:15::1;::::0;::::1;15357:21:16::0;15414:2;15394:18;;;15387:30;-1:-1:-1;;;15433:18:16;;;15426:48;15491:18;;6220:46:15::1;15173:342:16::0;6220:46:15::1;6276:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;7565:114::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7641:12:15::1;:31:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7641:31:15;;::::1;::::0;;;::::1;::::0;;7565:114::o;2176:235:2:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:2;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:2;;15722:2:16;2309:73:2;;;15704:21:16;15761:2;15741:18;;;15734:30;15800:34;15780:18;;;15773:62;-1:-1:-1;;;15851:18:16;;;15844:39;15900:19;;2309:73:2;15520:405:16;773:26:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8733:164::-;8781:7;8823:1;8807:13;:11;:13::i;:::-;:17;8799:52;;;;-1:-1:-1;;;8799:52:15;;16132:2:16;8799:52:15;;;16114:21:16;16171:2;16151:18;;;16144:30;-1:-1:-1;;;16190:18:16;;;16183:52;16252:18;;8799:52:15;15930:346:16;8799:52:15;8868:22;8876:13;:11;:13::i;2530:1889::-;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;2610:5:15::1;::::0;::::1;;2602:72;;;::::0;-1:-1:-1;;;2602:72:15;;16828:2:16;2602:72:15::1;::::0;::::1;16810:21:16::0;16867:2;16847:18;;;16840:30;16906:34;16886:18;;;16879:62;-1:-1:-1;;;16957:18:16;;;16950:48;17015:19;;2602:72:15::1;16626:414:16::0;2602:72:15::1;2706:1;2692:11;:15;;;2684:63;;;::::0;-1:-1:-1;;;2684:63:15;;17247:2:16;2684:63:15::1;::::0;::::1;17229:21:16::0;17286:2;17266:18;;;17259:30;17325:34;17305:18;;;17298:62;-1:-1:-1;;;17376:18:16;;;17369:33;17419:19;;2684:63:15::1;17045:399:16::0;2684:63:15::1;2780:12;::::0;::::1;;::::0;;::::1;::::0;::::1;2765:27:::0;;::::1;;;2757:83;;;::::0;-1:-1:-1;;;2757:83:15;;17651:2:16;2757:83:15::1;::::0;::::1;17633:21:16::0;17690:2;17670:18;;;17663:30;17729:34;17709:18;;;17702:62;-1:-1:-1;;;17780:18:16;;;17773:41;17831:19;;2757:83:15::1;17449:407:16::0;2757:83:15::1;2854:5;::::0;::::1;;::::0;:10:::1;2850:1397;;;2919:10;2933:1;2909:21:::0;;;:9:::1;:21;::::0;;;;;::::1;;2901:68;;;::::0;-1:-1:-1;;;2901:68:15;;18063:2:16;2901:68:15::1;::::0;::::1;18045:21:16::0;18102:2;18082:18;;;18075:30;18141:32;18121:18;;;18114:60;18191:18;;2901:68:15::1;17861:354:16::0;2901:68:15::1;3044:10;3034:21;::::0;;;:9:::1;:21;::::0;;;;;;;;3005:13:::1;:25:::0;;;;;;;3034:21:::1;::::0;;::::1;::::0;2991:39:::1;::::0;3005:25:::1;2991:11:::0;:39:::1;:::i;:::-;:64;;;;2983:118;;;::::0;-1:-1:-1;;;2983:118:15;;18631:2:16;2983:118:15::1;::::0;::::1;18613:21:16::0;18670:2;18650:18;;;18643:30;18709:34;18689:18;;;18682:62;-1:-1:-1;;;18760:18:16;;;18753:39;18809:19;;2983:118:15::1;18429:405:16::0;2983:118:15::1;3129:10;3115:25;::::0;;;:13:::1;:25;::::0;;;;:40;;3144:11;;3115:25;:40:::1;::::0;3144:11;;3115:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2850:1397;;;3174:5;::::0;::::1;;3183:1;3174:10;3170:1077;;;3255:14;::::0;:31:::1;::::0;::::1;::::0;::::1;:18;:31::i;:::-;3242:9;:44;;3234:79;;;::::0;-1:-1:-1;;;3234:79:15;;19041:2:16;3234:79:15::1;::::0;::::1;19023:21:16::0;19080:2;19060:18;;;19053:30;-1:-1:-1;;;19099:18:16;;;19092:52;19161:18;;3234:79:15::1;18839:346:16::0;3234:79:15::1;3350:10;3335:26;::::0;;;:14:::1;:26;::::0;;;;;::::1;;3327:64;;;::::0;-1:-1:-1;;;3327:64:15;;19392:2:16;3327:64:15::1;::::0;::::1;19374:21:16::0;19431:2;19411:18;;;19404:30;19470:27;19450:18;;;19443:55;19515:18;;3327:64:15::1;19190:349:16::0;3327:64:15::1;3444:15;;3429:11;3413:27;;:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:46;;3405:96;;;::::0;-1:-1:-1;;;3405:96:15;;19879:2:16;3405:96:15::1;::::0;::::1;19861:21:16::0;19918:2;19898:18;;;19891:30;19957:34;19937:18;;;19930:62;-1:-1:-1;;;20008:18:16;;;20001:35;20053:19;;3405:96:15::1;19677:401:16::0;3405:96:15::1;3571:16;::::0;3556:10:::1;3571:16;3537:30:::0;;;:18:::1;:30;::::0;;;;;3571:16:::1;::::0;;::::1;::::0;3523:44:::1;::::0;3537:30:::1;3523:11:::0;:44:::1;:::i;:::-;:64;;;;3515:125;;;::::0;-1:-1:-1;;;3515:125:15;;20285:2:16;3515:125:15::1;::::0;::::1;20267:21:16::0;20324:2;20304:18;;;20297:30;20363:34;20343:18;;;20336:62;-1:-1:-1;;;20414:18:16;;;20407:46;20470:19;;3515:125:15::1;20083:412:16::0;3515:125:15::1;3679:10;3660:30;::::0;;;:18:::1;:30;::::0;;;;:45;;3694:11;;3660:30;:45:::1;::::0;3694:11;;3660:45:::1;;;:::i;3170:1077::-;3724:5;::::0;::::1;;3733:1;3724:10;3720:527;;;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;;;;3790:10:15::1;3779:21;3771:67;;;::::0;-1:-1:-1;;;3771:67:15;;20702:2:16;3771:67:15::1;::::0;::::1;20684:21:16::0;20741:2;20721:18;;;20714:30;20780:34;20760:18;;;20753:62;-1:-1:-1;;;20831:18:16;;;20824:31;20872:19;;3771:67:15::1;20500:397:16::0;3771:67:15::1;3891:14;::::0;3874:13:::1;::::0;3860:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;3852:100;;;::::0;-1:-1:-1;;;3852:100:15;;21104:2:16;3852:100:15::1;::::0;::::1;21086:21:16::0;21143:2;21123:18;;;21116:30;21182:34;21162:18;;;21155:62;-1:-1:-1;;;21233:18:16;;;21226:40;21283:19;;3852:100:15::1;20902:406:16::0;3852:100:15::1;3989:11;3972:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3720:527:15::1;::::0;-1:-1:-1;3720:527:15::1;;4073:9;::::0;:26:::1;::::0;::::1;::::0;::::1;:13;:26::i;:::-;4060:9;:39;;4052:73;;;::::0;-1:-1:-1;;;4052:73:15;;21515:2:16;4052:73:15::1;::::0;::::1;21497:21:16::0;21554:2;21534:18;;;21527:30;-1:-1:-1;;;21573:18:16;;;21566:51;21634:18;;4052:73:15::1;21313:345:16::0;4052:73:15::1;4179:15;;4164:11;4147:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;4139:97;;;::::0;-1:-1:-1;;;4139:97:15;;21865:2:16;4139:97:15::1;::::0;::::1;21847:21:16::0;21904:2;21884:18;;;21877:30;21943:34;21923:18;;;21916:62;-1:-1:-1;;;21994:18:16;;;21987:35;22039:19;;4139:97:15::1;21663:401:16::0;4139:97:15::1;4273:1;4256:157;4281:11;4276:16;;:1;:16;4256:157;;4313:48;4323:10;4335:25;:15;918:14:9::0;;827:112;4335:25:15::1;4313:9;:48::i;:::-;4375:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;4375:27:15::1;4294:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4256:157;;1914:205:2::0;1986:7;-1:-1:-1;;;;;2013:19:2;;2005:74;;;;-1:-1:-1;;;2005:74:2;;22271:2:16;2005:74:2;;;22253:21:16;22310:2;22290:18;;;22283:30;22349:34;22329:18;;;22322:62;-1:-1:-1;;;22400:18:16;;;22393:40;22450:19;;2005:74:2;22069:406:16;2005:74:2;-1:-1:-1;;;;;;2096:16:2;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;7264:179:15:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7354:5:15::1;::::0;7362:1:::1;7354:5;::::0;;::::1;:9;7346:45;;;::::0;-1:-1:-1;;;7346:45:15;;12010:2:16;7346:45:15::1;::::0;::::1;11992:21:16::0;12049:2;12029:18;;;12022:30;-1:-1:-1;;;12068:18:16;;;12061:53;12131:18;;7346:45:15::1;11808:347:16::0;7346:45:15::1;7401:14;:35:::0;7264:179::o;7449:110::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7527:9:15::1;:25:::0;7449:110::o;8039:258::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8137:1:15::1;8112:14;8106:28;;;;;:::i;:::-;;;:32;8098:77;;;::::0;-1:-1:-1;;;8098:77:15;;22682:2:16;8098:77:15::1;::::0;::::1;22664:21:16::0;;;22701:18;;;22694:30;22760:34;22740:18;;;22733:62;22812:18;;8098:77:15::1;22480:356:16::0;8098:77:15::1;8194:20;::::0;;;::::1;;;8193:21;8185:68;;;::::0;-1:-1:-1;;;8185:68:15;;23043:2:16;8185:68:15::1;::::0;::::1;23025:21:16::0;23082:2;23062:18;;;23055:30;23121:34;23101:18;;;23094:62;-1:-1:-1;;;23172:18:16;;;23165:32;23214:19;;8185:68:15::1;22841:398:16::0;8185:68:15::1;8263:20;:27:::0;;-1:-1:-1;;8263:27:15::1;::::0;::::1;::::0;;8039:258::o;4447:59::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4491:8:15::1;:6;:8::i;2635:102:2:-:0;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:8;4395:8:2;4405;4362:18;:52::i;5261:241:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5366:5:15::1;::::0;5374:1:::1;5366:5;::::0;;::::1;:9;5358:50;;;::::0;-1:-1:-1;;;5358:50:15;;23446:2:16;5358:50:15::1;::::0;::::1;23428:21:16::0;23485:2;23465:18;;;23458:30;23524;23504:18;;;23497:58;23572:18;;5358:50:15::1;23244:352:16::0;5358:50:15::1;5422:9;5418:77;5436:6;:13;5434:1;:15;5418:77;;;5486:6;5493:1;5486:9;;;;;;;;:::i;:::-;;;;;;;5463;:20;5473:6;5480:1;5473:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5463:20:15::1;-1:-1:-1::0;;;;;5463:20:15::1;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;5450:3;;;;;:::i;:::-;;;;5418:77;;4581:674:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4672:20:15::1;::::0;;;::::1;;;:28;;4696:4;4672:28;4664:97;;;;-1:-1:-1::0;;;4664:97:15::1;;;;;;;:::i;:::-;4779:5;::::0;4787:1:::1;4779:5;::::0;;::::1;:9;4771:42;;;::::0;-1:-1:-1;;;4771:42:15;;24228:2:16;4771:42:15::1;::::0;::::1;24210:21:16::0;24267:2;24247:18;;;24240:30;-1:-1:-1;;;24286:18:16;;;24279:50;24346:18;;4771:42:15::1;24026:344:16::0;4771:42:15::1;4846:12;::::0;::::1;;::::0;;::::1;::::0;::::1;4831:27:::0;;::::1;;;4823:82;;;::::0;-1:-1:-1;;;4823:82:15;;24577:2:16;4823:82:15::1;::::0;::::1;24559:21:16::0;24616:2;24596:18;;;24589:30;24655:34;24635:18;;;24628:62;-1:-1:-1;;;24706:18:16;;;24699:40;24756:19;;4823:82:15::1;24375:406:16::0;4823:82:15::1;4937:1;4923:11;:15;;;4915:65;;;::::0;-1:-1:-1;;;4915:65:15;;24988:2:16;4915:65:15::1;::::0;::::1;24970:21:16::0;25027:2;25007:18;;;25000:30;25066:34;25046:18;;;25039:62;-1:-1:-1;;;25117:18:16;;;25110:35;25162:19;;4915:65:15::1;24786:401:16::0;4915:65:15::1;5028:15;;5013:11;4998:26;;:13;:11;:13::i;:::-;:26;;;;:::i;:::-;:45;;4990:99;;;::::0;-1:-1:-1;;;4990:99:15;;25394:2:16;4990:99:15::1;::::0;::::1;25376:21:16::0;25433:2;25413:18;;;25406:30;25472:34;25452:18;;;25445:62;-1:-1:-1;;;25523:18:16;;;25516:39;25572:19;;4990:99:15::1;25192:405:16::0;4990:99:15::1;5116:1;5099:150;5124:11;5119:16;;:1;:16;5099:150;;5156:41;5166:3;5171:25;:15;918:14:9::0;;827:112;5156:41:15::1;5211:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;5211:27:15::1;5137:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5099:150;;5352:320:2::0;5521:41;719:10:8;5554:7:2;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:2;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;805:37:15:-;;;;;;;:::i;739:28::-;;;;;;;:::i;9172:279::-;7209:4:2;7232:16;;;:7;:16;;;;;;9245:13:15;;-1:-1:-1;;;;;7232:16:2;9270:76:15;;;;-1:-1:-1;;;9270:76:15;;25804:2:16;9270:76:15;;;25786:21:16;25843:2;25823:18;;;25816:30;25882:34;25862:18;;;25855:62;-1:-1:-1;;;25933:18:16;;;25926:45;25988:19;;9270:76:15;25602:411:16;9270:76:15;9387:7;9396:18;:7;:16;:18::i;:::-;9416:13;9370:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9356:75;;9172:279;;;:::o;6770:222::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6826:20:15::1;::::0;;;::::1;;;:28;;6850:4;6826:28;6818:97;;;;-1:-1:-1::0;;;6818:97:15::1;;;;;;;:::i;:::-;6933:5;::::0;::::1;;6925:43;;;::::0;-1:-1:-1;;;6925:43:15;;27785:2:16;6925:43:15::1;::::0;::::1;27767:21:16::0;27824:2;27804:18;;;27797:30;-1:-1:-1;;;27843:18:16;;;27836:51;27904:18;;6925:43:15::1;27583:345:16::0;6925:43:15::1;6978:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6770:222::o:0;8903:151::-;8946:7;8988:1;8972:13;:11;:13::i;:::-;:17;8964:52;;;;-1:-1:-1;;;8964:52:15;;16132:2:16;8964:52:15;;;16114:21:16;16171:2;16151:18;;;16144:30;-1:-1:-1;;;16190:18:16;;;16183:52;16252:18;;8964:52:15;15930:346:16;8964:52:15;9033:13;:11;:13::i;7132:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7218:33:15;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;9457:110::-:0;9503:7;9547:13;:11;:13::i;:::-;9529:15;;:31;;;;:::i;7885:148::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7972:13:15::1;:22:::0;;-1:-1:-1;;;;;;7972:22:15::1;::::0;-1:-1:-1;;;;;7972:22:15;;::::1;;;::::0;;8004:13:::1;:22:::0;;-1:-1:-1;;;;;;8004:22:15::1;::::0;;;::::1;;::::0;;7885:148::o;6315:215::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6399:1:15::1;6381:7;6375:21;;;;;:::i;:::-;;;:25;6367:61;;;::::0;-1:-1:-1;;;6367:61:15;;28318:2:16;6367:61:15::1;::::0;::::1;28300:21:16::0;28357:2;28337:18;;;28330:30;28396:25;28376:18;;;28369:53;28439:18;;6367:61:15::1;28116:347:16::0;6367:61:15::1;6447:14;::::0;;;::::1;;;6446:15;6438:54;;;::::0;-1:-1:-1;;;6438:54:15;;28670:2:16;6438:54:15::1;::::0;::::1;28652:21:16::0;28709:2;28689:18;;;28682:30;28748:28;28728:18;;;28721:56;28794:18;;6438:54:15::1;28468:350:16::0;6438:54:15::1;6502:14;:21:::0;;-1:-1:-1;;6502:21:15::1;::::0;::::1;::::0;;6315:215::o;6536:228::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6592:20:15::1;::::0;;;::::1;;;:28;;6616:4;6592:28;6584:97;;;;-1:-1:-1::0;;;6584:97:15::1;;;;;;;:::i;:::-;6699:5;::::0;6707:1:::1;6699:5;::::0;;::::1;:9;6691:49;;;::::0;-1:-1:-1;;;6691:49:15;;29025:2:16;6691:49:15::1;::::0;::::1;29007:21:16::0;29064:2;29044:18;;;29037:30;29103:29;29083:18;;;29076:57;29150:18;;6691:49:15::1;28823:351:16::0;6691:49:15::1;6750:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;29561:2:16;1998:73:0::1;::::0;::::1;29543:21:16::0;29600:2;29580:18;;;29573:30;29639:34;29619:18;;;29612:62;-1:-1:-1;;;29690:18:16;;;29683:36;29736:19;;1998:73:0::1;29359:402:16::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;945:123:9:-:0;1032:19;;1050:1;1032:19;;;945:123::o;10995:171:2:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:2;-1:-1:-1;;;;;11069:29:2;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:2;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;7536:73;;;;-1:-1:-1;;;7536:73:2;;29968:2:16;7536:73:2;;;29950:21:16;30007:2;29987:18;;;29980:30;30046:34;30026:18;;;30019:62;-1:-1:-1;;;30097:18:16;;;30090:42;30149:19;;7536:73:2;29766:408:16;7536:73:2;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:2;:7;-1:-1:-1;;;;;7676:16:2;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:2;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:2;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:2:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:2;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:2;;10443:85;;;;-1:-1:-1;;;10443:85:2;;30381:2:16;10443:85:2;;;30363:21:16;30420:2;30400:18;;;30393:30;30459:34;30439:18;;;30432:62;-1:-1:-1;;;30510:18:16;;;30503:39;30559:19;;10443:85:2;30179:405:16;10443:85:2;-1:-1:-1;;;;;10546:16:2;;10538:65;;;;-1:-1:-1;;;10538:65:2;;30791:2:16;10538:65:2;;;30773:21:16;30830:2;30810:18;;;30803:30;30869:34;30849:18;;;30842:62;-1:-1:-1;;;30920:18:16;;;30913:34;30964:19;;10538:65:2;30589:400:16;10538:65:2;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:2;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:2;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:2;-1:-1:-1;;;;;10813:21:2;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;3451:96:14:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:14:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;31626:2:16;1669:41:1;;;31608:21:16;31665:2;31645:18;;;31638:30;-1:-1:-1;;;31684:18:16;;;31677:50;31744:18;;1669:41:1;31424:344:16;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:8::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;9652:348:2:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:2;;;;;;:9;:16;;;;;:21;;9907:1;;9887:16;:21;;9907:1;;9887:21;:::i;:::-;;;;-1:-1:-1;;9925:16:2;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:2;;;9957:36;9933:7;;9925:16;-1:-1:-1;;;;;9957:36:2;;;;;9925:16;;9957:36;9701:299;9652:348;:::o;8101:108::-;8176:26;8186:2;8190:7;8176:26;;;;;;;;;;;;:9;:26::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:8::0;;640:96;11301:307:2;11451:8;-1:-1:-1;;;;;11442:17:2;:5;-1:-1:-1;;;;;11442:17:2;;;11434:55;;;;-1:-1:-1;;;11434:55:2;;31975:2:16;11434:55:2;;;31957:21:16;32014:2;31994:18;;;31987:30;32053:27;32033:18;;;32026:55;32098:18;;11434:55:2;31773:349:16;11434:55:2;-1:-1:-1;;;;;11499:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:2;;;;;;;;;;11560:41;;540::16;;;11560::2;;513:18:16;11560:41:2;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:2;;;;;;;:::i;328:703:10:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;9660:175:15;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;8430:311:2:-;8555:18;8561:2;8565:7;8555:5;:18::i;:::-;8604:54;8635:1;8639:2;8643:7;8652:5;8604:22;:54::i;:::-;8583:151;;;;-1:-1:-1;;;8583:151:2;;;;;;;:::i;12161:778::-;12311:4;-1:-1:-1;;;;;12331:13:2;;1087:20:7;1133:8;12327:606:2;;12366:72;;-1:-1:-1;;;12366:72:2;;-1:-1:-1;;;;;12366:36:2;;;;;:72;;719:10:8;;12417:4:2;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:2;;;;;;;;-1:-1:-1;;12366:72:2;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:2;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:2;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:2;-1:-1:-1;;;12488:51:2;;-1:-1:-1;12481:58:2;;12327:606;-1:-1:-1;12918:4:2;12161:778;;;;;;:::o;9063:372::-;-1:-1:-1;;;;;9142:16:2;;9134:61;;;;-1:-1:-1;;;9134:61:2;;33613:2:16;9134:61:2;;;33595:21:16;;;33632:18;;;33625:30;33691:34;33671:18;;;33664:62;33743:18;;9134:61:2;33411:356:16;9134:61:2;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;:30;9205:58;;;;-1:-1:-1;;;9205:58:2;;33974:2:16;9205:58:2;;;33956:21:16;34013:2;33993:18;;;33986:30;34052;34032:18;;;34025:58;34100:18;;9205:58:2;33772:352:16;9205:58:2;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:2;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:2;-1:-1:-1;;;;;9358:21:2;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:16;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:16;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:16;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:16:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:16;;1343:180;-1:-1:-1;1343:180:16:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:16;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:16:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:275;2558:2;2552:9;2623:2;2604:13;;-1:-1:-1;;2600:27:16;2588:40;;2658:18;2643:34;;2679:22;;;2640:62;2637:88;;;2705:18;;:::i;:::-;2741:2;2734:22;2487:275;;-1:-1:-1;2487:275:16:o;2767:407::-;2832:5;2866:18;2858:6;2855:30;2852:56;;;2888:18;;:::i;:::-;2926:57;2971:2;2950:15;;-1:-1:-1;;2946:29:16;2977:4;2942:40;2926:57;:::i;:::-;2917:66;;3006:6;2999:5;2992:21;3046:3;3037:6;3032:3;3028:16;3025:25;3022:45;;;3063:1;3060;3053:12;3022:45;3112:6;3107:3;3100:4;3093:5;3089:16;3076:43;3166:1;3159:4;3150:6;3143:5;3139:18;3135:29;3128:40;2767:407;;;;;:::o;3179:451::-;3248:6;3301:2;3289:9;3280:7;3276:23;3272:32;3269:52;;;3317:1;3314;3307:12;3269:52;3357:9;3344:23;3390:18;3382:6;3379:30;3376:50;;;3422:1;3419;3412:12;3376:50;3445:22;;3498:4;3490:13;;3486:27;-1:-1:-1;3476:55:16;;3527:1;3524;3517:12;3476:55;3550:74;3616:7;3611:2;3598:16;3593:2;3589;3585:11;3550:74;:::i;3635:328::-;3712:6;3720;3728;3781:2;3769:9;3760:7;3756:23;3752:32;3749:52;;;3797:1;3794;3787:12;3749:52;3820:29;3839:9;3820:29;:::i;:::-;3810:39;;3868:38;3902:2;3891:9;3887:18;3868:38;:::i;:::-;3858:48;;3953:2;3942:9;3938:18;3925:32;3915:42;;3635:328;;;;;:::o;3968:183::-;4028:4;4061:18;4053:6;4050:30;4047:56;;;4083:18;;:::i;:::-;-1:-1:-1;4128:1:16;4124:14;4140:4;4120:25;;3968:183::o;4156:668::-;4210:5;4263:3;4256:4;4248:6;4244:17;4240:27;4230:55;;4281:1;4278;4271:12;4230:55;4317:6;4304:20;4343:4;4367:60;4383:43;4423:2;4383:43;:::i;:::-;4367:60;:::i;:::-;4461:15;;;4547:1;4543:10;;;;4531:23;;4527:32;;;4492:12;;;;4571:15;;;4568:35;;;4599:1;4596;4589:12;4568:35;4635:2;4627:6;4623:15;4647:148;4663:6;4658:3;4655:15;4647:148;;;4729:23;4748:3;4729:23;:::i;:::-;4717:36;;4773:12;;;;4680;;4647:148;;;-1:-1:-1;4813:5:16;4156:668;-1:-1:-1;;;;;;4156:668:16:o;4829:348::-;4913:6;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5022:9;5009:23;5055:18;5047:6;5044:30;5041:50;;;5087:1;5084;5077:12;5041:50;5110:61;5163:7;5154:6;5143:9;5139:22;5110:61;:::i;5364:186::-;5423:6;5476:2;5464:9;5455:7;5451:23;5447:32;5444:52;;;5492:1;5489;5482:12;5444:52;5515:29;5534:9;5515:29;:::i;5744:156::-;5810:20;;5870:4;5859:16;;5849:27;;5839:55;;5890:1;5887;5880:12;5905:182;5962:6;6015:2;6003:9;5994:7;5990:23;5986:32;5983:52;;;6031:1;6028;6021:12;5983:52;6054:27;6071:9;6054:27;:::i;6092:347::-;6157:6;6165;6218:2;6206:9;6197:7;6193:23;6189:32;6186:52;;;6234:1;6231;6224:12;6186:52;6257:29;6276:9;6257:29;:::i;:::-;6247:39;;6336:2;6325:9;6321:18;6308:32;6383:5;6376:13;6369:21;6362:5;6359:32;6349:60;;6405:1;6402;6395:12;6349:60;6428:5;6418:15;;;6092:347;;;;;:::o;6444:1140::-;6560:6;6568;6621:2;6609:9;6600:7;6596:23;6592:32;6589:52;;;6637:1;6634;6627:12;6589:52;6677:9;6664:23;6706:18;6747:2;6739:6;6736:14;6733:34;;;6763:1;6760;6753:12;6733:34;6786:61;6839:7;6830:6;6819:9;6815:22;6786:61;:::i;:::-;6776:71;;6866:2;6856:12;;6921:2;6910:9;6906:18;6893:32;6950:2;6940:8;6937:16;6934:36;;;6966:1;6963;6956:12;6934:36;6989:24;;;-1:-1:-1;7044:4:16;7036:13;;7032:27;-1:-1:-1;7022:55:16;;7073:1;7070;7063:12;7022:55;7109:2;7096:16;7132:60;7148:43;7188:2;7148:43;:::i;7132:60::-;7226:15;;;7308:1;7304:10;;;;7296:19;;7292:28;;;7257:12;;;;7332:19;;;7329:39;;;7364:1;7361;7354:12;7329:39;7388:11;;;;7408:146;7424:6;7419:3;7416:15;7408:146;;;7490:21;7507:3;7490:21;:::i;:::-;7478:34;;7441:12;;;;7532;;;;7408:146;;;7573:5;7563:15;;;;;;;6444:1140;;;;;:::o;7589:256::-;7655:6;7663;7716:2;7704:9;7695:7;7691:23;7687:32;7684:52;;;7732:1;7729;7722:12;7684:52;7755:27;7772:9;7755:27;:::i;:::-;7745:37;;7801:38;7835:2;7824:9;7820:18;7801:38;:::i;:::-;7791:48;;7589:256;;;;;:::o;7850:667::-;7945:6;7953;7961;7969;8022:3;8010:9;8001:7;7997:23;7993:33;7990:53;;;8039:1;8036;8029:12;7990:53;8062:29;8081:9;8062:29;:::i;:::-;8052:39;;8110:38;8144:2;8133:9;8129:18;8110:38;:::i;:::-;8100:48;;8195:2;8184:9;8180:18;8167:32;8157:42;;8250:2;8239:9;8235:18;8222:32;8277:18;8269:6;8266:30;8263:50;;;8309:1;8306;8299:12;8263:50;8332:22;;8385:4;8377:13;;8373:27;-1:-1:-1;8363:55:16;;8414:1;8411;8404:12;8363:55;8437:74;8503:7;8498:2;8485:16;8480:2;8476;8472:11;8437:74;:::i;:::-;8427:84;;;7850:667;;;;;;;:::o;8522:260::-;8590:6;8598;8651:2;8639:9;8630:7;8626:23;8622:32;8619:52;;;8667:1;8664;8657:12;8619:52;8690:29;8709:9;8690:29;:::i;8787:380::-;8866:1;8862:12;;;;8909;;;8930:61;;8984:4;8976:6;8972:17;8962:27;;8930:61;9037:2;9029:6;9026:14;9006:18;9003:38;9000:161;;;9083:10;9078:3;9074:20;9071:1;9064:31;9118:4;9115:1;9108:15;9146:4;9143:1;9136:15;9000:161;;8787:380;;;:::o;10412:356::-;10614:2;10596:21;;;10633:18;;;10626:30;10692:34;10687:2;10672:18;;10665:62;10759:2;10744:18;;10412:356::o;11128:127::-;11189:10;11184:3;11180:20;11177:1;11170:31;11220:4;11217:1;11210:15;11244:4;11241:1;11234:15;11260:125;11300:4;11328:1;11325;11322:8;11319:34;;;11333:18;;:::i;:::-;-1:-1:-1;11370:9:16;;11260:125::o;11390:413::-;11592:2;11574:21;;;11631:2;11611:18;;;11604:30;11670:34;11665:2;11650:18;;11643:62;-1:-1:-1;;;11736:2:16;11721:18;;11714:47;11793:3;11778:19;;11390:413::o;12160:127::-;12221:10;12216:3;12212:20;12209:1;12202:31;12252:4;12249:1;12242:15;12276:4;12273:1;12266:15;12292:135;12331:3;-1:-1:-1;;12352:17:16;;12349:43;;;12372:18;;:::i;:::-;-1:-1:-1;12419:1:16;12408:13;;12292:135::o;16281:340::-;16483:2;16465:21;;;16522:2;16502:18;;;16495:30;-1:-1:-1;;;16556:2:16;16541:18;;16534:46;16612:2;16597:18;;16281:340::o;18220:204::-;18258:3;18294:4;18291:1;18287:12;18326:4;18323:1;18319:12;18361:3;18355:4;18351:14;18346:3;18343:23;18340:49;;;18369:18;;:::i;:::-;18405:13;;18220:204;-1:-1:-1;;;18220:204:16:o;19544:128::-;19584:3;19615:1;19611:6;19608:1;19605:13;19602:39;;;19621:18;;:::i;:::-;-1:-1:-1;19657:9:16;;19544:128::o;23601:420::-;23803:2;23785:21;;;23842:2;23822:18;;;23815:30;23881:34;23876:2;23861:18;;23854:62;23952:26;23947:2;23932:18;;23925:54;24011:3;23996:19;;23601:420::o;26144:973::-;26229:12;;26194:3;;26284:1;26304:18;;;;26357;;;;26384:61;;26438:4;26430:6;26426:17;26416:27;;26384:61;26464:2;26512;26504:6;26501:14;26481:18;26478:38;26475:161;;;26558:10;26553:3;26549:20;26546:1;26539:31;26593:4;26590:1;26583:15;26621:4;26618:1;26611:15;26475:161;26652:18;26679:104;;;;26797:1;26792:319;;;;26645:466;;26679:104;-1:-1:-1;;26712:24:16;;26700:37;;26757:16;;;;-1:-1:-1;26679:104:16;;26792:319;26091:1;26084:14;;;26128:4;26115:18;;26886:1;26900:165;26914:6;26911:1;26908:13;26900:165;;;26992:14;;26979:11;;;26972:35;27035:16;;;;26929:10;;26900:165;;;26904:3;;27094:6;27089:3;27085:16;27078:23;;26645:466;;;;;;;26144:973;;;;:::o;27122:456::-;27343:3;27371:38;27405:3;27397:6;27371:38;:::i;:::-;27438:6;27432:13;27454:52;27499:6;27495:2;27488:4;27480:6;27476:17;27454:52;:::i;:::-;27522:50;27564:6;27560:2;27556:15;27548:6;27522:50;:::i;:::-;27515:57;27122:456;-1:-1:-1;;;;;;;27122:456:16:o;27933:178::-;27970:3;28014:4;28007:5;28003:16;28038:7;28028:41;;28049:18;;:::i;:::-;-1:-1:-1;;28085:20:16;;27933:178;-1:-1:-1;;27933:178:16:o;29179:175::-;29216:3;29260:4;29253:5;29249:16;29289:4;29280:7;29277:17;29274:43;;;29297:18;;:::i;:::-;29346:1;29333:15;;29179:175;-1:-1:-1;;29179:175:16:o;30994:168::-;31034:7;31100:1;31096;31092:6;31088:14;31085:1;31082:21;31077:1;31070:9;31063:17;31059:45;31056:71;;;31107:18;;:::i;:::-;-1:-1:-1;31147:9:16;;30994:168::o;31167:127::-;31228:10;31223:3;31219:20;31216:1;31209:31;31259:4;31256:1;31249:15;31283:4;31280:1;31273:15;31299:120;31339:1;31365;31355:35;;31370:18;;:::i;:::-;-1:-1:-1;31404:9:16;;31299:120::o;32127:414::-;32329:2;32311:21;;;32368:2;32348:18;;;32341:30;32407:34;32402:2;32387:18;;32380:62;-1:-1:-1;;;32473:2:16;32458:18;;32451:48;32531:3;32516:19;;32127:414::o;32546:112::-;32578:1;32604;32594:35;;32609:18;;:::i;:::-;-1:-1:-1;32643:9:16;;32546:112::o;32663:489::-;-1:-1:-1;;;;;32932:15:16;;;32914:34;;32984:15;;32979:2;32964:18;;32957:43;33031:2;33016:18;;33009:34;;;33079:3;33074:2;33059:18;;33052:31;;;32857:4;;33100:46;;33126:19;;33118:6;33100:46;:::i;:::-;33092:54;32663:489;-1:-1:-1;;;;;;32663:489:16:o;33157:249::-;33226:6;33279:2;33267:9;33258:7;33254:23;33250:32;33247:52;;;33295:1;33292;33285:12;33247:52;33327:9;33321:16;33346:30;33370:5;33346:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    483,
    9838
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3C3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78231978 GT PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE59A2F99 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB03 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0xFC1A1C36 EQ PUSH2 0xB39 JUMPI DUP1 PUSH4 0xFCAA7664 EQ PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE59A2F99 EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0xA90 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xAA5 JUMPI DUP1 PUSH4 0xEE3743AB EQ PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD6D67A09 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0xA07 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0xA1C JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0xA3C JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0xA51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x9BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x9D2 JUMPI DUP1 PUSH4 0xCBD0A2B5 EQ PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA62248A9 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0xB7353DE6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0xB7353DE6 EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA62248A9 EQ PUSH2 0x8A8 JUMPI DUP1 PUSH4 0xA84FFCFC EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xB1214392 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78231978 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x275 JUMPI DUP1 PUSH4 0x6ECD2306 GT PUSH2 0x244 JUMPI DUP1 PUSH4 0x6ECD2306 EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0x717D57D3 EQ PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0x6EC55DBC EQ PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x5ECF8A80 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x61869A93 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x35A JUMPI DUP1 PUSH4 0x30CC7AE0 GT PUSH2 0x329 JUMPI DUP1 PUSH4 0x30CC7AE0 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0x3BDF4AC6 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0x2BEAB4B7 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x30BA7BF9 EQ PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x396 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x20841A6A EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x457 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x334A JUMP JUMPDEST PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x33BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x3407 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D0 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0xE9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0xEED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x35EB JUMP JUMPDEST PUSH2 0xF1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x563 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x49B PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x1396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D0 JUMP JUMPDEST PUSH2 0x1465 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH2 0x690 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x43F SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x6E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x364C JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x1542 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x15B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0x1647 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x752 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x49B PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x364C JUMP JUMPDEST PUSH2 0x16A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x1D41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x1DC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x7CA CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x1E02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x1E88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x1EBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x1FC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x1FFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3E8 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x8A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3667 JUMP JUMPDEST PUSH2 0x200C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x5CE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x8DD CALLDATASIZE PUSH1 0x4 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0x2017 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x43F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x91D CALLDATASIZE PUSH1 0x4 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x212D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x96D CALLDATASIZE PUSH1 0x4 PUSH2 0x3798 JUMP JUMPDEST PUSH2 0x235E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3E8 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x2396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x23A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x9ED CALLDATASIZE PUSH1 0x4 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x23B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x2464 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x253A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0xA37 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D0 JUMP JUMPDEST PUSH2 0x2593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x25D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x5CE SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0xA8B CALLDATASIZE PUSH1 0x4 PUSH2 0x3814 JUMP JUMPDEST PUSH2 0x25ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x265B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0xAC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0x2755 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH2 0xB1E CALLDATASIZE PUSH1 0x4 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x281D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xB98 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xBB3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC8 SWAP1 PUSH2 0x3830 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF4 SWAP1 PUSH2 0x3830 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xD7A JUMPI POP PUSH2 0xD7A DUP2 CALLER PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xDF6 DUP4 DUP4 PUSH2 0x28C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE98 SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x329B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xEA9 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH2 0xEF8 CALLER JUMPDEST DUP3 PUSH2 0x2932 JUMP JUMPDEST PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x38CD JUMP JUMPDEST PUSH2 0xDF6 DUP4 DUP4 DUP4 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2BB434BA32B634B9BA1034B99031B7B731B63AB232B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0x391E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1000 DUP2 PUSH2 0x3934 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726565206D696E742073616C6520697320636F6E636C756465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F7420617761726465642066726565206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74206F6E2077686974656C697374206C6973742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1277 PUSH1 0x64 PUSH2 0x1271 SELFBALANCE PUSH1 0x32 PUSH2 0x2BD4 JUMP JUMPDEST SWAP1 PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH2 0x13CE PUSH2 0x2BF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDF6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x235E JUMP JUMPDEST PUSH2 0x13F4 CALLER PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x1459 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x2C86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE98 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x329B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x15C6 SWAP1 PUSH2 0x3830 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F2 SWAP1 PUSH2 0x3830 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x163F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1614 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x163F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1622 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1652 PUSH2 0xE9C JUMP JUMPDEST GT PUSH2 0x1698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xEB3 PUSH2 0x708 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x1733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x37B71039BA30B3B29018101434B734BA1497 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x1804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3930B739B0B1BA34B7B717 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x1940 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E746572206E6F7420617761726465642066726565206D696E74732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 PUSH2 0x189E SWAP2 AND DUP4 PUSH2 0x3979 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20657863656564732072656D61696E696E67206672 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B29036B4B73A3997 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1923 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x3979 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x12 SLOAD PUSH2 0x195E SWAP1 PUSH1 0xFF DUP4 AND PUSH2 0x2BD4 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B737BAB3B41032BA3432B91039B2B73A17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F74206F6E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 PUSH1 0xFF AND PUSH2 0x1A14 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x1A1E SWAP2 SWAP1 PUSH2 0x399E JUMP JUMPDEST GT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20657863656564732077686974656C697374207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3838363C97 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x13 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 PUSH2 0x1A9E SWAP2 AND DUP4 PUSH2 0x3979 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x1B08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E2065786365656473206D617820616C6C6F77656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3BB434BA32B634B9BA1036B4B73A3997 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1923 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x3979 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x1C36 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1BA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH2 0x1BB5 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x399E JUMP JUMPDEST GT ISZERO PUSH2 0x1C16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x16 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C2B SWAP2 SWAP1 PUSH2 0x399E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1D02 SWAP1 POP JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x1C46 SWAP1 PUSH1 0xFF DUP4 AND PUSH2 0x2BD4 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 PUSH1 0xFF AND PUSH2 0x1C9C PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x399E JUMP JUMPDEST GT ISZERO PUSH2 0x1D02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xE98 JUMPI PUSH2 0x1D21 CALLER PUSH2 0x1D1C PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2D2D JUMP JUMPDEST PUSH2 0x1D2F PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1D39 DUP2 PUSH2 0x3934 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1DF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH2 0x13CE PUSH1 0x0 PUSH2 0x2D47 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x1E83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2BB434BA32B634B9BA1034B99031B7B731B63AB232B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1EB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1EED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD PUSH2 0x1EFC SWAP1 PUSH2 0x3830 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1F4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1FF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH2 0x13CE PUSH2 0x2DA1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xBC8 SWAP1 PUSH2 0x3830 JUMP JUMPDEST PUSH2 0xE98 CALLER DUP4 DUP4 PUSH2 0x2DF9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x209E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xDF6 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20BC JUMPI PUSH2 0x20BC PUSH2 0x391E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20DA JUMPI PUSH2 0x20DA PUSH2 0x391E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x2125 SWAP1 PUSH2 0x3934 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x215D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x218B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x21D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2830B9BA10333932B29036B4B73A1039B0B63297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x224A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3930B739B0B1BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x22AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x22BA PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x22C4 SWAP2 SWAP1 PUSH2 0x399E JUMP JUMPDEST GT ISZERO PUSH2 0x2324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3A1039BAB838363C97 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xDF6 JUMPI PUSH2 0x233E DUP3 PUSH2 0x1D1C PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x234C PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2356 DUP2 PUSH2 0x3934 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x2368 CALLER DUP4 PUSH2 0x2932 JUMP JUMPDEST PUSH2 0x2384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x38CD JUMP JUMPDEST PUSH2 0x2390 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2EC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x15C6 SWAP1 PUSH2 0x3830 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x15C6 SWAP1 PUSH2 0x3830 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x242F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x243A DUP4 PUSH2 0x2EFB JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x244E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x24C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x250C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81CDD1859D95CC81899599BDC99481A5B9A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x251F DUP4 PUSH2 0x3AE0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2545 PUSH2 0xE9C JUMP JUMPDEST GT PUSH2 0x258B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xEB3 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE98 SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x329B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E0 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x261D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x268B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0x269A SWAP1 PUSH2 0x3830 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x26E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x27B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x280A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20737461676573206166746572207075626C69632073616C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x251F DUP4 PUSH2 0x3AFD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x284D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x386B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x28B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x2D47 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x28F9 DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B6 DUP4 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x29F1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E6 DUP5 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2A21 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A3C DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2AA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x2B11 DUP4 DUP4 DUP4 PUSH2 0x2FF9 JUMP JUMPDEST PUSH2 0x2B1C PUSH1 0x0 DUP3 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2B45 SWAP1 DUP5 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2B73 SWAP1 DUP5 SWAP1 PUSH2 0x399E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE0 DUP3 DUP5 PUSH2 0x3B1D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE0 DUP3 DUP5 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x2C3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C91 DUP3 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9F DUP2 PUSH1 0x0 DUP5 PUSH2 0x2FF9 JUMP JUMPDEST PUSH2 0x2CAA PUSH1 0x0 DUP4 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2CD3 SWAP1 DUP5 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE98 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x301C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2C69 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2E5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2ED3 DUP5 DUP5 DUP5 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x2EDF DUP5 DUP5 DUP5 DUP5 PUSH2 0x304F JUMP JUMPDEST PUSH2 0x2390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2F1F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2F49 JUMPI DUP1 PUSH2 0x2F33 DUP2 PUSH2 0x3934 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F42 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F23 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F64 JUMPI PUSH2 0x2F64 PUSH2 0x3431 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F8E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2A21 JUMPI PUSH2 0x2FA3 PUSH1 0x1 DUP4 PUSH2 0x38B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB0 PUSH1 0xA DUP7 PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x2FBB SWAP1 PUSH1 0x30 PUSH2 0x399E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2FD0 JUMPI PUSH2 0x2FD0 PUSH2 0x391E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2FF2 PUSH1 0xA DUP7 PUSH2 0x3B52 JUMP JUMPDEST SWAP5 POP PUSH2 0x2F92 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH2 0x3026 DUP4 DUP4 PUSH2 0x314D JUMP JUMPDEST PUSH2 0x3033 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x304F JUMP JUMPDEST PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3142 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3093 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3BCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x30CE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x30CB SWAP2 DUP2 ADD SWAP1 PUSH2 0x3C09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3128 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x30FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x3120 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2A21 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x31A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x3208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x3214 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2FF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x323D SWAP1 DUP5 SWAP1 PUSH2 0x399E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x32A7 SWAP1 PUSH2 0x3830 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x32C9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x330F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x32E2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x330F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x330F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x330F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x32F4 JUMP JUMPDEST POP PUSH2 0x331B SWAP3 SWAP2 POP PUSH2 0x331F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x331B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x335C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BE0 DUP2 PUSH2 0x3334 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3382 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x336A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2390 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x33AB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2BE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x341A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3423 DUP4 PUSH2 0x33EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3470 JUMPI PUSH2 0x3470 PUSH2 0x3431 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x3492 JUMPI PUSH2 0x3492 PUSH2 0x3431 JUMP JUMPDEST PUSH2 0x34A5 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x34B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x350A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A21 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3537 DUP5 PUSH2 0x33EB JUMP JUMPDEST SWAP3 POP PUSH2 0x3545 PUSH1 0x20 DUP6 ADD PUSH2 0x33EB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x356F JUMPI PUSH2 0x356F PUSH2 0x3431 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x358A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x359F PUSH2 0x359A DUP4 PUSH2 0x3555 JUMP JUMPDEST PUSH2 0x3447 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x35BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x35E0 JUMPI PUSH2 0x35D3 DUP2 PUSH2 0x33EB JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x35C2 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A21 DUP5 DUP3 DUP6 ADD PUSH2 0x3579 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE0 DUP3 PUSH2 0x33EB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x365E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE0 DUP3 PUSH2 0x363B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x367A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3683 DUP4 PUSH2 0x33EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x36CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36DA DUP7 DUP4 DUP8 ADD PUSH2 0x3579 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x36F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3712 PUSH2 0x359A DUP3 PUSH2 0x3555 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x3756 JUMPI PUSH2 0x3747 DUP5 PUSH2 0x363B JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3736 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3781 DUP4 PUSH2 0x363B JUMP JUMPDEST SWAP2 POP PUSH2 0x378F PUSH1 0x20 DUP5 ADD PUSH2 0x33EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37B7 DUP6 PUSH2 0x33EB JUMP JUMPDEST SWAP4 POP PUSH2 0x37C5 PUSH1 0x20 DUP7 ADD PUSH2 0x33EB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x37F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3808 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3478 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3781 DUP4 PUSH2 0x33EB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3844 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3865 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x38C8 JUMPI PUSH2 0x38C8 PUSH2 0x38A0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3948 JUMPI PUSH2 0x3948 PUSH2 0x38A0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3996 JUMPI PUSH2 0x3996 PUSH2 0x38A0 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x39B1 JUMPI PUSH2 0x39B1 PUSH2 0x38A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3A2D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3A4F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3A63 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A74 JUMPI PUSH2 0x3AA1 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3AA1 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3A99 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3A80 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB9 DUP3 DUP7 PUSH2 0x3A13 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x3AC9 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x3367 JUMP JUMPDEST PUSH2 0x3AD5 DUP2 DUP4 ADD DUP7 PUSH2 0x3A13 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x3AF3 JUMPI PUSH2 0x3AF3 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3B14 JUMPI PUSH2 0x3B14 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B37 JUMPI PUSH2 0x3B37 PUSH2 0x38A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B61 JUMPI PUSH2 0x3B61 PUSH2 0x3B3C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3BC7 JUMPI PUSH2 0x3BC7 PUSH2 0x3B3C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3BFF SWAP1 DUP4 ADD DUP5 PUSH2 0x3393 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2BE0 DUP2 PUSH2 0x3334 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x2615B099562DDAB1F9B5C0942F4521C605 0xE7 0xB4 0xB5 SWAP8 SSTORE 0xB3 LOG1 DELEGATECALL 0xCB PUSH30 0x75A749D164736F6C634300080A0033000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C3"
    },
    "12": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78231978"
    },
    "25": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F2"
    },
    "29": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10D"
    },
    "40": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE59A2F99"
    },
    "47": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB03"
    },
    "73": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF51F96DD"
    },
    "80": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB23"
    },
    "84": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "86": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFC1A1C36"
    },
    "91": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "92": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB39"
    },
    "95": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "96": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFCAA7664"
    },
    "102": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB4F"
    },
    "106": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "107": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "111": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE59A2F99"
    },
    "118": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA70"
    },
    "122": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA90"
    },
    "133": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "135": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "141": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAA5"
    },
    "144": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "145": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEE3743AB"
    },
    "151": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAEE"
    },
    "155": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "156": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "160": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "161": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD6D67A09"
    },
    "167": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "168": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD6D67A09"
    },
    "178": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA07"
    },
    "182": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDA3EF23F"
    },
    "189": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA1C"
    },
    "193": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "195": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDE5F9866"
    },
    "200": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "201": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA3C"
    },
    "204": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "205": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDE7FCB1D"
    },
    "211": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "212": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA51"
    },
    "215": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "216": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "220": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "221": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "222": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9A8"
    },
    "231": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "232": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "239": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9BD"
    },
    "242": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "250": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D2"
    },
    "253": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "254": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "255": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBD0A2B5"
    },
    "260": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "261": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F2"
    },
    "264": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "265": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "268": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "269": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "270": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "271": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA62248A9"
    },
    "276": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "277": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "281": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "282": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB7353DE6"
    },
    "287": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "288": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "292": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "293": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB7353DE6"
    },
    "298": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "299": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x922"
    },
    "302": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "303": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB88D4FDE"
    },
    "309": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "310": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x952"
    },
    "313": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "314": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "315": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC29DE630"
    },
    "320": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "321": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x972"
    },
    "324": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "325": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "326": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC3214581"
    },
    "331": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "332": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x992"
    },
    "335": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "336": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "339": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "340": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "341": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "342": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA62248A9"
    },
    "347": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "348": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A8"
    },
    "351": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "352": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "353": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA84FFCFC"
    },
    "358": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "359": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8C2"
    },
    "362": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "363": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "364": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB1214392"
    },
    "369": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "370": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E2"
    },
    "373": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "374": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "375": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB3CAAD01"
    },
    "380": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "381": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x902"
    },
    "384": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "385": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "388": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "389": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "390": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "391": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "396": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "397": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "401": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "402": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "407": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "408": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x82F"
    },
    "411": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "412": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "413": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95D89B41"
    },
    "418": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "419": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x852"
    },
    "422": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "423": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "424": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9A2A9C3D"
    },
    "429": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "430": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "433": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "434": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "435": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA22CB465"
    },
    "440": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "441": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x888"
    },
    "444": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "445": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "448": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "449": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "450": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "451": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78231978"
    },
    "456": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "457": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CF"
    },
    "460": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "461": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "462": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x791A2519"
    },
    "467": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "468": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7E5"
    },
    "471": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "472": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "473": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81C162F2"
    },
    "478": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "479": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x805"
    },
    "482": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "483": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "484": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8456CB59"
    },
    "489": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "490": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x81A"
    },
    "493": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "494": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "496": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "497": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "498": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "499": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "500": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3F4BA83A"
    },
    "505": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "506": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E2"
    },
    "509": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "510": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "511": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6352211E"
    },
    "516": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "517": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x275"
    },
    "520": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "521": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "522": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6ECD2306"
    },
    "527": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "528": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x244"
    },
    "531": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "532": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "533": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6ECD2306"
    },
    "538": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "539": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x767"
    },
    "542": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "543": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "544": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "549": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "550": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x77A"
    },
    "553": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "554": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "555": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "560": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "561": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x79A"
    },
    "564": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "565": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "566": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x717D57D3"
    },
    "571": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "572": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7AF"
    },
    "575": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "576": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "578": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "579": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "580": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "581": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "582": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6352211E"
    },
    "587": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "588": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6ED"
    },
    "591": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "592": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "593": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6C0360EB"
    },
    "598": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "599": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x70D"
    },
    "602": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "603": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "604": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6CBB8985"
    },
    "609": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "610": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x722"
    },
    "613": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "614": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "615": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6EC55DBC"
    },
    "620": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "621": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x737"
    },
    "624": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "625": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "627": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "628": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "629": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "630": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "631": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "636": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "637": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1"
    },
    "640": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "641": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "642": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "647": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "648": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x65D"
    },
    "651": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "652": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "653": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5ECF8A80"
    },
    "658": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "659": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x675"
    },
    "662": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "663": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "664": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x61869A93"
    },
    "669": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "670": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A5"
    },
    "673": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "674": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "675": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x622E4E78"
    },
    "680": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "681": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6CD"
    },
    "684": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "685": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "687": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "688": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "689": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "690": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "691": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3F4BA83A"
    },
    "696": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "697": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5E8"
    },
    "700": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "701": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "702": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x42842E0E"
    },
    "707": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "708": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5FD"
    },
    "711": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "712": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "713": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x42966C68"
    },
    "718": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "719": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x61D"
    },
    "722": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "723": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "724": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x55F804B3"
    },
    "729": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "730": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x63D"
    },
    "733": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "734": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "736": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "737": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "738": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "739": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "740": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "745": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "746": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35A"
    },
    "749": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "750": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "751": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x30CC7AE0"
    },
    "756": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "757": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329"
    },
    "760": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "761": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "762": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x30CC7AE0"
    },
    "767": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "768": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x568"
    },
    "771": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "772": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "773": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x33E61413"
    },
    "778": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "779": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x588"
    },
    "782": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "783": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "784": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3BDF4AC6"
    },
    "789": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "790": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x59E"
    },
    "793": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "794": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "795": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3CCFD60B"
    },
    "800": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "801": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5E0"
    },
    "804": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "805": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "807": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "808": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "809": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "810": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "811": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "816": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "817": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4F2"
    },
    "820": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "821": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "822": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2BEAB4B7"
    },
    "827": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "828": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x512"
    },
    "831": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "832": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "833": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2EB4A7AB"
    },
    "838": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "839": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x532"
    },
    "842": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "843": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "844": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x30BA7BF9"
    },
    "849": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "850": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x548"
    },
    "853": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "854": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "856": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "857": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "858": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "859": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "860": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95EA7B3"
    },
    "865": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "GT",
      "path": "15"
    },
    "866": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x396"
    },
    "869": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "870": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "871": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95EA7B3"
    },
    "876": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "877": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B"
    },
    "880": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "881": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "882": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x10969523"
    },
    "887": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "888": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D"
    },
    "891": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "892": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "893": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x18160DDD"
    },
    "898": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "899": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4BD"
    },
    "902": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "903": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "904": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x20841A6A"
    },
    "909": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "910": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D2"
    },
    "913": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "914": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "916": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "917": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "918": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "919": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "920": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FFC9A7"
    },
    "925": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "926": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C8"
    },
    "929": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "930": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "931": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6FDDE03"
    },
    "936": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "937": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FD"
    },
    "940": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "941": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "942": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81812FC"
    },
    "947": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "948": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x41F"
    },
    "951": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "952": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "953": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x88139A6"
    },
    "958": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "EQ",
      "path": "15"
    },
    "959": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x457"
    },
    "962": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "963": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "964": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "966": {
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "967": {
      "first_revert": true,
      "fn": null,
      "offset": [
        483,
        9838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "968": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "970": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "971": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "972": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "975": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "976": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "978": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "979": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "REVERT",
      "path": "2"
    },
    "980": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "985": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E3"
    },
    "988": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "989": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "991": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334A"
    },
    "994": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "995": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "996": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB67"
    },
    "999": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1000": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1001": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1003": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1004": {
      "op": "SWAP1"
    },
    "1005": {
      "op": "ISZERO"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1015": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1016": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1017": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1018": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "2"
    },
    "1019": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1020": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "2"
    },
    "1021": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1022": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1023": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1024": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1025": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x409"
    },
    "1028": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1029": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1031": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1032": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1033": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1034": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "2"
    },
    "1035": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x412"
    },
    "1038": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB9"
    },
    "1041": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1042": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1043": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1045": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1046": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1049": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1050": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1051": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33BF"
    },
    "1054": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1055": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1056": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42B"
    },
    "1062": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1068": {
      "op": "POP"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43F"
    },
    "1072": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43A"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1076": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33D2"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1082": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1083": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4B"
    },
    "1086": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1087": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1088": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "op": "SUB"
    },
    "1099": {
      "op": "SWAP1"
    },
    "1100": {
      "op": "SWAP2"
    },
    "1101": {
      "op": "AND"
    },
    "1102": {
      "op": "DUP2"
    },
    "1103": {
      "op": "MSTORE"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1110": {
      "op": "JUMP"
    },
    "1111": {
      "offset": [
        1838,
        1866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1112": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1113": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1114": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1115": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x463"
    },
    "1118": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1119": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1121": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1122": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1123": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1124": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "POP",
      "path": "15"
    },
    "1125": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "1128": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x16"
    },
    "1130": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1131": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1132": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1133": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1134": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1136": {
      "fn": "ERC721.getApproved",
      "offset": [
        1838,
        1866
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1137": {
      "op": "SWAP1"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "offset": [
        1838,
        1866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F4"
    },
    "1146": {
      "op": "JUMP"
    },
    "1147": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1148": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1149": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1150": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1151": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x487"
    },
    "1154": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1155": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1157": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1158": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1159": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "1164": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x496"
    },
    "1167": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1170": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3407"
    },
    "1173": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1174": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1175": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE5"
    },
    "1178": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1179": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1180": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "2"
    },
    "1181": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1182": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1183": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1184": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1185": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1189": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1191": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1192": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1193": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1198": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B8"
    },
    "1201": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1202": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1204": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34D0"
    },
    "1207": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1208": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1209": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDFB"
    },
    "1212": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1213": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1214": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1215": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1216": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1217": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C9"
    },
    "1220": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1221": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1223": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1224": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1225": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1226": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "POP",
      "path": "15"
    },
    "1227": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "1230": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "1233": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1234": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1235": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1236": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1237": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1238": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DE"
    },
    "1241": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1242": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1244": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1245": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1246": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1251": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4ED"
    },
    "1254": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1255": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1257": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33D2"
    },
    "1260": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1261": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1262": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB8"
    },
    "1265": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1269": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1270": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FE"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1274": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1276": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "1283": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50D"
    },
    "1286": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1287": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1289": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3519"
    },
    "1292": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1293": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1294": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEED"
    },
    "1297": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1298": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1299": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1300": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1301": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1302": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x51E"
    },
    "1305": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1306": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1308": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1309": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1310": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1315": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x52D"
    },
    "1318": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1319": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1321": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35EB"
    },
    "1324": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1325": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1326": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF1F"
    },
    "1329": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1330": {
      "offset": [
        708,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1331": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1332": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1333": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1334": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x53E"
    },
    "1337": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1338": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1340": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1341": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1342": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1343": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "POP",
      "path": "15"
    },
    "1344": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "1347": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1349": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1350": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1351": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        708,
        733
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1352": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1353": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1354": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1355": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1356": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x554"
    },
    "1359": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1360": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1362": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1363": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1364": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1369": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x563"
    },
    "1372": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1373": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1375": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "1378": {
      "fn": "CryptidToken.removeFreetUser",
      "jump": "i",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1379": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1380": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1008"
    },
    "1383": {
      "fn": "CryptidToken.removeFreetUser",
      "jump": "i",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1384": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1385": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1386": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1387": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1388": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x574"
    },
    "1391": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1392": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1394": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1395": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1396": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1397": {
      "op": "POP"
    },
    "1398": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1401": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x583"
    },
    "1404": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1405": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1407": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "1410": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "i",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1411": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1412": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1118"
    },
    "1415": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "i",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1416": {
      "offset": [
        1528,
        1558
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1417": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1418": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1419": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1420": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x594"
    },
    "1423": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1424": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1426": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1427": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1428": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1429": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "POP",
      "path": "15"
    },
    "1430": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "1433": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x11"
    },
    "1435": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1436": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1437": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1528,
        1558
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1438": {
      "offset": [
        1692,
        1743
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1439": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1440": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1441": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1442": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5AA"
    },
    "1445": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1446": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1448": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1449": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1450": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "1455": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B9"
    },
    "1458": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1459": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1461": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "1464": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "i",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1465": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1466": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "1468": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1470": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1471": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1473": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1474": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1475": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1476": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1478": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1479": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1480": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1481": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1483": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "AND",
      "path": "15"
    },
    "1484": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1485": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1486": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1487": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1489": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        1692,
        1743
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1492": {
      "op": "SWAP1"
    },
    "1493": {
      "op": "SWAP2"
    },
    "1494": {
      "op": "AND"
    },
    "1495": {
      "op": "DUP2"
    },
    "1496": {
      "op": "MSTORE"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "offset": [
        1692,
        1743
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F4"
    },
    "1503": {
      "op": "JUMP"
    },
    "1504": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1505": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1508": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11D1"
    },
    "1511": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8303,
        8698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1512": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1513": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1514": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1515": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1516": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F4"
    },
    "1519": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1520": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1522": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1523": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1524": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1525": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "POP",
      "path": "15"
    },
    "1526": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1529": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1396"
    },
    "1532": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x609"
    },
    "1540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "1550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x618"
    },
    "1553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3519"
    },
    "1559": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1561": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D0"
    },
    "1564": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1565": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1566": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1567": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1568": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1569": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x629"
    },
    "1572": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1573": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1575": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1576": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1577": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49B"
    },
    "1582": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x638"
    },
    "1585": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1586": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1588": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D2"
    },
    "1591": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1592": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1593": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13EB"
    },
    "1596": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1597": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1598": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1599": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1600": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1601": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x649"
    },
    "1604": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1605": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1607": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1608": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1609": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1614": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x658"
    },
    "1617": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1618": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1620": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34D0"
    },
    "1623": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1624": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1625": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1465"
    },
    "1628": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1629": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1630": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1631": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1632": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1633": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x669"
    },
    "1636": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1637": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1639": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1640": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1641": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x6"
    },
    "1645": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1646": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1648": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1649": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "1652": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1653": {
      "offset": [
        1391,
        1437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1654": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1655": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1656": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1657": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x681"
    },
    "1660": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1661": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1663": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1664": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1665": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "1670": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x690"
    },
    "1673": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1674": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1676": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "1679": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1391,
        1437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1680": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1681": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "1683": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1685": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1686": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1688": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1689": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1690": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1691": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1693": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1694": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1695": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1696": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1698": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "AND",
      "path": "15"
    },
    "1699": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1700": {
      "fn": "Pausable.paused",
      "offset": [
        1391,
        1437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1701": {
      "offset": [
        999,
        1072
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1702": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1703": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1704": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1705": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B1"
    },
    "1708": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1709": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1711": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1712": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1713": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "offset": [
        999,
        1072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "1717": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1718": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43F"
    },
    "1721": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1722": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "1728": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1729": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "DIV",
      "path": "15"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "offset": [
        999,
        1072
      ],
      "op": "AND",
      "path": "15"
    },
    "1739": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1740": {
      "fn": "Pausable.paused",
      "offset": [
        999,
        1072
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1741": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1742": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1743": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1744": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1745": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D9"
    },
    "1748": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1749": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1751": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1752": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1753": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1758": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6E8"
    },
    "1761": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1762": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1764": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364C"
    },
    "1767": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1768": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1769": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F6"
    },
    "1772": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1776": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1781": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1785": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43F"
    },
    "1790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1793": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1794": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1796": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33D2"
    },
    "1799": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1800": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1801": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "1804": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1805": {
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1806": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1807": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1808": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1809": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x719"
    },
    "1812": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1813": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1815": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1816": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1817": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1818": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "1819": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x412"
    },
    "1822": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15B9"
    },
    "1825": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        773,
        799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1826": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1827": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1828": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1829": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1830": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x72E"
    },
    "1833": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1834": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1836": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1837": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1838": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1839": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "POP",
      "path": "15"
    },
    "1840": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43F"
    },
    "1843": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1647"
    },
    "1846": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8733,
        8897
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1847": {
      "offset": [
        1476,
        1522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1848": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1849": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1850": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1851": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x743"
    },
    "1854": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1855": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1857": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1858": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1859": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "1864": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x752"
    },
    "1867": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1868": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1870": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "1873": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        1476,
        1522
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1874": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1875": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "1877": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1879": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1880": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1882": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1883": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1884": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1885": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1887": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1888": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1889": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1890": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1892": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "AND",
      "path": "15"
    },
    "1893": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1894": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1476,
        1522
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1895": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1896": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1899": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x775"
    },
    "1902": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1903": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1905": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364C"
    },
    "1908": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2530,
        4419
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1909": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1910": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16A3"
    },
    "1913": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2530,
        4419
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1914": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1915": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1916": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1917": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1918": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x786"
    },
    "1921": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1922": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1924": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1925": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1926": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1927": {
      "op": "POP"
    },
    "1928": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46D"
    },
    "1931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x795"
    },
    "1934": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1935": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1937": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3620"
    },
    "1940": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1941": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1942": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D41"
    },
    "1945": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1946": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1947": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1948": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A6"
    },
    "1953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1954": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1957": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1959": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49B"
    },
    "1963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC8"
    },
    "1966": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1967": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1968": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1969": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1970": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1971": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7BB"
    },
    "1974": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1975": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1977": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1978": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1979": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "1984": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CA"
    },
    "1987": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1988": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1990": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33D2"
    },
    "1993": {
      "fn": "CryptidToken.setWhitelistPrice",
      "jump": "i",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1994": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1995": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E02"
    },
    "1998": {
      "fn": "CryptidToken.setWhitelistPrice",
      "jump": "i",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1999": {
      "offset": [
        1945,
        1975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2000": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2001": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2002": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2003": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7DB"
    },
    "2006": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2007": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2009": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2010": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2011": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2012": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "POP",
      "path": "15"
    },
    "2013": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2016": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x18"
    },
    "2018": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2019": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2020": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        1945,
        1975
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2021": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2022": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2023": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2024": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2025": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F1"
    },
    "2028": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2029": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2031": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2032": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2033": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2038": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x800"
    },
    "2041": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2042": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2044": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33D2"
    },
    "2047": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2048": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2049": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E88"
    },
    "2052": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2053": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2054": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2055": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2056": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2057": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x811"
    },
    "2060": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2061": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2063": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2064": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2065": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2066": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "POP",
      "path": "15"
    },
    "2067": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2070": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EBD"
    },
    "2073": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2074": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2075": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2076": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2077": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2078": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x826"
    },
    "2081": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2082": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2084": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2085": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2086": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2087": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "POP",
      "path": "15"
    },
    "2088": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2091": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FC5"
    },
    "2094": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2095": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2096": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2097": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2098": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2099": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83B"
    },
    "2102": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2103": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2105": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2106": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2107": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x6"
    },
    "2111": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2112": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2115": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "SUB"
    },
    "2125": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2126": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "2129": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2130": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2131": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2132": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85E"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2138": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2142": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "2"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x412"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FFD"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2151": {
      "offset": [
        953,
        993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2152": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2154": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x873"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2159": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2161": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2163": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "offset": [
        953,
        993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "2167": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2168": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2172": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "2177": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2178": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "DIV",
      "path": "15"
    },
    "2179": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "AND",
      "path": "15"
    },
    "2182": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2183": {
      "fn": "ERC721.symbol",
      "offset": [
        953,
        993
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2184": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2185": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2186": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2187": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2188": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x894"
    },
    "2191": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2192": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2194": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2195": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2196": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "2201": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A3"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2207": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3667"
    },
    "2210": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2211": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x200C"
    },
    "2215": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2216": {
      "offset": [
        1635,
        1668
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2217": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2218": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2219": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2220": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B4"
    },
    "2223": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2224": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2227": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2228": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "offset": [
        1635,
        1668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x13"
    },
    "2232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2233": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "2236": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2237": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2239": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "AND",
      "path": "15"
    },
    "2240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1635,
        1668
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2242": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2243": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2244": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2245": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2246": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8CE"
    },
    "2249": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2250": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2252": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2253": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2254": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2259": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8DD"
    },
    "2262": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2263": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2265": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36A3"
    },
    "2268": {
      "fn": "CryptidToken.setfreeUsers",
      "jump": "i",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2269": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2270": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2017"
    },
    "2273": {
      "fn": "CryptidToken.setfreeUsers",
      "jump": "i",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2274": {
      "offset": [
        1078,
        1151
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2275": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2276": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2277": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2278": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8EE"
    },
    "2281": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2282": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2284": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2285": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2286": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "offset": [
        1078,
        1151
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "2290": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2291": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43F"
    },
    "2294": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "op": "SUB"
    },
    "2303": {
      "offset": [
        1078,
        1151
      ],
      "op": "AND",
      "path": "15"
    },
    "2304": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2305": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        1078,
        1151
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2306": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2307": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2308": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2309": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2310": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x90E"
    },
    "2313": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2314": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2316": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2317": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2318": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2323": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x91D"
    },
    "2326": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2327": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2329": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3765"
    },
    "2332": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2334": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212D"
    },
    "2337": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2338": {
      "offset": [
        1343,
        1385
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2340": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2341": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2342": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x92E"
    },
    "2345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2346": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2348": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2349": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2350": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "2355": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x93D"
    },
    "2358": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2359": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2361": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3620"
    },
    "2364": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        1343,
        1385
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2365": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2366": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "2368": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2370": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2371": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2373": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2374": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2375": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2376": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2378": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2379": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2380": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2381": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2383": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "AND",
      "path": "15"
    },
    "2384": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2385": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        1343,
        1385
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2386": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95E"
    },
    "2393": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2397": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "2403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96D"
    },
    "2406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3798"
    },
    "2412": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2414": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235E"
    },
    "2417": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2418": {
      "offset": [
        913,
        947
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2419": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2421": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x97E"
    },
    "2425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "offset": [
        913,
        947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "2434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "2438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2439": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "2443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2444": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "DIV",
      "path": "15"
    },
    "2445": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "AND",
      "path": "15"
    },
    "2448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2449": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        913,
        947
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2450": {
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2451": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2453": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x99E"
    },
    "2457": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2460": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2463": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "POP",
      "path": "15"
    },
    "2464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x15"
    },
    "2469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2470": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2471": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2472": {
      "offset": [
        805,
        842
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2473": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2474": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2475": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9B4"
    },
    "2479": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2480": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2484": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2485": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "POP",
      "path": "15"
    },
    "2486": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x412"
    },
    "2489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2396"
    },
    "2492": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        805,
        842
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2493": {
      "offset": [
        739,
        767
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2494": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2495": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2496": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C9"
    },
    "2500": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "POP",
      "path": "15"
    },
    "2507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x412"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A3"
    },
    "2513": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        739,
        767
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2514": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2515": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2516": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2517": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2518": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9DE"
    },
    "2521": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2522": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2524": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2525": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2526": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x412"
    },
    "2531": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9ED"
    },
    "2534": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2535": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2537": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33D2"
    },
    "2540": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2541": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2542": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23B0"
    },
    "2545": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2546": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2547": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2548": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2549": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2550": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9FE"
    },
    "2553": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2554": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2556": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2557": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2558": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2559": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "POP",
      "path": "15"
    },
    "2560": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2563": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2464"
    },
    "2566": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2567": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2568": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2569": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2570": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2571": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA13"
    },
    "2574": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2575": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2577": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2578": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2579": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2580": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "POP",
      "path": "15"
    },
    "2581": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2584": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x253A"
    },
    "2587": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8903,
        9054
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2588": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2589": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2590": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2591": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2592": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA28"
    },
    "2595": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2596": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2598": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2599": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2600": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2605": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA37"
    },
    "2608": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2609": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2611": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34D0"
    },
    "2614": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2615": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2616": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2593"
    },
    "2619": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2620": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2621": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2622": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2623": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2624": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA48"
    },
    "2627": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2628": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2630": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2631": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2632": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2633": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "POP",
      "path": "15"
    },
    "2634": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2637": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D6"
    },
    "2640": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9457,
        9567
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2641": {
      "offset": [
        877,
        902
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2642": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2643": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2644": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2645": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA5D"
    },
    "2648": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2649": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2651": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2652": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2653": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "offset": [
        877,
        902
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "2657": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2658": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "2661": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2662": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2665": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2666": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "DIV",
      "path": "15"
    },
    "2667": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2669": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "AND",
      "path": "15"
    },
    "2670": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2671": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        877,
        902
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2672": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2673": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2674": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2675": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2676": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA7C"
    },
    "2679": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2680": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2682": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2683": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2684": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2689": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA8B"
    },
    "2692": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2693": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2695": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3814"
    },
    "2698": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2699": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2700": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25ED"
    },
    "2703": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2704": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2705": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2706": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2707": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2708": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA9C"
    },
    "2711": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2712": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2714": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2715": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2716": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2717": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "POP",
      "path": "15"
    },
    "2718": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2721": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x265B"
    },
    "2724": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2725": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2726": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2727": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2728": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2729": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB1"
    },
    "2732": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2733": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2735": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2736": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2737": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2742": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC0"
    },
    "2745": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2746": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2748": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3814"
    },
    "2751": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2752": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "SUB"
    },
    "2761": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 2
    },
    "2762": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2763": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "2764": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2766": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2767": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2768": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2769": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2771": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2773": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2774": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2775": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2776": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2778": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2779": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2780": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2781": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2782": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2783": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2784": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2785": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2786": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2787": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2788": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2789": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2790": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2791": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2792": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2793": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2795": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2796": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2797": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2798": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2799": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2800": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2801": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2802": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAFA"
    },
    "2805": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2806": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2808": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2809": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2810": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2811": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "POP",
      "path": "15"
    },
    "2812": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "2815": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2755"
    },
    "2818": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6536,
        6764
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0F"
    },
    "2826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49B"
    },
    "2836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1E"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281D"
    },
    "2850": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2851": {
      "offset": [
        1902,
        1939
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB2F"
    },
    "2858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "POP",
      "path": "15"
    },
    "2865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x17"
    },
    "2870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1902,
        1939
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2873": {
      "offset": [
        1587,
        1629
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB45"
    },
    "2880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "POP",
      "path": "15"
    },
    "2887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "2892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1587,
        1629
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2895": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2896": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2897": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2898": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2899": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB5B"
    },
    "2902": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2903": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2905": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2906": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2907": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9642,
        9647
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0xC"
    },
    "2911": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9642,
        9647
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2912": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9642,
        9647
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2914": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9642,
        9647
      ],
      "op": "AND",
      "path": "15"
    },
    "2915": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "2918": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9577,
        9654
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2919": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2920": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "op": "NOT"
    },
    "2931": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 4
    },
    "2932": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "2"
    },
    "2933": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "2"
    },
    "2942": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2943": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB98"
    },
    "2946": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2954": {
      "op": "SHL"
    },
    "2955": {
      "op": "SUB"
    },
    "2956": {
      "op": "NOT"
    },
    "2957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2958": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "2"
    },
    "2959": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "2"
    },
    "2968": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2969": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2970": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB3"
    },
    "2973": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2989": {
      "op": "SHL"
    },
    "2990": {
      "op": "SUB"
    },
    "2991": {
      "op": "NOT"
    },
    "2992": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 5
    },
    "2993": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "12"
    },
    "2994": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "12"
    },
    "2995": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2996": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2997": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "op": "POP"
    },
    "3000": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3001": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3002": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3004": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "3006": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3007": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3008": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC8"
    },
    "3011": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3012": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3830"
    },
    "3015": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3016": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3017": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3018": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3020": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3021": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3023": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3024": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3025": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "3026": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "3027": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3029": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3030": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3032": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3033": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3034": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3035": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3036": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3038": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3039": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3040": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3041": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3042": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3043": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3044": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3045": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3046": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3048": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3049": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3050": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3051": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3052": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF4"
    },
    "3055": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3056": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3830"
    },
    "3059": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3060": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3061": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3062": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3063": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC41"
    },
    "3066": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3067": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3068": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3070": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "2"
    },
    "3071": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC16"
    },
    "3074": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3075": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3078": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3079": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3080": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3081": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "3082": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "3083": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3084": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3085": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3086": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3088": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3089": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3090": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC41"
    },
    "3093": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3094": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3095": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3096": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3097": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3098": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3099": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3101": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3102": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3104": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3106": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3107": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3108": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3109": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3110": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3111": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3112": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3113": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3114": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3116": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3117": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3118": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3120": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3121": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3122": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3123": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "2"
    },
    "3124": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC24"
    },
    "3127": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3128": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3129": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3130": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "2"
    },
    "3131": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3133": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "2"
    },
    "3134": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3135": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3136": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3137": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3138": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3139": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3140": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3141": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3142": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3143": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3144": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3145": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3146": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3147": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3148": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3150": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "3151": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3152": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3153": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3155": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3157": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3158": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3160": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3161": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3162": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3169": {
      "op": "SHL"
    },
    "3170": {
      "op": "SUB"
    },
    "3171": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "3172": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0xCC9"
    },
    "3175": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3176": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3178": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3187": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3190": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3192": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3193": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "2"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3199": {
      "op": "DUP3"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "MSTORE"
    },
    "3202": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3265": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3267": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3268": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3269": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3270": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "2"
    },
    "3271": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3272": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x0"
    },
    "3277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3278": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3279": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3282": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3284": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3285": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3289": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "op": "SUB"
    },
    "3298": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "2"
    },
    "3299": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3300": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3301": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3302": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3304": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF0"
    },
    "3307": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3308": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "3311": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3312": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3313": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3314": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "2"
    },
    "3315": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 10
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "op": "SUB"
    },
    "3324": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3325": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "op": "SUB"
    },
    "3334": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3335": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "2"
    },
    "3336": {
      "branch": 192,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3337": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5E"
    },
    "3340": {
      "branch": 192,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3341": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3343": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3352": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3355": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3357": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3358": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "2"
    },
    "3359": {
      "op": "MSTORE"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3364": {
      "op": "DUP3"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "MSTORE"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3412": {
      "op": "DUP3"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "MSTORE"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "3421": {
      "op": "JUMP"
    },
    "3422": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3423": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "3433": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "2"
    },
    "3434": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "2"
    },
    "3435": {
      "branch": 193,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3436": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7A"
    },
    "3439": {
      "branch": 193,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7A"
    },
    "3444": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3445": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC0"
    },
    "3449": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3450": {
      "branch": 194,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3451": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEC"
    },
    "3454": {
      "branch": 194,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3455": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3457": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3464": {
      "op": "SHL"
    },
    "3465": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3466": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3469": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3471": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3472": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "2"
    },
    "3473": {
      "op": "MSTORE"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3516": {
      "op": "DUP3"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "op": "MSTORE"
    },
    "3519": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3554": {
      "op": "DUP3"
    },
    "3555": {
      "op": "ADD"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "3563": {
      "op": "JUMP"
    },
    "3564": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3565": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xDF6"
    },
    "3568": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3569": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3570": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C4"
    },
    "3573": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3574": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3575": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3576": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3577": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3578": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3579": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3580": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3582": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3589": {
      "op": "SHL"
    },
    "3590": {
      "op": "SUB"
    },
    "3591": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3594": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3595": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3596": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3597": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3598": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3599": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3600": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2B"
    },
    "3603": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3615": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3616": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "3622": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3623": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "3626": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3628": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0xC"
    },
    "3630": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3631": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "3636": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3637": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "DIV",
      "path": "15"
    },
    "3638": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3640": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7779,
        7799
      ],
      "op": "AND",
      "path": "15"
    },
    "3641": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7778,
        7799
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3642": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE85"
    },
    "3645": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3646": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3648": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3655": {
      "op": "SHL"
    },
    "3656": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3657": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3660": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3662": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3663": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "ADD",
      "path": "15"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3707": {
      "op": "DUP3"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3712": {
      "op": "ADD"
    },
    "3713": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "3716": {
      "op": "JUMP"
    },
    "3717": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7770,
        7830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3718": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 15
    },
    "3719": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3720": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "3723": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3724": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "3726": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7854
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3727": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3729": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3730": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "ADD",
      "path": "15"
    },
    "3731": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3732": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329B"
    },
    "3735": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7840,
        7872
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3736": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3737": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7840,
        7872
      ],
      "op": "POP",
      "path": "15"
    },
    "3738": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7685,
        7879
      ],
      "op": "POP",
      "path": "15"
    },
    "3739": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        7685,
        7879
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3740": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3741": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9104,
        9111
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3743": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9158,
        9159
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 16,
      "value": "0x1"
    },
    "3745": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEA9"
    },
    "3748": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3750": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 17
    },
    "3751": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3752": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3753": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9155
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3754": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9159
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB3"
    },
    "3757": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9159
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3758": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9159
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3759": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9159
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38B6"
    },
    "3762": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9130,
        9159
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3763": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9130,
        9159
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3764": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9123,
        9159
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3765": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9123,
        9159
      ],
      "op": "POP",
      "path": "15"
    },
    "3766": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9060,
        9166
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3767": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        9060,
        9166
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3768": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3769": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3778": {
      "op": "SHL"
    },
    "3779": {
      "op": "SUB"
    },
    "3780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3783": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3784": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3785": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3786": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3787": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3788": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3789": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE8"
    },
    "3792": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3796": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "3811": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "3815": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3817": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7084,
        7098
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 18,
      "value": "0x15"
    },
    "3819": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        7084,
        7119
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3820": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        7002,
        7126
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3821": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3822": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0xEF8"
    },
    "3825": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3826": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4931
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3827": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3828": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2932"
    },
    "3831": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3832": {
      "branch": 195,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3833": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF14"
    },
    "3836": {
      "branch": 195,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3837": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3839": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3840": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3846": {
      "op": "SHL"
    },
    "3847": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3848": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3849": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3851": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "2"
    },
    "3852": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "3855": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3856": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38CD"
    },
    "3859": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3860": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3861": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xDF6"
    },
    "3864": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3865": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3866": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3867": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A29"
    },
    "3870": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3871": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5508,
        5726
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3872": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3874": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "op": "SUB"
    },
    "3883": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3886": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3888": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3889": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3890": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3891": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3892": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4F"
    },
    "3895": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3898": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3905": {
      "op": "SHL"
    },
    "3906": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3910": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "3914": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "3918": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3920": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0xC"
    },
    "3922": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3923": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5603,
        5604
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3925": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3927": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3928": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3929": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5600
      ],
      "op": "AND",
      "path": "15"
    },
    "3930": {
      "branch": 155,
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5595,
        5604
      ],
      "op": "LT",
      "path": "15"
    },
    "3931": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA0"
    },
    "3934": {
      "branch": 155,
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3935": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3937": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3944": {
      "op": "SHL"
    },
    "3945": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3946": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3949": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3951": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3952": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "ADD",
      "path": "15"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3958": {
      "op": "DUP3"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "MSTORE"
    },
    "3961": {
      "op": "PUSH23",
      "value": "0x2BB434BA32B634B9BA1034B99031B7B731B63AB232B217"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "3999": {
      "op": "JUMP"
    },
    "4000": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5587,
        5632
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4001": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5646,
        5655
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4003": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4004": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5660,
        5666
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4005": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5660,
        5673
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4006": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5658,
        5659
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4007": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5658,
        5673
      ],
      "op": "LT",
      "path": "15"
    },
    "4008": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4009": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "4012": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4013": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5715,
        5719
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x1"
    },
    "4015": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "4017": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4019": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5708
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4020": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5709,
        5710
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4021": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4022": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4023": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4024": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "LT",
      "path": "15"
    },
    "4025": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC4"
    },
    "4028": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4029": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC4"
    },
    "4032": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x391E"
    },
    "4035": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5702,
        5711
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4036": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4037": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4039": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4040": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4041": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "MUL",
      "path": "15"
    },
    "4042": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4043": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4044": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4045": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "ADD",
      "path": "15"
    },
    "4046": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4047": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "ADD",
      "path": "15"
    },
    "4048": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5702,
        5711
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4055": {
      "op": "SHL"
    },
    "4056": {
      "op": "SUB"
    },
    "4057": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "AND",
      "path": "15"
    },
    "4058": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4059": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4060": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4061": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "ADD",
      "path": "15"
    },
    "4062": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4063": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4064": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4065": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4066": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4068": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "ADD",
      "path": "15"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4071": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5712
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4072": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4073": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4076": {
      "op": "NOT"
    },
    "4077": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "AND",
      "path": "15"
    },
    "4078": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4079": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4080": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4081": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4082": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4083": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4084": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "OR",
      "path": "15"
    },
    "4085": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4086": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5687,
        5719
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4087": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 23
    },
    "4088": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1000"
    },
    "4091": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4092": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3934"
    },
    "4095": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5674,
        5677
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4096": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4097": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4098": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "POP",
      "path": "15"
    },
    "4099": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5674,
        5677
      ],
      "op": "POP",
      "path": "15"
    },
    "4100": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA3"
    },
    "4103": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5642,
        5719
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4104": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4105": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4107": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4119": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4120": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4121": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4122": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4123": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4124": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4125": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1038"
    },
    "4128": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4129": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4141": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4144": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "4147": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4148": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "4151": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4152": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4153": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0xC"
    },
    "4155": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4156": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5815,
        5816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "4158": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4160": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4161": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4162": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5812
      ],
      "op": "AND",
      "path": "15"
    },
    "4163": {
      "branch": 156,
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5807,
        5816
      ],
      "op": "LT",
      "path": "15"
    },
    "4164": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x108F"
    },
    "4167": {
      "branch": 156,
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4168": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4170": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4179": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4182": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4184": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4185": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "ADD",
      "path": "15"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH32",
      "value": "0x46726565206D696E742073616C6520697320636F6E636C756465642E00000000"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4229": {
      "op": "DUP3"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "4238": {
      "op": "JUMP"
    },
    "4239": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5799,
        5849
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "op": "SUB"
    },
    "4248": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 25
    },
    "4249": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "AND",
      "path": "15"
    },
    "4250": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5886,
        5887
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4252": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4253": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4254": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4255": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "4257": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4259": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4260": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4262": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4263": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4264": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4265": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4267": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5867,
        5883
      ],
      "op": "AND",
      "path": "15"
    },
    "4268": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F7"
    },
    "4271": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4272": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4274": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4283": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4286": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4288": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4289": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "ADD",
      "path": "15"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4295": {
      "op": "DUP3"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH32",
      "value": "0x55736572206E6F7420617761726465642066726565206D696E742E0000000000"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4338": {
      "op": "ADD"
    },
    "4339": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "4342": {
      "op": "JUMP"
    },
    "4343": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5859,
        5919
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4350": {
      "op": "SHL"
    },
    "4351": {
      "op": "SUB"
    },
    "4352": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "AND",
      "path": "15",
      "statement": 26
    },
    "4353": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5948,
        5949
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4355": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4356": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4357": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4358": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5938
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "4360": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4362": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4363": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4365": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4366": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5945
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4367": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5949
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4368": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5949
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4371": {
      "op": "NOT"
    },
    "4372": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5949
      ],
      "op": "AND",
      "path": "15"
    },
    "4373": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5949
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4374": {
      "fn": "CryptidToken.removeFreetUser",
      "offset": [
        5929,
        5949
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4375": {
      "fn": "CryptidToken.removeFreetUser",
      "jump": "o",
      "offset": [
        5732,
        5956
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4376": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4377": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4386": {
      "op": "SHL"
    },
    "4387": {
      "op": "SUB"
    },
    "4388": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4391": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4392": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4393": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4394": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4395": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4396": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4397": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1148"
    },
    "4400": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4401": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4410": {
      "op": "SHL"
    },
    "4411": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "4419": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4420": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "4423": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4424": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "op": "SUB"
    },
    "4433": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 27
    },
    "4434": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "AND",
      "path": "15"
    },
    "4435": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4437": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4438": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4439": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4440": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "4442": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4444": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4445": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4447": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4448": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4449": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4450": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4452": {
      "branch": 157,
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6041,
        6062
      ],
      "op": "AND",
      "path": "15"
    },
    "4453": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11B0"
    },
    "4456": {
      "branch": 157,
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4457": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4459": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4466": {
      "op": "SHL"
    },
    "4467": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4468": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4471": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4473": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4474": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "ADD",
      "path": "15"
    },
    "4475": {
      "op": "MSTORE"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4480": {
      "op": "DUP3"
    },
    "4481": {
      "op": "ADD"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "PUSH32",
      "value": "0x55736572206E6F74206F6E2077686974656C697374206C6973742E0000000000"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4518": {
      "op": "DUP3"
    },
    "4519": {
      "op": "ADD"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "4527": {
      "op": "JUMP"
    },
    "4528": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6033,
        6094
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4535": {
      "op": "SHL"
    },
    "4536": {
      "op": "SUB"
    },
    "4537": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "AND",
      "path": "15",
      "statement": 28
    },
    "4538": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6128,
        6133
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4540": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4541": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4542": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4543": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6118
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "4545": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4547": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4548": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4550": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4551": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6125
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4552": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6133
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4553": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6133
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4556": {
      "op": "NOT"
    },
    "4557": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6133
      ],
      "op": "AND",
      "path": "15"
    },
    "4558": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6133
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4559": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        6104,
        6133
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4560": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "o",
      "offset": [
        5962,
        6140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4561": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4562": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4564": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4571": {
      "op": "SHL"
    },
    "4572": {
      "op": "SUB"
    },
    "4573": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4576": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4577": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4578": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4579": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4580": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4581": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4582": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1201"
    },
    "4585": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "4604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "4608": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8390,
        8391
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 29,
      "value": "0x0"
    },
    "4612": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8366,
        8387
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4613": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8366,
        8391
      ],
      "op": "GT",
      "path": "15"
    },
    "4614": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124A"
    },
    "4617": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4618": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4620": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4627": {
      "op": "SHL"
    },
    "4628": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4629": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4632": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4634": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4635": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "ADD",
      "path": "15"
    },
    "4636": {
      "op": "MSTORE"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4641": {
      "op": "DUP3"
    },
    "4642": {
      "op": "ADD"
    },
    "4643": {
      "op": "MSTORE"
    },
    "4644": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "4681": {
      "op": "JUMP"
    },
    "4682": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8418
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4683": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "4685": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4686": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8429,
        8436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4688": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8429,
        8436
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4689": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "4695": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4696": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "DIV",
      "path": "15"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4703": {
      "op": "SHL"
    },
    "4704": {
      "op": "SUB"
    },
    "4705": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8463
      ],
      "op": "AND",
      "path": "15"
    },
    "4706": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8515
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1277"
    },
    "4709": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8511,
        8514
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4711": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8506
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1271"
    },
    "4714": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8498
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4715": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8503,
        8505
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x32"
    },
    "4717": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD4"
    },
    "4720": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8477,
        8506
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4721": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8506
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4722": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8510
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4723": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BE7"
    },
    "4726": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8477,
        8515
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4727": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8477,
        8515
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4728": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4730": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4731": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4733": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4734": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4735": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4736": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4737": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4738": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "GAS",
      "path": "15"
    },
    "4739": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "CALL",
      "path": "15"
    },
    "4740": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4741": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4742": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4743": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4744": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4745": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4746": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4748": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4749": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "EQ",
      "path": "15"
    },
    "4750": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B3"
    },
    "4753": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4754": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4756": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4757": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4758": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4759": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4761": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "NOT",
      "path": "15"
    },
    "4762": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4764": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4765": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "ADD",
      "path": "15"
    },
    "4766": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "AND",
      "path": "15"
    },
    "4767": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4768": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "ADD",
      "path": "15"
    },
    "4769": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4771": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4772": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4773": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4774": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4775": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4776": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4778": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4780": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4781": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "ADD",
      "path": "15"
    },
    "4782": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4783": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B8"
    },
    "4786": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4787": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4788": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4790": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4791": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4792": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4793": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8442,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4794": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8428,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4795": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8428,
        8520
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4796": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8428,
        8520
      ],
      "op": "POP",
      "path": "15"
    },
    "4797": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8538,
        8540
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 30
    },
    "4798": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12FE"
    },
    "4801": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4802": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4804": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4811": {
      "op": "SHL"
    },
    "4812": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4813": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4816": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4818": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4819": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "ADD",
      "path": "15"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "ADD"
    },
    "4827": {
      "op": "MSTORE"
    },
    "4828": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C4819985A5B1959"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4852": {
      "op": "DUP3"
    },
    "4853": {
      "op": "ADD"
    },
    "4854": {
      "op": "MSTORE"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4857": {
      "op": "ADD"
    },
    "4858": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "4861": {
      "op": "JUMP"
    },
    "4862": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4863": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8595,
        8608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "4865": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8595,
        8608
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4866": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4868": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4869": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8574,
        8581
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4871": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8574,
        8581
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4878": {
      "op": "SHL"
    },
    "4879": {
      "op": "SUB"
    },
    "4880": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8595,
        8608
      ],
      "op": "AND",
      "path": "15"
    },
    "4881": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8595,
        8608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4882": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8622,
        8643
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4883": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8622,
        8643
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4884": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8574,
        8581
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4885": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4886": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8574,
        8581
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4887": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4888": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8622,
        8643
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4889": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8595,
        8608
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4890": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "GAS",
      "path": "15"
    },
    "4891": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "CALL",
      "path": "15"
    },
    "4892": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4893": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4894": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4895": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4896": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4897": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4898": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4900": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4901": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "EQ",
      "path": "15"
    },
    "4902": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x134B"
    },
    "4905": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4906": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4908": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4909": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4910": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4911": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4913": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "NOT",
      "path": "15"
    },
    "4914": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4916": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4917": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "ADD",
      "path": "15"
    },
    "4918": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "AND",
      "path": "15"
    },
    "4919": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4920": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "ADD",
      "path": "15"
    },
    "4921": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4923": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4924": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4925": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4926": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4927": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4928": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4930": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4932": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4933": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "ADD",
      "path": "15"
    },
    "4934": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4935": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1350"
    },
    "4938": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4939": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4940": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4942": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4943": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4944": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4945": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8587,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4946": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8573,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4947": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8573,
        8648
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4948": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8573,
        8648
      ],
      "op": "POP",
      "path": "15"
    },
    "4949": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8666,
        8668
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 31
    },
    "4950": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "4953": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4954": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4956": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4957": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4965": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4970": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4971": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "ADD",
      "path": "15"
    },
    "4972": {
      "op": "MSTORE"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4977": {
      "op": "DUP3"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "MSTORE"
    },
    "4980": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C8819985A5B1959"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "ADD"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5009": {
      "op": "ADD"
    },
    "5010": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8658,
        8691
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "5013": {
      "op": "JUMP"
    },
    "5014": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5015": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5024": {
      "op": "SHL"
    },
    "5025": {
      "op": "SUB"
    },
    "5026": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5029": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5031": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5032": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5033": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5034": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5035": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C6"
    },
    "5038": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5048": {
      "op": "SHL"
    },
    "5049": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "5057": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "5061": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5063": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4558,
        4568
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 32,
      "value": "0x13CE"
    },
    "5066": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4558,
        4566
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BF3"
    },
    "5069": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4558,
        4568
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5070": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4558,
        4568
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5071": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4512,
        4575
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5072": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0xDF6"
    },
    "5076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5079": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5082": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5085": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "2"
    },
    "5086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5088": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5089": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5090": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5093": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5094": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "2"
    },
    "5095": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235E"
    },
    "5098": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5099": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5100": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 34,
      "value": "0x13F4"
    },
    "5103": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5104": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        664,
        676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEF2"
    },
    "5107": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5108": {
      "branch": 205,
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5109": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1459"
    },
    "5112": {
      "branch": 205,
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5113": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5115": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5122": {
      "op": "SHL"
    },
    "5123": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5124": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5127": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5129": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5130": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "ADD",
      "path": "5"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "ADD"
    },
    "5138": {
      "op": "MSTORE"
    },
    "5139": {
      "op": "PUSH32",
      "value": "0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5174": {
      "op": "DUP3"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "PUSH16",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD9959"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5196": {
      "op": "SHL"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5199": {
      "op": "DUP3"
    },
    "5200": {
      "op": "ADD"
    },
    "5201": {
      "op": "MSTORE"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5204": {
      "op": "ADD"
    },
    "5205": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC0"
    },
    "5208": {
      "op": "JUMP"
    },
    "5209": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5210": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 35,
      "value": "0x1462"
    },
    "5213": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        755,
        762
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5214": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C86"
    },
    "5217": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        749,
        763
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5218": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5219": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "POP",
      "path": "5"
    },
    "5220": {
      "fn": "ERC721Burnable.burn",
      "jump": "o",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5221": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6146,
        6304
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5222": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5224": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5231": {
      "op": "SHL"
    },
    "5232": {
      "op": "SUB"
    },
    "5233": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5236": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5237": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5238": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5239": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5240": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5241": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5242": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1495"
    },
    "5245": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5255": {
      "op": "SHL"
    },
    "5256": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5260": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5261": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "5264": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "5268": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5270": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 36,
      "value": "0xC"
    },
    "5272": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5273": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "5277": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5278": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "DIV",
      "path": "15"
    },
    "5279": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5281": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6229,
        6243
      ],
      "op": "AND",
      "path": "15"
    },
    "5282": {
      "branch": 161,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6228,
        6243
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5283": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14E3"
    },
    "5286": {
      "branch": 161,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5287": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5289": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5298": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5301": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5303": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5304": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "ADD",
      "path": "15"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5334": {
      "op": "SHL"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5337": {
      "op": "DUP3"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5342": {
      "op": "ADD"
    },
    "5343": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "5346": {
      "op": "JUMP"
    },
    "5347": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6220,
        6266
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5348": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 37
    },
    "5349": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5350": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "5353": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5354": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6283
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "5356": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6283
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5357": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5359": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5360": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "5361": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5362": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6276,
        6297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329B"
    },
    "5365": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6276,
        6297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5366": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5367": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5369": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5376": {
      "op": "SHL"
    },
    "5377": {
      "op": "SUB"
    },
    "5378": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5381": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5382": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5383": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5384": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5385": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5386": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5387": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1526"
    },
    "5390": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5393": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5400": {
      "op": "SHL"
    },
    "5401": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5402": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "5409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "5413": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5415": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7653
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 38,
      "value": "0xC"
    },
    "5417": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5418": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5419": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5421": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5422": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5423": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "AND",
      "path": "15"
    },
    "5424": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5427": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "MUL",
      "path": "15"
    },
    "5428": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5431": {
      "op": "NOT"
    },
    "5432": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5433": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5434": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "AND",
      "path": "15"
    },
    "5435": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5436": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5437": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5438": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "OR",
      "path": "15"
    },
    "5439": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5440": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7641,
        7672
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5441": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        7565,
        7679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5442": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5443": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5445": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5446": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5447": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5448": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5450": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5452": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5453": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5455": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5456": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5457": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5464": {
      "op": "SHL"
    },
    "5465": {
      "op": "SUB"
    },
    "5466": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "2"
    },
    "5467": {
      "branch": 196,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "5468": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB3"
    },
    "5471": {
      "branch": 196,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5472": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5474": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5483": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5486": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5488": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5489": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "2"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "ADD"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5533": {
      "op": "DUP3"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "MSTORE"
    },
    "5536": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5548": {
      "op": "SHL"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5551": {
      "op": "DUP3"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5556": {
      "op": "ADD"
    },
    "5557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "5560": {
      "op": "JUMP"
    },
    "5561": {
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5562": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "5564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5565": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5566": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C6"
    },
    "5569": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "5573": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        773,
        799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5579": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DIV",
      "path": "15"
    },
    "5584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MUL",
      "path": "15"
    },
    "5585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15F2"
    },
    "5613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "5617": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        773,
        799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x163F"
    },
    "5624": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5628": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "LT",
      "path": "15"
    },
    "5629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1614"
    },
    "5632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5633": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5636": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5637": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DIV",
      "path": "15"
    },
    "5640": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MUL",
      "path": "15"
    },
    "5641": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5643": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5644": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5646": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5647": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5648": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x163F"
    },
    "5651": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5652": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5653": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5654": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5655": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5656": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5657": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5659": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5660": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5662": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5664": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5665": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5666": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5667": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5668": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5669": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5670": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5671": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5672": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5674": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5675": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5676": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5678": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5679": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5680": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5681": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "GT",
      "path": "15"
    },
    "5682": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1622"
    },
    "5685": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5686": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5687": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5688": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SUB",
      "path": "15"
    },
    "5689": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5691": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "AND",
      "path": "15"
    },
    "5692": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5693": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "ADD",
      "path": "15"
    },
    "5694": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5695": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5696": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "5697": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "5698": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "5699": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "5700": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "POP",
      "path": "15"
    },
    "5701": {
      "fn": "ERC721.ownerOf",
      "offset": [
        773,
        799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5702": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        773,
        799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5703": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8733,
        8897
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5704": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8781,
        8788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5706": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8823,
        8824
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 40
    },
    "5707": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8807,
        8820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1652"
    },
    "5710": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8807,
        8818
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "5713": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8807,
        8820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5714": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8807,
        8820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5715": {
      "branch": 162,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8807,
        8824
      ],
      "op": "GT",
      "path": "15"
    },
    "5716": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1698"
    },
    "5719": {
      "branch": 162,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5720": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5722": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5731": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5734": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5736": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5737": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "ADD",
      "path": "15"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "op": "MSTORE"
    },
    "5746": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5771": {
      "op": "SHL"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5779": {
      "op": "ADD"
    },
    "5780": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "5783": {
      "op": "JUMP"
    },
    "5784": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8799,
        8851
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5785": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8868,
        8890
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 41,
      "value": "0xEB3"
    },
    "5788": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8876,
        8889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x708"
    },
    "5791": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8876,
        8887
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "5794": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8876,
        8889
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5795": {
      "fn": "CryptidToken.mint",
      "offset": [
        2530,
        4419
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5796": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "5798": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5799": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5801": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "5802": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5803": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C6"
    },
    "5806": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5807": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5809": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5816": {
      "op": "SHL"
    },
    "5817": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5818": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5819": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5821": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "5822": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC0"
    },
    "5825": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5826": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x394F"
    },
    "5829": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5830": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5831": {
      "fn": "CryptidToken.mint",
      "offset": [
        2610,
        2615
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0xC"
    },
    "5833": {
      "fn": "CryptidToken.mint",
      "offset": [
        2610,
        2615
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5834": {
      "fn": "CryptidToken.mint",
      "offset": [
        2610,
        2615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5836": {
      "fn": "CryptidToken.mint",
      "offset": [
        2610,
        2615
      ],
      "op": "AND",
      "path": "15"
    },
    "5837": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1733"
    },
    "5840": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5841": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5843": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5850": {
      "op": "SHL"
    },
    "5851": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5852": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5855": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5857": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5858": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "ADD",
      "path": "15"
    },
    "5859": {
      "op": "MSTORE"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5864": {
      "op": "DUP3"
    },
    "5865": {
      "op": "ADD"
    },
    "5866": {
      "op": "MSTORE"
    },
    "5867": {
      "op": "PUSH32",
      "value": "0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "MSTORE"
    },
    "5905": {
      "op": "PUSH18",
      "value": "0x37B71039BA30B3B29018101434B734BA1497"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5926": {
      "op": "SHL"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5929": {
      "op": "DUP3"
    },
    "5930": {
      "op": "ADD"
    },
    "5931": {
      "op": "MSTORE"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5934": {
      "op": "ADD"
    },
    "5935": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "5938": {
      "op": "JUMP"
    },
    "5939": {
      "fn": "CryptidToken.mint",
      "offset": [
        2602,
        2674
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5940": {
      "fn": "CryptidToken.mint",
      "offset": [
        2706,
        2707
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 43,
      "value": "0x0"
    },
    "5942": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2703
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5943": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5945": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2707
      ],
      "op": "AND",
      "path": "15"
    },
    "5946": {
      "branch": 163,
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2707
      ],
      "op": "GT",
      "path": "15"
    },
    "5947": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1792"
    },
    "5950": {
      "branch": 163,
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5951": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5953": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5962": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5965": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5967": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5968": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "ADD",
      "path": "15"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5974": {
      "op": "DUP3"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "MSTORE"
    },
    "5977": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "MSTORE"
    },
    "6015": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6024": {
      "op": "DUP3"
    },
    "6025": {
      "op": "ADD"
    },
    "6026": {
      "op": "MSTORE"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6029": {
      "op": "ADD"
    },
    "6030": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6033": {
      "op": "JUMP"
    },
    "6034": {
      "fn": "CryptidToken.mint",
      "offset": [
        2684,
        2747
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6035": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0xC"
    },
    "6037": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6038": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6040": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6043": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6044": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6045": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "DIV",
      "path": "15"
    },
    "6046": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6047": {
      "fn": "CryptidToken.mint",
      "offset": [
        2780,
        2792
      ],
      "op": "AND",
      "path": "15"
    },
    "6048": {
      "fn": "CryptidToken.mint",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6049": {
      "fn": "CryptidToken.mint",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6050": {
      "fn": "CryptidToken.mint",
      "offset": [
        2765,
        2792
      ],
      "op": "AND",
      "path": "15"
    },
    "6051": {
      "fn": "CryptidToken.mint",
      "offset": [
        2765,
        2792
      ],
      "op": "GT",
      "path": "15"
    },
    "6052": {
      "branch": 164,
      "fn": "CryptidToken.mint",
      "offset": [
        2765,
        2792
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6053": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1804"
    },
    "6056": {
      "branch": 164,
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6057": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6059": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6066": {
      "op": "SHL"
    },
    "6067": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6068": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6071": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6073": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6074": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "ADD",
      "path": "15"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6080": {
      "op": "DUP3"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "MSTORE"
    },
    "6083": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6118": {
      "op": "DUP3"
    },
    "6119": {
      "op": "ADD"
    },
    "6120": {
      "op": "MSTORE"
    },
    "6121": {
      "op": "PUSH11",
      "value": "0x3930B739B0B1BA34B7B717"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6135": {
      "op": "SHL"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6138": {
      "op": "DUP3"
    },
    "6139": {
      "op": "ADD"
    },
    "6140": {
      "op": "MSTORE"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6143": {
      "op": "ADD"
    },
    "6144": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6147": {
      "op": "JUMP"
    },
    "6148": {
      "fn": "CryptidToken.mint",
      "offset": [
        2757,
        2840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6149": {
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "6151": {
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2859
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6152": {
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6154": {
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2859
      ],
      "op": "AND",
      "path": "15"
    },
    "6155": {
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6157": {
      "branch": 165,
      "fn": "CryptidToken.mint",
      "offset": [
        2854,
        2864
      ],
      "op": "EQ",
      "path": "15"
    },
    "6158": {
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6159": {
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1940"
    },
    "6162": {
      "branch": 165,
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6163": {
      "fn": "CryptidToken.mint",
      "offset": [
        2919,
        2929
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 45
    },
    "6164": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        2934
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6166": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6167": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6168": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6169": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "6171": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6173": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6174": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6176": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6177": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6178": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6179": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6181": {
      "fn": "CryptidToken.mint",
      "offset": [
        2909,
        2930
      ],
      "op": "AND",
      "path": "15"
    },
    "6182": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1871"
    },
    "6185": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6186": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6188": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6195": {
      "op": "SHL"
    },
    "6196": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6197": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6200": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6202": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6203": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "ADD",
      "path": "15"
    },
    "6204": {
      "op": "MSTORE"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6209": {
      "op": "DUP3"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "MSTORE"
    },
    "6212": {
      "op": "PUSH32",
      "value": "0x4D696E746572206E6F7420617761726465642066726565206D696E74732E0000"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6247": {
      "op": "DUP3"
    },
    "6248": {
      "op": "ADD"
    },
    "6249": {
      "op": "MSTORE"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6252": {
      "op": "ADD"
    },
    "6253": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6256": {
      "op": "JUMP"
    },
    "6257": {
      "fn": "CryptidToken.mint",
      "offset": [
        2901,
        2969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6258": {
      "fn": "CryptidToken.mint",
      "offset": [
        3044,
        3054
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 46
    },
    "6259": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6261": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6262": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6263": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6264": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "6266": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6268": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6269": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6270": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6271": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6273": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6274": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6275": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6276": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6277": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3018
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "6279": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6280": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6281": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6282": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6283": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6284": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6285": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6286": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6288": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6289": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6290": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "AND",
      "path": "15"
    },
    "6291": {
      "fn": "CryptidToken.mint",
      "offset": [
        3034,
        3055
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6292": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x189E"
    },
    "6295": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6296": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3030
      ],
      "op": "AND",
      "path": "15"
    },
    "6297": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3002
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6298": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3979"
    },
    "6301": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2991,
        3030
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6302": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3030
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6303": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6305": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3055
      ],
      "op": "AND",
      "path": "15"
    },
    "6306": {
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3055
      ],
      "op": "GT",
      "path": "15"
    },
    "6307": {
      "branch": 166,
      "fn": "CryptidToken.mint",
      "offset": [
        2991,
        3055
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6308": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1901"
    },
    "6311": {
      "branch": 166,
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6312": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6314": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6323": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6328": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6329": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "ADD",
      "path": "15"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6335": {
      "op": "DUP3"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20657863656564732072656D61696E696E67206672"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "op": "MSTORE"
    },
    "6376": {
      "op": "PUSH9",
      "value": "0x32B29036B4B73A3997"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6388": {
      "op": "SHL"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6391": {
      "op": "DUP3"
    },
    "6392": {
      "op": "ADD"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6400": {
      "op": "JUMP"
    },
    "6401": {
      "fn": "CryptidToken.mint",
      "offset": [
        2983,
        3101
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6402": {
      "fn": "CryptidToken.mint",
      "offset": [
        3129,
        3139
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 47
    },
    "6403": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6405": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6406": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6407": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6408": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3128
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "6410": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6412": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6413": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6415": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6416": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6417": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6418": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6419": {
      "fn": "CryptidToken.mint",
      "offset": [
        3144,
        3155
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6420": {
      "fn": "CryptidToken.mint",
      "offset": [
        3144,
        3155
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6421": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6422": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1923"
    },
    "6425": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6426": {
      "fn": "CryptidToken.mint",
      "offset": [
        3144,
        3155
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6427": {
      "fn": "CryptidToken.mint",
      "offset": [
        3144,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6428": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6430": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "AND",
      "path": "15"
    },
    "6431": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3979"
    },
    "6434": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3115,
        3155
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6435": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6436": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6437": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "POP",
      "path": "15"
    },
    "6438": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6441": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "EXP",
      "path": "15"
    },
    "6442": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6443": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6444": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6445": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6447": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "MUL",
      "path": "15"
    },
    "6448": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "NOT",
      "path": "15"
    },
    "6449": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "AND",
      "path": "15"
    },
    "6450": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6451": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6452": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6454": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "AND",
      "path": "15"
    },
    "6455": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "MUL",
      "path": "15"
    },
    "6456": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "OR",
      "path": "15"
    },
    "6457": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6458": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6459": {
      "fn": "CryptidToken.mint",
      "offset": [
        3115,
        3155
      ],
      "op": "POP",
      "path": "15"
    },
    "6460": {
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D02"
    },
    "6463": {
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6464": {
      "fn": "CryptidToken.mint",
      "offset": [
        2850,
        4247
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6465": {
      "fn": "CryptidToken.mint",
      "offset": [
        3174,
        3179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "6467": {
      "fn": "CryptidToken.mint",
      "offset": [
        3174,
        3179
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6468": {
      "fn": "CryptidToken.mint",
      "offset": [
        3174,
        3179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6470": {
      "fn": "CryptidToken.mint",
      "offset": [
        3174,
        3179
      ],
      "op": "AND",
      "path": "15"
    },
    "6471": {
      "fn": "CryptidToken.mint",
      "offset": [
        3183,
        3184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "6473": {
      "branch": 167,
      "fn": "CryptidToken.mint",
      "offset": [
        3174,
        3184
      ],
      "op": "EQ",
      "path": "15"
    },
    "6474": {
      "fn": "CryptidToken.mint",
      "offset": [
        3170,
        4247
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6475": {
      "fn": "CryptidToken.mint",
      "offset": [
        3170,
        4247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B2A"
    },
    "6478": {
      "branch": 167,
      "fn": "CryptidToken.mint",
      "offset": [
        3170,
        4247
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6479": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3269
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x12"
    },
    "6481": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3269
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6482": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x195E"
    },
    "6485": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6486": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6488": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6489": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "AND",
      "path": "15"
    },
    "6490": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3273
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD4"
    },
    "6493": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3255,
        3286
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6494": {
      "fn": "CryptidToken.mint",
      "offset": [
        3255,
        3286
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6495": {
      "fn": "CryptidToken.mint",
      "offset": [
        3242,
        3251
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6496": {
      "fn": "CryptidToken.mint",
      "offset": [
        3242,
        3286
      ],
      "op": "LT",
      "path": "15"
    },
    "6497": {
      "branch": 168,
      "fn": "CryptidToken.mint",
      "offset": [
        3242,
        3286
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6498": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19A6"
    },
    "6501": {
      "branch": 168,
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6502": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6504": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6513": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6516": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6518": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6519": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "ADD",
      "path": "15"
    },
    "6520": {
      "op": "MSTORE"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6525": {
      "op": "DUP3"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "op": "PUSH22",
      "value": "0x2737BA1032B737BAB3B41032BA3432B91039B2B73A17"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6556": {
      "op": "DUP3"
    },
    "6557": {
      "op": "ADD"
    },
    "6558": {
      "op": "MSTORE"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6565": {
      "op": "JUMP"
    },
    "6566": {
      "fn": "CryptidToken.mint",
      "offset": [
        3234,
        3313
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6567": {
      "fn": "CryptidToken.mint",
      "offset": [
        3350,
        3360
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 49
    },
    "6568": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6570": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6571": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6572": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6573": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "6575": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6577": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6578": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6580": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6581": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6582": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6583": {
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6585": {
      "branch": 169,
      "fn": "CryptidToken.mint",
      "offset": [
        3335,
        3361
      ],
      "op": "AND",
      "path": "15"
    },
    "6586": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A05"
    },
    "6589": {
      "branch": 169,
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6590": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6592": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6601": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6604": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6606": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6607": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "ADD",
      "path": "15"
    },
    "6608": {
      "op": "MSTORE"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6613": {
      "op": "DUP3"
    },
    "6614": {
      "op": "ADD"
    },
    "6615": {
      "op": "MSTORE"
    },
    "6616": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F74206F6E2077686974656C6973742E00000000000000"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6651": {
      "op": "DUP3"
    },
    "6652": {
      "op": "ADD"
    },
    "6653": {
      "op": "MSTORE"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6660": {
      "op": "JUMP"
    },
    "6661": {
      "fn": "CryptidToken.mint",
      "offset": [
        3327,
        3391
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6662": {
      "fn": "CryptidToken.mint",
      "offset": [
        3444,
        3459
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0x11"
    },
    "6664": {
      "fn": "CryptidToken.mint",
      "offset": [
        3444,
        3459
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6665": {
      "fn": "CryptidToken.mint",
      "offset": [
        3429,
        3440
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6666": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6668": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "AND",
      "path": "15"
    },
    "6669": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A14"
    },
    "6672": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "6675": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3413,
        3426
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6676": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3426
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6677": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A1E"
    },
    "6680": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6681": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6682": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399E"
    },
    "6685": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3413,
        3440
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6686": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3440
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6687": {
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3459
      ],
      "op": "GT",
      "path": "15"
    },
    "6688": {
      "branch": 170,
      "fn": "CryptidToken.mint",
      "offset": [
        3413,
        3459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6689": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A7A"
    },
    "6692": {
      "branch": 170,
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6693": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6695": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6702": {
      "op": "SHL"
    },
    "6703": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6704": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6707": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6709": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6710": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "ADD",
      "path": "15"
    },
    "6711": {
      "op": "MSTORE"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6716": {
      "op": "DUP3"
    },
    "6717": {
      "op": "ADD"
    },
    "6718": {
      "op": "MSTORE"
    },
    "6719": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20657863656564732077686974656C697374207375"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6754": {
      "op": "DUP3"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "op": "MSTORE"
    },
    "6757": {
      "op": "PUSH5",
      "value": "0x3838363C97"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "6765": {
      "op": "SHL"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6768": {
      "op": "DUP3"
    },
    "6769": {
      "op": "ADD"
    },
    "6770": {
      "op": "MSTORE"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6773": {
      "op": "ADD"
    },
    "6774": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6777": {
      "op": "JUMP"
    },
    "6778": {
      "fn": "CryptidToken.mint",
      "offset": [
        3405,
        3501
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6779": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 51,
      "value": "0x13"
    },
    "6781": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6782": {
      "fn": "CryptidToken.mint",
      "offset": [
        3556,
        3566
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6783": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6785": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6786": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6787": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6788": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3555
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "6790": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6792": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6793": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6795": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6796": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6797": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6798": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6800": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6801": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6802": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "AND",
      "path": "15"
    },
    "6803": {
      "fn": "CryptidToken.mint",
      "offset": [
        3571,
        3587
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6804": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9E"
    },
    "6807": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3567
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6808": {
      "fn": "CryptidToken.mint",
      "offset": [
        3537,
        3567
      ],
      "op": "AND",
      "path": "15"
    },
    "6809": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3534
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6810": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3979"
    },
    "6813": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3523,
        3567
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6814": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6815": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3587
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6817": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3587
      ],
      "op": "AND",
      "path": "15"
    },
    "6818": {
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3587
      ],
      "op": "GT",
      "path": "15"
    },
    "6819": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        3523,
        3587
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6820": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B08"
    },
    "6823": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6824": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6826": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6833": {
      "op": "SHL"
    },
    "6834": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6835": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6838": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6840": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6841": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "ADD",
      "path": "15"
    },
    "6842": {
      "op": "MSTORE"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6847": {
      "op": "DUP3"
    },
    "6848": {
      "op": "ADD"
    },
    "6849": {
      "op": "MSTORE"
    },
    "6850": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E2065786365656473206D617820616C6C6F77656420"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6885": {
      "op": "DUP3"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "MSTORE"
    },
    "6888": {
      "op": "PUSH16",
      "value": "0x3BB434BA32B634B9BA1036B4B73A3997"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "6907": {
      "op": "SHL"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6910": {
      "op": "DUP3"
    },
    "6911": {
      "op": "ADD"
    },
    "6912": {
      "op": "MSTORE"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6915": {
      "op": "ADD"
    },
    "6916": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "6919": {
      "op": "JUMP"
    },
    "6920": {
      "fn": "CryptidToken.mint",
      "offset": [
        3515,
        3640
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6921": {
      "fn": "CryptidToken.mint",
      "offset": [
        3679,
        3689
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 52
    },
    "6922": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6924": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6925": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6926": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6927": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3678
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "6929": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6931": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6932": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6934": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6935": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6936": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6937": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6938": {
      "fn": "CryptidToken.mint",
      "offset": [
        3694,
        3705
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6939": {
      "fn": "CryptidToken.mint",
      "offset": [
        3694,
        3705
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6940": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3690
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6941": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1923"
    },
    "6944": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6945": {
      "fn": "CryptidToken.mint",
      "offset": [
        3694,
        3705
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6946": {
      "fn": "CryptidToken.mint",
      "offset": [
        3694,
        3705
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6947": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6949": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "AND",
      "path": "15"
    },
    "6950": {
      "fn": "CryptidToken.mint",
      "offset": [
        3660,
        3705
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3979"
    },
    "6953": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3660,
        3705
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6954": {
      "fn": "CryptidToken.mint",
      "offset": [
        3170,
        4247
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6955": {
      "fn": "CryptidToken.mint",
      "offset": [
        3724,
        3729
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "6957": {
      "fn": "CryptidToken.mint",
      "offset": [
        3724,
        3729
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6958": {
      "fn": "CryptidToken.mint",
      "offset": [
        3724,
        3729
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6960": {
      "fn": "CryptidToken.mint",
      "offset": [
        3724,
        3729
      ],
      "op": "AND",
      "path": "15"
    },
    "6961": {
      "fn": "CryptidToken.mint",
      "offset": [
        3733,
        3734
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "6963": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        3724,
        3734
      ],
      "op": "EQ",
      "path": "15"
    },
    "6964": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6965": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C36"
    },
    "6968": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6969": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6971": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6978": {
      "op": "SHL"
    },
    "6979": {
      "op": "SUB"
    },
    "6980": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6983": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6984": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6985": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6986": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6987": {
      "fn": "CryptidToken.mint",
      "offset": [
        3790,
        3800
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 53
    },
    "6988": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        3779,
        3800
      ],
      "op": "EQ",
      "path": "15"
    },
    "6989": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BA2"
    },
    "6992": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6993": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6995": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7002": {
      "op": "SHL"
    },
    "7003": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7004": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7007": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7009": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7010": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "ADD",
      "path": "15"
    },
    "7011": {
      "op": "MSTORE"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7016": {
      "op": "DUP3"
    },
    "7017": {
      "op": "ADD"
    },
    "7018": {
      "op": "MSTORE"
    },
    "7019": {
      "op": "PUSH32",
      "value": "0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7054": {
      "op": "DUP3"
    },
    "7055": {
      "op": "ADD"
    },
    "7056": {
      "op": "MSTORE"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7064": {
      "op": "DUP3"
    },
    "7065": {
      "op": "ADD"
    },
    "7066": {
      "op": "MSTORE"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7069": {
      "op": "ADD"
    },
    "7070": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "7073": {
      "op": "JUMP"
    },
    "7074": {
      "fn": "CryptidToken.mint",
      "offset": [
        3771,
        3838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7075": {
      "fn": "CryptidToken.mint",
      "offset": [
        3891,
        3905
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 54,
      "value": "0x15"
    },
    "7077": {
      "fn": "CryptidToken.mint",
      "offset": [
        3891,
        3905
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7078": {
      "fn": "CryptidToken.mint",
      "offset": [
        3874,
        3887
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x16"
    },
    "7080": {
      "fn": "CryptidToken.mint",
      "offset": [
        3874,
        3887
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7081": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BB5"
    },
    "7084": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7085": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7087": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7088": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "AND",
      "path": "15"
    },
    "7089": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399E"
    },
    "7092": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3860,
        3887
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7093": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3887
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7094": {
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3905
      ],
      "op": "GT",
      "path": "15"
    },
    "7095": {
      "branch": 174,
      "fn": "CryptidToken.mint",
      "offset": [
        3860,
        3905
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7096": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C16"
    },
    "7099": {
      "branch": 174,
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7100": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7102": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7109": {
      "op": "SHL"
    },
    "7110": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7111": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7114": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7116": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7117": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "ADD",
      "path": "15"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7123": {
      "op": "DUP3"
    },
    "7124": {
      "op": "ADD"
    },
    "7125": {
      "op": "MSTORE"
    },
    "7126": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7177": {
      "op": "SHL"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7180": {
      "op": "DUP3"
    },
    "7181": {
      "op": "ADD"
    },
    "7182": {
      "op": "MSTORE"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7185": {
      "op": "ADD"
    },
    "7186": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "7189": {
      "op": "JUMP"
    },
    "7190": {
      "fn": "CryptidToken.mint",
      "offset": [
        3852,
        3952
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7191": {
      "fn": "CryptidToken.mint",
      "offset": [
        3989,
        4000
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 55
    },
    "7192": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7194": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "AND",
      "path": "15"
    },
    "7195": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x16"
    },
    "7197": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7199": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7200": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7201": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7202": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C2B"
    },
    "7205": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7206": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7207": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399E"
    },
    "7210": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3972,
        4000
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7211": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7212": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7213": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7214": {
      "fn": "CryptidToken.mint",
      "offset": [
        3972,
        4000
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7215": {
      "op": "POP"
    },
    "7216": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D02"
    },
    "7219": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7220": {
      "op": "POP"
    },
    "7221": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7222": {
      "fn": "CryptidToken.mint",
      "offset": [
        3720,
        4247
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7223": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4082
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0x17"
    },
    "7225": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4082
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7226": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C46"
    },
    "7229": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7230": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7232": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7233": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "AND",
      "path": "15"
    },
    "7234": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4086
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD4"
    },
    "7237": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4073,
        4099
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7238": {
      "fn": "CryptidToken.mint",
      "offset": [
        4073,
        4099
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7239": {
      "fn": "CryptidToken.mint",
      "offset": [
        4060,
        4069
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "7240": {
      "fn": "CryptidToken.mint",
      "offset": [
        4060,
        4099
      ],
      "op": "LT",
      "path": "15"
    },
    "7241": {
      "branch": 175,
      "fn": "CryptidToken.mint",
      "offset": [
        4060,
        4099
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7242": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C8D"
    },
    "7245": {
      "branch": 175,
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7246": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7248": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7255": {
      "op": "SHL"
    },
    "7256": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7257": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7260": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7262": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7263": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "ADD",
      "path": "15"
    },
    "7264": {
      "op": "MSTORE"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7269": {
      "op": "DUP3"
    },
    "7270": {
      "op": "ADD"
    },
    "7271": {
      "op": "MSTORE"
    },
    "7272": {
      "op": "PUSH21",
      "value": "0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7296": {
      "op": "SHL"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7299": {
      "op": "DUP3"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "MSTORE"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7304": {
      "op": "ADD"
    },
    "7305": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "7308": {
      "op": "JUMP"
    },
    "7309": {
      "fn": "CryptidToken.mint",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7310": {
      "fn": "CryptidToken.mint",
      "offset": [
        4179,
        4194
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x18"
    },
    "7312": {
      "fn": "CryptidToken.mint",
      "offset": [
        4179,
        4194
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7313": {
      "fn": "CryptidToken.mint",
      "offset": [
        4164,
        4175
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7314": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7316": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "AND",
      "path": "15"
    },
    "7317": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4160
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C9C"
    },
    "7320": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "7323": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4147,
        4160
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7324": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4160
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7325": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CA6"
    },
    "7328": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7329": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7330": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399E"
    },
    "7333": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4147,
        4175
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7334": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4175
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7335": {
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4194
      ],
      "op": "GT",
      "path": "15"
    },
    "7336": {
      "branch": 176,
      "fn": "CryptidToken.mint",
      "offset": [
        4147,
        4194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7337": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D02"
    },
    "7340": {
      "branch": 176,
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7341": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7343": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7350": {
      "op": "SHL"
    },
    "7351": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7352": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7355": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7357": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7358": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "ADD",
      "path": "15"
    },
    "7359": {
      "op": "MSTORE"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7364": {
      "op": "DUP3"
    },
    "7365": {
      "op": "ADD"
    },
    "7366": {
      "op": "MSTORE"
    },
    "7367": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7402": {
      "op": "DUP3"
    },
    "7403": {
      "op": "ADD"
    },
    "7404": {
      "op": "MSTORE"
    },
    "7405": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7413": {
      "op": "SHL"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7416": {
      "op": "DUP3"
    },
    "7417": {
      "op": "ADD"
    },
    "7418": {
      "op": "MSTORE"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7421": {
      "op": "ADD"
    },
    "7422": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "7425": {
      "op": "JUMP"
    },
    "7426": {
      "fn": "CryptidToken.mint",
      "offset": [
        4139,
        4236
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7427": {
      "fn": "CryptidToken.mint",
      "offset": [
        4273,
        4274
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7429": {
      "fn": "CryptidToken.mint",
      "offset": [
        4256,
        4413
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7430": {
      "fn": "CryptidToken.mint",
      "offset": [
        4281,
        4292
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7431": {
      "fn": "CryptidToken.mint",
      "offset": [
        4276,
        4292
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7433": {
      "fn": "CryptidToken.mint",
      "offset": [
        4276,
        4292
      ],
      "op": "AND",
      "path": "15"
    },
    "7434": {
      "fn": "CryptidToken.mint",
      "offset": [
        4276,
        4277
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7435": {
      "fn": "CryptidToken.mint",
      "offset": [
        4276,
        4292
      ],
      "op": "GT",
      "path": "15"
    },
    "7436": {
      "fn": "CryptidToken.mint",
      "offset": [
        4256,
        4413
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "7439": {
      "fn": "CryptidToken.mint",
      "offset": [
        4256,
        4413
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7440": {
      "fn": "CryptidToken.mint",
      "offset": [
        4313,
        4361
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 58,
      "value": "0x1D21"
    },
    "7443": {
      "fn": "CryptidToken.mint",
      "offset": [
        4323,
        4333
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7444": {
      "fn": "CryptidToken.mint",
      "offset": [
        4335,
        4360
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1C"
    },
    "7447": {
      "fn": "CryptidToken.mint",
      "offset": [
        4335,
        4350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7449": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7450": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7451": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7452": {
      "fn": "CryptidToken.mint",
      "offset": [
        4335,
        4360
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7453": {
      "fn": "CryptidToken.mint",
      "offset": [
        4313,
        4322
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D2D"
    },
    "7456": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4313,
        4361
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7457": {
      "fn": "CryptidToken.mint",
      "offset": [
        4313,
        4361
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7458": {
      "fn": "CryptidToken.mint",
      "offset": [
        4375,
        4402
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 59,
      "value": "0x1D2F"
    },
    "7461": {
      "fn": "CryptidToken.mint",
      "offset": [
        4375,
        4390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7463": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 60
    },
    "7464": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7465": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7467": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "7468": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7469": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "7470": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7471": {
      "fn": "CryptidToken.mint",
      "offset": [
        4375,
        4402
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7472": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 61
    },
    "7473": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D39"
    },
    "7476": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7477": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3934"
    },
    "7480": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4294,
        4297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7481": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7482": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7483": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "POP",
      "path": "15"
    },
    "7484": {
      "fn": "CryptidToken.mint",
      "offset": [
        4294,
        4297
      ],
      "op": "POP",
      "path": "15"
    },
    "7485": {
      "fn": "CryptidToken.mint",
      "offset": [
        4256,
        4413
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D05"
    },
    "7488": {
      "fn": "CryptidToken.mint",
      "offset": [
        4256,
        4413
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7489": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7490": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7498": {
      "op": "SHL"
    },
    "7499": {
      "op": "SUB"
    },
    "7500": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 62
    },
    "7501": {
      "branch": 197,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "2"
    },
    "7502": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DAC"
    },
    "7505": {
      "branch": 197,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7506": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7508": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7515": {
      "op": "SHL"
    },
    "7516": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7517": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7520": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7522": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "2"
    },
    "7524": {
      "op": "MSTORE"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7529": {
      "op": "DUP3"
    },
    "7530": {
      "op": "ADD"
    },
    "7531": {
      "op": "MSTORE"
    },
    "7532": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7567": {
      "op": "DUP3"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "MSTORE"
    },
    "7570": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7583": {
      "op": "SHL"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7586": {
      "op": "DUP3"
    },
    "7587": {
      "op": "ADD"
    },
    "7588": {
      "op": "MSTORE"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "7595": {
      "op": "JUMP"
    },
    "7596": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7604": {
      "op": "SHL"
    },
    "7605": {
      "op": "SUB"
    },
    "7606": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "2",
      "statement": 63
    },
    "7607": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7609": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7610": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7611": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7612": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7614": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7616": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7617": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7619": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7620": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7621": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7622": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7623": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7625": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7627": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7634": {
      "op": "SHL"
    },
    "7635": {
      "op": "SUB"
    },
    "7636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7639": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7640": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7641": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7642": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7643": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7644": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7645": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF8"
    },
    "7648": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7658": {
      "op": "SHL"
    },
    "7659": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7661": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "7667": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7668": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "7671": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x13CE"
    },
    "7676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D47"
    },
    "7681": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7682": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7683": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7685": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7692": {
      "op": "SHL"
    },
    "7693": {
      "op": "SUB"
    },
    "7694": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7697": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7698": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7699": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7701": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7702": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7703": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E32"
    },
    "7706": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7722": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "7725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7726": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "7729": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7730": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7731": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 65,
      "value": "0xC"
    },
    "7733": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7734": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7362,
        7363
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "7736": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7738": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7739": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7740": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7359
      ],
      "op": "AND",
      "path": "15"
    },
    "7741": {
      "branch": 177,
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7354,
        7363
      ],
      "op": "LT",
      "path": "15"
    },
    "7742": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E83"
    },
    "7745": {
      "branch": 177,
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7746": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7748": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7755": {
      "op": "SHL"
    },
    "7756": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7757": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7760": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7762": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7763": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "ADD",
      "path": "15"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7769": {
      "op": "DUP3"
    },
    "7770": {
      "op": "ADD"
    },
    "7771": {
      "op": "MSTORE"
    },
    "7772": {
      "op": "PUSH23",
      "value": "0x2BB434BA32B634B9BA1034B99031B7B731B63AB232B217"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "7798": {
      "op": "SHL"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7801": {
      "op": "DUP3"
    },
    "7802": {
      "op": "ADD"
    },
    "7803": {
      "op": "MSTORE"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7806": {
      "op": "ADD"
    },
    "7807": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "7810": {
      "op": "JUMP"
    },
    "7811": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7346,
        7391
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7812": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7401,
        7415
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 66,
      "value": "0x12"
    },
    "7814": {
      "fn": "CryptidToken.setWhitelistPrice",
      "offset": [
        7401,
        7436
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7815": {
      "fn": "CryptidToken.setWhitelistPrice",
      "jump": "o",
      "offset": [
        7264,
        7443
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7816": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7817": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7819": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7826": {
      "op": "SHL"
    },
    "7827": {
      "op": "SUB"
    },
    "7828": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7835": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7836": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7837": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "7840": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7841": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7850": {
      "op": "SHL"
    },
    "7851": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7852": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "7859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "7863": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7865": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7527,
        7536
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 67,
      "value": "0x17"
    },
    "7867": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7527,
        7552
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7868": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        7449,
        7559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7869": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7870": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7872": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7879": {
      "op": "SHL"
    },
    "7880": {
      "op": "SUB"
    },
    "7881": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7884": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7885": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7886": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7888": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7889": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7890": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EED"
    },
    "7893": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7903": {
      "op": "SHL"
    },
    "7904": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7906": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "7912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "7916": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7917": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7918": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8137,
        8138
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 68,
      "value": "0x0"
    },
    "7920": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8112,
        8126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "7922": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7923": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7924": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EFC"
    },
    "7927": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7928": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "7931": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        8106,
        8134
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7932": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7933": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7934": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8134
      ],
      "op": "POP",
      "path": "15"
    },
    "7935": {
      "branch": 178,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8106,
        8138
      ],
      "op": "GT",
      "path": "15"
    },
    "7936": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F4B"
    },
    "7939": {
      "branch": 178,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7940": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7942": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7949": {
      "op": "SHL"
    },
    "7950": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7951": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7954": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7956": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7957": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "ADD",
      "path": "15"
    },
    "7958": {
      "op": "DUP2"
    },
    "7959": {
      "op": "SWAP1"
    },
    "7960": {
      "op": "MSTORE"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7963": {
      "op": "DUP3"
    },
    "7964": {
      "op": "ADD"
    },
    "7965": {
      "op": "MSTORE"
    },
    "7966": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8001": {
      "op": "DUP3"
    },
    "8002": {
      "op": "ADD"
    },
    "8003": {
      "op": "MSTORE"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8010": {
      "op": "JUMP"
    },
    "8011": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8098,
        8175
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8012": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 69,
      "value": "0xC"
    },
    "8014": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8015": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "8020": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8021": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "DIV",
      "path": "15"
    },
    "8022": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8024": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8194,
        8214
      ],
      "op": "AND",
      "path": "15"
    },
    "8025": {
      "branch": 179,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8193,
        8214
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8026": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB0"
    },
    "8029": {
      "branch": 179,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8030": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8032": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8039": {
      "op": "SHL"
    },
    "8040": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8041": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8044": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8046": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8047": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "ADD",
      "path": "15"
    },
    "8048": {
      "op": "MSTORE"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8053": {
      "op": "DUP3"
    },
    "8054": {
      "op": "ADD"
    },
    "8055": {
      "op": "MSTORE"
    },
    "8056": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8091": {
      "op": "DUP3"
    },
    "8092": {
      "op": "ADD"
    },
    "8093": {
      "op": "MSTORE"
    },
    "8094": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "8099": {
      "op": "SHL"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8102": {
      "op": "DUP3"
    },
    "8103": {
      "op": "ADD"
    },
    "8104": {
      "op": "MSTORE"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8107": {
      "op": "ADD"
    },
    "8108": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8111": {
      "op": "JUMP"
    },
    "8112": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8185,
        8253
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8113": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8283
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 70,
      "value": "0xC"
    },
    "8115": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8116": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8117": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "8122": {
      "op": "NOT"
    },
    "8123": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "AND",
      "path": "15"
    },
    "8124": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "8129": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "OR",
      "path": "15"
    },
    "8130": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8131": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        8263,
        8290
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8132": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        8039,
        8297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8133": {
      "fn": "CryptidToken.pause",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8134": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8136": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8143": {
      "op": "SHL"
    },
    "8144": {
      "op": "SUB"
    },
    "8145": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8148": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8149": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8150": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8151": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8152": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8153": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8154": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF5"
    },
    "8157": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8160": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8167": {
      "op": "SHL"
    },
    "8168": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8169": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8172": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "8176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "8180": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8181": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8182": {
      "fn": "CryptidToken.pause",
      "offset": [
        4491,
        4499
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 71,
      "value": "0x13CE"
    },
    "8185": {
      "fn": "CryptidToken.pause",
      "offset": [
        4491,
        4497
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DA1"
    },
    "8188": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4491,
        4499
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8189": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8190": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8192": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x1"
    },
    "8194": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8195": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8196": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC8"
    },
    "8199": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8200": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3830"
    },
    "8203": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 73,
      "value": "0xE98"
    },
    "8208": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8209": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8210": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8211": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF9"
    },
    "8214": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8215": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5261,
        5502
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8216": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8218": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8225": {
      "op": "SHL"
    },
    "8226": {
      "op": "SUB"
    },
    "8227": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8230": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8231": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8232": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8233": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8234": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8235": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8236": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2047"
    },
    "8239": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8242": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8249": {
      "op": "SHL"
    },
    "8250": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8252": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "8258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8259": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "8262": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8263": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8264": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 74,
      "value": "0xC"
    },
    "8266": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8267": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5374,
        5375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "8269": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8271": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8272": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8273": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5371
      ],
      "op": "AND",
      "path": "15"
    },
    "8274": {
      "branch": 180,
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "LT",
      "path": "15"
    },
    "8275": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x209E"
    },
    "8278": {
      "branch": 180,
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8279": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8281": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8288": {
      "op": "SHL"
    },
    "8289": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8290": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8293": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8295": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8296": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "ADD",
      "path": "15"
    },
    "8297": {
      "op": "MSTORE"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8302": {
      "op": "DUP3"
    },
    "8303": {
      "op": "ADD"
    },
    "8304": {
      "op": "MSTORE"
    },
    "8305": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8340": {
      "op": "DUP3"
    },
    "8341": {
      "op": "ADD"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8349": {
      "op": "JUMP"
    },
    "8350": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5358,
        5408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8351": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5422,
        5431
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8353": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8354": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5436,
        5442
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8355": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5436,
        5449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8356": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5434,
        5435
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8357": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5434,
        5449
      ],
      "op": "LT",
      "path": "15"
    },
    "8358": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8359": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF6"
    },
    "8362": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8363": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5492
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 75
    },
    "8364": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5493,
        5494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8365": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8366": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8367": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8368": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "LT",
      "path": "15"
    },
    "8369": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20BC"
    },
    "8372": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8373": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20BC"
    },
    "8376": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x391E"
    },
    "8379": {
      "fn": "CryptidToken.setfreeUsers",
      "jump": "i",
      "offset": [
        5486,
        5495
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8380": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8381": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8383": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "MUL",
      "path": "15"
    },
    "8384": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8386": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "ADD",
      "path": "15"
    },
    "8387": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "ADD",
      "path": "15"
    },
    "8388": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8389": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "8391": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8393": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5479
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8394": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5480,
        5481
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8395": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8396": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8397": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8398": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "LT",
      "path": "15"
    },
    "8399": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20DA"
    },
    "8402": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8403": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20DA"
    },
    "8406": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x391E"
    },
    "8409": {
      "fn": "CryptidToken.setfreeUsers",
      "jump": "i",
      "offset": [
        5473,
        5482
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8410": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8411": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8413": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "MUL",
      "path": "15"
    },
    "8414": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8416": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "ADD",
      "path": "15"
    },
    "8417": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "ADD",
      "path": "15"
    },
    "8418": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5473,
        5482
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8425": {
      "op": "SHL"
    },
    "8426": {
      "op": "SUB"
    },
    "8427": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "AND",
      "path": "15"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8434": {
      "op": "SHL"
    },
    "8435": {
      "op": "SUB"
    },
    "8436": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "AND",
      "path": "15"
    },
    "8437": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8438": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8439": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8441": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "ADD",
      "path": "15"
    },
    "8442": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8443": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8444": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8445": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8447": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "ADD",
      "path": "15"
    },
    "8448": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8450": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8451": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8453": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8456": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "EXP",
      "path": "15"
    },
    "8457": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8458": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8459": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8460": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8462": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "MUL",
      "path": "15"
    },
    "8463": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "NOT",
      "path": "15"
    },
    "8464": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "AND",
      "path": "15"
    },
    "8465": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8466": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8467": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8469": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "AND",
      "path": "15"
    },
    "8470": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "MUL",
      "path": "15"
    },
    "8471": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "OR",
      "path": "15"
    },
    "8472": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8473": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8474": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5463,
        5495
      ],
      "op": "POP",
      "path": "15"
    },
    "8475": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 76
    },
    "8476": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8477": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2125"
    },
    "8480": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8481": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3934"
    },
    "8484": {
      "fn": "CryptidToken.setfreeUsers",
      "jump": "i",
      "offset": [
        5450,
        5453
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8485": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8486": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8487": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "POP",
      "path": "15"
    },
    "8488": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5450,
        5453
      ],
      "op": "POP",
      "path": "15"
    },
    "8489": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20A1"
    },
    "8492": {
      "fn": "CryptidToken.setfreeUsers",
      "offset": [
        5418,
        5495
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8493": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4581,
        5255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8494": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8496": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8503": {
      "op": "SHL"
    },
    "8504": {
      "op": "SUB"
    },
    "8505": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8508": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8509": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8510": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8511": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8512": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8513": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8514": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215D"
    },
    "8517": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8520": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8527": {
      "op": "SHL"
    },
    "8528": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "8536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "8540": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8542": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 77,
      "value": "0xC"
    },
    "8544": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8545": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "8550": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8551": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "DIV",
      "path": "15"
    },
    "8552": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8554": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4692
      ],
      "op": "AND",
      "path": "15"
    },
    "8555": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4700
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8556": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4700
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8557": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4696,
        4700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8559": {
      "branch": 181,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4672,
        4700
      ],
      "op": "EQ",
      "path": "15"
    },
    "8560": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x218B"
    },
    "8563": {
      "branch": 181,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8564": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8566": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8575": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8576": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8578": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "ADD",
      "path": "15"
    },
    "8579": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8582": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8583": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39B6"
    },
    "8586": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4664,
        4761
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8587": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4664,
        4761
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8588": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 78,
      "value": "0xC"
    },
    "8590": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8591": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4787,
        4788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "8593": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8595": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8596": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8597": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4784
      ],
      "op": "AND",
      "path": "15"
    },
    "8598": {
      "branch": 182,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4779,
        4788
      ],
      "op": "LT",
      "path": "15"
    },
    "8599": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21D9"
    },
    "8602": {
      "branch": 182,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8603": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8605": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8612": {
      "op": "SHL"
    },
    "8613": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8614": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8617": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8619": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8620": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "ADD",
      "path": "15"
    },
    "8621": {
      "op": "MSTORE"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8626": {
      "op": "DUP3"
    },
    "8627": {
      "op": "ADD"
    },
    "8628": {
      "op": "MSTORE"
    },
    "8629": {
      "op": "PUSH20",
      "value": "0x2830B9BA10333932B29036B4B73A1039B0B63297"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8652": {
      "op": "SHL"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8655": {
      "op": "DUP3"
    },
    "8656": {
      "op": "ADD"
    },
    "8657": {
      "op": "MSTORE"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8660": {
      "op": "ADD"
    },
    "8661": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8664": {
      "op": "JUMP"
    },
    "8665": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4771,
        4813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8666": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 79,
      "value": "0xC"
    },
    "8668": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8669": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8671": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8674": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8675": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8676": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "DIV",
      "path": "15"
    },
    "8677": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8678": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4846,
        4858
      ],
      "op": "AND",
      "path": "15"
    },
    "8679": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4831,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8680": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4831,
        4858
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8681": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4831,
        4858
      ],
      "op": "AND",
      "path": "15"
    },
    "8682": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4831,
        4858
      ],
      "op": "GT",
      "path": "15"
    },
    "8683": {
      "branch": 183,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4831,
        4858
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8684": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x224A"
    },
    "8687": {
      "branch": 183,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8688": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8690": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8691": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8697": {
      "op": "SHL"
    },
    "8698": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8699": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8702": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8704": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8705": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "ADD",
      "path": "15"
    },
    "8706": {
      "op": "MSTORE"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8711": {
      "op": "DUP3"
    },
    "8712": {
      "op": "ADD"
    },
    "8713": {
      "op": "MSTORE"
    },
    "8714": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8749": {
      "op": "DUP3"
    },
    "8750": {
      "op": "ADD"
    },
    "8751": {
      "op": "MSTORE"
    },
    "8752": {
      "op": "PUSH10",
      "value": "0x3930B739B0B1BA34B7B7"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "8765": {
      "op": "SHL"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8768": {
      "op": "DUP3"
    },
    "8769": {
      "op": "ADD"
    },
    "8770": {
      "op": "MSTORE"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8773": {
      "op": "ADD"
    },
    "8774": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8777": {
      "op": "JUMP"
    },
    "8778": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4823,
        4905
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8779": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4937,
        4938
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 80,
      "value": "0x0"
    },
    "8781": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4923,
        4934
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8782": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4923,
        4938
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8784": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4923,
        4938
      ],
      "op": "AND",
      "path": "15"
    },
    "8785": {
      "branch": 184,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4923,
        4938
      ],
      "op": "GT",
      "path": "15"
    },
    "8786": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22AB"
    },
    "8789": {
      "branch": 184,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8790": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8792": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8799": {
      "op": "SHL"
    },
    "8800": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8801": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8804": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8806": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8807": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "ADD",
      "path": "15"
    },
    "8808": {
      "op": "MSTORE"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8813": {
      "op": "DUP3"
    },
    "8814": {
      "op": "ADD"
    },
    "8815": {
      "op": "MSTORE"
    },
    "8816": {
      "op": "PUSH32",
      "value": "0x41697264726F7020616D6F756E74206D75737420626520677265617465722074"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8851": {
      "op": "DUP3"
    },
    "8852": {
      "op": "ADD"
    },
    "8853": {
      "op": "MSTORE"
    },
    "8854": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "8862": {
      "op": "SHL"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8865": {
      "op": "DUP3"
    },
    "8866": {
      "op": "ADD"
    },
    "8867": {
      "op": "MSTORE"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8870": {
      "op": "ADD"
    },
    "8871": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8874": {
      "op": "JUMP"
    },
    "8875": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8876": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5028,
        5043
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 81,
      "value": "0x11"
    },
    "8878": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5028,
        5043
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8879": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5013,
        5024
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8880": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8882": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "AND",
      "path": "15"
    },
    "8883": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22BA"
    },
    "8886": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "8889": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4998,
        5011
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8890": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5011
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8891": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22C4"
    },
    "8894": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8895": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8896": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399E"
    },
    "8899": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4998,
        5024
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8900": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5024
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8901": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5043
      ],
      "op": "GT",
      "path": "15"
    },
    "8902": {
      "branch": 185,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4998,
        5043
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8903": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2324"
    },
    "8906": {
      "branch": 185,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8907": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8909": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8916": {
      "op": "SHL"
    },
    "8917": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8918": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8921": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8923": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8924": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "ADD",
      "path": "15"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8930": {
      "op": "DUP3"
    },
    "8931": {
      "op": "ADD"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8968": {
      "op": "DUP3"
    },
    "8969": {
      "op": "ADD"
    },
    "8970": {
      "op": "MSTORE"
    },
    "8971": {
      "op": "PUSH9",
      "value": "0x3A1039BAB838363C97"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8983": {
      "op": "SHL"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8986": {
      "op": "DUP3"
    },
    "8987": {
      "op": "ADD"
    },
    "8988": {
      "op": "MSTORE"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8991": {
      "op": "ADD"
    },
    "8992": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "8995": {
      "op": "JUMP"
    },
    "8996": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4990,
        5089
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8997": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5116,
        5117
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8999": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5099,
        5249
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9000": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5124,
        5135
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9001": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5119,
        5135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9003": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5119,
        5135
      ],
      "op": "AND",
      "path": "15"
    },
    "9004": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5119,
        5120
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9005": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5119,
        5135
      ],
      "op": "GT",
      "path": "15"
    },
    "9006": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5099,
        5249
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF6"
    },
    "9009": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5099,
        5249
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9010": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5156,
        5197
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 82,
      "value": "0x233E"
    },
    "9013": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5166,
        5169
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9014": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5171,
        5196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1C"
    },
    "9017": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5171,
        5186
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "9019": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9020": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9021": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9022": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5156,
        5197
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9023": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5211,
        5238
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 83,
      "value": "0x234C"
    },
    "9026": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5211,
        5226
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "9028": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9029": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9030": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9032": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "9033": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9034": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "9035": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9036": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5211,
        5238
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9037": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 84
    },
    "9038": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2356"
    },
    "9041": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9042": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3934"
    },
    "9045": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        5137,
        5140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9046": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9047": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9048": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "POP",
      "path": "15"
    },
    "9049": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5137,
        5140
      ],
      "op": "POP",
      "path": "15"
    },
    "9050": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5099,
        5249
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2327"
    },
    "9053": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5099,
        5249
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 85,
      "value": "0x2368"
    },
    "9058": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9059": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2932"
    },
    "9063": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9064": {
      "branch": 198,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2384"
    },
    "9068": {
      "branch": 198,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9078": {
      "op": "SHL"
    },
    "9079": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "2"
    },
    "9084": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "9087": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9088": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38CD"
    },
    "9091": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9093": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 86,
      "value": "0x2390"
    },
    "9096": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9097": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9098": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9099": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9100": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC8"
    },
    "9103": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9104": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9105": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "9106": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "9107": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "9108": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "9109": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9110": {
      "offset": [
        805,
        842
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "9113": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9114": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9115": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C6"
    },
    "9118": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9119": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        805,
        842
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "9122": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        805,
        842
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9123": {
      "offset": [
        739,
        767
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9124": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "9126": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C6"
    },
    "9131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        739,
        767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "9135": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        739,
        767
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9136": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9137": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9139": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9140": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9141": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9142": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9144": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9146": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9147": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9149": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9150": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9151": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9152": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9245,
        9258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9154": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9245,
        9258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9161": {
      "op": "SHL"
    },
    "9162": {
      "op": "SUB"
    },
    "9163": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "9164": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 87,
      "value": "0x242F"
    },
    "9167": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9168": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9170": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9177": {
      "op": "SHL"
    },
    "9178": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9179": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9182": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9184": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9185": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "ADD",
      "path": "15"
    },
    "9186": {
      "op": "MSTORE"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9191": {
      "op": "DUP3"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9229": {
      "op": "DUP3"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "op": "MSTORE"
    },
    "9232": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "9248": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9250": {
      "op": "SHL"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9253": {
      "op": "DUP3"
    },
    "9254": {
      "op": "ADD"
    },
    "9255": {
      "op": "MSTORE"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9258": {
      "op": "ADD"
    },
    "9259": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "9262": {
      "op": "JUMP"
    },
    "9263": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9270,
        9346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9387,
        9394
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 88,
      "value": "0xA"
    },
    "9266": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9396,
        9414
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x243A"
    },
    "9269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9396,
        9403
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9270": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9396,
        9412
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EFB"
    },
    "9273": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9396,
        9414
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9396,
        9414
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9275": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9416,
        9429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "9277": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9280": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9282": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "ADD",
      "path": "15"
    },
    "9283": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x244E"
    },
    "9286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9287": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9289": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9290": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AAD"
    },
    "9293": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9370,
        9430
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9294": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9295": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9297": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9298": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9300": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9301": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9302": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SUB",
      "path": "15"
    },
    "9303": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SUB",
      "path": "15"
    },
    "9304": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9305": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9306": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9307": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9309": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9370,
        9430
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9310": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9356,
        9431
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9311": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9356,
        9431
      ],
      "op": "POP",
      "path": "15"
    },
    "9312": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9313": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9314": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9172,
        9451
      ],
      "op": "POP",
      "path": "15"
    },
    "9315": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        9172,
        9451
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9316": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9317": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9326": {
      "op": "SHL"
    },
    "9327": {
      "op": "SUB"
    },
    "9328": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9331": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9332": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9333": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9334": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9335": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9336": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9337": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2494"
    },
    "9340": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9341": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9343": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9350": {
      "op": "SHL"
    },
    "9351": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9352": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9355": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9356": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "9359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "9363": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9365": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 89,
      "value": "0xC"
    },
    "9367": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9368": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "9373": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9374": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "DIV",
      "path": "15"
    },
    "9375": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9377": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6846
      ],
      "op": "AND",
      "path": "15"
    },
    "9378": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6854
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9379": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6854
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9380": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6850,
        6854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9382": {
      "branch": 186,
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6854
      ],
      "op": "EQ",
      "path": "15"
    },
    "9383": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24C2"
    },
    "9386": {
      "branch": 186,
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9387": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9389": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9398": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9399": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9401": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "ADD",
      "path": "15"
    },
    "9402": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "9405": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9406": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39B6"
    },
    "9409": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6818,
        6915
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9410": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9411": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6933,
        6938
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 90,
      "value": "0xC"
    },
    "9413": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6933,
        6938
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9414": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6933,
        6938
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9416": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6933,
        6938
      ],
      "op": "AND",
      "path": "15"
    },
    "9417": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x250C"
    },
    "9420": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9421": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9423": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9430": {
      "op": "SHL"
    },
    "9431": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9432": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9435": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9437": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9438": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "ADD",
      "path": "15"
    },
    "9439": {
      "op": "MSTORE"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9444": {
      "op": "DUP3"
    },
    "9445": {
      "op": "ADD"
    },
    "9446": {
      "op": "MSTORE"
    },
    "9447": {
      "op": "PUSH21",
      "value": "0x139BC81CDD1859D95CC81899599BDC99481A5B9A5D"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "9471": {
      "op": "SHL"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9474": {
      "op": "DUP3"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "MSTORE"
    },
    "9477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9479": {
      "op": "ADD"
    },
    "9480": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "9483": {
      "op": "JUMP"
    },
    "9484": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6925,
        6968
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9485": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6983
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 91,
      "value": "0xC"
    },
    "9487": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9488": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9489": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9491": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "AND",
      "path": "15"
    },
    "9492": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9493": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6983
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9495": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x251F"
    },
    "9498": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9499": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AE0"
    },
    "9502": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6978,
        6985
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9503": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9504": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9505": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9506": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9509": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "EXP",
      "path": "15"
    },
    "9510": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9511": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9512": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9513": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9515": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "MUL",
      "path": "15"
    },
    "9516": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "NOT",
      "path": "15"
    },
    "9517": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "AND",
      "path": "15"
    },
    "9518": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9519": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9520": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9522": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "AND",
      "path": "15"
    },
    "9523": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "MUL",
      "path": "15"
    },
    "9524": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "OR",
      "path": "15"
    },
    "9525": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9526": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9527": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "POP",
      "path": "15"
    },
    "9528": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6978,
        6985
      ],
      "op": "POP",
      "path": "15"
    },
    "9529": {
      "fn": "CryptidToken.prevStage",
      "jump": "o",
      "offset": [
        6770,
        6992
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9530": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8903,
        9054
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9531": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8946,
        8953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9533": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8988,
        8989
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 92
    },
    "9534": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8972,
        8985
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2545"
    },
    "9537": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8972,
        8983
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "9540": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8972,
        8985
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9541": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8972,
        8985
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9542": {
      "branch": 187,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8972,
        8989
      ],
      "op": "GT",
      "path": "15"
    },
    "9543": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x258B"
    },
    "9546": {
      "branch": 187,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9547": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9549": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9556": {
      "op": "SHL"
    },
    "9557": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9558": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9561": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9563": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9564": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "ADD",
      "path": "15"
    },
    "9565": {
      "op": "MSTORE"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9570": {
      "op": "DUP3"
    },
    "9571": {
      "op": "ADD"
    },
    "9572": {
      "op": "MSTORE"
    },
    "9573": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9598": {
      "op": "SHL"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9601": {
      "op": "DUP3"
    },
    "9602": {
      "op": "ADD"
    },
    "9603": {
      "op": "MSTORE"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "9610": {
      "op": "JUMP"
    },
    "9611": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8964,
        9016
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9612": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9033,
        9046
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 93,
      "value": "0xEB3"
    },
    "9615": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9033,
        9044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "9618": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9033,
        9046
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9619": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7132,
        7258
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9620": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9622": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9629": {
      "op": "SHL"
    },
    "9630": {
      "op": "SUB"
    },
    "9631": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9634": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9635": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9637": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9638": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9639": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9640": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C3"
    },
    "9643": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9653": {
      "op": "SHL"
    },
    "9654": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9656": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "9662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "9666": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9667": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9668": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 94
    },
    "9669": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9670": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE98"
    },
    "9673": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9674": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7231
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "9676": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7231
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9677": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9679": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9680": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "ADD",
      "path": "15"
    },
    "9681": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9682": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7218,
        7251
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329B"
    },
    "9685": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7218,
        7251
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9686": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9457,
        9567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9687": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9503,
        9510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9689": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9547,
        9560
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 95,
      "value": "0x25E0"
    },
    "9692": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9547,
        9558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9C"
    },
    "9695": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9547,
        9560
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9696": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9547,
        9560
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9697": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9544
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x18"
    },
    "9699": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9544
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9700": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9560
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB3"
    },
    "9703": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9560
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9704": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9560
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9705": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9529,
        9560
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38B6"
    },
    "9708": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9529,
        9560
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9709": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9710": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9712": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9719": {
      "op": "SHL"
    },
    "9720": {
      "op": "SUB"
    },
    "9721": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9724": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9725": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9726": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9727": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9728": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9729": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9730": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261D"
    },
    "9733": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9734": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9743": {
      "op": "SHL"
    },
    "9744": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9745": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9746": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9749": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "9752": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9753": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "9756": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9757": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9758": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7985
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 96,
      "value": "0xC"
    },
    "9760": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9761": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9762": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9772": {
      "op": "SHL"
    },
    "9773": {
      "op": "SUB"
    },
    "9774": {
      "op": "NOT"
    },
    "9775": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "AND",
      "path": "15"
    },
    "9776": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9788": {
      "op": "SHL"
    },
    "9789": {
      "op": "SUB"
    },
    "9790": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9791": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9792": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "AND",
      "path": "15"
    },
    "9793": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "MUL",
      "path": "15"
    },
    "9794": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "OR",
      "path": "15"
    },
    "9795": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9796": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7972,
        7994
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9797": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8017
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 97,
      "value": "0xD"
    },
    "9799": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9800": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9807": {
      "op": "SHL"
    },
    "9808": {
      "op": "SUB"
    },
    "9809": {
      "op": "NOT"
    },
    "9810": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "AND",
      "path": "15"
    },
    "9811": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9812": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9813": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9814": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "AND",
      "path": "15"
    },
    "9815": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "OR",
      "path": "15"
    },
    "9816": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9817": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8004,
        8026
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9818": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "o",
      "offset": [
        7885,
        8033
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9819": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9820": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9829": {
      "op": "SHL"
    },
    "9830": {
      "op": "SUB"
    },
    "9831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9836": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9837": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9838": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9839": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9840": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268B"
    },
    "9843": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9846": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9853": {
      "op": "SHL"
    },
    "9854": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9858": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "9862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "9866": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9867": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9868": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6399,
        6400
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 98,
      "value": "0x0"
    },
    "9870": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6381,
        6388
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9872": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9873": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9874": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x269A"
    },
    "9877": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9878": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3830"
    },
    "9881": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6375,
        6396
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9882": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9883": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9884": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6396
      ],
      "op": "POP",
      "path": "15"
    },
    "9885": {
      "branch": 188,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6375,
        6400
      ],
      "op": "GT",
      "path": "15"
    },
    "9886": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26E9"
    },
    "9889": {
      "branch": 188,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9890": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9892": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9899": {
      "op": "SHL"
    },
    "9900": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9901": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9904": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9906": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9907": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "ADD",
      "path": "15"
    },
    "9908": {
      "op": "MSTORE"
    },
    "9909": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9913": {
      "op": "DUP3"
    },
    "9914": {
      "op": "ADD"
    },
    "9915": {
      "op": "MSTORE"
    },
    "9916": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9951": {
      "op": "DUP3"
    },
    "9952": {
      "op": "ADD"
    },
    "9953": {
      "op": "MSTORE"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9956": {
      "op": "ADD"
    },
    "9957": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "9960": {
      "op": "JUMP"
    },
    "9961": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6367,
        6428
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9962": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 99,
      "value": "0xC"
    },
    "9964": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9965": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "9969": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9970": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "DIV",
      "path": "15"
    },
    "9971": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9973": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6447,
        6461
      ],
      "op": "AND",
      "path": "15"
    },
    "9974": {
      "branch": 189,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6446,
        6461
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9975": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2742"
    },
    "9978": {
      "branch": 189,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9979": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9981": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9988": {
      "op": "SHL"
    },
    "9989": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9990": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9993": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9995": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9996": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "ADD",
      "path": "15"
    },
    "9997": {
      "op": "MSTORE"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10002": {
      "op": "DUP3"
    },
    "10003": {
      "op": "ADD"
    },
    "10004": {
      "op": "MSTORE"
    },
    "10005": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10040": {
      "op": "DUP3"
    },
    "10041": {
      "op": "ADD"
    },
    "10042": {
      "op": "MSTORE"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10045": {
      "op": "ADD"
    },
    "10046": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "10049": {
      "op": "JUMP"
    },
    "10050": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6438,
        6492
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10051": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6516
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 100,
      "value": "0xC"
    },
    "10053": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10054": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10055": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "10059": {
      "op": "NOT"
    },
    "10060": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "AND",
      "path": "15"
    },
    "10061": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "10065": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "OR",
      "path": "15"
    },
    "10066": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10067": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6502,
        6523
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "10068": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        6315,
        6530
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10069": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6536,
        6764
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10070": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "10072": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10079": {
      "op": "SHL"
    },
    "10080": {
      "op": "SUB"
    },
    "10081": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10084": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10085": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10086": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "10087": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "10088": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "10089": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "10090": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2785"
    },
    "10093": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10094": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10103": {
      "op": "SHL"
    },
    "10104": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10105": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10106": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10108": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "10109": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "10112": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "10116": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10118": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 101,
      "value": "0xC"
    },
    "10120": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10121": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "10126": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10127": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "DIV",
      "path": "15"
    },
    "10128": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10130": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6612
      ],
      "op": "AND",
      "path": "15"
    },
    "10131": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6620
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10132": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6620
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10133": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6616,
        6620
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "10135": {
      "branch": 190,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6592,
        6620
      ],
      "op": "EQ",
      "path": "15"
    },
    "10136": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27B3"
    },
    "10139": {
      "branch": 190,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10140": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10142": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10149": {
      "op": "SHL"
    },
    "10150": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10151": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10152": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10154": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "ADD",
      "path": "15"
    },
    "10155": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "10158": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10159": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39B6"
    },
    "10162": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6584,
        6681
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10163": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6584,
        6681
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10164": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 102,
      "value": "0xC"
    },
    "10166": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10167": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6707,
        6708
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10169": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10171": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10172": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10173": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "AND",
      "path": "15"
    },
    "10174": {
      "branch": 191,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6708
      ],
      "op": "LT",
      "path": "15"
    },
    "10175": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x280A"
    },
    "10178": {
      "branch": 191,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10179": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10181": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10188": {
      "op": "SHL"
    },
    "10189": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10190": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10193": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10195": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10196": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "ADD",
      "path": "15"
    },
    "10197": {
      "op": "MSTORE"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "10200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10202": {
      "op": "DUP3"
    },
    "10203": {
      "op": "ADD"
    },
    "10204": {
      "op": "MSTORE"
    },
    "10205": {
      "op": "PUSH32",
      "value": "0x4E6F20737461676573206166746572207075626C69632073616C650000000000"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10240": {
      "op": "DUP3"
    },
    "10241": {
      "op": "ADD"
    },
    "10242": {
      "op": "MSTORE"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCC0"
    },
    "10249": {
      "op": "JUMP"
    },
    "10250": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10251": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6755
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 103,
      "value": "0xC"
    },
    "10253": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10254": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10255": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10257": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "AND",
      "path": "15"
    },
    "10258": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10259": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6755
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10261": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x251F"
    },
    "10264": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10265": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AFD"
    },
    "10268": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6750,
        6757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10270": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "10272": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10279": {
      "op": "SHL"
    },
    "10280": {
      "op": "SUB"
    },
    "10281": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10285": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "10287": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "10288": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "10289": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "10290": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284D"
    },
    "10293": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10303": {
      "op": "SHL"
    },
    "10304": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "10309": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "10312": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10313": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386B"
    },
    "10316": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10317": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10324": {
      "op": "SHL"
    },
    "10325": {
      "op": "SUB"
    },
    "10326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 104
    },
    "10327": {
      "branch": 206,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "10328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B2"
    },
    "10331": {
      "branch": 206,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10341": {
      "op": "SHL"
    },
    "10342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "10350": {
      "op": "MSTORE"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10355": {
      "op": "DUP3"
    },
    "10356": {
      "op": "ADD"
    },
    "10357": {
      "op": "MSTORE"
    },
    "10358": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10393": {
      "op": "DUP3"
    },
    "10394": {
      "op": "ADD"
    },
    "10395": {
      "op": "MSTORE"
    },
    "10396": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10403": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10405": {
      "op": "SHL"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10408": {
      "op": "DUP3"
    },
    "10409": {
      "op": "ADD"
    },
    "10410": {
      "op": "MSTORE"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10413": {
      "op": "ADD"
    },
    "10414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "10417": {
      "op": "JUMP"
    },
    "10418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 105,
      "value": "0x1462"
    },
    "10422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D47"
    },
    "10426": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10427": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10428": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "10429": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "10430": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "10432": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "10433": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "10434": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "10435": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10436": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10437": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 106,
      "value": "0x0"
    },
    "10439": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10440": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10441": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10442": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10444": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10446": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10447": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10449": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10450": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10451": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10452": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10459": {
      "op": "SHL"
    },
    "10460": {
      "op": "SUB"
    },
    "10461": {
      "op": "NOT"
    },
    "10462": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10469": {
      "op": "SHL"
    },
    "10470": {
      "op": "SUB"
    },
    "10471": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10472": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "10473": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10474": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10475": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "2"
    },
    "10476": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10477": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10478": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10479": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10480": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10481": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 107,
      "value": "0x28F9"
    },
    "10484": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10485": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "10488": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10489": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10496": {
      "op": "SHL"
    },
    "10497": {
      "op": "SUB"
    },
    "10498": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "2"
    },
    "10499": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10532": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10534": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10535": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10537": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10538": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10539": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10540": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "2"
    },
    "10541": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10542": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "2"
    },
    "10543": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "10544": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "10545": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10546": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10547": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10549": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10550": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10551": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10552": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10554": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10556": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10557": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10559": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10560": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10561": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10568": {
      "op": "SHL"
    },
    "10569": {
      "op": "SUB"
    },
    "10570": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "10571": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 108,
      "value": "0x29AB"
    },
    "10574": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10575": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10577": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10584": {
      "op": "SHL"
    },
    "10585": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10586": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10589": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10591": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10592": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "2"
    },
    "10593": {
      "op": "MSTORE"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10598": {
      "op": "DUP3"
    },
    "10599": {
      "op": "ADD"
    },
    "10600": {
      "op": "MSTORE"
    },
    "10601": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10636": {
      "op": "DUP3"
    },
    "10637": {
      "op": "ADD"
    },
    "10638": {
      "op": "MSTORE"
    },
    "10639": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10654": {
      "op": "SHL"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10657": {
      "op": "DUP3"
    },
    "10658": {
      "op": "ADD"
    },
    "10659": {
      "op": "MSTORE"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10662": {
      "op": "ADD"
    },
    "10663": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "10666": {
      "op": "JUMP"
    },
    "10667": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10668": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10670": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29B6"
    },
    "10673": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10674": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "10677": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10678": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10679": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10680": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "2"
    },
    "10681": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 109
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10688": {
      "op": "SHL"
    },
    "10689": {
      "op": "SUB"
    },
    "10690": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10691": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10698": {
      "op": "SHL"
    },
    "10699": {
      "op": "SUB"
    },
    "10700": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10701": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "2"
    },
    "10702": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10703": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F1"
    },
    "10706": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10707": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "2"
    },
    "10708": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10715": {
      "op": "SHL"
    },
    "10716": {
      "op": "SUB"
    },
    "10717": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10718": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E6"
    },
    "10721": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10722": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4B"
    },
    "10725": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10726": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10733": {
      "op": "SHL"
    },
    "10734": {
      "op": "SUB"
    },
    "10735": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10736": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "2"
    },
    "10737": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10738": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10739": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A21"
    },
    "10742": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10743": {
      "op": "POP"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10750": {
      "op": "SHL"
    },
    "10751": {
      "op": "SUB"
    },
    "10752": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10753": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10754": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "10755": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10757": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10758": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10759": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10760": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10762": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10764": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10765": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10766": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10767": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10769": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10770": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10771": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10772": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10773": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10774": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10775": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10776": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10777": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10778": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10779": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10780": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10781": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10782": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10784": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10785": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10786": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10787": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10788": {
      "op": "POP"
    },
    "10789": {
      "op": "POP"
    },
    "10790": {
      "op": "POP"
    },
    "10791": {
      "op": "POP"
    },
    "10792": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10793": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10794": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 110
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10801": {
      "op": "SHL"
    },
    "10802": {
      "op": "SUB"
    },
    "10803": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10804": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A3C"
    },
    "10807": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10808": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "10811": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10812": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10819": {
      "op": "SHL"
    },
    "10820": {
      "op": "SUB"
    },
    "10821": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10822": {
      "branch": 199,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "2"
    },
    "10823": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA4"
    },
    "10826": {
      "branch": 199,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10827": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10829": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10836": {
      "op": "SHL"
    },
    "10837": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10838": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10841": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10843": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10844": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "2"
    },
    "10845": {
      "op": "MSTORE"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10850": {
      "op": "DUP3"
    },
    "10851": {
      "op": "ADD"
    },
    "10852": {
      "op": "MSTORE"
    },
    "10853": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10888": {
      "op": "DUP3"
    },
    "10889": {
      "op": "ADD"
    },
    "10890": {
      "op": "MSTORE"
    },
    "10891": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10903": {
      "op": "SHL"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10906": {
      "op": "DUP3"
    },
    "10907": {
      "op": "ADD"
    },
    "10908": {
      "op": "MSTORE"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10911": {
      "op": "ADD"
    },
    "10912": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "10915": {
      "op": "JUMP"
    },
    "10916": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10923": {
      "op": "SHL"
    },
    "10924": {
      "op": "SUB"
    },
    "10925": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 111
    },
    "10926": {
      "branch": 200,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "2"
    },
    "10927": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B06"
    },
    "10930": {
      "branch": 200,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10931": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10933": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10940": {
      "op": "SHL"
    },
    "10941": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10942": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10945": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10947": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10948": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "2"
    },
    "10949": {
      "op": "MSTORE"
    },
    "10950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10952": {
      "op": "DUP1"
    },
    "10953": {
      "op": "DUP3"
    },
    "10954": {
      "op": "ADD"
    },
    "10955": {
      "op": "MSTORE"
    },
    "10956": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10991": {
      "op": "DUP3"
    },
    "10992": {
      "op": "ADD"
    },
    "10993": {
      "op": "MSTORE"
    },
    "10994": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11001": {
      "op": "SHL"
    },
    "11002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11004": {
      "op": "DUP3"
    },
    "11005": {
      "op": "ADD"
    },
    "11006": {
      "op": "MSTORE"
    },
    "11007": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11009": {
      "op": "ADD"
    },
    "11010": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "11013": {
      "op": "JUMP"
    },
    "11014": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11015": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 112,
      "value": "0x2B11"
    },
    "11018": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11019": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11020": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11021": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF9"
    },
    "11024": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11025": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11026": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 113,
      "value": "0x2B1C"
    },
    "11029": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11031": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11032": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C4"
    },
    "11035": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11036": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11043": {
      "op": "SHL"
    },
    "11044": {
      "op": "SUB"
    },
    "11045": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 114
    },
    "11046": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "2"
    },
    "11047": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11049": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11050": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11051": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11052": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11054": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11056": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11057": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11059": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11060": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11061": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11062": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11063": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11065": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11066": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11067": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B45"
    },
    "11070": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11071": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11072": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11073": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38B6"
    },
    "11076": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11077": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11078": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11079": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11080": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11081": {
      "op": "POP"
    },
    "11082": {
      "op": "POP"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11089": {
      "op": "SHL"
    },
    "11090": {
      "op": "SUB"
    },
    "11091": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 115
    },
    "11092": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "2"
    },
    "11093": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11095": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11096": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11097": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11098": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11100": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11102": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11103": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11105": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11106": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11107": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11108": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11109": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11111": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11112": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11113": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B73"
    },
    "11116": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11117": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11118": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11119": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x399E"
    },
    "11122": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11123": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11124": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11125": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11126": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11127": {
      "op": "POP"
    },
    "11128": {
      "op": "POP"
    },
    "11129": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 116,
      "value": "0x0"
    },
    "11131": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11132": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11133": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11134": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11136": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11138": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11139": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11141": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11142": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11143": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11144": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11145": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11152": {
      "op": "SHL"
    },
    "11153": {
      "op": "SUB"
    },
    "11154": {
      "op": "NOT"
    },
    "11155": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11162": {
      "op": "SHL"
    },
    "11163": {
      "op": "SUB"
    },
    "11164": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11165": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11166": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "11167": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11168": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11169": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "2"
    },
    "11170": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11171": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11172": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11173": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 117
    },
    "11174": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11175": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11176": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11177": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11178": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11179": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "2"
    },
    "11180": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11181": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11214": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11215": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "2"
    },
    "11216": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "11217": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "11218": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "11219": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11220": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "11221": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "11223": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 118,
      "value": "0x2BE0"
    },
    "11226": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "14"
    },
    "11227": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "14"
    },
    "11228": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B1D"
    },
    "11231": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "11232": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "11233": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "11234": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "11235": {
      "op": "POP"
    },
    "11236": {
      "op": "POP"
    },
    "11237": {
      "op": "POP"
    },
    "11238": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "14"
    },
    "11239": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "11240": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "11242": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 119,
      "value": "0x2BE0"
    },
    "11245": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "14"
    },
    "11246": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "14"
    },
    "11247": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B52"
    },
    "11250": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "14"
    },
    "11251": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11252": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11254": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11255": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11257": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11258": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C3C"
    },
    "11261": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11262": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11264": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11271": {
      "op": "SHL"
    },
    "11272": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11273": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11276": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11278": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11279": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "11280": {
      "op": "MSTORE"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11285": {
      "op": "DUP3"
    },
    "11286": {
      "op": "ADD"
    },
    "11287": {
      "op": "MSTORE"
    },
    "11288": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "11309": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "11311": {
      "op": "SHL"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11314": {
      "op": "DUP3"
    },
    "11315": {
      "op": "ADD"
    },
    "11316": {
      "op": "MSTORE"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11319": {
      "op": "ADD"
    },
    "11320": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC0"
    },
    "11323": {
      "op": "JUMP"
    },
    "11324": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11325": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 120,
      "value": "0x6"
    },
    "11327": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11328": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11331": {
      "op": "NOT"
    },
    "11332": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "11333": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11334": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11335": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 121,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "11368": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "11369": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11370": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11372": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11379": {
      "op": "SHL"
    },
    "11380": {
      "op": "SUB"
    },
    "11381": {
      "op": "SWAP1"
    },
    "11382": {
      "op": "SWAP2"
    },
    "11383": {
      "op": "AND"
    },
    "11384": {
      "op": "DUP2"
    },
    "11385": {
      "op": "MSTORE"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11388": {
      "op": "ADD"
    },
    "11389": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11391": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11392": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11393": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11394": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "11395": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11396": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11397": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11398": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11399": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11401": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C91"
    },
    "11404": {
      "fn": "ERC721._burn",
      "offset": [
        9742,
        9749
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11405": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1542"
    },
    "11408": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11409": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11410": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11411": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "POP",
      "path": "2"
    },
    "11412": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 122,
      "value": "0x2C9F"
    },
    "11415": {
      "fn": "ERC721._burn",
      "offset": [
        9782,
        9787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11416": {
      "fn": "ERC721._burn",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11418": {
      "fn": "ERC721._burn",
      "offset": [
        9801,
        9808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11419": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF9"
    },
    "11422": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11423": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11424": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 123,
      "value": "0x2CAA"
    },
    "11427": {
      "fn": "ERC721._burn",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11429": {
      "fn": "ERC721._burn",
      "offset": [
        9868,
        9875
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11430": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C4"
    },
    "11433": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11434": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11441": {
      "op": "SHL"
    },
    "11442": {
      "op": "SUB"
    },
    "11443": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 124
    },
    "11444": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "AND",
      "path": "2"
    },
    "11445": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11447": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11448": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11449": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11450": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11452": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11454": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11455": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11457": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11458": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11459": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11460": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11461": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11463": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11464": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11465": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD3"
    },
    "11468": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11469": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11470": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11471": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38B6"
    },
    "11474": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11475": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11476": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11477": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11478": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11479": {
      "op": "POP"
    },
    "11480": {
      "op": "POP"
    },
    "11481": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 125,
      "value": "0x0"
    },
    "11483": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11484": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11485": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11486": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11488": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11490": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11491": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11493": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11494": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11495": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11496": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11497": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11504": {
      "op": "SHL"
    },
    "11505": {
      "op": "SUB"
    },
    "11506": {
      "op": "NOT"
    },
    "11507": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "2"
    },
    "11508": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11509": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11510": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 126
    },
    "11511": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11512": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11513": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11520": {
      "op": "SHL"
    },
    "11521": {
      "op": "SUB"
    },
    "11522": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11523": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "AND",
      "path": "2"
    },
    "11524": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11525": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11558": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11559": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11560": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11561": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "LOG4",
      "path": "2"
    },
    "11562": {
      "fn": "ERC721._burn",
      "offset": [
        9701,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "11563": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "11564": {
      "fn": "ERC721._burn",
      "jump": "o",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11565": {
      "fn": "ERC721._safeMint",
      "offset": [
        8101,
        8209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11566": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 127,
      "value": "0xE98"
    },
    "11569": {
      "fn": "ERC721._safeMint",
      "offset": [
        8186,
        8188
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11570": {
      "fn": "ERC721._safeMint",
      "offset": [
        8190,
        8197
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11571": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11573": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11574": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11575": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11577": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "ADD",
      "path": "2"
    },
    "11578": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11580": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11581": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11582": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11584": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11585": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11586": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "11587": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x301C"
    },
    "11590": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8176,
        8202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11591": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11592": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "11594": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11595": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11602": {
      "op": "SHL"
    },
    "11603": {
      "op": "SUB"
    },
    "11604": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 128
    },
    "11605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11606": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11610": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11611": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11612": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "11613": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11618": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11620": {
      "op": "SHL"
    },
    "11621": {
      "op": "SUB"
    },
    "11622": {
      "op": "NOT"
    },
    "11623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11624": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "11628": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 129,
      "value": "0x40"
    },
    "11631": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11634": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11635": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "11636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11637": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11639": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11673": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11677": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11680": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11681": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11682": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11684": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11685": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11687": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11688": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11689": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DC4"
    },
    "11692": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11693": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11695": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11702": {
      "op": "SHL"
    },
    "11703": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11704": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11705": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11707": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11708": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC0"
    },
    "11711": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11712": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x394F"
    },
    "11715": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11716": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11717": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 130,
      "value": "0x6"
    },
    "11719": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11720": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11721": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11723": {
      "op": "NOT"
    },
    "11724": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "11725": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11727": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "11728": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11729": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11730": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 131,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "11763": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C69"
    },
    "11766": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "11767": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11768": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 132
    },
    "11771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11777": {
      "op": "SHL"
    },
    "11778": {
      "op": "SUB"
    },
    "11779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11787": {
      "op": "SHL"
    },
    "11788": {
      "op": "SUB"
    },
    "11789": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11790": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "2"
    },
    "11791": {
      "branch": 201,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11792": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5B"
    },
    "11795": {
      "branch": 201,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11796": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11798": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11805": {
      "op": "SHL"
    },
    "11806": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11807": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11810": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11812": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11813": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "2"
    },
    "11814": {
      "op": "MSTORE"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11819": {
      "op": "DUP3"
    },
    "11820": {
      "op": "ADD"
    },
    "11821": {
      "op": "MSTORE"
    },
    "11822": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11857": {
      "op": "DUP3"
    },
    "11858": {
      "op": "ADD"
    },
    "11859": {
      "op": "MSTORE"
    },
    "11860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11862": {
      "op": "ADD"
    },
    "11863": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "11866": {
      "op": "JUMP"
    },
    "11867": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11874": {
      "op": "SHL"
    },
    "11875": {
      "op": "SUB"
    },
    "11876": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 133
    },
    "11877": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11878": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "2"
    },
    "11879": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11881": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11882": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11883": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11884": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11886": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11888": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11889": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11890": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11891": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11893": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11894": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11895": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11896": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11897": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11898": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "2"
    },
    "11899": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11900": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11901": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11902": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11903": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11904": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11905": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11906": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11907": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11908": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11909": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11910": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11913": {
      "op": "NOT"
    },
    "11914": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "2"
    },
    "11915": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11916": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11917": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11918": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11919": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11920": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "2"
    },
    "11921": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11922": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11923": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11924": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 134
    },
    "11925": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11926": {
      "op": "SWAP2"
    },
    "11927": {
      "op": "DUP3"
    },
    "11928": {
      "op": "MSTORE"
    },
    "11929": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11962": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11963": {
      "op": "ADD"
    },
    "11964": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11966": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11967": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11968": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11969": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "2"
    },
    "11970": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11971": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "2"
    },
    "11972": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11973": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11974": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11975": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11976": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11977": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 135,
      "value": "0x2ED3"
    },
    "11980": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11981": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11982": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11983": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A29"
    },
    "11986": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11988": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 136,
      "value": "0x2EDF"
    },
    "11991": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11992": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11993": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11994": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11995": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304F"
    },
    "11998": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11999": {
      "branch": 202,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12000": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2390"
    },
    "12003": {
      "branch": 202,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12004": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12006": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12013": {
      "op": "SHL"
    },
    "12014": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12015": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12016": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12018": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "2"
    },
    "12019": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "12022": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12023": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B66"
    },
    "12026": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12027": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12028": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "12030": {
      "branch": 207,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12031": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F1F"
    },
    "12034": {
      "branch": 207,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12035": {
      "op": "POP"
    },
    "12036": {
      "op": "POP"
    },
    "12037": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 137,
      "value": "0x40"
    },
    "12039": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12040": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "12041": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12042": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12043": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "12044": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12045": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12046": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12047": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "12049": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12050": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12053": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "12055": {
      "op": "SHL"
    },
    "12056": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "12058": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12059": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "12060": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12061": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12062": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12063": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12064": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12065": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "12067": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12068": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12069": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "12070": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F49"
    },
    "12073": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12074": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 138
    },
    "12075": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F33"
    },
    "12078": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12079": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3934"
    },
    "12082": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12083": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12084": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12085": {
      "op": "POP"
    },
    "12086": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 139,
      "value": "0x2F42"
    },
    "12089": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12090": {
      "op": "POP"
    },
    "12091": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "12093": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12094": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B52"
    },
    "12097": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12098": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12099": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12100": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "10"
    },
    "12101": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F23"
    },
    "12104": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12105": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12106": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "12108": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12109": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12118": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12119": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "10"
    },
    "12120": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "12121": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F64"
    },
    "12124": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12125": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F64"
    },
    "12128": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3431"
    },
    "12131": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12132": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12133": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "12135": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "12136": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12137": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12138": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12139": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12140": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12141": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "12143": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "12144": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "12146": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "10"
    },
    "12147": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "10"
    },
    "12148": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "12150": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "12151": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12152": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "12153": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "12155": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12156": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12157": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "12158": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F8E"
    },
    "12161": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12162": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "12164": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12165": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "12166": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12167": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12168": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "12169": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12170": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "12171": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "12172": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12173": {
      "op": "POP"
    },
    "12174": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12175": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "12176": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12177": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "12178": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12179": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "10"
    },
    "12180": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "12181": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A21"
    },
    "12184": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12185": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 140,
      "value": "0x2FA3"
    },
    "12188": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "12190": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12191": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38B6"
    },
    "12194": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12195": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12196": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12197": {
      "op": "POP"
    },
    "12198": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 141,
      "value": "0x2FB0"
    },
    "12201": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "12203": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "10"
    },
    "12204": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3BB8"
    },
    "12207": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12208": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12209": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FBB"
    },
    "12212": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12213": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "12215": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x399E"
    },
    "12218": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12219": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12220": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF8"
    },
    "12222": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "10"
    },
    "12223": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12224": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12225": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12226": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "12227": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12228": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "10"
    },
    "12229": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FD0"
    },
    "12232": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12233": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FD0"
    },
    "12236": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x391E"
    },
    "12239": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12240": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12241": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "12243": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "12244": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "12245": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12250": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12252": {
      "op": "SHL"
    },
    "12253": {
      "op": "SUB"
    },
    "12254": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "10"
    },
    "12255": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "10"
    },
    "12256": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12257": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12258": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "12260": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "10"
    },
    "12261": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12262": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "12263": {
      "op": "POP"
    },
    "12264": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 142,
      "value": "0x2FF2"
    },
    "12267": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "12269": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "10"
    },
    "12270": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B52"
    },
    "12273": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12274": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12275": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "12276": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "10"
    },
    "12277": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F92"
    },
    "12280": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12281": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9660,
        9835
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12282": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "12284": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12285": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12287": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "12288": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12289": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF6"
    },
    "12292": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12293": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12295": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12302": {
      "op": "SHL"
    },
    "12303": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12304": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12305": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12307": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "12308": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC0"
    },
    "12311": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12312": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x394F"
    },
    "12315": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12316": {
      "fn": "ERC721._safeMint",
      "offset": [
        8430,
        8741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12317": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 143,
      "value": "0x3026"
    },
    "12320": {
      "fn": "ERC721._safeMint",
      "offset": [
        8561,
        8563
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12321": {
      "fn": "ERC721._safeMint",
      "offset": [
        8565,
        8572
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12322": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314D"
    },
    "12325": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12326": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12327": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 144,
      "value": "0x3033"
    },
    "12330": {
      "fn": "ERC721._safeMint",
      "offset": [
        8635,
        8636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12332": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12333": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12334": {
      "fn": "ERC721._safeMint",
      "offset": [
        8652,
        8657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12335": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304F"
    },
    "12338": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12339": {
      "branch": 203,
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12340": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF6"
    },
    "12343": {
      "branch": 203,
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12344": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12346": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12353": {
      "op": "SHL"
    },
    "12354": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12355": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12356": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12358": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "ADD",
      "path": "2"
    },
    "12359": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "12362": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12363": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B66"
    },
    "12366": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12376": {
      "op": "SHL"
    },
    "12377": {
      "op": "SUB"
    },
    "12378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "2"
    },
    "12380": {
      "op": "EXTCODESIZE"
    },
    "12381": {
      "op": "ISZERO"
    },
    "12382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3142"
    },
    "12385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12389": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12394": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12396": {
      "op": "SHL"
    },
    "12397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12405": {
      "op": "SHL"
    },
    "12406": {
      "op": "SUB"
    },
    "12407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "2"
    },
    "12409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12410": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "12415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12416": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3093"
    },
    "12419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12420": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "12421": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "2"
    },
    "12423": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12425": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12428": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BCC"
    },
    "12434": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "2"
    },
    "12444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "2"
    },
    "12449": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "2"
    },
    "12450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12451": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12453": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12456": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30CE"
    },
    "12459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12460": {
      "op": "POP"
    },
    "12461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12469": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12473": {
      "op": "NOT"
    },
    "12474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "2"
    },
    "12475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12480": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30CB"
    },
    "12483": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12484": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12485": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C09"
    },
    "12490": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12494": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12495": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3128"
    },
    "12498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12499": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30FC"
    },
    "12506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12507": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "2"
    },
    "12515": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "12517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12519": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "2"
    },
    "12520": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12527": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12528": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12531": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "12539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12541": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12546": {
      "op": "POP"
    },
    "12547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12549": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3120"
    },
    "12552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12553": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 145,
      "value": "0x40"
    },
    "12555": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12562": {
      "op": "SHL"
    },
    "12563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12565": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12567": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "2"
    },
    "12568": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "12571": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12572": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B66"
    },
    "12575": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12576": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12577": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12580": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12582": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "2"
    },
    "12583": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12584": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12591": {
      "op": "SHL"
    },
    "12592": {
      "op": "SUB"
    },
    "12593": {
      "op": "NOT"
    },
    "12594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "2",
      "statement": 146
    },
    "12595": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12600": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12602": {
      "op": "SHL"
    },
    "12603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "2"
    },
    "12604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12605": {
      "op": "POP"
    },
    "12606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A21"
    },
    "12609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12611": {
      "op": "POP"
    },
    "12612": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 147,
      "value": "0x1"
    },
    "12614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12615": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12616": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12618": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12619": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12620": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12621": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12628": {
      "op": "SHL"
    },
    "12629": {
      "op": "SUB"
    },
    "12630": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 148
    },
    "12631": {
      "branch": 204,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "2"
    },
    "12632": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A3"
    },
    "12635": {
      "branch": 204,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12636": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12638": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12645": {
      "op": "SHL"
    },
    "12646": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12647": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12650": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12652": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12653": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "2"
    },
    "12654": {
      "op": "DUP2"
    },
    "12655": {
      "op": "SWAP1"
    },
    "12656": {
      "op": "MSTORE"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12659": {
      "op": "DUP3"
    },
    "12660": {
      "op": "ADD"
    },
    "12661": {
      "op": "MSTORE"
    },
    "12662": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "12695": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12697": {
      "op": "DUP3"
    },
    "12698": {
      "op": "ADD"
    },
    "12699": {
      "op": "MSTORE"
    },
    "12700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12702": {
      "op": "ADD"
    },
    "12703": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "12706": {
      "op": "JUMP"
    },
    "12707": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12708": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12710": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12711": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12712": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12713": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12715": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12717": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12718": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12720": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12721": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12722": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12729": {
      "op": "SHL"
    },
    "12730": {
      "op": "SUB"
    },
    "12731": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "12732": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12733": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 149,
      "value": "0x3208"
    },
    "12736": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12737": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12739": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12746": {
      "op": "SHL"
    },
    "12747": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12748": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12751": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12753": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12754": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "2"
    },
    "12755": {
      "op": "MSTORE"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "12758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12760": {
      "op": "DUP3"
    },
    "12761": {
      "op": "ADD"
    },
    "12762": {
      "op": "MSTORE"
    },
    "12763": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12798": {
      "op": "DUP3"
    },
    "12799": {
      "op": "ADD"
    },
    "12800": {
      "op": "MSTORE"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "12807": {
      "op": "JUMP"
    },
    "12808": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12809": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 150,
      "value": "0x3214"
    },
    "12812": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12814": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12815": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12816": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF9"
    },
    "12819": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12820": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12827": {
      "op": "SHL"
    },
    "12828": {
      "op": "SUB"
    },
    "12829": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 151
    },
    "12830": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "2"
    },
    "12831": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12833": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12834": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12835": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12836": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12838": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12840": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12841": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12843": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12844": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12845": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12846": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12847": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12849": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12850": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12851": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x323D"
    },
    "12854": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12855": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12856": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12857": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x399E"
    },
    "12860": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12861": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12862": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12863": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12864": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12865": {
      "op": "POP"
    },
    "12866": {
      "op": "POP"
    },
    "12867": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 152,
      "value": "0x0"
    },
    "12869": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12870": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12871": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12872": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12874": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12876": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12877": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12879": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12880": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12881": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12882": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12883": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12890": {
      "op": "SHL"
    },
    "12891": {
      "op": "SUB"
    },
    "12892": {
      "op": "NOT"
    },
    "12893": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12900": {
      "op": "SHL"
    },
    "12901": {
      "op": "SUB"
    },
    "12902": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12903": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12904": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12905": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12906": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "2"
    },
    "12907": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12908": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12909": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12910": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 153
    },
    "12911": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12912": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12913": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12914": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12915": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12948": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12949": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12950": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12951": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12952": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12953": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12954": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12955": {
      "op": "JUMPDEST"
    },
    "12956": {
      "op": "DUP3"
    },
    "12957": {
      "op": "DUP1"
    },
    "12958": {
      "op": "SLOAD"
    },
    "12959": {
      "op": "PUSH2",
      "value": "0x32A7"
    },
    "12962": {
      "op": "SWAP1"
    },
    "12963": {
      "op": "PUSH2",
      "value": "0x3830"
    },
    "12966": {
      "jump": "i",
      "op": "JUMP"
    },
    "12967": {
      "op": "JUMPDEST"
    },
    "12968": {
      "op": "SWAP1"
    },
    "12969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12971": {
      "op": "MSTORE"
    },
    "12972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12976": {
      "op": "KECCAK256"
    },
    "12977": {
      "op": "SWAP1"
    },
    "12978": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12980": {
      "op": "ADD"
    },
    "12981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12983": {
      "op": "SWAP1"
    },
    "12984": {
      "op": "DIV"
    },
    "12985": {
      "op": "DUP2"
    },
    "12986": {
      "op": "ADD"
    },
    "12987": {
      "op": "SWAP3"
    },
    "12988": {
      "op": "DUP3"
    },
    "12989": {
      "op": "PUSH2",
      "value": "0x32C9"
    },
    "12992": {
      "op": "JUMPI"
    },
    "12993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12995": {
      "op": "DUP6"
    },
    "12996": {
      "op": "SSTORE"
    },
    "12997": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13000": {
      "op": "JUMP"
    },
    "13001": {
      "op": "JUMPDEST"
    },
    "13002": {
      "op": "DUP3"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13005": {
      "op": "LT"
    },
    "13006": {
      "op": "PUSH2",
      "value": "0x32E2"
    },
    "13009": {
      "op": "JUMPI"
    },
    "13010": {
      "op": "DUP1"
    },
    "13011": {
      "op": "MLOAD"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13014": {
      "op": "NOT"
    },
    "13015": {
      "op": "AND"
    },
    "13016": {
      "op": "DUP4"
    },
    "13017": {
      "op": "DUP1"
    },
    "13018": {
      "op": "ADD"
    },
    "13019": {
      "op": "OR"
    },
    "13020": {
      "op": "DUP6"
    },
    "13021": {
      "op": "SSTORE"
    },
    "13022": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13025": {
      "op": "JUMP"
    },
    "13026": {
      "op": "JUMPDEST"
    },
    "13027": {
      "op": "DUP3"
    },
    "13028": {
      "op": "DUP1"
    },
    "13029": {
      "op": "ADD"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13032": {
      "op": "ADD"
    },
    "13033": {
      "op": "DUP6"
    },
    "13034": {
      "op": "SSTORE"
    },
    "13035": {
      "op": "DUP3"
    },
    "13036": {
      "op": "ISZERO"
    },
    "13037": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13040": {
      "op": "JUMPI"
    },
    "13041": {
      "op": "SWAP2"
    },
    "13042": {
      "op": "DUP3"
    },
    "13043": {
      "op": "ADD"
    },
    "13044": {
      "op": "JUMPDEST"
    },
    "13045": {
      "op": "DUP3"
    },
    "13046": {
      "op": "DUP2"
    },
    "13047": {
      "op": "GT"
    },
    "13048": {
      "op": "ISZERO"
    },
    "13049": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13052": {
      "op": "JUMPI"
    },
    "13053": {
      "op": "DUP3"
    },
    "13054": {
      "op": "MLOAD"
    },
    "13055": {
      "op": "DUP3"
    },
    "13056": {
      "op": "SSTORE"
    },
    "13057": {
      "op": "SWAP2"
    },
    "13058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13060": {
      "op": "ADD"
    },
    "13061": {
      "op": "SWAP2"
    },
    "13062": {
      "op": "SWAP1"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13065": {
      "op": "ADD"
    },
    "13066": {
      "op": "SWAP1"
    },
    "13067": {
      "op": "PUSH2",
      "value": "0x32F4"
    },
    "13070": {
      "op": "JUMP"
    },
    "13071": {
      "op": "JUMPDEST"
    },
    "13072": {
      "op": "POP"
    },
    "13073": {
      "op": "PUSH2",
      "value": "0x331B"
    },
    "13076": {
      "op": "SWAP3"
    },
    "13077": {
      "op": "SWAP2"
    },
    "13078": {
      "op": "POP"
    },
    "13079": {
      "op": "PUSH2",
      "value": "0x331F"
    },
    "13082": {
      "jump": "i",
      "op": "JUMP"
    },
    "13083": {
      "op": "JUMPDEST"
    },
    "13084": {
      "op": "POP"
    },
    "13085": {
      "op": "SWAP1"
    },
    "13086": {
      "jump": "o",
      "op": "JUMP"
    },
    "13087": {
      "op": "JUMPDEST"
    },
    "13088": {
      "op": "JUMPDEST"
    },
    "13089": {
      "op": "DUP1"
    },
    "13090": {
      "op": "DUP3"
    },
    "13091": {
      "op": "GT"
    },
    "13092": {
      "op": "ISZERO"
    },
    "13093": {
      "op": "PUSH2",
      "value": "0x331B"
    },
    "13096": {
      "op": "JUMPI"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13099": {
      "op": "DUP2"
    },
    "13100": {
      "op": "SSTORE"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13103": {
      "op": "ADD"
    },
    "13104": {
      "op": "PUSH2",
      "value": "0x3320"
    },
    "13107": {
      "op": "JUMP"
    },
    "13108": {
      "op": "JUMPDEST"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13115": {
      "op": "SHL"
    },
    "13116": {
      "op": "SUB"
    },
    "13117": {
      "op": "NOT"
    },
    "13118": {
      "op": "DUP2"
    },
    "13119": {
      "op": "AND"
    },
    "13120": {
      "op": "DUP2"
    },
    "13121": {
      "op": "EQ"
    },
    "13122": {
      "op": "PUSH2",
      "value": "0x1462"
    },
    "13125": {
      "op": "JUMPI"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13128": {
      "op": "DUP1"
    },
    "13129": {
      "op": "REVERT"
    },
    "13130": {
      "op": "JUMPDEST"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13135": {
      "op": "DUP3"
    },
    "13136": {
      "op": "DUP5"
    },
    "13137": {
      "op": "SUB"
    },
    "13138": {
      "op": "SLT"
    },
    "13139": {
      "op": "ISZERO"
    },
    "13140": {
      "op": "PUSH2",
      "value": "0x335C"
    },
    "13143": {
      "op": "JUMPI"
    },
    "13144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13146": {
      "op": "DUP1"
    },
    "13147": {
      "op": "REVERT"
    },
    "13148": {
      "op": "JUMPDEST"
    },
    "13149": {
      "op": "DUP2"
    },
    "13150": {
      "op": "CALLDATALOAD"
    },
    "13151": {
      "op": "PUSH2",
      "value": "0x2BE0"
    },
    "13154": {
      "op": "DUP2"
    },
    "13155": {
      "op": "PUSH2",
      "value": "0x3334"
    },
    "13158": {
      "jump": "i",
      "op": "JUMP"
    },
    "13159": {
      "op": "JUMPDEST"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13162": {
      "op": "JUMPDEST"
    },
    "13163": {
      "op": "DUP4"
    },
    "13164": {
      "op": "DUP2"
    },
    "13165": {
      "op": "LT"
    },
    "13166": {
      "op": "ISZERO"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x3382"
    },
    "13170": {
      "op": "JUMPI"
    },
    "13171": {
      "op": "DUP2"
    },
    "13172": {
      "op": "DUP2"
    },
    "13173": {
      "op": "ADD"
    },
    "13174": {
      "op": "MLOAD"
    },
    "13175": {
      "op": "DUP4"
    },
    "13176": {
      "op": "DUP3"
    },
    "13177": {
      "op": "ADD"
    },
    "13178": {
      "op": "MSTORE"
    },
    "13179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13181": {
      "op": "ADD"
    },
    "13182": {
      "op": "PUSH2",
      "value": "0x336A"
    },
    "13185": {
      "op": "JUMP"
    },
    "13186": {
      "op": "JUMPDEST"
    },
    "13187": {
      "op": "DUP4"
    },
    "13188": {
      "op": "DUP2"
    },
    "13189": {
      "op": "GT"
    },
    "13190": {
      "op": "ISZERO"
    },
    "13191": {
      "op": "PUSH2",
      "value": "0x2390"
    },
    "13194": {
      "op": "JUMPI"
    },
    "13195": {
      "op": "POP"
    },
    "13196": {
      "op": "POP"
    },
    "13197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13199": {
      "op": "SWAP2"
    },
    "13200": {
      "op": "ADD"
    },
    "13201": {
      "op": "MSTORE"
    },
    "13202": {
      "jump": "o",
      "op": "JUMP"
    },
    "13203": {
      "op": "JUMPDEST"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13206": {
      "op": "DUP2"
    },
    "13207": {
      "op": "MLOAD"
    },
    "13208": {
      "op": "DUP1"
    },
    "13209": {
      "op": "DUP5"
    },
    "13210": {
      "op": "MSTORE"
    },
    "13211": {
      "op": "PUSH2",
      "value": "0x33AB"
    },
    "13214": {
      "op": "DUP2"
    },
    "13215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13217": {
      "op": "DUP7"
    },
    "13218": {
      "op": "ADD"
    },
    "13219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13221": {
      "op": "DUP7"
    },
    "13222": {
      "op": "ADD"
    },
    "13223": {
      "op": "PUSH2",
      "value": "0x3367"
    },
    "13226": {
      "jump": "i",
      "op": "JUMP"
    },
    "13227": {
      "op": "JUMPDEST"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13230": {
      "op": "ADD"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13233": {
      "op": "NOT"
    },
    "13234": {
      "op": "AND"
    },
    "13235": {
      "op": "SWAP3"
    },
    "13236": {
      "op": "SWAP1"
    },
    "13237": {
      "op": "SWAP3"
    },
    "13238": {
      "op": "ADD"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13241": {
      "op": "ADD"
    },
    "13242": {
      "op": "SWAP3"
    },
    "13243": {
      "op": "SWAP2"
    },
    "13244": {
      "op": "POP"
    },
    "13245": {
      "op": "POP"
    },
    "13246": {
      "jump": "o",
      "op": "JUMP"
    },
    "13247": {
      "op": "JUMPDEST"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13250": {
      "op": "DUP2"
    },
    "13251": {
      "op": "MSTORE"
    },
    "13252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13254": {
      "op": "PUSH2",
      "value": "0x2BE0"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13259": {
      "op": "DUP4"
    },
    "13260": {
      "op": "ADD"
    },
    "13261": {
      "op": "DUP5"
    },
    "13262": {
      "op": "PUSH2",
      "value": "0x3393"
    },
    "13265": {
      "jump": "i",
      "op": "JUMP"
    },
    "13266": {
      "op": "JUMPDEST"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13271": {
      "op": "DUP3"
    },
    "13272": {
      "op": "DUP5"
    },
    "13273": {
      "op": "SUB"
    },
    "13274": {
      "op": "SLT"
    },
    "13275": {
      "op": "ISZERO"
    },
    "13276": {
      "op": "PUSH2",
      "value": "0x33E4"
    },
    "13279": {
      "op": "JUMPI"
    },
    "13280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13282": {
      "op": "DUP1"
    },
    "13283": {
      "op": "REVERT"
    },
    "13284": {
      "op": "JUMPDEST"
    },
    "13285": {
      "op": "POP"
    },
    "13286": {
      "op": "CALLDATALOAD"
    },
    "13287": {
      "op": "SWAP2"
    },
    "13288": {
      "op": "SWAP1"
    },
    "13289": {
      "op": "POP"
    },
    "13290": {
      "jump": "o",
      "op": "JUMP"
    },
    "13291": {
      "op": "JUMPDEST"
    },
    "13292": {
      "op": "DUP1"
    },
    "13293": {
      "op": "CALLDATALOAD"
    },
    "13294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13300": {
      "op": "SHL"
    },
    "13301": {
      "op": "SUB"
    },
    "13302": {
      "op": "DUP2"
    },
    "13303": {
      "op": "AND"
    },
    "13304": {
      "op": "DUP2"
    },
    "13305": {
      "op": "EQ"
    },
    "13306": {
      "op": "PUSH2",
      "value": "0x3402"
    },
    "13309": {
      "op": "JUMPI"
    },
    "13310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13312": {
      "op": "DUP1"
    },
    "13313": {
      "op": "REVERT"
    },
    "13314": {
      "op": "JUMPDEST"
    },
    "13315": {
      "op": "SWAP2"
    },
    "13316": {
      "op": "SWAP1"
    },
    "13317": {
      "op": "POP"
    },
    "13318": {
      "jump": "o",
      "op": "JUMP"
    },
    "13319": {
      "op": "JUMPDEST"
    },
    "13320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13322": {
      "op": "DUP1"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13325": {
      "op": "DUP4"
    },
    "13326": {
      "op": "DUP6"
    },
    "13327": {
      "op": "SUB"
    },
    "13328": {
      "op": "SLT"
    },
    "13329": {
      "op": "ISZERO"
    },
    "13330": {
      "op": "PUSH2",
      "value": "0x341A"
    },
    "13333": {
      "op": "JUMPI"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13336": {
      "op": "DUP1"
    },
    "13337": {
      "op": "REVERT"
    },
    "13338": {
      "op": "JUMPDEST"
    },
    "13339": {
      "op": "PUSH2",
      "value": "0x3423"
    },
    "13342": {
      "op": "DUP4"
    },
    "13343": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13346": {
      "jump": "i",
      "op": "JUMP"
    },
    "13347": {
      "op": "JUMPDEST"
    },
    "13348": {
      "op": "SWAP5"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13351": {
      "op": "SWAP4"
    },
    "13352": {
      "op": "SWAP1"
    },
    "13353": {
      "op": "SWAP4"
    },
    "13354": {
      "op": "ADD"
    },
    "13355": {
      "op": "CALLDATALOAD"
    },
    "13356": {
      "op": "SWAP4"
    },
    "13357": {
      "op": "POP"
    },
    "13358": {
      "op": "POP"
    },
    "13359": {
      "op": "POP"
    },
    "13360": {
      "jump": "o",
      "op": "JUMP"
    },
    "13361": {
      "op": "JUMPDEST"
    },
    "13362": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13369": {
      "op": "SHL"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13372": {
      "op": "MSTORE"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13375": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13377": {
      "op": "MSTORE"
    },
    "13378": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13382": {
      "op": "REVERT"
    },
    "13383": {
      "op": "JUMPDEST"
    },
    "13384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13386": {
      "op": "MLOAD"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13389": {
      "op": "DUP3"
    },
    "13390": {
      "op": "ADD"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13393": {
      "op": "NOT"
    },
    "13394": {
      "op": "AND"
    },
    "13395": {
      "op": "DUP2"
    },
    "13396": {
      "op": "ADD"
    },
    "13397": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13406": {
      "op": "DUP2"
    },
    "13407": {
      "op": "GT"
    },
    "13408": {
      "op": "DUP3"
    },
    "13409": {
      "op": "DUP3"
    },
    "13410": {
      "op": "LT"
    },
    "13411": {
      "op": "OR"
    },
    "13412": {
      "op": "ISZERO"
    },
    "13413": {
      "op": "PUSH2",
      "value": "0x3470"
    },
    "13416": {
      "op": "JUMPI"
    },
    "13417": {
      "op": "PUSH2",
      "value": "0x3470"
    },
    "13420": {
      "op": "PUSH2",
      "value": "0x3431"
    },
    "13423": {
      "jump": "i",
      "op": "JUMP"
    },
    "13424": {
      "op": "JUMPDEST"
    },
    "13425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13427": {
      "op": "MSTORE"
    },
    "13428": {
      "op": "SWAP2"
    },
    "13429": {
      "op": "SWAP1"
    },
    "13430": {
      "op": "POP"
    },
    "13431": {
      "jump": "o",
      "op": "JUMP"
    },
    "13432": {
      "op": "JUMPDEST"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13435": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13444": {
      "op": "DUP4"
    },
    "13445": {
      "op": "GT"
    },
    "13446": {
      "op": "ISZERO"
    },
    "13447": {
      "op": "PUSH2",
      "value": "0x3492"
    },
    "13450": {
      "op": "JUMPI"
    },
    "13451": {
      "op": "PUSH2",
      "value": "0x3492"
    },
    "13454": {
      "op": "PUSH2",
      "value": "0x3431"
    },
    "13457": {
      "jump": "i",
      "op": "JUMP"
    },
    "13458": {
      "op": "JUMPDEST"
    },
    "13459": {
      "op": "PUSH2",
      "value": "0x34A5"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13464": {
      "op": "DUP5"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13468": {
      "op": "NOT"
    },
    "13469": {
      "op": "AND"
    },
    "13470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13472": {
      "op": "ADD"
    },
    "13473": {
      "op": "PUSH2",
      "value": "0x3447"
    },
    "13476": {
      "jump": "i",
      "op": "JUMP"
    },
    "13477": {
      "op": "JUMPDEST"
    },
    "13478": {
      "op": "SWAP1"
    },
    "13479": {
      "op": "POP"
    },
    "13480": {
      "op": "DUP3"
    },
    "13481": {
      "op": "DUP2"
    },
    "13482": {
      "op": "MSTORE"
    },
    "13483": {
      "op": "DUP4"
    },
    "13484": {
      "op": "DUP4"
    },
    "13485": {
      "op": "DUP4"
    },
    "13486": {
      "op": "ADD"
    },
    "13487": {
      "op": "GT"
    },
    "13488": {
      "op": "ISZERO"
    },
    "13489": {
      "op": "PUSH2",
      "value": "0x34B9"
    },
    "13492": {
      "op": "JUMPI"
    },
    "13493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13495": {
      "op": "DUP1"
    },
    "13496": {
      "op": "REVERT"
    },
    "13497": {
      "op": "JUMPDEST"
    },
    "13498": {
      "op": "DUP3"
    },
    "13499": {
      "op": "DUP3"
    },
    "13500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13502": {
      "op": "DUP4"
    },
    "13503": {
      "op": "ADD"
    },
    "13504": {
      "op": "CALLDATACOPY"
    },
    "13505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13509": {
      "op": "DUP5"
    },
    "13510": {
      "op": "DUP4"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "ADD"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "SWAP4"
    },
    "13515": {
      "op": "SWAP3"
    },
    "13516": {
      "op": "POP"
    },
    "13517": {
      "op": "POP"
    },
    "13518": {
      "op": "POP"
    },
    "13519": {
      "jump": "o",
      "op": "JUMP"
    },
    "13520": {
      "op": "JUMPDEST"
    },
    "13521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13525": {
      "op": "DUP3"
    },
    "13526": {
      "op": "DUP5"
    },
    "13527": {
      "op": "SUB"
    },
    "13528": {
      "op": "SLT"
    },
    "13529": {
      "op": "ISZERO"
    },
    "13530": {
      "op": "PUSH2",
      "value": "0x34E2"
    },
    "13533": {
      "op": "JUMPI"
    },
    "13534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13536": {
      "op": "DUP1"
    },
    "13537": {
      "op": "REVERT"
    },
    "13538": {
      "op": "JUMPDEST"
    },
    "13539": {
      "op": "DUP2"
    },
    "13540": {
      "op": "CALLDATALOAD"
    },
    "13541": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13550": {
      "op": "DUP2"
    },
    "13551": {
      "op": "GT"
    },
    "13552": {
      "op": "ISZERO"
    },
    "13553": {
      "op": "PUSH2",
      "value": "0x34F9"
    },
    "13556": {
      "op": "JUMPI"
    },
    "13557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13559": {
      "op": "DUP1"
    },
    "13560": {
      "op": "REVERT"
    },
    "13561": {
      "op": "JUMPDEST"
    },
    "13562": {
      "op": "DUP3"
    },
    "13563": {
      "op": "ADD"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13566": {
      "op": "DUP2"
    },
    "13567": {
      "op": "ADD"
    },
    "13568": {
      "op": "DUP5"
    },
    "13569": {
      "op": "SGT"
    },
    "13570": {
      "op": "PUSH2",
      "value": "0x350A"
    },
    "13573": {
      "op": "JUMPI"
    },
    "13574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13576": {
      "op": "DUP1"
    },
    "13577": {
      "op": "REVERT"
    },
    "13578": {
      "op": "JUMPDEST"
    },
    "13579": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "13582": {
      "op": "DUP5"
    },
    "13583": {
      "op": "DUP3"
    },
    "13584": {
      "op": "CALLDATALOAD"
    },
    "13585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13587": {
      "op": "DUP5"
    },
    "13588": {
      "op": "ADD"
    },
    "13589": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "13592": {
      "jump": "i",
      "op": "JUMP"
    },
    "13593": {
      "op": "JUMPDEST"
    },
    "13594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13596": {
      "op": "DUP1"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13601": {
      "op": "DUP5"
    },
    "13602": {
      "op": "DUP7"
    },
    "13603": {
      "op": "SUB"
    },
    "13604": {
      "op": "SLT"
    },
    "13605": {
      "op": "ISZERO"
    },
    "13606": {
      "op": "PUSH2",
      "value": "0x352E"
    },
    "13609": {
      "op": "JUMPI"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13612": {
      "op": "DUP1"
    },
    "13613": {
      "op": "REVERT"
    },
    "13614": {
      "op": "JUMPDEST"
    },
    "13615": {
      "op": "PUSH2",
      "value": "0x3537"
    },
    "13618": {
      "op": "DUP5"
    },
    "13619": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13622": {
      "jump": "i",
      "op": "JUMP"
    },
    "13623": {
      "op": "JUMPDEST"
    },
    "13624": {
      "op": "SWAP3"
    },
    "13625": {
      "op": "POP"
    },
    "13626": {
      "op": "PUSH2",
      "value": "0x3545"
    },
    "13629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13631": {
      "op": "DUP6"
    },
    "13632": {
      "op": "ADD"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13636": {
      "jump": "i",
      "op": "JUMP"
    },
    "13637": {
      "op": "JUMPDEST"
    },
    "13638": {
      "op": "SWAP2"
    },
    "13639": {
      "op": "POP"
    },
    "13640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13642": {
      "op": "DUP5"
    },
    "13643": {
      "op": "ADD"
    },
    "13644": {
      "op": "CALLDATALOAD"
    },
    "13645": {
      "op": "SWAP1"
    },
    "13646": {
      "op": "POP"
    },
    "13647": {
      "op": "SWAP3"
    },
    "13648": {
      "op": "POP"
    },
    "13649": {
      "op": "SWAP3"
    },
    "13650": {
      "op": "POP"
    },
    "13651": {
      "op": "SWAP3"
    },
    "13652": {
      "jump": "o",
      "op": "JUMP"
    },
    "13653": {
      "op": "JUMPDEST"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13656": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13665": {
      "op": "DUP3"
    },
    "13666": {
      "op": "GT"
    },
    "13667": {
      "op": "ISZERO"
    },
    "13668": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13671": {
      "op": "JUMPI"
    },
    "13672": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13675": {
      "op": "PUSH2",
      "value": "0x3431"
    },
    "13678": {
      "jump": "i",
      "op": "JUMP"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13683": {
      "op": "SHL"
    },
    "13684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13686": {
      "op": "ADD"
    },
    "13687": {
      "op": "SWAP1"
    },
    "13688": {
      "jump": "o",
      "op": "JUMP"
    },
    "13689": {
      "op": "JUMPDEST"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13692": {
      "op": "DUP3"
    },
    "13693": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13695": {
      "op": "DUP4"
    },
    "13696": {
      "op": "ADD"
    },
    "13697": {
      "op": "SLT"
    },
    "13698": {
      "op": "PUSH2",
      "value": "0x358A"
    },
    "13701": {
      "op": "JUMPI"
    },
    "13702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13704": {
      "op": "DUP1"
    },
    "13705": {
      "op": "REVERT"
    },
    "13706": {
      "op": "JUMPDEST"
    },
    "13707": {
      "op": "DUP2"
    },
    "13708": {
      "op": "CALLDATALOAD"
    },
    "13709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13711": {
      "op": "PUSH2",
      "value": "0x359F"
    },
    "13714": {
      "op": "PUSH2",
      "value": "0x359A"
    },
    "13717": {
      "op": "DUP4"
    },
    "13718": {
      "op": "PUSH2",
      "value": "0x3555"
    },
    "13721": {
      "jump": "i",
      "op": "JUMP"
    },
    "13722": {
      "op": "JUMPDEST"
    },
    "13723": {
      "op": "PUSH2",
      "value": "0x3447"
    },
    "13726": {
      "jump": "i",
      "op": "JUMP"
    },
    "13727": {
      "op": "JUMPDEST"
    },
    "13728": {
      "op": "DUP3"
    },
    "13729": {
      "op": "DUP2"
    },
    "13730": {
      "op": "MSTORE"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13733": {
      "op": "SWAP3"
    },
    "13734": {
      "op": "SWAP1"
    },
    "13735": {
      "op": "SWAP3"
    },
    "13736": {
      "op": "SHL"
    },
    "13737": {
      "op": "DUP5"
    },
    "13738": {
      "op": "ADD"
    },
    "13739": {
      "op": "DUP2"
    },
    "13740": {
      "op": "ADD"
    },
    "13741": {
      "op": "SWAP2"
    },
    "13742": {
      "op": "DUP2"
    },
    "13743": {
      "op": "DUP2"
    },
    "13744": {
      "op": "ADD"
    },
    "13745": {
      "op": "SWAP1"
    },
    "13746": {
      "op": "DUP7"
    },
    "13747": {
      "op": "DUP5"
    },
    "13748": {
      "op": "GT"
    },
    "13749": {
      "op": "ISZERO"
    },
    "13750": {
      "op": "PUSH2",
      "value": "0x35BE"
    },
    "13753": {
      "op": "JUMPI"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13756": {
      "op": "DUP1"
    },
    "13757": {
      "op": "REVERT"
    },
    "13758": {
      "op": "JUMPDEST"
    },
    "13759": {
      "op": "DUP3"
    },
    "13760": {
      "op": "DUP7"
    },
    "13761": {
      "op": "ADD"
    },
    "13762": {
      "op": "JUMPDEST"
    },
    "13763": {
      "op": "DUP5"
    },
    "13764": {
      "op": "DUP2"
    },
    "13765": {
      "op": "LT"
    },
    "13766": {
      "op": "ISZERO"
    },
    "13767": {
      "op": "PUSH2",
      "value": "0x35E0"
    },
    "13770": {
      "op": "JUMPI"
    },
    "13771": {
      "op": "PUSH2",
      "value": "0x35D3"
    },
    "13774": {
      "op": "DUP2"
    },
    "13775": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13778": {
      "jump": "i",
      "op": "JUMP"
    },
    "13779": {
      "op": "JUMPDEST"
    },
    "13780": {
      "op": "DUP4"
    },
    "13781": {
      "op": "MSTORE"
    },
    "13782": {
      "op": "SWAP2"
    },
    "13783": {
      "op": "DUP4"
    },
    "13784": {
      "op": "ADD"
    },
    "13785": {
      "op": "SWAP2"
    },
    "13786": {
      "op": "DUP4"
    },
    "13787": {
      "op": "ADD"
    },
    "13788": {
      "op": "PUSH2",
      "value": "0x35C2"
    },
    "13791": {
      "op": "JUMP"
    },
    "13792": {
      "op": "JUMPDEST"
    },
    "13793": {
      "op": "POP"
    },
    "13794": {
      "op": "SWAP7"
    },
    "13795": {
      "op": "SWAP6"
    },
    "13796": {
      "op": "POP"
    },
    "13797": {
      "op": "POP"
    },
    "13798": {
      "op": "POP"
    },
    "13799": {
      "op": "POP"
    },
    "13800": {
      "op": "POP"
    },
    "13801": {
      "op": "POP"
    },
    "13802": {
      "jump": "o",
      "op": "JUMP"
    },
    "13803": {
      "op": "JUMPDEST"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13808": {
      "op": "DUP3"
    },
    "13809": {
      "op": "DUP5"
    },
    "13810": {
      "op": "SUB"
    },
    "13811": {
      "op": "SLT"
    },
    "13812": {
      "op": "ISZERO"
    },
    "13813": {
      "op": "PUSH2",
      "value": "0x35FD"
    },
    "13816": {
      "op": "JUMPI"
    },
    "13817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13819": {
      "op": "DUP1"
    },
    "13820": {
      "op": "REVERT"
    },
    "13821": {
      "op": "JUMPDEST"
    },
    "13822": {
      "op": "DUP2"
    },
    "13823": {
      "op": "CALLDATALOAD"
    },
    "13824": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13833": {
      "op": "DUP2"
    },
    "13834": {
      "op": "GT"
    },
    "13835": {
      "op": "ISZERO"
    },
    "13836": {
      "op": "PUSH2",
      "value": "0x3614"
    },
    "13839": {
      "op": "JUMPI"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13842": {
      "op": "DUP1"
    },
    "13843": {
      "op": "REVERT"
    },
    "13844": {
      "op": "JUMPDEST"
    },
    "13845": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "13848": {
      "op": "DUP5"
    },
    "13849": {
      "op": "DUP3"
    },
    "13850": {
      "op": "DUP6"
    },
    "13851": {
      "op": "ADD"
    },
    "13852": {
      "op": "PUSH2",
      "value": "0x3579"
    },
    "13855": {
      "jump": "i",
      "op": "JUMP"
    },
    "13856": {
      "op": "JUMPDEST"
    },
    "13857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13861": {
      "op": "DUP3"
    },
    "13862": {
      "op": "DUP5"
    },
    "13863": {
      "op": "SUB"
    },
    "13864": {
      "op": "SLT"
    },
    "13865": {
      "op": "ISZERO"
    },
    "13866": {
      "op": "PUSH2",
      "value": "0x3632"
    },
    "13869": {
      "op": "JUMPI"
    },
    "13870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13872": {
      "op": "DUP1"
    },
    "13873": {
      "op": "REVERT"
    },
    "13874": {
      "op": "JUMPDEST"
    },
    "13875": {
      "op": "PUSH2",
      "value": "0x2BE0"
    },
    "13878": {
      "op": "DUP3"
    },
    "13879": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13882": {
      "jump": "i",
      "op": "JUMP"
    },
    "13883": {
      "op": "JUMPDEST"
    },
    "13884": {
      "op": "DUP1"
    },
    "13885": {
      "op": "CALLDATALOAD"
    },
    "13886": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13888": {
      "op": "DUP2"
    },
    "13889": {
      "op": "AND"
    },
    "13890": {
      "op": "DUP2"
    },
    "13891": {
      "op": "EQ"
    },
    "13892": {
      "op": "PUSH2",
      "value": "0x3402"
    },
    "13895": {
      "op": "JUMPI"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13898": {
      "op": "DUP1"
    },
    "13899": {
      "op": "REVERT"
    },
    "13900": {
      "op": "JUMPDEST"
    },
    "13901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13905": {
      "op": "DUP3"
    },
    "13906": {
      "op": "DUP5"
    },
    "13907": {
      "op": "SUB"
    },
    "13908": {
      "op": "SLT"
    },
    "13909": {
      "op": "ISZERO"
    },
    "13910": {
      "op": "PUSH2",
      "value": "0x365E"
    },
    "13913": {
      "op": "JUMPI"
    },
    "13914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13916": {
      "op": "DUP1"
    },
    "13917": {
      "op": "REVERT"
    },
    "13918": {
      "op": "JUMPDEST"
    },
    "13919": {
      "op": "PUSH2",
      "value": "0x2BE0"
    },
    "13922": {
      "op": "DUP3"
    },
    "13923": {
      "op": "PUSH2",
      "value": "0x363B"
    },
    "13926": {
      "jump": "i",
      "op": "JUMP"
    },
    "13927": {
      "op": "JUMPDEST"
    },
    "13928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13930": {
      "op": "DUP1"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13933": {
      "op": "DUP4"
    },
    "13934": {
      "op": "DUP6"
    },
    "13935": {
      "op": "SUB"
    },
    "13936": {
      "op": "SLT"
    },
    "13937": {
      "op": "ISZERO"
    },
    "13938": {
      "op": "PUSH2",
      "value": "0x367A"
    },
    "13941": {
      "op": "JUMPI"
    },
    "13942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13944": {
      "op": "DUP1"
    },
    "13945": {
      "op": "REVERT"
    },
    "13946": {
      "op": "JUMPDEST"
    },
    "13947": {
      "op": "PUSH2",
      "value": "0x3683"
    },
    "13950": {
      "op": "DUP4"
    },
    "13951": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "13954": {
      "jump": "i",
      "op": "JUMP"
    },
    "13955": {
      "op": "JUMPDEST"
    },
    "13956": {
      "op": "SWAP2"
    },
    "13957": {
      "op": "POP"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13960": {
      "op": "DUP4"
    },
    "13961": {
      "op": "ADD"
    },
    "13962": {
      "op": "CALLDATALOAD"
    },
    "13963": {
      "op": "DUP1"
    },
    "13964": {
      "op": "ISZERO"
    },
    "13965": {
      "op": "ISZERO"
    },
    "13966": {
      "op": "DUP2"
    },
    "13967": {
      "op": "EQ"
    },
    "13968": {
      "op": "PUSH2",
      "value": "0x3698"
    },
    "13971": {
      "op": "JUMPI"
    },
    "13972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13974": {
      "op": "DUP1"
    },
    "13975": {
      "op": "REVERT"
    },
    "13976": {
      "op": "JUMPDEST"
    },
    "13977": {
      "op": "DUP1"
    },
    "13978": {
      "op": "SWAP2"
    },
    "13979": {
      "op": "POP"
    },
    "13980": {
      "op": "POP"
    },
    "13981": {
      "op": "SWAP3"
    },
    "13982": {
      "op": "POP"
    },
    "13983": {
      "op": "SWAP3"
    },
    "13984": {
      "op": "SWAP1"
    },
    "13985": {
      "op": "POP"
    },
    "13986": {
      "jump": "o",
      "op": "JUMP"
    },
    "13987": {
      "op": "JUMPDEST"
    },
    "13988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13990": {
      "op": "DUP1"
    },
    "13991": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13993": {
      "op": "DUP4"
    },
    "13994": {
      "op": "DUP6"
    },
    "13995": {
      "op": "SUB"
    },
    "13996": {
      "op": "SLT"
    },
    "13997": {
      "op": "ISZERO"
    },
    "13998": {
      "op": "PUSH2",
      "value": "0x36B6"
    },
    "14001": {
      "op": "JUMPI"
    },
    "14002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14004": {
      "op": "DUP1"
    },
    "14005": {
      "op": "REVERT"
    },
    "14006": {
      "op": "JUMPDEST"
    },
    "14007": {
      "op": "DUP3"
    },
    "14008": {
      "op": "CALLDATALOAD"
    },
    "14009": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14018": {
      "op": "DUP1"
    },
    "14019": {
      "op": "DUP3"
    },
    "14020": {
      "op": "GT"
    },
    "14021": {
      "op": "ISZERO"
    },
    "14022": {
      "op": "PUSH2",
      "value": "0x36CE"
    },
    "14025": {
      "op": "JUMPI"
    },
    "14026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14028": {
      "op": "DUP1"
    },
    "14029": {
      "op": "REVERT"
    },
    "14030": {
      "op": "JUMPDEST"
    },
    "14031": {
      "op": "PUSH2",
      "value": "0x36DA"
    },
    "14034": {
      "op": "DUP7"
    },
    "14035": {
      "op": "DUP4"
    },
    "14036": {
      "op": "DUP8"
    },
    "14037": {
      "op": "ADD"
    },
    "14038": {
      "op": "PUSH2",
      "value": "0x3579"
    },
    "14041": {
      "jump": "i",
      "op": "JUMP"
    },
    "14042": {
      "op": "JUMPDEST"
    },
    "14043": {
      "op": "SWAP4"
    },
    "14044": {
      "op": "POP"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14047": {
      "op": "SWAP2"
    },
    "14048": {
      "op": "POP"
    },
    "14049": {
      "op": "DUP2"
    },
    "14050": {
      "op": "DUP6"
    },
    "14051": {
      "op": "ADD"
    },
    "14052": {
      "op": "CALLDATALOAD"
    },
    "14053": {
      "op": "DUP2"
    },
    "14054": {
      "op": "DUP2"
    },
    "14055": {
      "op": "GT"
    },
    "14056": {
      "op": "ISZERO"
    },
    "14057": {
      "op": "PUSH2",
      "value": "0x36F1"
    },
    "14060": {
      "op": "JUMPI"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14063": {
      "op": "DUP1"
    },
    "14064": {
      "op": "REVERT"
    },
    "14065": {
      "op": "JUMPDEST"
    },
    "14066": {
      "op": "DUP6"
    },
    "14067": {
      "op": "ADD"
    },
    "14068": {
      "op": "SWAP1"
    },
    "14069": {
      "op": "POP"
    },
    "14070": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14072": {
      "op": "DUP2"
    },
    "14073": {
      "op": "ADD"
    },
    "14074": {
      "op": "DUP7"
    },
    "14075": {
      "op": "SGT"
    },
    "14076": {
      "op": "PUSH2",
      "value": "0x3704"
    },
    "14079": {
      "op": "JUMPI"
    },
    "14080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14082": {
      "op": "DUP1"
    },
    "14083": {
      "op": "REVERT"
    },
    "14084": {
      "op": "JUMPDEST"
    },
    "14085": {
      "op": "DUP1"
    },
    "14086": {
      "op": "CALLDATALOAD"
    },
    "14087": {
      "op": "PUSH2",
      "value": "0x3712"
    },
    "14090": {
      "op": "PUSH2",
      "value": "0x359A"
    },
    "14093": {
      "op": "DUP3"
    },
    "14094": {
      "op": "PUSH2",
      "value": "0x3555"
    },
    "14097": {
      "jump": "i",
      "op": "JUMP"
    },
    "14098": {
      "op": "JUMPDEST"
    },
    "14099": {
      "op": "DUP2"
    },
    "14100": {
      "op": "DUP2"
    },
    "14101": {
      "op": "MSTORE"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14104": {
      "op": "SWAP2"
    },
    "14105": {
      "op": "SWAP1"
    },
    "14106": {
      "op": "SWAP2"
    },
    "14107": {
      "op": "SHL"
    },
    "14108": {
      "op": "DUP3"
    },
    "14109": {
      "op": "ADD"
    },
    "14110": {
      "op": "DUP4"
    },
    "14111": {
      "op": "ADD"
    },
    "14112": {
      "op": "SWAP1"
    },
    "14113": {
      "op": "DUP4"
    },
    "14114": {
      "op": "DUP2"
    },
    "14115": {
      "op": "ADD"
    },
    "14116": {
      "op": "SWAP1"
    },
    "14117": {
      "op": "DUP9"
    },
    "14118": {
      "op": "DUP4"
    },
    "14119": {
      "op": "GT"
    },
    "14120": {
      "op": "ISZERO"
    },
    "14121": {
      "op": "PUSH2",
      "value": "0x3731"
    },
    "14124": {
      "op": "JUMPI"
    },
    "14125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14127": {
      "op": "DUP1"
    },
    "14128": {
      "op": "REVERT"
    },
    "14129": {
      "op": "JUMPDEST"
    },
    "14130": {
      "op": "SWAP3"
    },
    "14131": {
      "op": "DUP5"
    },
    "14132": {
      "op": "ADD"
    },
    "14133": {
      "op": "SWAP3"
    },
    "14134": {
      "op": "JUMPDEST"
    },
    "14135": {
      "op": "DUP3"
    },
    "14136": {
      "op": "DUP5"
    },
    "14137": {
      "op": "LT"
    },
    "14138": {
      "op": "ISZERO"
    },
    "14139": {
      "op": "PUSH2",
      "value": "0x3756"
    },
    "14142": {
      "op": "JUMPI"
    },
    "14143": {
      "op": "PUSH2",
      "value": "0x3747"
    },
    "14146": {
      "op": "DUP5"
    },
    "14147": {
      "op": "PUSH2",
      "value": "0x363B"
    },
    "14150": {
      "jump": "i",
      "op": "JUMP"
    },
    "14151": {
      "op": "JUMPDEST"
    },
    "14152": {
      "op": "DUP3"
    },
    "14153": {
      "op": "MSTORE"
    },
    "14154": {
      "op": "SWAP3"
    },
    "14155": {
      "op": "DUP5"
    },
    "14156": {
      "op": "ADD"
    },
    "14157": {
      "op": "SWAP3"
    },
    "14158": {
      "op": "SWAP1"
    },
    "14159": {
      "op": "DUP5"
    },
    "14160": {
      "op": "ADD"
    },
    "14161": {
      "op": "SWAP1"
    },
    "14162": {
      "op": "PUSH2",
      "value": "0x3736"
    },
    "14165": {
      "op": "JUMP"
    },
    "14166": {
      "op": "JUMPDEST"
    },
    "14167": {
      "op": "DUP1"
    },
    "14168": {
      "op": "SWAP6"
    },
    "14169": {
      "op": "POP"
    },
    "14170": {
      "op": "POP"
    },
    "14171": {
      "op": "POP"
    },
    "14172": {
      "op": "POP"
    },
    "14173": {
      "op": "POP"
    },
    "14174": {
      "op": "POP"
    },
    "14175": {
      "op": "SWAP3"
    },
    "14176": {
      "op": "POP"
    },
    "14177": {
      "op": "SWAP3"
    },
    "14178": {
      "op": "SWAP1"
    },
    "14179": {
      "op": "POP"
    },
    "14180": {
      "jump": "o",
      "op": "JUMP"
    },
    "14181": {
      "op": "JUMPDEST"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14184": {
      "op": "DUP1"
    },
    "14185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14187": {
      "op": "DUP4"
    },
    "14188": {
      "op": "DUP6"
    },
    "14189": {
      "op": "SUB"
    },
    "14190": {
      "op": "SLT"
    },
    "14191": {
      "op": "ISZERO"
    },
    "14192": {
      "op": "PUSH2",
      "value": "0x3778"
    },
    "14195": {
      "op": "JUMPI"
    },
    "14196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14198": {
      "op": "DUP1"
    },
    "14199": {
      "op": "REVERT"
    },
    "14200": {
      "op": "JUMPDEST"
    },
    "14201": {
      "op": "PUSH2",
      "value": "0x3781"
    },
    "14204": {
      "op": "DUP4"
    },
    "14205": {
      "op": "PUSH2",
      "value": "0x363B"
    },
    "14208": {
      "jump": "i",
      "op": "JUMP"
    },
    "14209": {
      "op": "JUMPDEST"
    },
    "14210": {
      "op": "SWAP2"
    },
    "14211": {
      "op": "POP"
    },
    "14212": {
      "op": "PUSH2",
      "value": "0x378F"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14217": {
      "op": "DUP5"
    },
    "14218": {
      "op": "ADD"
    },
    "14219": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "14222": {
      "jump": "i",
      "op": "JUMP"
    },
    "14223": {
      "op": "JUMPDEST"
    },
    "14224": {
      "op": "SWAP1"
    },
    "14225": {
      "op": "POP"
    },
    "14226": {
      "op": "SWAP3"
    },
    "14227": {
      "op": "POP"
    },
    "14228": {
      "op": "SWAP3"
    },
    "14229": {
      "op": "SWAP1"
    },
    "14230": {
      "op": "POP"
    },
    "14231": {
      "jump": "o",
      "op": "JUMP"
    },
    "14232": {
      "op": "JUMPDEST"
    },
    "14233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14235": {
      "op": "DUP1"
    },
    "14236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14238": {
      "op": "DUP1"
    },
    "14239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14241": {
      "op": "DUP6"
    },
    "14242": {
      "op": "DUP8"
    },
    "14243": {
      "op": "SUB"
    },
    "14244": {
      "op": "SLT"
    },
    "14245": {
      "op": "ISZERO"
    },
    "14246": {
      "op": "PUSH2",
      "value": "0x37AE"
    },
    "14249": {
      "op": "JUMPI"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14252": {
      "op": "DUP1"
    },
    "14253": {
      "op": "REVERT"
    },
    "14254": {
      "op": "JUMPDEST"
    },
    "14255": {
      "op": "PUSH2",
      "value": "0x37B7"
    },
    "14258": {
      "op": "DUP6"
    },
    "14259": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "14262": {
      "jump": "i",
      "op": "JUMP"
    },
    "14263": {
      "op": "JUMPDEST"
    },
    "14264": {
      "op": "SWAP4"
    },
    "14265": {
      "op": "POP"
    },
    "14266": {
      "op": "PUSH2",
      "value": "0x37C5"
    },
    "14269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14271": {
      "op": "DUP7"
    },
    "14272": {
      "op": "ADD"
    },
    "14273": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "14276": {
      "jump": "i",
      "op": "JUMP"
    },
    "14277": {
      "op": "JUMPDEST"
    },
    "14278": {
      "op": "SWAP3"
    },
    "14279": {
      "op": "POP"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14282": {
      "op": "DUP6"
    },
    "14283": {
      "op": "ADD"
    },
    "14284": {
      "op": "CALLDATALOAD"
    },
    "14285": {
      "op": "SWAP2"
    },
    "14286": {
      "op": "POP"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14289": {
      "op": "DUP6"
    },
    "14290": {
      "op": "ADD"
    },
    "14291": {
      "op": "CALLDATALOAD"
    },
    "14292": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14301": {
      "op": "DUP2"
    },
    "14302": {
      "op": "GT"
    },
    "14303": {
      "op": "ISZERO"
    },
    "14304": {
      "op": "PUSH2",
      "value": "0x37E8"
    },
    "14307": {
      "op": "JUMPI"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14310": {
      "op": "DUP1"
    },
    "14311": {
      "op": "REVERT"
    },
    "14312": {
      "op": "JUMPDEST"
    },
    "14313": {
      "op": "DUP6"
    },
    "14314": {
      "op": "ADD"
    },
    "14315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14317": {
      "op": "DUP2"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "op": "DUP8"
    },
    "14320": {
      "op": "SGT"
    },
    "14321": {
      "op": "PUSH2",
      "value": "0x37F9"
    },
    "14324": {
      "op": "JUMPI"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14327": {
      "op": "DUP1"
    },
    "14328": {
      "op": "REVERT"
    },
    "14329": {
      "op": "JUMPDEST"
    },
    "14330": {
      "op": "PUSH2",
      "value": "0x3808"
    },
    "14333": {
      "op": "DUP8"
    },
    "14334": {
      "op": "DUP3"
    },
    "14335": {
      "op": "CALLDATALOAD"
    },
    "14336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14338": {
      "op": "DUP5"
    },
    "14339": {
      "op": "ADD"
    },
    "14340": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "14343": {
      "jump": "i",
      "op": "JUMP"
    },
    "14344": {
      "op": "JUMPDEST"
    },
    "14345": {
      "op": "SWAP2"
    },
    "14346": {
      "op": "POP"
    },
    "14347": {
      "op": "POP"
    },
    "14348": {
      "op": "SWAP3"
    },
    "14349": {
      "op": "SWAP6"
    },
    "14350": {
      "op": "SWAP2"
    },
    "14351": {
      "op": "SWAP5"
    },
    "14352": {
      "op": "POP"
    },
    "14353": {
      "op": "SWAP3"
    },
    "14354": {
      "op": "POP"
    },
    "14355": {
      "jump": "o",
      "op": "JUMP"
    },
    "14356": {
      "op": "JUMPDEST"
    },
    "14357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14359": {
      "op": "DUP1"
    },
    "14360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14362": {
      "op": "DUP4"
    },
    "14363": {
      "op": "DUP6"
    },
    "14364": {
      "op": "SUB"
    },
    "14365": {
      "op": "SLT"
    },
    "14366": {
      "op": "ISZERO"
    },
    "14367": {
      "op": "PUSH2",
      "value": "0x3827"
    },
    "14370": {
      "op": "JUMPI"
    },
    "14371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14373": {
      "op": "DUP1"
    },
    "14374": {
      "op": "REVERT"
    },
    "14375": {
      "op": "JUMPDEST"
    },
    "14376": {
      "op": "PUSH2",
      "value": "0x3781"
    },
    "14379": {
      "op": "DUP4"
    },
    "14380": {
      "op": "PUSH2",
      "value": "0x33EB"
    },
    "14383": {
      "jump": "i",
      "op": "JUMP"
    },
    "14384": {
      "op": "JUMPDEST"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14387": {
      "op": "DUP2"
    },
    "14388": {
      "op": "DUP2"
    },
    "14389": {
      "op": "SHR"
    },
    "14390": {
      "op": "SWAP1"
    },
    "14391": {
      "op": "DUP3"
    },
    "14392": {
      "op": "AND"
    },
    "14393": {
      "op": "DUP1"
    },
    "14394": {
      "op": "PUSH2",
      "value": "0x3844"
    },
    "14397": {
      "op": "JUMPI"
    },
    "14398": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14400": {
      "op": "DUP3"
    },
    "14401": {
      "op": "AND"
    },
    "14402": {
      "op": "SWAP2"
    },
    "14403": {
      "op": "POP"
    },
    "14404": {
      "op": "JUMPDEST"
    },
    "14405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14407": {
      "op": "DUP3"
    },
    "14408": {
      "op": "LT"
    },
    "14409": {
      "op": "DUP2"
    },
    "14410": {
      "op": "EQ"
    },
    "14411": {
      "op": "ISZERO"
    },
    "14412": {
      "op": "PUSH2",
      "value": "0x3865"
    },
    "14415": {
      "op": "JUMPI"
    },
    "14416": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14423": {
      "op": "SHL"
    },
    "14424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14426": {
      "op": "MSTORE"
    },
    "14427": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14429": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14431": {
      "op": "MSTORE"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14436": {
      "op": "REVERT"
    },
    "14437": {
      "op": "JUMPDEST"
    },
    "14438": {
      "op": "POP"
    },
    "14439": {
      "op": "SWAP2"
    },
    "14440": {
      "op": "SWAP1"
    },
    "14441": {
      "op": "POP"
    },
    "14442": {
      "jump": "o",
      "op": "JUMP"
    },
    "14443": {
      "op": "JUMPDEST"
    },
    "14444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14446": {
      "op": "DUP1"
    },
    "14447": {
      "op": "DUP3"
    },
    "14448": {
      "op": "MSTORE"
    },
    "14449": {
      "op": "DUP2"
    },
    "14450": {
      "op": "DUP2"
    },
    "14451": {
      "op": "ADD"
    },
    "14452": {
      "op": "MSTORE"
    },
    "14453": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14488": {
      "op": "DUP3"
    },
    "14489": {
      "op": "ADD"
    },
    "14490": {
      "op": "MSTORE"
    },
    "14491": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14493": {
      "op": "ADD"
    },
    "14494": {
      "op": "SWAP1"
    },
    "14495": {
      "jump": "o",
      "op": "JUMP"
    },
    "14496": {
      "op": "JUMPDEST"
    },
    "14497": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14504": {
      "op": "SHL"
    },
    "14505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14507": {
      "op": "MSTORE"
    },
    "14508": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14510": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14512": {
      "op": "MSTORE"
    },
    "14513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14517": {
      "op": "REVERT"
    },
    "14518": {
      "op": "JUMPDEST"
    },
    "14519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14521": {
      "op": "DUP3"
    },
    "14522": {
      "op": "DUP3"
    },
    "14523": {
      "op": "LT"
    },
    "14524": {
      "op": "ISZERO"
    },
    "14525": {
      "op": "PUSH2",
      "value": "0x38C8"
    },
    "14528": {
      "op": "JUMPI"
    },
    "14529": {
      "op": "PUSH2",
      "value": "0x38C8"
    },
    "14532": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14535": {
      "jump": "i",
      "op": "JUMP"
    },
    "14536": {
      "op": "JUMPDEST"
    },
    "14537": {
      "op": "POP"
    },
    "14538": {
      "op": "SUB"
    },
    "14539": {
      "op": "SWAP1"
    },
    "14540": {
      "jump": "o",
      "op": "JUMP"
    },
    "14541": {
      "op": "JUMPDEST"
    },
    "14542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14544": {
      "op": "DUP1"
    },
    "14545": {
      "op": "DUP3"
    },
    "14546": {
      "op": "MSTORE"
    },
    "14547": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14549": {
      "op": "SWAP1"
    },
    "14550": {
      "op": "DUP3"
    },
    "14551": {
      "op": "ADD"
    },
    "14552": {
      "op": "MSTORE"
    },
    "14553": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14588": {
      "op": "DUP3"
    },
    "14589": {
      "op": "ADD"
    },
    "14590": {
      "op": "MSTORE"
    },
    "14591": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14609": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14611": {
      "op": "SHL"
    },
    "14612": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14614": {
      "op": "DUP3"
    },
    "14615": {
      "op": "ADD"
    },
    "14616": {
      "op": "MSTORE"
    },
    "14617": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14619": {
      "op": "ADD"
    },
    "14620": {
      "op": "SWAP1"
    },
    "14621": {
      "jump": "o",
      "op": "JUMP"
    },
    "14622": {
      "op": "JUMPDEST"
    },
    "14623": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14630": {
      "op": "SHL"
    },
    "14631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14633": {
      "op": "MSTORE"
    },
    "14634": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14636": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14638": {
      "op": "MSTORE"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14643": {
      "op": "REVERT"
    },
    "14644": {
      "op": "JUMPDEST"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14649": {
      "op": "NOT"
    },
    "14650": {
      "op": "DUP3"
    },
    "14651": {
      "op": "EQ"
    },
    "14652": {
      "op": "ISZERO"
    },
    "14653": {
      "op": "PUSH2",
      "value": "0x3948"
    },
    "14656": {
      "op": "JUMPI"
    },
    "14657": {
      "op": "PUSH2",
      "value": "0x3948"
    },
    "14660": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14663": {
      "jump": "i",
      "op": "JUMP"
    },
    "14664": {
      "op": "JUMPDEST"
    },
    "14665": {
      "op": "POP"
    },
    "14666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14668": {
      "op": "ADD"
    },
    "14669": {
      "op": "SWAP1"
    },
    "14670": {
      "jump": "o",
      "op": "JUMP"
    },
    "14671": {
      "op": "JUMPDEST"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14674": {
      "op": "DUP1"
    },
    "14675": {
      "op": "DUP3"
    },
    "14676": {
      "op": "MSTORE"
    },
    "14677": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14679": {
      "op": "SWAP1"
    },
    "14680": {
      "op": "DUP3"
    },
    "14681": {
      "op": "ADD"
    },
    "14682": {
      "op": "MSTORE"
    },
    "14683": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14700": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14702": {
      "op": "SHL"
    },
    "14703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14705": {
      "op": "DUP3"
    },
    "14706": {
      "op": "ADD"
    },
    "14707": {
      "op": "MSTORE"
    },
    "14708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14710": {
      "op": "ADD"
    },
    "14711": {
      "op": "SWAP1"
    },
    "14712": {
      "jump": "o",
      "op": "JUMP"
    },
    "14713": {
      "op": "JUMPDEST"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14718": {
      "op": "DUP3"
    },
    "14719": {
      "op": "AND"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14722": {
      "op": "DUP5"
    },
    "14723": {
      "op": "AND"
    },
    "14724": {
      "op": "DUP1"
    },
    "14725": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14727": {
      "op": "SUB"
    },
    "14728": {
      "op": "DUP3"
    },
    "14729": {
      "op": "GT"
    },
    "14730": {
      "op": "ISZERO"
    },
    "14731": {
      "op": "PUSH2",
      "value": "0x3996"
    },
    "14734": {
      "op": "JUMPI"
    },
    "14735": {
      "op": "PUSH2",
      "value": "0x3996"
    },
    "14738": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14741": {
      "jump": "i",
      "op": "JUMP"
    },
    "14742": {
      "op": "JUMPDEST"
    },
    "14743": {
      "op": "ADD"
    },
    "14744": {
      "op": "SWAP4"
    },
    "14745": {
      "op": "SWAP3"
    },
    "14746": {
      "op": "POP"
    },
    "14747": {
      "op": "POP"
    },
    "14748": {
      "op": "POP"
    },
    "14749": {
      "jump": "o",
      "op": "JUMP"
    },
    "14750": {
      "op": "JUMPDEST"
    },
    "14751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14753": {
      "op": "DUP3"
    },
    "14754": {
      "op": "NOT"
    },
    "14755": {
      "op": "DUP3"
    },
    "14756": {
      "op": "GT"
    },
    "14757": {
      "op": "ISZERO"
    },
    "14758": {
      "op": "PUSH2",
      "value": "0x39B1"
    },
    "14761": {
      "op": "JUMPI"
    },
    "14762": {
      "op": "PUSH2",
      "value": "0x39B1"
    },
    "14765": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14768": {
      "jump": "i",
      "op": "JUMP"
    },
    "14769": {
      "op": "JUMPDEST"
    },
    "14770": {
      "op": "POP"
    },
    "14771": {
      "op": "ADD"
    },
    "14772": {
      "op": "SWAP1"
    },
    "14773": {
      "jump": "o",
      "op": "JUMP"
    },
    "14774": {
      "op": "JUMPDEST"
    },
    "14775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14777": {
      "op": "DUP1"
    },
    "14778": {
      "op": "DUP3"
    },
    "14779": {
      "op": "MSTORE"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "14782": {
      "op": "SWAP1"
    },
    "14783": {
      "op": "DUP3"
    },
    "14784": {
      "op": "ADD"
    },
    "14785": {
      "op": "MSTORE"
    },
    "14786": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "14819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14821": {
      "op": "DUP3"
    },
    "14822": {
      "op": "ADD"
    },
    "14823": {
      "op": "MSTORE"
    },
    "14824": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "14857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14859": {
      "op": "DUP3"
    },
    "14860": {
      "op": "ADD"
    },
    "14861": {
      "op": "MSTORE"
    },
    "14862": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14864": {
      "op": "ADD"
    },
    "14865": {
      "op": "SWAP1"
    },
    "14866": {
      "jump": "o",
      "op": "JUMP"
    },
    "14867": {
      "op": "JUMPDEST"
    },
    "14868": {
      "op": "DUP1"
    },
    "14869": {
      "op": "SLOAD"
    },
    "14870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14872": {
      "op": "SWAP1"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14875": {
      "op": "DUP2"
    },
    "14876": {
      "op": "DUP2"
    },
    "14877": {
      "op": "SHR"
    },
    "14878": {
      "op": "SWAP1"
    },
    "14879": {
      "op": "DUP1"
    },
    "14880": {
      "op": "DUP4"
    },
    "14881": {
      "op": "AND"
    },
    "14882": {
      "op": "DUP1"
    },
    "14883": {
      "op": "PUSH2",
      "value": "0x3A2D"
    },
    "14886": {
      "op": "JUMPI"
    },
    "14887": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14889": {
      "op": "DUP4"
    },
    "14890": {
      "op": "AND"
    },
    "14891": {
      "op": "SWAP3"
    },
    "14892": {
      "op": "POP"
    },
    "14893": {
      "op": "JUMPDEST"
    },
    "14894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14896": {
      "op": "DUP1"
    },
    "14897": {
      "op": "DUP5"
    },
    "14898": {
      "op": "LT"
    },
    "14899": {
      "op": "DUP3"
    },
    "14900": {
      "op": "EQ"
    },
    "14901": {
      "op": "ISZERO"
    },
    "14902": {
      "op": "PUSH2",
      "value": "0x3A4F"
    },
    "14905": {
      "op": "JUMPI"
    },
    "14906": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14913": {
      "op": "SHL"
    },
    "14914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14916": {
      "op": "MSTORE"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14919": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14921": {
      "op": "MSTORE"
    },
    "14922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14926": {
      "op": "REVERT"
    },
    "14927": {
      "op": "JUMPDEST"
    },
    "14928": {
      "op": "DUP2"
    },
    "14929": {
      "op": "DUP1"
    },
    "14930": {
      "op": "ISZERO"
    },
    "14931": {
      "op": "PUSH2",
      "value": "0x3A63"
    },
    "14934": {
      "op": "JUMPI"
    },
    "14935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14937": {
      "op": "DUP2"
    },
    "14938": {
      "op": "EQ"
    },
    "14939": {
      "op": "PUSH2",
      "value": "0x3A74"
    },
    "14942": {
      "op": "JUMPI"
    },
    "14943": {
      "op": "PUSH2",
      "value": "0x3AA1"
    },
    "14946": {
      "op": "JUMP"
    },
    "14947": {
      "op": "JUMPDEST"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14950": {
      "op": "NOT"
    },
    "14951": {
      "op": "DUP7"
    },
    "14952": {
      "op": "AND"
    },
    "14953": {
      "op": "DUP10"
    },
    "14954": {
      "op": "MSTORE"
    },
    "14955": {
      "op": "DUP5"
    },
    "14956": {
      "op": "DUP10"
    },
    "14957": {
      "op": "ADD"
    },
    "14958": {
      "op": "SWAP7"
    },
    "14959": {
      "op": "POP"
    },
    "14960": {
      "op": "PUSH2",
      "value": "0x3AA1"
    },
    "14963": {
      "op": "JUMP"
    },
    "14964": {
      "op": "JUMPDEST"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14967": {
      "op": "DUP9"
    },
    "14968": {
      "op": "DUP2"
    },
    "14969": {
      "op": "MSTORE"
    },
    "14970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14972": {
      "op": "SWAP1"
    },
    "14973": {
      "op": "KECCAK256"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14976": {
      "op": "JUMPDEST"
    },
    "14977": {
      "op": "DUP7"
    },
    "14978": {
      "op": "DUP2"
    },
    "14979": {
      "op": "LT"
    },
    "14980": {
      "op": "ISZERO"
    },
    "14981": {
      "op": "PUSH2",
      "value": "0x3A99"
    },
    "14984": {
      "op": "JUMPI"
    },
    "14985": {
      "op": "DUP2"
    },
    "14986": {
      "op": "SLOAD"
    },
    "14987": {
      "op": "DUP12"
    },
    "14988": {
      "op": "DUP3"
    },
    "14989": {
      "op": "ADD"
    },
    "14990": {
      "op": "MSTORE"
    },
    "14991": {
      "op": "SWAP1"
    },
    "14992": {
      "op": "DUP6"
    },
    "14993": {
      "op": "ADD"
    },
    "14994": {
      "op": "SWAP1"
    },
    "14995": {
      "op": "DUP4"
    },
    "14996": {
      "op": "ADD"
    },
    "14997": {
      "op": "PUSH2",
      "value": "0x3A80"
    },
    "15000": {
      "op": "JUMP"
    },
    "15001": {
      "op": "JUMPDEST"
    },
    "15002": {
      "op": "POP"
    },
    "15003": {
      "op": "POP"
    },
    "15004": {
      "op": "DUP5"
    },
    "15005": {
      "op": "DUP10"
    },
    "15006": {
      "op": "ADD"
    },
    "15007": {
      "op": "SWAP7"
    },
    "15008": {
      "op": "POP"
    },
    "15009": {
      "op": "JUMPDEST"
    },
    "15010": {
      "op": "POP"
    },
    "15011": {
      "op": "POP"
    },
    "15012": {
      "op": "POP"
    },
    "15013": {
      "op": "POP"
    },
    "15014": {
      "op": "POP"
    },
    "15015": {
      "op": "POP"
    },
    "15016": {
      "op": "SWAP3"
    },
    "15017": {
      "op": "SWAP2"
    },
    "15018": {
      "op": "POP"
    },
    "15019": {
      "op": "POP"
    },
    "15020": {
      "jump": "o",
      "op": "JUMP"
    },
    "15021": {
      "op": "JUMPDEST"
    },
    "15022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15024": {
      "op": "PUSH2",
      "value": "0x3AB9"
    },
    "15027": {
      "op": "DUP3"
    },
    "15028": {
      "op": "DUP7"
    },
    "15029": {
      "op": "PUSH2",
      "value": "0x3A13"
    },
    "15032": {
      "jump": "i",
      "op": "JUMP"
    },
    "15033": {
      "op": "JUMPDEST"
    },
    "15034": {
      "op": "DUP5"
    },
    "15035": {
      "op": "MLOAD"
    },
    "15036": {
      "op": "PUSH2",
      "value": "0x3AC9"
    },
    "15039": {
      "op": "DUP2"
    },
    "15040": {
      "op": "DUP4"
    },
    "15041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15043": {
      "op": "DUP10"
    },
    "15044": {
      "op": "ADD"
    },
    "15045": {
      "op": "PUSH2",
      "value": "0x3367"
    },
    "15048": {
      "jump": "i",
      "op": "JUMP"
    },
    "15049": {
      "op": "JUMPDEST"
    },
    "15050": {
      "op": "PUSH2",
      "value": "0x3AD5"
    },
    "15053": {
      "op": "DUP2"
    },
    "15054": {
      "op": "DUP4"
    },
    "15055": {
      "op": "ADD"
    },
    "15056": {
      "op": "DUP7"
    },
    "15057": {
      "op": "PUSH2",
      "value": "0x3A13"
    },
    "15060": {
      "jump": "i",
      "op": "JUMP"
    },
    "15061": {
      "op": "JUMPDEST"
    },
    "15062": {
      "op": "SWAP8"
    },
    "15063": {
      "op": "SWAP7"
    },
    "15064": {
      "op": "POP"
    },
    "15065": {
      "op": "POP"
    },
    "15066": {
      "op": "POP"
    },
    "15067": {
      "op": "POP"
    },
    "15068": {
      "op": "POP"
    },
    "15069": {
      "op": "POP"
    },
    "15070": {
      "op": "POP"
    },
    "15071": {
      "jump": "o",
      "op": "JUMP"
    },
    "15072": {
      "op": "JUMPDEST"
    },
    "15073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15075": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15077": {
      "op": "DUP3"
    },
    "15078": {
      "op": "AND"
    },
    "15079": {
      "op": "DUP1"
    },
    "15080": {
      "op": "PUSH2",
      "value": "0x3AF3"
    },
    "15083": {
      "op": "JUMPI"
    },
    "15084": {
      "op": "PUSH2",
      "value": "0x3AF3"
    },
    "15087": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "15090": {
      "jump": "i",
      "op": "JUMP"
    },
    "15091": {
      "op": "JUMPDEST"
    },
    "15092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15094": {
      "op": "NOT"
    },
    "15095": {
      "op": "ADD"
    },
    "15096": {
      "op": "SWAP3"
    },
    "15097": {
      "op": "SWAP2"
    },
    "15098": {
      "op": "POP"
    },
    "15099": {
      "op": "POP"
    },
    "15100": {
      "jump": "o",
      "op": "JUMP"
    },
    "15101": {
      "op": "JUMPDEST"
    },
    "15102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15104": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15106": {
      "op": "DUP3"
    },
    "15107": {
      "op": "AND"
    },
    "15108": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15110": {
      "op": "DUP2"
    },
    "15111": {
      "op": "EQ"
    },
    "15112": {
      "op": "ISZERO"
    },
    "15113": {
      "op": "PUSH2",
      "value": "0x3B14"
    },
    "15116": {
      "op": "JUMPI"
    },
    "15117": {
      "op": "PUSH2",
      "value": "0x3B14"
    },
    "15120": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "15123": {
      "jump": "i",
      "op": "JUMP"
    },
    "15124": {
      "op": "JUMPDEST"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15127": {
      "op": "ADD"
    },
    "15128": {
      "op": "SWAP3"
    },
    "15129": {
      "op": "SWAP2"
    },
    "15130": {
      "op": "POP"
    },
    "15131": {
      "op": "POP"
    },
    "15132": {
      "jump": "o",
      "op": "JUMP"
    },
    "15133": {
      "op": "JUMPDEST"
    },
    "15134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15136": {
      "op": "DUP2"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15139": {
      "op": "NOT"
    },
    "15140": {
      "op": "DIV"
    },
    "15141": {
      "op": "DUP4"
    },
    "15142": {
      "op": "GT"
    },
    "15143": {
      "op": "DUP3"
    },
    "15144": {
      "op": "ISZERO"
    },
    "15145": {
      "op": "ISZERO"
    },
    "15146": {
      "op": "AND"
    },
    "15147": {
      "op": "ISZERO"
    },
    "15148": {
      "op": "PUSH2",
      "value": "0x3B37"
    },
    "15151": {
      "op": "JUMPI"
    },
    "15152": {
      "op": "PUSH2",
      "value": "0x3B37"
    },
    "15155": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "15158": {
      "jump": "i",
      "op": "JUMP"
    },
    "15159": {
      "op": "JUMPDEST"
    },
    "15160": {
      "op": "POP"
    },
    "15161": {
      "op": "MUL"
    },
    "15162": {
      "op": "SWAP1"
    },
    "15163": {
      "jump": "o",
      "op": "JUMP"
    },
    "15164": {
      "op": "JUMPDEST"
    },
    "15165": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15172": {
      "op": "SHL"
    },
    "15173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15175": {
      "op": "MSTORE"
    },
    "15176": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15178": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15180": {
      "op": "MSTORE"
    },
    "15181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15185": {
      "op": "REVERT"
    },
    "15186": {
      "op": "JUMPDEST"
    },
    "15187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15189": {
      "op": "DUP3"
    },
    "15190": {
      "op": "PUSH2",
      "value": "0x3B61"
    },
    "15193": {
      "op": "JUMPI"
    },
    "15194": {
      "op": "PUSH2",
      "value": "0x3B61"
    },
    "15197": {
      "op": "PUSH2",
      "value": "0x3B3C"
    },
    "15200": {
      "jump": "i",
      "op": "JUMP"
    },
    "15201": {
      "op": "JUMPDEST"
    },
    "15202": {
      "op": "POP"
    },
    "15203": {
      "op": "DIV"
    },
    "15204": {
      "op": "SWAP1"
    },
    "15205": {
      "jump": "o",
      "op": "JUMP"
    },
    "15206": {
      "op": "JUMPDEST"
    },
    "15207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15209": {
      "op": "DUP1"
    },
    "15210": {
      "op": "DUP3"
    },
    "15211": {
      "op": "MSTORE"
    },
    "15212": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15214": {
      "op": "SWAP1"
    },
    "15215": {
      "op": "DUP3"
    },
    "15216": {
      "op": "ADD"
    },
    "15217": {
      "op": "MSTORE"
    },
    "15218": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "15251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15253": {
      "op": "DUP3"
    },
    "15254": {
      "op": "ADD"
    },
    "15255": {
      "op": "MSTORE"
    },
    "15256": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "15275": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "15277": {
      "op": "SHL"
    },
    "15278": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15280": {
      "op": "DUP3"
    },
    "15281": {
      "op": "ADD"
    },
    "15282": {
      "op": "MSTORE"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15285": {
      "op": "ADD"
    },
    "15286": {
      "op": "SWAP1"
    },
    "15287": {
      "jump": "o",
      "op": "JUMP"
    },
    "15288": {
      "op": "JUMPDEST"
    },
    "15289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15291": {
      "op": "DUP3"
    },
    "15292": {
      "op": "PUSH2",
      "value": "0x3BC7"
    },
    "15295": {
      "op": "JUMPI"
    },
    "15296": {
      "op": "PUSH2",
      "value": "0x3BC7"
    },
    "15299": {
      "op": "PUSH2",
      "value": "0x3B3C"
    },
    "15302": {
      "jump": "i",
      "op": "JUMP"
    },
    "15303": {
      "op": "JUMPDEST"
    },
    "15304": {
      "op": "POP"
    },
    "15305": {
      "op": "MOD"
    },
    "15306": {
      "op": "SWAP1"
    },
    "15307": {
      "jump": "o",
      "op": "JUMP"
    },
    "15308": {
      "op": "JUMPDEST"
    },
    "15309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15315": {
      "op": "SHL"
    },
    "15316": {
      "op": "SUB"
    },
    "15317": {
      "op": "DUP6"
    },
    "15318": {
      "op": "DUP2"
    },
    "15319": {
      "op": "AND"
    },
    "15320": {
      "op": "DUP3"
    },
    "15321": {
      "op": "MSTORE"
    },
    "15322": {
      "op": "DUP5"
    },
    "15323": {
      "op": "AND"
    },
    "15324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15326": {
      "op": "DUP3"
    },
    "15327": {
      "op": "ADD"
    },
    "15328": {
      "op": "MSTORE"
    },
    "15329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15331": {
      "op": "DUP2"
    },
    "15332": {
      "op": "ADD"
    },
    "15333": {
      "op": "DUP4"
    },
    "15334": {
      "op": "SWAP1"
    },
    "15335": {
      "op": "MSTORE"
    },
    "15336": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15340": {
      "op": "DUP3"
    },
    "15341": {
      "op": "ADD"
    },
    "15342": {
      "op": "DUP2"
    },
    "15343": {
      "op": "SWAP1"
    },
    "15344": {
      "op": "MSTORE"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15347": {
      "op": "SWAP1"
    },
    "15348": {
      "op": "PUSH2",
      "value": "0x3BFF"
    },
    "15351": {
      "op": "SWAP1"
    },
    "15352": {
      "op": "DUP4"
    },
    "15353": {
      "op": "ADD"
    },
    "15354": {
      "op": "DUP5"
    },
    "15355": {
      "op": "PUSH2",
      "value": "0x3393"
    },
    "15358": {
      "jump": "i",
      "op": "JUMP"
    },
    "15359": {
      "op": "JUMPDEST"
    },
    "15360": {
      "op": "SWAP7"
    },
    "15361": {
      "op": "SWAP6"
    },
    "15362": {
      "op": "POP"
    },
    "15363": {
      "op": "POP"
    },
    "15364": {
      "op": "POP"
    },
    "15365": {
      "op": "POP"
    },
    "15366": {
      "op": "POP"
    },
    "15367": {
      "op": "POP"
    },
    "15368": {
      "jump": "o",
      "op": "JUMP"
    },
    "15369": {
      "op": "JUMPDEST"
    },
    "15370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15374": {
      "op": "DUP3"
    },
    "15375": {
      "op": "DUP5"
    },
    "15376": {
      "op": "SUB"
    },
    "15377": {
      "op": "SLT"
    },
    "15378": {
      "op": "ISZERO"
    },
    "15379": {
      "op": "PUSH2",
      "value": "0x3C1B"
    },
    "15382": {
      "op": "JUMPI"
    },
    "15383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15385": {
      "op": "DUP1"
    },
    "15386": {
      "op": "REVERT"
    },
    "15387": {
      "op": "JUMPDEST"
    },
    "15388": {
      "op": "DUP2"
    },
    "15389": {
      "op": "MLOAD"
    },
    "15390": {
      "op": "PUSH2",
      "value": "0x2BE0"
    },
    "15393": {
      "op": "DUP2"
    },
    "15394": {
      "op": "PUSH2",
      "value": "0x3334"
    },
    "15397": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "343b7d4f5cde581cfd70ded6775bc11fd07579d9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol';\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract CryptidToken is ERC721, Pausable, Ownable, ERC721Burnable{ \n    using Strings for uint256;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 private stage = 0;\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n    address public withdrawDest1 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb;\n    address public withdrawDest2 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n    \n    // ~ Sale stages ~\n    // stage 0: Init \n    // stage 1: Free Mints\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Free mint (stage=1)\n    mapping(address => uint8) public freeUsers;\n    mapping(address => uint8) public freeMintCount;\n\n    // Whitelist mint (stage=2)\n    mapping(address => bool) public whitelistUsers;\n    uint256 public whitelistSupply;                       \n    uint256 public whitelistPrice = 0.08 ether;\n    uint8 public whitelistMintMax = 2;                  \n    mapping(address => uint8) public whitelistMintCount;\n\n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public salePrice = 0.08 ether;\n    uint256 public totalSaleSupply;         \n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    //Public mint function\n    function mint(uint8 _mintAmount) public payable whenNotPaused {\n        require(stage > 0, \"Minting not initiated. Currenly on stage 0 (init).\");\n        require(_mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction.\");\n        if (stage == 1) {\n        // Free Mint\n            require(freeUsers[msg.sender] > 0, \"Minter not awarded free mints.\");\n            require(_mintAmount + freeMintCount[msg.sender] <= freeUsers[msg.sender], \"Transaction exceeds remaining free mints.\");\n            freeMintCount[msg.sender] += _mintAmount;\n    }   else if (stage == 2) {\n        // Whitelist\n            \n            require(msg.value >= whitelistPrice.mul(_mintAmount), \"Not enough ether sent.\");\n            require(whitelistUsers[msg.sender], \"Address not on whitelist.\");\n            require(totalSupply() + _mintAmount <= whitelistSupply, \"Transaction exceeds whitelist supply.\");\n            require(_mintAmount + whitelistMintCount[msg.sender] <= whitelistMintMax, \"Transaction exceeds max allowed whitelist mints.\");      \n            whitelistMintCount[msg.sender] += _mintAmount;\n    }   else if (stage == 3) {\n        // Team Sale\n            require(owner() == msg.sender, \"Only Owner can mint at this stage\");\n            require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n            teamMintCount += _mintAmount;\n    }   else {\n        // Public Sale\n            require(msg.value >= salePrice.mul(_mintAmount), \"Not enough ether sent\");\n            require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        }\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function airdropCryptid(uint8 _mintAmount, address _to) public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage < 2, \"Past free mint sale.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction\");\n        require(_mintAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(totalSupply()+ _mintAmount <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(_to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    function setfreeUsers(address[] memory _users, uint8[] memory _mints) public onlyOwner {\n        require(stage < 2, \"Whitelist sale is concluded.\");\n        for(uint256 i=0;i<_users.length;i++)\n        freeUsers[_users[i]] = _mints[i];\n    }\n\n    function setWhitelistUsers(address[] memory _users) public onlyOwner {\n        require(stage < 3, \"Whitelist is concluded.\");\n        for(uint256 i=0;i<_users.length;i++)\n        whitelistUsers[_users[i]] = true;\n    }\n\n    function removeFreetUser(address _user) public onlyOwner {\n        require(stage < 2, \"Free mint sale is concluded.\");\n        require(freeUsers[_user] > 0, \"User not awarded free mint.\");\n        freeUsers[_user] = 0;\n    }\n\n    function removeWhitelistUser(address _user) public onlyOwner {\n        require(whitelistUsers[_user], \"User not on whitelist list.\");\n        whitelistUsers[_user] = false;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() public onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function nextStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage < 4, \"No stages after public sale\");\n        stage++;\n    }\n\n    function prevStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage > 0, \"No stages before init\");\n        stage--;\n    }\n    \n    function setTeamMintSupply(uint256 _newTeamMintSupply) public onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setWhitelistPrice(uint256 _newWhitelistPrice) public onlyOwner {\n        require(stage < 3, \"Whitelist is concluded.\");\n        whitelistPrice = _newWhitelistPrice;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) public onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) public onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function setWithdrawAddress(address _dest1, address _dest2) public onlyOwner {\n        withdrawDest1 = _dest1;\n        withdrawDest2 = _dest2;\n    }\n\n    function freezeProvenanceHash() public onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool hs, ) = payable(withdrawDest1).call{value: address(this).balance.mul(50).div(100)}(\"\");\n        require(hs, \"withdrawl 1 failed\");\n        (bool os, ) = payable(withdrawDest2).call{value: address(this).balance}(\"\");\n        require(os, \"withdrawl 2 failed\");\n    }\n\n    // Public view functions\n    function lastMintAddress() public view returns (address){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() public view returns (uint256){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return(totalSupply());\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n            \n    }\n\n    function getTokensLeft() public view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function getStage() public view returns (uint8) {\n        return stage;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n}",
  "sourceMap": "773:26:15:-:0;483:9355;773:26;;;-1:-1:-1;483:9355:15;773:26;;;;;;;;:::i;:::-;-1:-1:-1;805:37:15;;;;;;;;;;;;;-1:-1:-1;;;805:37:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;848:23:15;;;999:73;-1:-1:-1;;;;;;999:73:15;;;;;;1078;;;-1:-1:-1;;;;;;1078:73:15;1109:42;1078:73;;;1619:10;1587:42;;;;1635:33;;;-1:-1:-1;;1635:33:15;913:34;1635:33;;;1902:37;;1991:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:2;;2241:5:15;;2248:7;;1441:13:2;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:8;921:18:0;:32::i;:::-;2267:15:15::1;:34:::0;;;2311:14:::1;:32:::0;;;2353:15:::1;:34:::0;;;2397:12:::1;:28:::0;;-1:-1:-1;;2397:28:15::1;;;::::0;::::1;;;::::0;;2435:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2463:27;:15;:25;;;;;:27;;:::i;:::-;1991:506:::0;;;;;;;483:9355;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:9:-;1032:19;;1050:1;1032:19;;;945:123::o;483:9355:15:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9355:15;;;-1:-1:-1;483:9355:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:16:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:16;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;483:9355:15;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}