{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wlAddress",
          "type": "address"
        }
      ],
      "name": "overrideClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prevStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dest1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest4",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest5",
          "type": "address"
        }
      ],
      "name": "setWithdrawAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest4",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest5",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
    "15": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "5": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "9": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2935
      ],
      "Context": [
        2477
      ],
      "Counters": [
        2055
      ],
      "CryptidToken": [
        923
      ],
      "ERC165": [
        3162
      ],
      "ERC721": [
        1951
      ],
      "ERC721Burnable": [
        1981
      ],
      "IERC165": [
        3174
      ],
      "IERC721": [
        2593
      ],
      "IERC721Metadata": [
        2638
      ],
      "IERC721Receiver": [
        2611
      ],
      "MerkleProof": [
        2143
      ],
      "Ownable": [
        1028
      ],
      "Pausable": [
        1120
      ],
      "SafeMath": [
        2455
      ],
      "Strings": [
        3138
      ]
    },
    "id": 924,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:15"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 1952,
        "src": "58:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 1029,
        "src": "116:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 2456,
        "src": "169:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 2056,
        "src": "227:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 1121,
        "src": "280:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 1982,
        "src": "336:76:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 924,
        "sourceUnit": 2144,
        "src": "413:68:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1951,
              "src": "508:6:15"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "508:6:15"
          },
          {
            "baseName": {
              "id": 11,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1120,
              "src": "516:8:15"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "516:8:15"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1028,
              "src": "526:7:15"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "526:7:15"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1981,
              "src": "535:14:15"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "535:14:15"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 923,
        "linearizedBaseContracts": [
          923,
          1981,
          1028,
          1120,
          1951,
          2638,
          2593,
          3162,
          3174,
          2477
        ],
        "name": "CryptidToken",
        "nameLocation": "492:12:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "id": 17,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3138,
              "src": "562:7:15"
            },
            "nodeType": "UsingForDirective",
            "src": "556:26:15",
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2455,
              "src": "593:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "587:27:15",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2055,
              "src": "625:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "619:36:15",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1987,
                "src": "638:16:15"
              },
              "referencedDeclaration": 1987,
              "src": "638:16:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1987_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2143,
              "src": "666:11:15"
            },
            "nodeType": "UsingForDirective",
            "src": "660:32:15",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "682:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "682:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "723:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "698:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1987_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 32,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1987,
                "src": "698:16:15"
              },
              "referencedDeclaration": 1987,
              "src": "698:16:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1987_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 35,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "764:10:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "749:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 34,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 37,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "794:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "780:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "780:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 40,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "828:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "814:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 38,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "814:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "838:2:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 43,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "860:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "846:37:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "846:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "876:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "903:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "889:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 44,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "889:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "911:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 48,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "931:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "918:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 47,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "918:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 51,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "966:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "954:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 49,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "954:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "983:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 54,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1006:20:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "994:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "994:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1029:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61869a93",
            "id": 57,
            "mutability": "mutable",
            "name": "withdrawDest1",
            "nameLocation": "1056:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1041:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1041:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1072:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1214392",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawDest2",
            "nameLocation": "1144:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1129:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1129:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1160:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c795047",
            "id": 63,
            "mutability": "mutable",
            "name": "withdrawDest3",
            "nameLocation": "1236:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1221:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 61,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1221:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1252:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2fab8b9",
            "id": 66,
            "mutability": "mutable",
            "name": "withdrawDest4",
            "nameLocation": "1328:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1313:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1313:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1344:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db993f56",
            "id": 69,
            "mutability": "mutable",
            "name": "withdrawDest5",
            "nameLocation": "1420:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1405:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1405:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1436:42:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 71,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1706:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1691:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1691:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 75,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1782:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1750:39:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1758:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1750:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 73,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1769:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 77,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1856:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1841:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1841:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 79,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1917:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1902:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 81,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1981:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "1966:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 80,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1966:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 84,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "2026:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 923,
            "src": "2011:37:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 82,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2011:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3130",
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2038:10:15",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.10"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "2323:240:15",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2333:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2351:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2333:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:34:15"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2377:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2394:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2377:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:32:15"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2419:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2437:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2419:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:34:15"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2463:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 118,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2478:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2463:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:28:15"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2501:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 122,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2511:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2501:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:18:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 125,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2529:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1987_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2013,
                      "src": "2529:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1987_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:27:15"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "2307:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 102,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "2314:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 103,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 100,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1951,
                  "src": "2300:6:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2300:22:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2092:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2078:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2121:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2107:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2152:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2138:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2178:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2170:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2212:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2204:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2245:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2237:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2277:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2271:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2068:229:15"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:15"
            },
            "scope": 923,
            "src": "2057:506:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "2682:1510:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 142,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "2700:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2708:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2700:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c79206f6e20737461676520302e",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2711:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f63bf4e3e946a2eb02c392948af8c389d191fcd2356afb96d125e13d82608aa7",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0.\""
                        },
                        "value": "Minting not initiated. Currenly on stage 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f63bf4e3e946a2eb02c392948af8c389d191fcd2356afb96d125e13d82608aa7",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0.\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2692:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 149,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2775:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2789:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2775:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2792:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2767:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2767:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:63:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 156,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2848:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 157,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2863:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2848:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e2e",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2877:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c32c4ae7a2ddca381d4cdf387d78bb586513f4b09bdc5074d8282746668b24b",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction.\""
                        },
                        "value": "Exceeds max allowed amount per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c32c4ae7a2ddca381d4cdf387d78bb586513f4b09bdc5074d8282746668b24b",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction.\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2840:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:83:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:83:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 162,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2937:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2946:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2937:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 226,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3495:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3504:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "3495:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 273,
                      "nodeType": "Block",
                      "src": "3786:234:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 253,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3831:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3831:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 257,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 133,
                                      "src": "3858:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "expression": {
                                      "id": 255,
                                      "name": "salePrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 84,
                                      "src": "3844:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2349,
                                    "src": "3844:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3844:26:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3831:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c69642066756e64732070726f76696465642e",
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3872:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7d5d163a2d9df7438632584443c66df62f8810dd9b2b1db28a9579dacb5075f5",
                                  "typeString": "literal_string \"Invalid funds provided.\""
                                },
                                "value": "Invalid funds provided."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7d5d163a2d9df7438632584443c66df62f8810dd9b2b1db28a9579dacb5075f5",
                                  "typeString": "literal_string \"Invalid funds provided.\""
                                }
                              ],
                              "id": 252,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3823:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3823:75:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 262,
                          "nodeType": "ExpressionStatement",
                          "src": "3823:75:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 264,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 853,
                                      "src": "3920:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3920:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 266,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 133,
                                    "src": "3937:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "3920:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 268,
                                  "name": "totalSaleSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81,
                                  "src": "3952:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3920:47:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3969:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                  "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                },
                                "value": "Transaction exceeds total sale supply"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                  "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                }
                              ],
                              "id": 263,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3912:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3912:97:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 272,
                          "nodeType": "ExpressionStatement",
                          "src": "3912:97:15"
                        }
                      ]
                    },
                    "id": 274,
                    "nodeType": "IfStatement",
                    "src": "3491:529:15",
                    "trueBody": {
                      "id": 251,
                      "nodeType": "Block",
                      "src": "3507:271:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 230,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "3550:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3550:7:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 232,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3561:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3561:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3550:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4f6e6c79204f776e65722063616e206d696e742061742074686973207374616765",
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3573:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                  "typeString": "literal_string \"Only Owner can mint at this stage\""
                                },
                                "value": "Only Owner can mint at this stage"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                  "typeString": "literal_string \"Only Owner can mint at this stage\""
                                }
                              ],
                              "id": 229,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3542:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3542:67:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 237,
                          "nodeType": "ExpressionStatement",
                          "src": "3542:67:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 239,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 133,
                                    "src": "3631:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 240,
                                    "name": "teamMintCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "3645:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3631:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 242,
                                  "name": "teamMintSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77,
                                  "src": "3662:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3631:45:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3678:44:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                  "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                },
                                "value": "Transaction exceeds total team-sale supply"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                  "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                }
                              ],
                              "id": 238,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3623:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3623:100:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 246,
                          "nodeType": "ExpressionStatement",
                          "src": "3623:100:15"
                        },
                        {
                          "expression": {
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 247,
                              "name": "teamMintCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3743:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 248,
                              "name": "_mintAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3760:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "3743:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 250,
                          "nodeType": "ExpressionStatement",
                          "src": "3743:28:15"
                        }
                      ]
                    }
                  },
                  "id": 275,
                  "nodeType": "IfStatement",
                  "src": "2933:1087:15",
                  "trueBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2949:534:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 168,
                                  "name": "merkleRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "3005:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 172,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "3044:3:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 173,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3044:10:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 170,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "3027:3:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "3027:16:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3027:28:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 169,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "3017:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3017:39:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 166,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136,
                                  "src": "2992:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verify",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2079,
                                "src": "2992:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                                }
                              },
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2992:65:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41646472657373206e6f742077686974656c69737465642e",
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3059:26:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a4d0936461323f57724267f94c095962d232aa360b4f0de601fc878437cf170e",
                                "typeString": "literal_string \"Address not whitelisted.\""
                              },
                              "value": "Address not whitelisted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a4d0936461323f57724267f94c095962d232aa360b4f0de601fc878437cf170e",
                                "typeString": "literal_string \"Address not whitelisted.\""
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2984:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:102:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "2984:102:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 181,
                                  "name": "claimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "3108:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 184,
                                "indexExpression": {
                                  "expression": {
                                    "id": 182,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3116:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3116:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3108:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3131:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3108:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3138:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                                "typeString": "literal_string \"Whitelist mint already claimed.\""
                              },
                              "value": "Whitelist mint already claimed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                                "typeString": "literal_string \"Whitelist mint already claimed.\""
                              }
                            ],
                            "id": 180,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3100:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3100:72:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:72:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 191,
                                "name": "_mintAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "3195:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3209:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "3195:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e7420616d6f756e74206d75737420626520312e",
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3212:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5373a42037e8b580dbee239e3172646c66fa96a0593fe951acd298ac78eaf47e",
                                "typeString": "literal_string \"Mint amount must be 1.\""
                              },
                              "value": "Mint amount must be 1."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5373a42037e8b580dbee239e3172646c66fa96a0593fe951acd298ac78eaf47e",
                                "typeString": "literal_string \"Mint amount must be 1.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3187:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3187:50:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "3187:50:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 198,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3259:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3259:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 202,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 133,
                                    "src": "3286:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "id": 200,
                                    "name": "salePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "3272:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2349,
                                  "src": "3272:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3272:26:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3259:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642066756e64732070726f76696465642e",
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3300:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d5d163a2d9df7438632584443c66df62f8810dd9b2b1db28a9579dacb5075f5",
                                "typeString": "literal_string \"Invalid funds provided.\""
                              },
                              "value": "Invalid funds provided."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d5d163a2d9df7438632584443c66df62f8810dd9b2b1db28a9579dacb5075f5",
                                "typeString": "literal_string \"Invalid funds provided.\""
                              }
                            ],
                            "id": 197,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3251:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3251:75:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "3251:75:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 209,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 853,
                                    "src": "3348:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3348:13:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 211,
                                  "name": "_mintAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 133,
                                  "src": "3364:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3348:27:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 213,
                                "name": "whitelistSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "3379:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3348:46:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73616374696f6e20657863656564732077686974656c69737420737570706c792e",
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3396:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                                "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                              },
                              "value": "Transaction exceeds whitelist supply."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a924d37c1e0ecbe926b530038b5c4b05b5eec9787878177c6d5cda4f78b235c",
                                "typeString": "literal_string \"Transaction exceeds whitelist supply.\""
                              }
                            ],
                            "id": 208,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3340:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3340:96:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "3340:96:15"
                      },
                      {
                        "expression": {
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 218,
                              "name": "claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3450:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 221,
                            "indexExpression": {
                              "expression": {
                                "id": 219,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3458:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3458:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3450:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3472:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3450:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:26:15"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 299,
                    "nodeType": "Block",
                    "src": "4072:114:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4096:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4096:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 289,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "4108:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1987_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 290,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1999,
                                "src": "4108:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1987_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4108:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 286,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1615,
                              1644
                            ],
                            "referencedDeclaration": 1615,
                            "src": "4086:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4086:48:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "4086:48:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 294,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "4148:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1987_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2013,
                            "src": "4148:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1987_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4148:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "4148:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 280,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "4049:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 281,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "4054:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4049:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "initializationExpression": {
                    "assignments": [
                      277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4042:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "4034:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4034:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 279,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4046:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4034:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4067:3:15",
                      "subExpression": {
                        "id": 283,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "4067:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 285,
                    "nodeType": "ExpressionStatement",
                    "src": "4067:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "4029:157:15"
                }
              ]
            },
            "functionSelector": "b61c5e69",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 138,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1076,
                  "src": "2668:13:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2668:13:15"
              }
            ],
            "name": "mint",
            "nameLocation": "2605:4:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "2616:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2610:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2646:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2629:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 134,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2629:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 135,
                    "nodeType": "ArrayTypeName",
                    "src": "2629:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2609:43:15"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2682:0:15"
            },
            "scope": 923,
            "src": "2596:1596:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "4254:25:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 307,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "4264:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4264:8:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "4264:8:15"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 305,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 304,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "4244:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4244:9:15"
              }
            ],
            "name": "pause",
            "nameLocation": "4229:5:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4234:2:15"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4254:0:15"
            },
            "scope": 923,
            "src": "4220:59:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "4321:27:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 316,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "4331:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:10:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:10:15"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 313,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "4311:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4311:9:15"
              }
            ],
            "name": "unpause",
            "nameLocation": "4294:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:2:15"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:15"
            },
            "scope": 923,
            "src": "4285:63:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "4413:43:15",
              "statements": [
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 327,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "4423:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 329,
                      "indexExpression": {
                        "id": 328,
                        "name": "_wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4431:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4423:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4445:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4423:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "4423:26:15"
                }
              ]
            },
            "functionSelector": "bbc903ea",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 324,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "4404:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4404:9:15"
              }
            ],
            "name": "overrideClaim",
            "nameLocation": "4363:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "_wlAddress",
                  "nameLocation": "4385:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "4377:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4376:20:15"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:15"
            },
            "scope": 923,
            "src": "4354:102:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "4535:600:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "4553:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4577:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4553:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4583:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4545:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4545:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4545:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 351,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "4660:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4668:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4660:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506173742061697264726f702070686173652e",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4671:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea9aeaaff9015eb85a5d1563285c09b308837f873c8a807d4ea27bbfbd6c1cd8",
                          "typeString": "literal_string \"Past airdrop phase.\""
                        },
                        "value": "Past airdrop phase."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea9aeaaff9015eb85a5d1563285c09b308837f873c8a807d4ea27bbfbd6c1cd8",
                          "typeString": "literal_string \"Past airdrop phase.\""
                        }
                      ],
                      "id": 350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4652:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "4652:41:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 358,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4711:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 359,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "4726:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4711:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4740:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        },
                        "value": "Exceeds max allowed amount per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4703:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4703:82:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 365,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4803:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4817:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4803:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4820:39:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        },
                        "value": "Airdrop amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4795:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4795:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "4795:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 372,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "4878:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4878:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 374,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "4893:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4878:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 376,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "4908:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4878:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4925:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4870:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4870:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4870:99:15"
                },
                {
                  "body": {
                    "id": 403,
                    "nodeType": "Block",
                    "src": "5022:107:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 392,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 338,
                              "src": "5046:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 393,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "5051:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1987_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1999,
                                "src": "5051:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1987_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5051:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 391,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1615,
                              1644
                            ],
                            "referencedDeclaration": 1615,
                            "src": "5036:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5036:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "5036:41:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 398,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "5091:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1987_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 400,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2013,
                            "src": "5091:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1987_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5091:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 402,
                        "nodeType": "ExpressionStatement",
                        "src": "5091:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 385,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "4999:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 386,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "5004:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4999:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "initializationExpression": {
                    "assignments": [
                      382
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4992:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "4984:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4984:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 384,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4996:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4984:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5017:3:15",
                      "subExpression": {
                        "id": 388,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "5017:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 390,
                    "nodeType": "ExpressionStatement",
                    "src": "5017:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "4979:150:15"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "4525:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4525:9:15"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "4471:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4492:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4486:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4513:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4505:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:32:15"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4535:0:15"
            },
            "scope": 923,
            "src": "4462:673:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "5202:41:15",
              "statements": [
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 413,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "5212:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 414,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "5225:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5212:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:24:15"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 411,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 410,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "5192:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5192:9:15"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5150:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5172:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "5164:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5163:21:15"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5202:0:15"
            },
            "scope": 923,
            "src": "5141:102:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "5313:94:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5331:15:15",
                        "subExpression": {
                          "id": 426,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "5332:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5348:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5323:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5323:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "5323:46:15"
                },
                {
                  "expression": {
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 431,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "5379:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 432,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "5389:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5379:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:21:15"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 422,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "5303:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5303:9:15"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5258:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5283:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "5269:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5269:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5268:27:15"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5313:0:15"
            },
            "scope": 923,
            "src": "5249:158:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "5460:173:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 444,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "5484:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5478:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 442,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5478:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5478:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5478:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5502:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5478:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5505:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5470:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5549:15:15",
                        "subExpression": {
                          "id": 453,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "5550:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5566:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5541:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5541:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "5541:54:15"
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 458,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "5605:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5622:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5605:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:21:15"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 438,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "5450:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5450:9:15"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5427:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5440:2:15"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5460:0:15"
            },
            "scope": 923,
            "src": "5418:215:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "5677:290:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 469,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5695:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5719:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5695:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5725:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5687:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5687:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "5687:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 476,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5802:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 478,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5813:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5802:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5819:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5802:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652077686974656c697374206d696e74696e672063616e20626567696e",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5822:61:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        },
                        "value": "Merkle root must be set beefore whitelist minting can begin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        }
                      ],
                      "id": 475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5794:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5794:90:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5794:90:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 485,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "5902:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5910:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "5902:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206166746572207075626c69632073616c65",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5913:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        },
                        "value": "No stages after public sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        }
                      ],
                      "id": 484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5894:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5894:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "5894:49:15"
                },
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5953:7:15",
                    "subExpression": {
                      "id": 491,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5953:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:7:15"
                }
              ]
            },
            "functionSelector": "ee3743ab",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 465,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "5667:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5667:9:15"
              }
            ],
            "name": "nextStage",
            "nameLocation": "5648:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5657:2:15"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5677:0:15"
            },
            "scope": 923,
            "src": "5639:328:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "6011:184:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 501,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6029:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6053:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6029:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6059:58:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6021:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:97:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "6021:97:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 508,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "6136:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6144:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6136:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206265666f726520696e6974",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6147:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c4680713414538b672030036a277cadf019ad78db592b34009b5e4834cd49cf",
                          "typeString": "literal_string \"No stages before init\""
                        },
                        "value": "No stages before init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c4680713414538b672030036a277cadf019ad78db592b34009b5e4834cd49cf",
                          "typeString": "literal_string \"No stages before init\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6128:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:43:15"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6181:7:15",
                    "subExpression": {
                      "id": 514,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "6181:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "6181:7:15"
                }
              ]
            },
            "functionSelector": "cbd0a2b5",
            "id": 518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 497,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6001:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6001:9:15"
              }
            ],
            "name": "prevStage",
            "nameLocation": "5982:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5991:2:15"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6011:0:15"
            },
            "scope": 923,
            "src": "5973:222:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "6277:52:15",
              "statements": [
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "6287:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 526,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "6304:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6287:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6287:35:15"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 523,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 522,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6267:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6267:9:15"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "6214:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "6240:18:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "6232:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6232:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6231:28:15"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6277:0:15"
            },
            "scope": 923,
            "src": "6205:124:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "6411:50:15",
              "statements": [
                {
                  "expression": {
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 537,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6421:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 538,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "6437:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6421:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "6421:33:15"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6401:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6401:9:15"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "6344:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "6375:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "6361:31:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6361:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6360:33:15"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6411:0:15"
            },
            "scope": 923,
            "src": "6335:126:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "6536:42:15",
              "statements": [
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 549,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "6546:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 550,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "6558:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6546:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "6546:25:15"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 546,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6526:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6526:9:15"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "6477:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "6504:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "6496:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6495:23:15"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6536:0:15"
            },
            "scope": 923,
            "src": "6468:110:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "6650:48:15",
              "statements": [
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 561,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "6660:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 562,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "6675:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6660:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:31:15"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 558,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6640:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6640:9:15"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "6593:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "6615:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "6609:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6609:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6608:24:15"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6650:0:15"
            },
            "scope": 923,
            "src": "6584:114:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "6779:214:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 576,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "6803:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6797:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 574,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6797:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6797:22:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6797:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6829:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6797:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6832:41:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6789:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6789:85:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "6789:85:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6892:21:15",
                        "subExpression": {
                          "id": 585,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6893:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6915:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6884:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6884:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "6884:60:15"
                },
                {
                  "expression": {
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "6954:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 591,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "6971:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6954:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:32:15"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 570,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "6769:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6769:9:15"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "6713:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6745:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "6731:29:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6731:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6730:31:15"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6779:0:15"
            },
            "scope": 923,
            "src": "6704:289:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "7124:167:15",
              "statements": [
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 610,
                      "name": "withdrawDest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7134:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 611,
                      "name": "_dest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7150:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7134:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7134:22:15"
                },
                {
                  "expression": {
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 614,
                      "name": "withdrawDest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7166:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 615,
                      "name": "_dest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "7182:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7166:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "7166:22:15"
                },
                {
                  "expression": {
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 618,
                      "name": "withdrawDest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7198:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 619,
                      "name": "_dest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "7214:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7198:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "7198:22:15"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 622,
                      "name": "withdrawDest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "7230:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 623,
                      "name": "_dest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "7246:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7230:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "7230:22:15"
                },
                {
                  "expression": {
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 626,
                      "name": "withdrawDest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "7262:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 627,
                      "name": "_dest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "7278:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7262:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "7262:22:15"
                }
              ]
            },
            "functionSelector": "ea74e190",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 607,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "7114:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7114:9:15"
              }
            ],
            "name": "setWithdrawAddress",
            "nameLocation": "7008:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_dest1",
                  "nameLocation": "7035:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7027:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7027:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "_dest2",
                  "nameLocation": "7051:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7043:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7043:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_dest3",
                  "nameLocation": "7067:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7059:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "_dest4",
                  "nameLocation": "7083:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7075:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7075:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "_dest5",
                  "nameLocation": "7099:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7091:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7091:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7026:80:15"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7124:0:15"
            },
            "scope": 923,
            "src": "6999:292:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "7346:209:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 639,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "7370:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7364:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 637,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7364:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7364:21:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7364:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7395:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7364:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7398:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7356:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7356:77:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "7356:77:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7451:21:15",
                        "subExpression": {
                          "id": 648,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "7452:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7474:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7443:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7443:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "7443:68:15"
                },
                {
                  "expression": {
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 653,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "7521:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7544:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7521:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "7521:27:15"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 633,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "7336:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7336:9:15"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "7306:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7326:2:15"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7346:0:15"
            },
            "scope": 923,
            "src": "7297:258:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "7606:794:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 666,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7632:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$923",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$923",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7624:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 664,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7624:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7624:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7624:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7648:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7624:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7651:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7616:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7616:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "7616:60:15"
                },
                {
                  "assignments": [
                    675,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "ms",
                      "nameLocation": "7692:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7687:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 674,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7687:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 695,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7777:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 678,
                              "name": "withdrawDest1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "7708:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7700:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 676,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7700:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7700:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7700:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7770:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "373030",
                                  "id": 687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7761:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  },
                                  "value": "700"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 683,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7743:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 682,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7735:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 681,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7735:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7735:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "7735:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2349,
                                "src": "7735:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7735:30:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "7735:34:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7735:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7700:76:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7700:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7686:94:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "ms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "7798:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2031206661696c6564",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7802:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        },
                        "value": "withdrawl 1 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7790:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7790:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "7790:33:15"
                },
                {
                  "assignments": [
                    702,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "ns",
                      "nameLocation": "7839:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7834:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7834:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 722,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7924:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "withdrawDest2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "7855:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7847:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 703,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7847:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7847:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7847:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7917:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7908:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 710,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7890:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7882:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 708,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7882:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7882:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "7882:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2349,
                                "src": "7882:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7882:30:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "7882:34:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7882:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7847:76:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7847:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7833:94:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 724,
                        "name": "ns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "7946:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2032206661696c6564",
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7950:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        },
                        "value": "withdrawl 2 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        }
                      ],
                      "id": 723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7938:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7938:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "7938:33:15"
                },
                {
                  "assignments": [
                    729,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 729,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "7987:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7982:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 728,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7982:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 749,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8072:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 732,
                              "name": "withdrawDest3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "8003:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7995:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7995:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7995:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7995:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8065:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8056:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 737,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8038:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 736,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8030:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 735,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8030:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8030:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8030:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2349,
                                "src": "8030:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8030:30:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "8030:34:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8030:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7995:76:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7995:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7981:94:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 751,
                        "name": "cr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "8094:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2033206661696c6564",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8098:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        },
                        "value": "withdrawl 3 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        }
                      ],
                      "id": 750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8086:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8086:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "8086:33:15"
                },
                {
                  "assignments": [
                    756,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 756,
                      "mutability": "mutable",
                      "name": "sn",
                      "nameLocation": "8135:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "8130:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 755,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8130:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 776,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8219:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 759,
                              "name": "withdrawDest4",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "8151:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8143:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 757,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8143:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8143:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8143:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8212:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "3435",
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8204:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  },
                                  "value": "45"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 764,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8186:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$923",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 763,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8178:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 762,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8178:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8178:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8178:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2349,
                                "src": "8178:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8178:29:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "8178:33:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8178:39:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8143:75:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8143:79:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8129:93:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 778,
                        "name": "sn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "8240:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2034206661696c6564",
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8244:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        },
                        "value": "withdrawl 4 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        }
                      ],
                      "id": 777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8232:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8232:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "8232:33:15"
                },
                {
                  "assignments": [
                    783,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "gr",
                      "nameLocation": "8281:2:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "8276:7:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8276:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 797,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8347:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 786,
                              "name": "withdrawDest5",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "8297:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8289:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 784,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8289:8:15",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8289:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8289:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 791,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8332:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$923",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$923",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8324:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 789,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8324:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8324:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8324:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8289:57:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8289:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8275:75:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "gr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "8368:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2035206661696c6564",
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8372:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        },
                        "value": "withdrawl 5 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8360:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "8360:33:15"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 970,
                  "src": "7596:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "7596:9:15"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7570:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7578:2:15"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7606:0:15"
            },
            "scope": 923,
            "src": "7561:839:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "8491:108:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 810,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "8509:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8509:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8525:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8509:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8528:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8501:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8501:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "8501:52:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 818,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "8578:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8578:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 817,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "8570:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8570:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 808,
                  "id": 821,
                  "nodeType": "Return",
                  "src": "8563:29:15"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "8444:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8459:2:15"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8483:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8482:9:15"
            },
            "scope": 923,
            "src": "8435:164:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "8656:100:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 829,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "8674:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8674:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8690:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8674:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8693:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8666:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8666:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "8666:52:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 836,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "8735:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8735:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 838,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8734:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 827,
                  "id": 839,
                  "nodeType": "Return",
                  "src": "8728:21:15"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "8614:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8624:2:15"
            },
            "returnParameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "8648:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8647:9:15"
            },
            "scope": 923,
            "src": "8605:151:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "8815:53:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 846,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "8832:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1987_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1999,
                        "src": "8832:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1987_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1987_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8832:25:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8860:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8832:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 845,
                  "id": 851,
                  "nodeType": "Return",
                  "src": "8825:36:15"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "8771:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8782:2:15"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "8806:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8805:9:15"
            },
            "scope": 923,
            "src": "8762:106:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1328
            ],
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "8962:178:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "8988:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 862,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1559,
                          "src": "8980:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8980:16:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8998:49:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8972:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8972:76:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "8972:76:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 872,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "9089:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 873,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 855,
                                "src": "9098:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3020,
                              "src": "9098:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9098:18:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 876,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "9118:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 870,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9072:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9072:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9072:60:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9065:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9065:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9065:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 860,
                  "id": 879,
                  "nodeType": "Return",
                  "src": "9058:75:15"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8883:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 857,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8929:8:15"
            },
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8900:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8892:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8892:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8891:17:15"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8947:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8947:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8946:15:15"
            },
            "scope": 923,
            "src": "8874:266:15",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "9201:55:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 886,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "9218:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 887,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "9236:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9236:13:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9218:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 885,
                  "id": 890,
                  "nodeType": "Return",
                  "src": "9211:38:15"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "9155:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9168:2:15"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "9192:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9192:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9191:9:15"
            },
            "scope": 923,
            "src": "9146:110:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "9314:29:15",
              "statements": [
                {
                  "expression": {
                    "id": 897,
                    "name": "stage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "9331:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 896,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "9324:12:15"
                }
              ]
            },
            "functionSelector": "fcaa7664",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStage",
            "nameLocation": "9275:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9283:2:15"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "9307:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9307:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9306:7:15"
            },
            "scope": 923,
            "src": "9266:77:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1950
            ],
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "9462:62:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 916,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "9499:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 917,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "9505:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 918,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "9509:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 913,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9472:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$923_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "9472:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9472:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "9472:45:15"
                }
              ]
            },
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 909,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 908,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1076,
                  "src": "9431:13:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "9431:13:15"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9358:20:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 911,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 910,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1951,
                  "src": "9454:6:15"
                }
              ],
              "src": "9445:16:15"
            },
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9387:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9379:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9379:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9401:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9393:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9393:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9413:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9405:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9405:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9378:43:15"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9462:0:15"
            },
            "scope": 923,
            "src": "9349:175:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 924,
        "src": "483:9044:15",
        "usedErrors": []
      }
    ],
    "src": "32:9495:15"
  },
  "bytecode": "60a06040819052600060808190526200001b91600a9162000218565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600b9162000218565b50600c805461ff01600160c01b031916771953bc1ff76f5e61cd775a4482bd85bac56ad1eb00000000179055600d80547312b58f5331a6dc897932aa7fb5101667acdf03e26001600160a01b03199182168117909255600e8054731953bc1ff76f5e61cd775a4482bd85bac56ad1eb908316179055600f805482168317905560108054909116909117905567016345785d8a0000601655348015620000ee57600080fd5b5060405162003e9638038062003e9683398101604081905262000111916200038b565b8651879087906200012a90600090602085019062000218565b5080516200014090600190602084019062000218565b50506006805460ff19169055506200015833620001b5565b601184905560138390556015829055600c805461ff00191661010060ff84160217905584516200019090600a90602088019062000218565b50620001a860076200020f60201b620026251760201c565b5050505050505062000492565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620002269062000455565b90600052602060002090601f0160209004810192826200024a576000855562000295565b82601f106200026557805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029557825182559160200191906001019062000278565b50620002a3929150620002a7565b5090565b5b80821115620002a35760008155600101620002a8565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002e657600080fd5b81516001600160401b0380821115620003035762000303620002be565b604051601f8301601f19908116603f011681019082821181831017156200032e576200032e620002be565b816040528381526020925086838588010111156200034b57600080fd5b600091505b838210156200036f578582018301518183018401529082019062000350565b83821115620003815760008385830101525b9695505050505050565b600080600080600080600060e0888a031215620003a757600080fd5b87516001600160401b0380821115620003bf57600080fd5b620003cd8b838c01620002d4565b985060208a0151915080821115620003e457600080fd5b620003f28b838c01620002d4565b975060408a01519150808211156200040957600080fd5b50620004188a828b01620002d4565b955050606088015193506080880151925060a0880151915060c088015160ff811681146200044557600080fd5b8091505092959891949750929550565b600181811c908216806200046a57607f821691505b602082108114156200048c57634e487b7160e01b600052602260045260246000fd5b50919050565b6139f480620004a26000396000f3fe60806040526004361061038c5760003560e01c80638456cb59116101dc578063c884ef8311610102578063de7fcb1d116100a0578063ee3743ab1161006f578063ee3743ab14610a0d578063f2fde38b14610a22578063f51f96dd14610a42578063fcaa766414610a5857600080fd5b8063de7fcb1d1461095e578063e7bc82081461098f578063e985e9c5146109a4578063ea74e190146109ed57600080fd5b8063d6d67a09116100dc578063d6d67a09146108f4578063da3ef23f14610909578063db993f5614610929578063de5f98661461094957600080fd5b8063c884ef831461088f578063cbd0a2b5146108bf578063d2fab8b9146108d457600080fd5b8063b61c5e691161017a578063c321458111610149578063c32145811461082f578063c668286214610845578063c6ab67a31461085a578063c87b56dd1461086f57600080fd5b8063b61c5e69146107bc578063b88d4fde146107cf578063bbc903ea146107ef578063c29de6301461080f57600080fd5b80639a2a9c3d116101b65780639a2a9c3d1461073b578063a22cb4651461075c578063b12143921461077c578063b3caad011461079c57600080fd5b80638456cb59146106ee5780638da5cb5b1461070357806395d89b411461072657600080fd5b806342842e0e116102c15780636c0360eb1161025f578063782319781161022e5780637823197814610683578063791a2519146106995780637cb64759146106b957806381c162f2146106d957600080fd5b80636c0360eb146106245780636cbb89851461063957806370a082311461064e578063715018a61461066e57600080fd5b80635c975abb1161029b5780635c975abb146105a457806361869a93146105bc578063622e4e78146105e45780636352211e1461060457600080fd5b806342842e0e1461054457806342966c681461056457806355f804b31461058457600080fd5b806320841a6a1161032e57806333e614131161030857806333e61413146104f15780633c795047146105075780633ccfd60b146105275780633f4ba83a1461052f57600080fd5b806320841a6a1461049b57806323b872dd146104bb5780632eb4a7ab146104db57600080fd5b8063088139a61161036a578063088139a614610420578063095ea7b314610444578063109695231461046657806318160ddd1461048657600080fd5b806301ffc9a71461039157806306fdde03146103c6578063081812fc146103e8575b600080fd5b34801561039d57600080fd5b506103b16103ac366004613176565b610a70565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610ac2565b6040516103bd91906131eb565b3480156103f457600080fd5b506104086104033660046131fe565b610b54565b6040516001600160a01b0390911681526020016103bd565b34801561042c57600080fd5b5061043660145481565b6040519081526020016103bd565b34801561045057600080fd5b5061046461045f366004613233565b610bee565b005b34801561047257600080fd5b506104646104813660046132fc565b610d04565b34801561049257600080fd5b50610436610e06565b3480156104a757600080fd5b506104646104b63660046131fe565b610e22565b3480156104c757600080fd5b506104646104d6366004613345565b610e57565b3480156104e757600080fd5b5061043660085481565b3480156104fd57600080fd5b5061043660115481565b34801561051357600080fd5b50600e54610408906001600160a01b031681565b610464610e89565b34801561053b57600080fd5b5061046461124c565b34801561055057600080fd5b5061046461055f366004613345565b611286565b34801561057057600080fd5b5061046461057f3660046131fe565b6112a1565b34801561059057600080fd5b5061046461059f3660046132fc565b61131b565b3480156105b057600080fd5b5060065460ff166103b1565b3480156105c857600080fd5b50600c546104089064010000000090046001600160a01b031681565b3480156105f057600080fd5b506104646105ff366004613392565b6113ac565b34801561061057600080fd5b5061040861061f3660046131fe565b6113f8565b34801561063057600080fd5b506103db61146f565b34801561064557600080fd5b506104086114fd565b34801561065a57600080fd5b506104366106693660046133ad565b611559565b34801561067a57600080fd5b506104646115e0565b34801561068f57600080fd5b5061043660155481565b3480156106a557600080fd5b506104646106b43660046131fe565b61161a565b3480156106c557600080fd5b506104646106d43660046131fe565b61164f565b3480156106e557600080fd5b50610464611684565b3480156106fa57600080fd5b5061046461178c565b34801561070f57600080fd5b5060065461010090046001600160a01b0316610408565b34801561073257600080fd5b506103db6117c4565b34801561074757600080fd5b50600c546103b1906301000000900460ff1681565b34801561076857600080fd5b506104646107773660046133c8565b6117d3565b34801561078857600080fd5b50600d54610408906001600160a01b031681565b3480156107a857600080fd5b506104646107b7366004613404565b6117de565b6104646107ca366004613437565b611a13565b3480156107db57600080fd5b506104646107ea3660046134f0565b611fbe565b3480156107fb57600080fd5b5061046461080a3660046133ad565b611ff6565b34801561081b57600080fd5b50600c546103b19062010000900460ff1681565b34801561083b57600080fd5b5061043660135481565b34801561085157600080fd5b506103db61204a565b34801561086657600080fd5b506103db612057565b34801561087b57600080fd5b506103db61088a3660046131fe565b612064565b34801561089b57600080fd5b506103b16108aa3660046133ad565b60126020526000908152604090205460ff1681565b3480156108cb57600080fd5b50610464612118565b3480156108e057600080fd5b50600f54610408906001600160a01b031681565b34801561090057600080fd5b506104366121ee565b34801561091557600080fd5b506104646109243660046132fc565b612247565b34801561093557600080fd5b50601054610408906001600160a01b031681565b34801561095557600080fd5b5061043661228a565b34801561096a57600080fd5b50600c5461097d90610100900460ff1681565b60405160ff90911681526020016103bd565b34801561099b57600080fd5b506104646122a1565b3480156109b057600080fd5b506103b16109bf36600461356c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109f957600080fd5b50610464610a08366004613588565b61239b565b348015610a1957600080fd5b5061046461243a565b348015610a2e57600080fd5b50610464610a3d3660046133ad565b612587565b348015610a4e57600080fd5b5061043660165481565b348015610a6457600080fd5b50600c5460ff1661097d565b60006001600160e01b031982166380ac58cd60e01b1480610aa157506001600160e01b03198216635b5e139f60e01b145b80610abc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610ad1906135ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610afd906135ed565b8015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610bd25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bf9826113f8565b9050806001600160a01b0316836001600160a01b03161415610c675760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610bc9565b336001600160a01b0382161480610c835750610c8381336109bf565b610cf55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610bc9565b610cff838361262e565b505050565b6006546001600160a01b03610100909104163314610d345760405162461bcd60e51b8152600401610bc990613628565b6000815111610d955760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610bc9565b600c546301000000900460ff1615610def5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610bc9565b8051610e029060099060208401906130c7565b5050565b60006001610e1360075490565b610e1d9190613673565b905090565b6006546001600160a01b03610100909104163314610e525760405162461bcd60e51b8152600401610bc990613628565b601355565b610e62335b8261269c565b610e7e5760405162461bcd60e51b8152600401610bc99061368a565b610cff838383612793565b6006546001600160a01b03610100909104163314610eb95760405162461bcd60e51b8152600401610bc990613628565b60004711610f025760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610bc9565b600c5460009064010000000090046001600160a01b0316610f316103e8610f2b476102bc61293e565b90612951565b604051600081818185875af1925050503d8060008114610f6d576040519150601f19603f3d011682016040523d82523d6000602084013e610f72565b606091505b5050905080610fb85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610bc9565b600d546000906001600160a01b0316610fd86103e8610f2b47606961293e565b604051600081818185875af1925050503d8060008114611014576040519150601f19603f3d011682016040523d82523d6000602084013e611019565b606091505b505090508061105f5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610bc9565b600e546000906001600160a01b031661107f6103e8610f2b47606961293e565b604051600081818185875af1925050503d80600081146110bb576040519150601f19603f3d011682016040523d82523d6000602084013e6110c0565b606091505b50509050806111065760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080cc819985a5b195960721b6044820152606401610bc9565b600f546000906001600160a01b03166111266103e8610f2b47602d61293e565b604051600081818185875af1925050503d8060008114611162576040519150601f19603f3d011682016040523d82523d6000602084013e611167565b606091505b50509050806111ad5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d0819985a5b195960721b6044820152606401610bc9565b6010546040516000916001600160a01b03169047908381818185875af1925050503d80600081146111fa576040519150601f19603f3d011682016040523d82523d6000602084013e6111ff565b606091505b50509050806112455760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d4819985a5b195960721b6044820152606401610bc9565b5050505050565b6006546001600160a01b0361010090910416331461127c5760405162461bcd60e51b8152600401610bc990613628565b61128461295d565b565b610cff83838360405180602001604052806000815250611fbe565b6112aa33610e5c565b61130f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610bc9565b611318816129f0565b50565b6006546001600160a01b0361010090910416331461134b5760405162461bcd60e51b8152600401610bc990613628565b600c5462010000900460ff16156113995760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610bc9565b8051610e0290600a9060208401906130c7565b6006546001600160a01b036101009091041633146113dc5760405162461bcd60e51b8152600401610bc990613628565b600c805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610abc5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610bc9565b600a805461147c906135ed565b80601f01602080910402602001604051908101604052809291908181526020018280546114a8906135ed565b80156114f55780601f106114ca576101008083540402835291602001916114f5565b820191906000526020600020905b8154815290600101906020018083116114d857829003601f168201915b505050505081565b600080611508610e06565b1161154e5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bc9565b610e1d61061f610e06565b60006001600160a01b0382166115c45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610bc9565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146116105760405162461bcd60e51b8152600401610bc990613628565b6112846000612a97565b6006546001600160a01b0361010090910416331461164a5760405162461bcd60e51b8152600401610bc990613628565b601655565b6006546001600160a01b0361010090910416331461167f5760405162461bcd60e51b8152600401610bc990613628565b600855565b6006546001600160a01b036101009091041633146116b45760405162461bcd60e51b8152600401610bc990613628565b6000600980546116c3906135ed565b9050116117125760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610bc9565b600c546301000000900460ff16156117775760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610bc9565b600c805463ff00000019166301000000179055565b6006546001600160a01b036101009091041633146117bc5760405162461bcd60e51b8152600401610bc990613628565b611284612af1565b606060018054610ad1906135ed565b610e02338383612b49565b6006546001600160a01b0361010090910416331461180e5760405162461bcd60e51b8152600401610bc990613628565b600c546301000000900460ff16151560011461183c5760405162461bcd60e51b8152600401610bc9906136db565b600c54600160ff909116106118895760405162461bcd60e51b81526020600482015260136024820152722830b9ba1030b4b9323937b810383430b9b29760691b6044820152606401610bc9565b600c5460ff610100909104811690831611156118fa5760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f77656420616d6f756e742070657220746044820152693930b739b0b1ba34b7b760b11b6064820152608401610bc9565b60008260ff161161195b5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610bc9565b6011548260ff1661196a610e06565b6119749190613738565b11156119d45760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610bc9565b60015b8260ff168111610cff576119f3826119ee60075490565b612c18565b611a01600780546001019055565b80611a0b81613750565b9150506119d7565b60065460ff1615611a365760405162461bcd60e51b8152600401610bc99061376b565b600c5460ff16611a9c5760405162461bcd60e51b815260206004820152602b60248201527f4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c792060448201526a37b71039ba30b3b290181760a91b6064820152608401610bc9565b60008260ff1611611afb5760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610bc9565b600c5460ff61010090910481169083161115611b6d5760405162461bcd60e51b815260206004820152602b60248201527f45786365656473206d617820616c6c6f77656420616d6f756e7420706572207460448201526a3930b739b0b1ba34b7b71760a91b6064820152608401610bc9565b600c5460ff1660011415611dab576008546040516bffffffffffffffffffffffff193360601b166020820152611bc791906034016040516020818303038152906040528051906020012083612c329092919063ffffffff16565b611c135760405162461bcd60e51b815260206004820152601860248201527f41646472657373206e6f742077686974656c69737465642e00000000000000006044820152606401610bc9565b3360009081526012602052604090205460ff1615611c735760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610bc9565b60028260ff1610611cbf5760405162461bcd60e51b815260206004820152601660248201527526b4b73a1030b6b7bab73a1036bab9ba10313290189760511b6044820152606401610bc9565b601654611ccf9060ff841661293e565b3414611d175760405162461bcd60e51b815260206004820152601760248201527624b73b30b634b210333ab7323990383937bb34b232b21760491b6044820152606401610bc9565b6011548260ff16611d26610e06565b611d309190613738565b1115611d8c5760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e20657863656564732077686974656c6973742073756044820152643838363c9760d91b6064820152608401610bc9565b336000908152601260205260409020805460ff19166001179055611f84565b600c5460ff1660021415611eb7576006546001600160a01b03610100909104163314611e235760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204f776e65722063616e206d696e74206174207468697320737461676044820152606560f81b6064820152608401610bc9565b601354601454611e369060ff8516613738565b1115611e975760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610bc9565b8160ff1660146000828254611eac9190613738565b90915550611f849050565b601654611ec79060ff841661293e565b3414611f0f5760405162461bcd60e51b815260206004820152601760248201527624b73b30b634b210333ab7323990383937bb34b232b21760491b6044820152606401610bc9565b6015548260ff16611f1e610e06565b611f289190613738565b1115611f845760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610bc9565b60015b8260ff168111610cff57611f9e336119ee60075490565b611fac600780546001019055565b80611fb681613750565b915050611f87565b611fc8338361269c565b611fe45760405162461bcd60e51b8152600401610bc99061368a565b611ff084848484612c48565b50505050565b6006546001600160a01b036101009091041633146120265760405162461bcd60e51b8152600401610bc990613628565b6001600160a01b03166000908152601260205260409020805460ff19166001179055565b600b805461147c906135ed565b6009805461147c906135ed565b6000818152600260205260409020546060906001600160a01b03166120e35760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610bc9565b600a6120ee83612c7b565b600b6040516020016121029392919061382f565b6040516020818303038152906040529050919050565b6006546001600160a01b036101009091041633146121485760405162461bcd60e51b8152600401610bc990613628565b600c546301000000900460ff1615156001146121765760405162461bcd60e51b8152600401610bc9906136db565b600c5460ff166121c05760405162461bcd60e51b8152602060048201526015602482015274139bc81cdd1859d95cc81899599bdc99481a5b9a5d605a1b6044820152606401610bc9565b600c805460ff169060006121d383613862565b91906101000a81548160ff021916908360ff16021790555050565b6000806121f9610e06565b1161223f5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bc9565b610e1d610e06565b6006546001600160a01b036101009091041633146122775760405162461bcd60e51b8152600401610bc990613628565b8051610e0290600b9060208401906130c7565b6000612294610e06565b601554610e1d9190613673565b6006546001600160a01b036101009091041633146122d15760405162461bcd60e51b8152600401610bc990613628565b6000600a80546122e0906135ed565b90501161232f5760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610bc9565b600c5462010000900460ff16156123885760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610bc9565b600c805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146123cb5760405162461bcd60e51b8152600401610bc990613628565b600c80546001600160a01b0396871664010000000002640100000000600160c01b0319909116179055600d80549486166001600160a01b0319958616179055600e805493861693851693909317909255600f805491851691841691909117905560108054919093169116179055565b6006546001600160a01b0361010090910416331461246a5760405162461bcd60e51b8152600401610bc990613628565b600c546301000000900460ff1615156001146124985760405162461bcd60e51b8152600401610bc9906136db565b60085460001a60f81b6001600160f81b03191661251d5760405162461bcd60e51b815260206004820152603b60248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527f77686974656c697374206d696e74696e672063616e20626567696e00000000006064820152608401610bc9565b600c54600460ff909116106125745760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610bc9565b600c805460ff169060006121d383613895565b6006546001600160a01b036101009091041633146125b75760405162461bcd60e51b8152600401610bc990613628565b6001600160a01b03811661261c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610bc9565b61131881612a97565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190612663826113f8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166127155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610bc9565b6000612720836113f8565b9050806001600160a01b0316846001600160a01b0316148061275b5750836001600160a01b031661275084610b54565b6001600160a01b0316145b8061278b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166127a6826113f8565b6001600160a01b03161461280e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610bc9565b6001600160a01b0382166128705760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610bc9565b61287b838383612d79565b61288660008261262e565b6001600160a01b03831660009081526003602052604081208054600192906128af908490613673565b90915550506001600160a01b03821660009081526003602052604081208054600192906128dd908490613738565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061294a82846138b5565b9392505050565b600061294a82846138ea565b60065460ff166129a65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610bc9565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006129fb826113f8565b9050612a0981600084612d79565b612a1460008361262e565b6001600160a01b0381166000908152600360205260408120805460019290612a3d908490613673565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612b145760405162461bcd60e51b8152600401610bc99061376b565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586129d33390565b816001600160a01b0316836001600160a01b03161415612bab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610bc9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e02828260405180602001604052806000815250612d9c565b600082612c3f8584612dcf565b14949350505050565b612c53848484612793565b612c5f84848484612e7b565b611ff05760405162461bcd60e51b8152600401610bc9906138fe565b606081612c9f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612cc95780612cb381613750565b9150612cc29050600a836138ea565b9150612ca3565b60008167ffffffffffffffff811115612ce457612ce461325d565b6040519080825280601f01601f191660200182016040528015612d0e576020820181803683370190505b5090505b841561278b57612d23600183613673565b9150612d30600a86613950565b612d3b906030613738565b60f81b818381518110612d5057612d5061387f565b60200101906001600160f81b031916908160001a905350612d72600a866138ea565b9450612d12565b60065460ff1615610cff5760405162461bcd60e51b8152600401610bc99061376b565b612da68383612f79565b612db36000848484612e7b565b610cff5760405162461bcd60e51b8152600401610bc9906138fe565b600081815b8451811015612e73576000858281518110612df157612df161387f565b60200260200101519050808311612e33576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612e60565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080612e6b81613750565b915050612dd4565b509392505050565b60006001600160a01b0384163b15612f6e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612ebf903390899088908890600401613964565b6020604051808303816000875af1925050508015612efa575060408051601f3d908101601f19168201909252612ef7918101906139a1565b60015b612f54573d808015612f28576040519150601f19603f3d011682016040523d82523d6000602084013e612f2d565b606091505b508051612f4c5760405162461bcd60e51b8152600401610bc9906138fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061278b565b506001949350505050565b6001600160a01b038216612fcf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610bc9565b6000818152600260205260409020546001600160a01b0316156130345760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610bc9565b61304060008383612d79565b6001600160a01b0382166000908152600360205260408120805460019290613069908490613738565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546130d3906135ed565b90600052602060002090601f0160209004810192826130f5576000855561313b565b82601f1061310e57805160ff191683800117855561313b565b8280016001018555821561313b579182015b8281111561313b578251825591602001919060010190613120565b5061314792915061314b565b5090565b5b80821115613147576000815560010161314c565b6001600160e01b03198116811461131857600080fd5b60006020828403121561318857600080fd5b813561294a81613160565b60005b838110156131ae578181015183820152602001613196565b83811115611ff05750506000910152565b600081518084526131d7816020860160208601613193565b601f01601f19169290920160200192915050565b60208152600061294a60208301846131bf565b60006020828403121561321057600080fd5b5035919050565b80356001600160a01b038116811461322e57600080fd5b919050565b6000806040838503121561324657600080fd5b61324f83613217565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561329c5761329c61325d565b604052919050565b600067ffffffffffffffff8311156132be576132be61325d565b6132d1601f8401601f1916602001613273565b90508281528383830111156132e557600080fd5b828260208301376000602084830101529392505050565b60006020828403121561330e57600080fd5b813567ffffffffffffffff81111561332557600080fd5b8201601f8101841361333657600080fd5b61278b848235602084016132a4565b60008060006060848603121561335a57600080fd5b61336384613217565b925061337160208501613217565b9150604084013590509250925092565b803560ff8116811461322e57600080fd5b6000602082840312156133a457600080fd5b61294a82613381565b6000602082840312156133bf57600080fd5b61294a82613217565b600080604083850312156133db57600080fd5b6133e483613217565b9150602083013580151581146133f957600080fd5b809150509250929050565b6000806040838503121561341757600080fd5b61342083613381565b915061342e60208401613217565b90509250929050565b6000806040838503121561344a57600080fd5b61345383613381565b915060208084013567ffffffffffffffff8082111561347157600080fd5b818601915086601f83011261348557600080fd5b8135818111156134975761349761325d565b8060051b91506134a8848301613273565b81815291830184019184810190898411156134c257600080fd5b938501935b838510156134e0578435825293850193908501906134c7565b8096505050505050509250929050565b6000806000806080858703121561350657600080fd5b61350f85613217565b935061351d60208601613217565b925060408501359150606085013567ffffffffffffffff81111561354057600080fd5b8501601f8101871361355157600080fd5b613560878235602084016132a4565b91505092959194509250565b6000806040838503121561357f57600080fd5b61342083613217565b600080600080600060a086880312156135a057600080fd5b6135a986613217565b94506135b760208701613217565b93506135c560408701613217565b92506135d360608701613217565b91506135e160808701613217565b90509295509295909350565b600181811c9082168061360157607f821691505b6020821081141561362257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156136855761368561365d565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526038908201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260408201527f65666f7265206d696e74696e672063616e2073746172742e0000000000000000606082015260800190565b6000821982111561374b5761374b61365d565b500190565b60006000198214156137645761376461365d565b5060010190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b8054600090600181811c90808316806137af57607f831692505b60208084108214156137d157634e487b7160e01b600052602260045260246000fd5b8180156137e557600181146137f657613823565b60ff19861689528489019650613823565b60008881526020902060005b8681101561381b5781548b820152908501908301613802565b505084890196505b50505050505092915050565b600061383b8286613795565b845161384b818360208901613193565b61385781830186613795565b979650505050505050565b600060ff8216806138755761387561365d565b6000190192915050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156138ac576138ac61365d565b60010192915050565b60008160001904831182151516156138cf576138cf61365d565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826138f9576138f96138d4565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261395f5761395f6138d4565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613997908301846131bf565b9695505050505050565b6000602082840312156139b357600080fd5b815161294a8161316056fea2646970667358221220c8982795f54b388b8c681b2ac7e5beaf780e7cc9eee76bd065343b1c2c96bc1864736f6c634300080a0033",
  "bytecodeSha1": "f5dc1cc885a06de3fc4d9d802a44142f083c9219",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "206": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "Strings.toString": {
          "207": [
            601,
            611,
            false
          ]
        }
      },
      "11": {
        "MerkleProof.processProof": {
          "205": [
            1628,
            1656,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {
        "CryptidToken.airdropCryptid": {
          "166": [
            4553,
            4581,
            true
          ],
          "167": [
            4660,
            4669,
            true
          ],
          "168": [
            4711,
            4738,
            true
          ],
          "169": [
            4803,
            4818,
            true
          ],
          "170": [
            4878,
            4923,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "186": [
            5478,
            5503,
            true
          ],
          "187": [
            5549,
            5564,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "164": [
            7364,
            7396,
            true
          ],
          "165": [
            7451,
            7472,
            true
          ]
        },
        "CryptidToken.lastMintAddress": {
          "163": [
            8509,
            8526,
            true
          ]
        },
        "CryptidToken.lastMintID": {
          "185": [
            8674,
            8691,
            true
          ]
        },
        "CryptidToken.mint": {
          "171": [
            2775,
            2790,
            true
          ],
          "172": [
            2848,
            2875,
            true
          ],
          "173": [
            2937,
            2947,
            false
          ],
          "174": [
            2992,
            3057,
            true
          ],
          "175": [
            3108,
            3136,
            true
          ],
          "176": [
            3195,
            3210,
            true
          ],
          "177": [
            3259,
            3298,
            true
          ],
          "178": [
            3348,
            3394,
            true
          ],
          "179": [
            3495,
            3505,
            false
          ],
          "180": [
            3550,
            3571,
            true
          ],
          "181": [
            3631,
            3676,
            true
          ],
          "182": [
            3831,
            3870,
            true
          ],
          "183": [
            3920,
            3967,
            true
          ]
        },
        "CryptidToken.nextStage": {
          "188": [
            5695,
            5723,
            true
          ],
          "189": [
            5802,
            5820,
            true
          ],
          "190": [
            5902,
            5911,
            true
          ]
        },
        "CryptidToken.prevStage": {
          "184": [
            6029,
            6057,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "162": [
            5331,
            5346,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "154": [
            6797,
            6830,
            true
          ],
          "155": [
            6892,
            6913,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "156": [
            7624,
            7649,
            true
          ],
          "157": [
            7798,
            7800,
            true
          ],
          "158": [
            7946,
            7948,
            true
          ],
          "159": [
            8094,
            8096,
            true
          ],
          "160": [
            8240,
            8242,
            true
          ],
          "161": [
            8368,
            8370,
            true
          ]
        }
      },
      "2": {
        "ERC721._mint": {
          "203": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeMint": {
          "202": [
            8604,
            8658,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "201": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "200": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "198": [
            10451,
            10482,
            true
          ],
          "199": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "191": [
            3659,
            3670,
            true
          ],
          "192": [
            3740,
            3761,
            true
          ],
          "193": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "196": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "195": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "197": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "194": [
            4900,
            4941,
            true
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "204": [
            645,
            686,
            true
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "122": [
            2378,
            2395
          ],
          "123": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "40": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "99": [
            1998,
            2071
          ],
          "100": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "124": [
            1922,
            1936
          ],
          "125": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "115": [
            2168,
            2183
          ],
          "116": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Strings.toString": {
          "133": [
            627,
            637
          ],
          "134": [
            743,
            751
          ],
          "135": [
            765,
            775
          ],
          "136": [
            877,
            888
          ],
          "137": [
            902,
            958
          ],
          "138": [
            972,
            983
          ]
        }
      },
      "11": {
        "MerkleProof.processProof": {
          "141": [
            1754,
            1824
          ],
          "142": [
            1941,
            2011
          ],
          "143": [
            1560,
            1563
          ],
          "144": [
            2045,
            2064
          ]
        },
        "MerkleProof.verify": {
          "130": [
            984,
            1024
          ]
        }
      },
      "12": {
        "ERC165.supportsInterface": {
          "5": [
            930,
            977
          ]
        }
      },
      "13": {},
      "14": {
        "SafeMath.div": {
          "114": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "113": [
            3528,
            3540
          ]
        }
      },
      "15": {
        "CryptidToken.airdropCryptid": {
          "49": [
            4545,
            4642
          ],
          "50": [
            4652,
            4693
          ],
          "51": [
            4703,
            4785
          ],
          "52": [
            4795,
            4860
          ],
          "53": [
            4870,
            4969
          ],
          "54": [
            5036,
            5077
          ],
          "55": [
            5091,
            5118
          ],
          "57": [
            5017,
            5020
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "87": [
            5470,
            5531
          ],
          "88": [
            5541,
            5595
          ],
          "89": [
            5605,
            5626
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "43": [
            7356,
            7433
          ],
          "44": [
            7443,
            7511
          ],
          "45": [
            7521,
            7548
          ]
        },
        "CryptidToken.getStage": {
          "3": [
            9324,
            9336
          ]
        },
        "CryptidToken.getTokensLeft": {
          "86": [
            9211,
            9249
          ]
        },
        "CryptidToken.lastMintAddress": {
          "36": [
            8501,
            8553
          ],
          "37": [
            8563,
            8592
          ]
        },
        "CryptidToken.lastMintID": {
          "83": [
            8666,
            8718
          ],
          "84": [
            8728,
            8749
          ]
        },
        "CryptidToken.mint": {
          "58": [
            2692,
            2757
          ],
          "59": [
            2767,
            2830
          ],
          "60": [
            2840,
            2923
          ],
          "61": [
            2984,
            3086
          ],
          "62": [
            3100,
            3172
          ],
          "63": [
            3187,
            3237
          ],
          "64": [
            3251,
            3326
          ],
          "65": [
            3340,
            3436
          ],
          "66": [
            3450,
            3476
          ],
          "67": [
            3542,
            3609
          ],
          "68": [
            3623,
            3723
          ],
          "69": [
            3743,
            3771
          ],
          "70": [
            3823,
            3898
          ],
          "71": [
            3912,
            4009
          ],
          "72": [
            4086,
            4134
          ],
          "73": [
            4148,
            4175
          ],
          "74": [
            4067,
            4070
          ]
        },
        "CryptidToken.nextStage": {
          "95": [
            5687,
            5784
          ],
          "96": [
            5794,
            5884
          ],
          "97": [
            5894,
            5943
          ],
          "98": [
            5953,
            5960
          ]
        },
        "CryptidToken.overrideClaim": {
          "77": [
            4423,
            4449
          ]
        },
        "CryptidToken.pause": {
          "46": [
            4264,
            4272
          ]
        },
        "CryptidToken.prevStage": {
          "80": [
            6021,
            6118
          ],
          "81": [
            6128,
            6171
          ],
          "82": [
            6181,
            6188
          ]
        },
        "CryptidToken.setBaseExtension": {
          "85": [
            6421,
            6454
          ]
        },
        "CryptidToken.setBaseURI": {
          "32": [
            5323,
            5369
          ],
          "33": [
            5379,
            5400
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "34": [
            6660,
            6691
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "42": [
            5212,
            5236
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "14": [
            6789,
            6874
          ],
          "15": [
            6884,
            6944
          ],
          "16": [
            6954,
            6986
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "41": [
            6546,
            6571
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "19": [
            6287,
            6322
          ]
        },
        "CryptidToken.setWithdrawAddress": {
          "90": [
            7134,
            7156
          ],
          "91": [
            7166,
            7188
          ],
          "92": [
            7198,
            7220
          ],
          "93": [
            7230,
            7252
          ],
          "94": [
            7262,
            7284
          ]
        },
        "CryptidToken.tokenURI": {
          "78": [
            8972,
            9048
          ],
          "79": [
            9058,
            9133
          ]
        },
        "CryptidToken.totalSupply": {
          "17": [
            8825,
            8861
          ]
        },
        "CryptidToken.unpause": {
          "28": [
            4331,
            4341
          ]
        },
        "CryptidToken.withdraw": {
          "22": [
            7616,
            7676
          ],
          "23": [
            7790,
            7823
          ],
          "24": [
            7938,
            7971
          ],
          "25": [
            8086,
            8119
          ],
          "26": [
            8232,
            8265
          ],
          "27": [
            8360,
            8393
          ]
        }
      },
      "2": {
        "ERC721._approve": {
          "101": [
            11069,
            11098
          ],
          "102": [
            11108,
            11159
          ]
        },
        "ERC721._burn": {
          "117": [
            9761,
            9809
          ],
          "118": [
            9847,
            9876
          ],
          "119": [
            9887,
            9908
          ],
          "120": [
            9918,
            9941
          ],
          "121": [
            9952,
            9993
          ]
        },
        "ERC721._checkOnERC721Received": {
          "145": [
            12647,
            12707
          ],
          "146": [
            12481,
            12539
          ],
          "147": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "7": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "103": [
            7536,
            7609
          ],
          "104": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "148": [
            9134,
            9195
          ],
          "149": [
            9205,
            9263
          ],
          "150": [
            9274,
            9319
          ],
          "151": [
            9330,
            9348
          ],
          "152": [
            9358,
            9379
          ],
          "153": [
            9390,
            9428
          ]
        },
        "ERC721._safeMint": {
          "129": [
            8176,
            8202
          ],
          "139": [
            8555,
            8573
          ],
          "140": [
            8583,
            8734
          ]
        },
        "ERC721._safeTransfer": {
          "131": [
            6685,
            6713
          ],
          "132": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "126": [
            11434,
            11489
          ],
          "127": [
            11499,
            11545
          ],
          "128": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "105": [
            10443,
            10528
          ],
          "106": [
            10538,
            10603
          ],
          "107": [
            10614,
            10653
          ],
          "108": [
            10715,
            10744
          ],
          "109": [
            10755,
            10775
          ],
          "110": [
            10785,
            10803
          ],
          "111": [
            10813,
            10834
          ],
          "112": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "10": [
            3651,
            3708
          ],
          "12": [
            3719,
            3884
          ],
          "13": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "38": [
            2005,
            2079
          ],
          "39": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4079,
            4152
          ],
          "9": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "6": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "35": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "29": [
            5240,
            5279
          ],
          "75": [
            5513,
            5616
          ],
          "76": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "48": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "4": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "47": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            4892,
            4995
          ],
          "21": [
            5006,
            5034
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "30": [
            637,
            739
          ],
          "31": [
            749,
            763
          ]
        }
      },
      "6": {},
      "8": {
        "Context._msgSender": {
          "11": [
            712,
            729
          ]
        }
      },
      "9": {
        "Counters.current": {
          "18": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "56": [
            1032,
            1051
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;1555:300:2;;;;;;;;2473:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;3984:217:2;1528:203:16;1902:28:15;;;;;;;;;;;;;;;;;;;1882:25:16;;;1870:2;1855:18;1902:28:15;1736:177:16;3522:401:2;;;;;;;;;;-1:-1:-1;3522:401:2;;;;;:::i;:::-;;:::i;:::-;;6704:289:15;;;;;;;;;;-1:-1:-1;6704:289:15;;;;;:::i;:::-;;:::i;8762:106::-;;;;;;;;;;;;;:::i;6205:124::-;;;;;;;;;;-1:-1:-1;6205:124:15;;;;;:::i;:::-;;:::i;4711:330:2:-;;;;;;;;;;-1:-1:-1;4711:330:2;;;;;:::i;:::-;;:::i;749:25:15:-;;;;;;;;;;;;;;;;1691:30;;;;;;;;;;;;;;;;1221:73;;;;;;;;;;-1:-1:-1;1221:73:15;;;;-1:-1:-1;;;;;1221:73:15;;;7561:839;;;:::i;4285:63::-;;;;;;;;;;;;;:::i;5107:179:2:-;;;;;;;;;;-1:-1:-1;5107:179:2;;;;;:::i;:::-;;:::i;529:241:5:-;;;;;;;;;;-1:-1:-1;529:241:5;;;;;:::i;:::-;;:::i;5249:158:15:-;;;;;;;;;;-1:-1:-1;5249:158:15;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;1041:73:15;;;;;;;;;;-1:-1:-1;1041:73:15;;;;;;;-1:-1:-1;;;;;1041:73:15;;;6584:114;;;;;;;;;;-1:-1:-1;6584:114:15;;;;;:::i;:::-;;:::i;2176:235:2:-;;;;;;;;;;-1:-1:-1;2176:235:2;;;;;:::i;:::-;;:::i;814:26:15:-;;;;;;;;;;;;;:::i;8435:164::-;;;;;;;;;;;;;:::i;1914:205:2:-;;;;;;;;;;-1:-1:-1;1914:205:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1966:30:15:-;;;;;;;;;;;;;;;;6468:110;;;;;;;;;;-1:-1:-1;6468:110:15;;;;;:::i;:::-;;:::i;5141:102::-;;;;;;;;;;-1:-1:-1;5141:102:15;;;;;:::i;:::-;;:::i;7297:258::-;;;;;;;;;;;;;:::i;4220:59::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:2;;;;;;;;;;;;;:::i;994:40:15:-;;;;;;;;;;-1:-1:-1;994:40:15;;;;;;;;;;;4268:153:2;;;;;;;;;;-1:-1:-1;4268:153:2;;;;;:::i;:::-;;:::i;1129:73:15:-;;;;;;;;;;-1:-1:-1;1129:73:15;;;;-1:-1:-1;;;;;1129:73:15;;;4462:673;;;;;;;;;;-1:-1:-1;4462:673:15;;;;;:::i;:::-;;:::i;2596:1596::-;;;;;;:::i;:::-;;:::i;5352:320:2:-;;;;;;;;;;-1:-1:-1;5352:320:2;;;;;:::i;:::-;;:::i;4354:102:15:-;;;;;;;;;;-1:-1:-1;4354:102:15;;;;;:::i;:::-;;:::i;954:34::-;;;;;;;;;;-1:-1:-1;954:34:15;;;;;;;;;;;1841:29;;;;;;;;;;;;;;;;846:37;;;;;;;;;;;;;:::i;780:28::-;;;;;;;;;;;;;:::i;8874:266::-;;;;;;;;;;-1:-1:-1;8874:266:15;;;;;:::i;:::-;;:::i;1750:39::-;;;;;;;;;;-1:-1:-1;1750:39:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;5973:222;;;;;;;;;;;;;:::i;1313:73::-;;;;;;;;;;-1:-1:-1;1313:73:15;;;;-1:-1:-1;;;;;1313:73:15;;;8605:151;;;;;;;;;;;;;:::i;6335:126::-;;;;;;;;;;-1:-1:-1;6335:126:15;;;;;:::i;:::-;;:::i;1405:73::-;;;;;;;;;;-1:-1:-1;1405:73:15;;;;-1:-1:-1;;;;;1405:73:15;;;9146:110;;;;;;;;;;;;;:::i;918:25::-;;;;;;;;;;-1:-1:-1;918:25:15;;;;;;;;;;;;;;7352:4:16;7340:17;;;7322:36;;7310:2;7295:18;918:25:15;7180:184:16;5418:215:15;;;;;;;;;;;;;:::i;4487:162:2:-;;;;;;;;;;-1:-1:-1;4487:162:2;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;6999:292:15;;;;;;;;;;-1:-1:-1;6999:292:15;;;;;:::i;:::-;;:::i;5639:328::-;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2011:37:15:-;;;;;;;;;;;;;;;;9266:77;;;;;;;;;;-1:-1:-1;9331:5:15;;;;9266:77;;1555:300:2;1657:4;-1:-1:-1;;;;;;1692:40:2;;-1:-1:-1;;;1692:40:2;;:104;;-1:-1:-1;;;;;;;1748:48:2;;-1:-1:-1;;;1748:48:2;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:12;;;1812:36:2;1673:175;1555:300;-1:-1:-1;;1555:300:2:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;4079:73;;;;-1:-1:-1;;;4079:73:2;;8710:2:16;4079:73:2;;;8692:21:16;8749:2;8729:18;;;8722:30;8788:34;8768:18;;;8761:62;-1:-1:-1;;;8839:18:16;;;8832:42;8891:19;;4079:73:2;;;;;;;;;-1:-1:-1;4170:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:2;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:2;:2;-1:-1:-1;;;;;3659:11:2;;;3651:57;;;;-1:-1:-1;;;3651:57:2;;9123:2:16;3651:57:2;;;9105:21:16;9162:2;9142:18;;;9135:30;9201:34;9181:18;;;9174:62;-1:-1:-1;;;9252:18:16;;;9245:31;9293:19;;3651:57:2;8921:397:16;3651:57:2;719:10:8;-1:-1:-1;;;;;3740:21:2;;;;:62;;-1:-1:-1;3765:37:2;3782:5;719:10:8;4487:162:2;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:2;;9525:2:16;3719:165:2;;;9507:21:16;9564:2;9544:18;;;9537:30;9603:34;9583:18;;;9576:62;9674:26;9654:18;;;9647:54;9718:19;;3719:165:2;9323:420:16;3719:165:2;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;6704:289:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6829:1:15::1;6803:15;6797:29;:33;6789:85;;;::::0;-1:-1:-1;;;6789:85:15;;10311:2:16;6789:85:15::1;::::0;::::1;10293:21:16::0;10350:2;10330:18;;;10323:30;10389:34;10369:18;;;10362:62;-1:-1:-1;;;10440:18:16;;;10433:37;10487:19;;6789:85:15::1;10109:403:16::0;6789:85:15::1;6893:20;::::0;;;::::1;;;6892:21;6884:60;;;::::0;-1:-1:-1;;;6884:60:15;;10719:2:16;6884:60:15::1;::::0;::::1;10701:21:16::0;10758:2;10738:18;;;10731:30;10797:28;10777:18;;;10770:56;10843:18;;6884:60:15::1;10517:350:16::0;6884:60:15::1;6954:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6704:289:::0;:::o;8762:106::-;8806:7;8860:1;8832:25;:15;918:14:9;;827:112;8832:25:15;:29;;;;:::i;:::-;8825:36;;8762:106;:::o;6205:124::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6287:14:15::1;:35:::0;6205:124::o;4711:330:2:-;4900:41;719:10:8;4919:12:2;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:2;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;7561:839:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7648:1:15::1;7624:21;:25;7616:60;;;::::0;-1:-1:-1;;;7616:60:15;;11754:2:16;7616:60:15::1;::::0;::::1;11736:21:16::0;11793:2;11773:18;;;11766:30;-1:-1:-1;;;11812:18:16;;;11805:52;11874:18;;7616:60:15::1;11552:346:16::0;7616:60:15::1;7708:13;::::0;7687:7:::1;::::0;7708:13;;::::1;-1:-1:-1::0;;;;;7708:13:15::1;7735:40;7770:4;7735:30;:21;7761:3;7735:25;:30::i;:::-;:34:::0;::::1;:40::i;:::-;7700:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7686:94;;;7798:2;7790:33;;;::::0;-1:-1:-1;;;7790:33:15;;12315:2:16;7790:33:15::1;::::0;::::1;12297:21:16::0;12354:2;12334:18;;;12327:30;-1:-1:-1;;;12373:18:16;;;12366:48;12431:18;;7790:33:15::1;12113:342:16::0;7790:33:15::1;7855:13;::::0;7834:7:::1;::::0;-1:-1:-1;;;;;7855:13:15::1;7882:40;7917:4;7882:30;:21;7908:3;7882:25;:30::i;:40::-;7847:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7833:94;;;7946:2;7938:33;;;::::0;-1:-1:-1;;;7938:33:15;;12662:2:16;7938:33:15::1;::::0;::::1;12644:21:16::0;12701:2;12681:18;;;12674:30;-1:-1:-1;;;12720:18:16;;;12713:48;12778:18;;7938:33:15::1;12460:342:16::0;7938:33:15::1;8003:13;::::0;7982:7:::1;::::0;-1:-1:-1;;;;;8003:13:15::1;8030:40;8065:4;8030:30;:21;8056:3;8030:25;:30::i;:40::-;7995:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7981:94;;;8094:2;8086:33;;;::::0;-1:-1:-1;;;8086:33:15;;13009:2:16;8086:33:15::1;::::0;::::1;12991:21:16::0;13048:2;13028:18;;;13021:30;-1:-1:-1;;;13067:18:16;;;13060:48;13125:18;;8086:33:15::1;12807:342:16::0;8086:33:15::1;8151:13;::::0;8130:7:::1;::::0;-1:-1:-1;;;;;8151:13:15::1;8178:39;8212:4;8178:29;:21;8204:2;8178:25;:29::i;:39::-;8143:79;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8129:93;;;8240:2;8232:33;;;::::0;-1:-1:-1;;;8232:33:15;;13356:2:16;8232:33:15::1;::::0;::::1;13338:21:16::0;13395:2;13375:18;;;13368:30;-1:-1:-1;;;13414:18:16;;;13407:48;13472:18;;8232:33:15::1;13154:342:16::0;8232:33:15::1;8297:13;::::0;8289:61:::1;::::0;8276:7:::1;::::0;-1:-1:-1;;;;;8297:13:15::1;::::0;8324:21:::1;::::0;8276:7;8289:61;8276:7;8289:61;8324:21;8297:13;8289:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8275:75;;;8368:2;8360:33;;;::::0;-1:-1:-1;;;8360:33:15;;13703:2:16;8360:33:15::1;::::0;::::1;13685:21:16::0;13742:2;13722:18;;;13715:30;-1:-1:-1;;;13761:18:16;;;13754:48;13819:18;;8360:33:15::1;13501:342:16::0;8360:33:15::1;7606:794;;;;;7561:839::o:0;4285:63::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4331:10:15::1;:8;:10::i;:::-;4285:63::o:0;5107:179:2:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:5:-;645:41;719:10:8;664:12:5;640:96:8;645:41:5;637:102;;;;-1:-1:-1;;;637:102:5;;14050:2:16;637:102:5;;;14032:21:16;14089:2;14069:18;;;14062:30;14128:34;14108:18;;;14101:62;-1:-1:-1;;;14179:18:16;;;14172:46;14235:19;;637:102:5;13848:412:16;637:102:5;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;5249:158:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5332:14:15::1;::::0;;;::::1;;;5331:15;5323:46;;;::::0;-1:-1:-1;;;5323:46:15;;14467:2:16;5323:46:15::1;::::0;::::1;14449:21:16::0;14506:2;14486:18;;;14479:30;-1:-1:-1;;;14525:18:16;;;14518:48;14583:18;;5323:46:15::1;14265:342:16::0;5323:46:15::1;5379:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;6584:114::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6660:12:15::1;:31:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;6660:31:15;;::::1;::::0;;;::::1;::::0;;6584:114::o;2176:235:2:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:2;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:2;;14814:2:16;2309:73:2;;;14796:21:16;14853:2;14833:18;;;14826:30;14892:34;14872:18;;;14865:62;-1:-1:-1;;;14943:18:16;;;14936:39;14992:19;;2309:73:2;14612:405:16;814:26:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8435:164::-;8483:7;8525:1;8509:13;:11;:13::i;:::-;:17;8501:52;;;;-1:-1:-1;;;8501:52:15;;15224:2:16;8501:52:15;;;15206:21:16;15263:2;15243:18;;;15236:30;-1:-1:-1;;;15282:18:16;;;15275:52;15344:18;;8501:52:15;15022:346:16;8501:52:15;8570:22;8578:13;:11;:13::i;1914:205:2:-;1986:7;-1:-1:-1;;;;;2013:19:2;;2005:74;;;;-1:-1:-1;;;2005:74:2;;15575:2:16;2005:74:2;;;15557:21:16;15614:2;15594:18;;;15587:30;15653:34;15633:18;;;15626:62;-1:-1:-1;;;15704:18:16;;;15697:40;15754:19;;2005:74:2;15373:406:16;2005:74:2;-1:-1:-1;;;;;;2096:16:2;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;6468:110:15:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6546:9:15::1;:25:::0;6468:110::o;5141:102::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5212:10:15::1;:24:::0;5141:102::o;7297:258::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7395:1:15::1;7370:14;7364:28;;;;;:::i;:::-;;;:32;7356:77;;;::::0;-1:-1:-1;;;7356:77:15;;15986:2:16;7356:77:15::1;::::0;::::1;15968:21:16::0;;;16005:18;;;15998:30;16064:34;16044:18;;;16037:62;16116:18;;7356:77:15::1;15784:356:16::0;7356:77:15::1;7452:20;::::0;;;::::1;;;7451:21;7443:68;;;::::0;-1:-1:-1;;;7443:68:15;;16347:2:16;7443:68:15::1;::::0;::::1;16329:21:16::0;16386:2;16366:18;;;16359:30;16425:34;16405:18;;;16398:62;-1:-1:-1;;;16476:18:16;;;16469:32;16518:19;;7443:68:15::1;16145:398:16::0;7443:68:15::1;7521:20;:27:::0;;-1:-1:-1;;7521:27:15::1;::::0;::::1;::::0;;7297:258::o;4220:59::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4264:8:15::1;:6;:8::i;2635:102:2:-:0;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:8;4395:8:2;4405;4362:18;:52::i;4462:673:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4553:20:15::1;::::0;;;::::1;;;:28;;4577:4;4553:28;4545:97;;;;-1:-1:-1::0;;;4545:97:15::1;;;;;;;:::i;:::-;4660:5;::::0;4668:1:::1;4660:5;::::0;;::::1;:9;4652:41;;;::::0;-1:-1:-1;;;4652:41:15;;17175:2:16;4652:41:15::1;::::0;::::1;17157:21:16::0;17214:2;17194:18;;;17187:30;-1:-1:-1;;;17233:18:16;;;17226:49;17292:18;;4652:41:15::1;16973:343:16::0;4652:41:15::1;4726:12;::::0;::::1;;::::0;;::::1;::::0;::::1;4711:27:::0;;::::1;;;4703:82;;;::::0;-1:-1:-1;;;4703:82:15;;17523:2:16;4703:82:15::1;::::0;::::1;17505:21:16::0;17562:2;17542:18;;;17535:30;17601:34;17581:18;;;17574:62;-1:-1:-1;;;17652:18:16;;;17645:40;17702:19;;4703:82:15::1;17321:406:16::0;4703:82:15::1;4817:1;4803:11;:15;;;4795:65;;;::::0;-1:-1:-1;;;4795:65:15;;17934:2:16;4795:65:15::1;::::0;::::1;17916:21:16::0;17973:2;17953:18;;;17946:30;18012:34;17992:18;;;17985:62;-1:-1:-1;;;18063:18:16;;;18056:35;18108:19;;4795:65:15::1;17732:401:16::0;4795:65:15::1;4908:15;;4893:11;4878:26;;:13;:11;:13::i;:::-;:26;;;;:::i;:::-;:45;;4870:99;;;::::0;-1:-1:-1;;;4870:99:15;;18473:2:16;4870:99:15::1;::::0;::::1;18455:21:16::0;18512:2;18492:18;;;18485:30;18551:34;18531:18;;;18524:62;-1:-1:-1;;;18602:18:16;;;18595:39;18651:19;;4870:99:15::1;18271:405:16::0;4870:99:15::1;4996:1;4979:150;5004:11;4999:16;;:1;:16;4979:150;;5036:41;5046:3;5051:25;:15;918:14:9::0;;827:112;5051:25:15::1;5036:9;:41::i;:::-;5091:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;5091:27:15::1;5017:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4979:150;;2596:1596:::0;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;2700:5:15::1;::::0;::::1;;2692:65;;;::::0;-1:-1:-1;;;2692:65:15;;19368:2:16;2692:65:15::1;::::0;::::1;19350:21:16::0;19407:2;19387:18;;;19380:30;19446:34;19426:18;;;19419:62;-1:-1:-1;;;19497:18:16;;;19490:41;19548:19;;2692:65:15::1;19166:407:16::0;2692:65:15::1;2789:1;2775:11;:15;;;2767:63;;;::::0;-1:-1:-1;;;2767:63:15;;19780:2:16;2767:63:15::1;::::0;::::1;19762:21:16::0;19819:2;19799:18;;;19792:30;19858:34;19838:18;;;19831:62;-1:-1:-1;;;19909:18:16;;;19902:33;19952:19;;2767:63:15::1;19578:399:16::0;2767:63:15::1;2863:12;::::0;::::1;;::::0;;::::1;::::0;::::1;2848:27:::0;;::::1;;;2840:83;;;::::0;-1:-1:-1;;;2840:83:15;;20184:2:16;2840:83:15::1;::::0;::::1;20166:21:16::0;20223:2;20203:18;;;20196:30;20262:34;20242:18;;;20235:62;-1:-1:-1;;;20313:18:16;;;20306:41;20364:19;;2840:83:15::1;19982:407:16::0;2840:83:15::1;2937:5;::::0;::::1;;::::0;:10:::1;2933:1087;;;3005:10;::::0;3027:28:::1;::::0;-1:-1:-1;;3044:10:15::1;20543:2:16::0;20539:15;20535:53;3027:28:15::1;::::0;::::1;20523:66:16::0;2992:65:15::1;::::0;3005:10;20605:12:16;;3027:28:15::1;;;;;;;;;;;;3017:39;;;;;;2992:5;:12;;:65;;;;;:::i;:::-;2984:102;;;::::0;-1:-1:-1;;;2984:102:15;;20830:2:16;2984:102:15::1;::::0;::::1;20812:21:16::0;20869:2;20849:18;;;20842:30;20908:26;20888:18;;;20881:54;20952:18;;2984:102:15::1;20628:348:16::0;2984:102:15::1;3116:10;3108:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;:28;3100:72;;;::::0;-1:-1:-1;;;3100:72:15;;21183:2:16;3100:72:15::1;::::0;::::1;21165:21:16::0;21222:2;21202:18;;;21195:30;21261:33;21241:18;;;21234:61;21312:18;;3100:72:15::1;20981:355:16::0;3100:72:15::1;3209:1;3195:11;:15;;;3187:50;;;::::0;-1:-1:-1;;;3187:50:15;;21543:2:16;3187:50:15::1;::::0;::::1;21525:21:16::0;21582:2;21562:18;;;21555:30;-1:-1:-1;;;21601:18:16;;;21594:52;21663:18;;3187:50:15::1;21341:346:16::0;3187:50:15::1;3272:9;::::0;:26:::1;::::0;::::1;::::0;::::1;:13;:26::i;:::-;3259:9;:39;3251:75;;;::::0;-1:-1:-1;;;3251:75:15;;21894:2:16;3251:75:15::1;::::0;::::1;21876:21:16::0;21933:2;21913:18;;;21906:30;-1:-1:-1;;;21952:18:16;;;21945:53;22015:18;;3251:75:15::1;21692:347:16::0;3251:75:15::1;3379:15;;3364:11;3348:27;;:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:46;;3340:96;;;::::0;-1:-1:-1;;;3340:96:15;;22246:2:16;3340:96:15::1;::::0;::::1;22228:21:16::0;22285:2;22265:18;;;22258:30;22324:34;22304:18;;;22297:62;-1:-1:-1;;;22375:18:16;;;22368:35;22420:19;;3340:96:15::1;22044:401:16::0;3340:96:15::1;3458:10;3450:19;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;3450:26:15::1;3472:4;3450:26;::::0;;2933:1087:::1;;;3495:5;::::0;::::1;;3504:1;3495:10;3491:529;;;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;;;;3561:10:15::1;3550:21;3542:67;;;::::0;-1:-1:-1;;;3542:67:15;;22652:2:16;3542:67:15::1;::::0;::::1;22634:21:16::0;22691:2;22671:18;;;22664:30;22730:34;22710:18;;;22703:62;-1:-1:-1;;;22781:18:16;;;22774:31;22822:19;;3542:67:15::1;22450:397:16::0;3542:67:15::1;3662:14;::::0;3645:13:::1;::::0;3631:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;3623:100;;;::::0;-1:-1:-1;;;3623:100:15;;23054:2:16;3623:100:15::1;::::0;::::1;23036:21:16::0;23093:2;23073:18;;;23066:30;23132:34;23112:18;;;23105:62;-1:-1:-1;;;23183:18:16;;;23176:40;23233:19;;3623:100:15::1;22852:406:16::0;3623:100:15::1;3760:11;3743:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3491:529:15::1;::::0;-1:-1:-1;3491:529:15::1;;3844:9;::::0;:26:::1;::::0;::::1;::::0;::::1;:13;:26::i;:::-;3831:9;:39;3823:75;;;::::0;-1:-1:-1;;;3823:75:15;;21894:2:16;3823:75:15::1;::::0;::::1;21876:21:16::0;21933:2;21913:18;;;21906:30;-1:-1:-1;;;21952:18:16;;;21945:53;22015:18;;3823:75:15::1;21692:347:16::0;3823:75:15::1;3952:15;;3937:11;3920:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;3912:97;;;::::0;-1:-1:-1;;;3912:97:15;;23465:2:16;3912:97:15::1;::::0;::::1;23447:21:16::0;23504:2;23484:18;;;23477:30;23543:34;23523:18;;;23516:62;-1:-1:-1;;;23594:18:16;;;23587:35;23639:19;;3912:97:15::1;23263:401:16::0;3912:97:15::1;4046:1;4029:157;4054:11;4049:16;;:1;:16;4029:157;;4086:48;4096:10;4108:25;:15;918:14:9::0;;827:112;4086:48:15::1;4148:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;4148:27:15::1;4067:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4029:157;;5352:320:2::0;5521:41;719:10:8;5554:7:2;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:2;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;4354:102:15:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4423:19:15::1;;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;4423:26:15::1;4445:4;4423:26;::::0;;4354:102::o;846:37::-;;;;;;;:::i;780:28::-;;;;;;;:::i;8874:266::-;7209:4:2;7232:16;;;:7;:16;;;;;;8947:13:15;;-1:-1:-1;;;;;7232:16:2;8972:76:15;;;;-1:-1:-1;;;8972:76:15;;23871:2:16;8972:76:15;;;23853:21:16;23910:2;23890:18;;;23883:30;23949:34;23929:18;;;23922:62;-1:-1:-1;;;24000:18:16;;;23993:45;24055:19;;8972:76:15;23669:411:16;8972:76:15;9089:7;9098:18;:7;:16;:18::i;:::-;9118:13;9072:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9058:75;;8874:266;;;:::o;5973:222::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6029:20:15::1;::::0;;;::::1;;;:28;;6053:4;6029:28;6021:97;;;;-1:-1:-1::0;;;6021:97:15::1;;;;;;;:::i;:::-;6136:5;::::0;::::1;;6128:43;;;::::0;-1:-1:-1;;;6128:43:15;;25852:2:16;6128:43:15::1;::::0;::::1;25834:21:16::0;25891:2;25871:18;;;25864:30;-1:-1:-1;;;25910:18:16;;;25903:51;25971:18;;6128:43:15::1;25650:345:16::0;6128:43:15::1;6181:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5973:222::o:0;8605:151::-;8648:7;8690:1;8674:13;:11;:13::i;:::-;:17;8666:52;;;;-1:-1:-1;;;8666:52:15;;15224:2:16;8666:52:15;;;15206:21:16;15263:2;15243:18;;;15236:30;-1:-1:-1;;;15282:18:16;;;15275:52;15344:18;;8666:52:15;15022:346:16;8666:52:15;8735:13;:11;:13::i;6335:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6421:33:15;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;9146:110::-:0;9192:7;9236:13;:11;:13::i;:::-;9218:15;;:31;;;;:::i;5418:215::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5502:1:15::1;5484:7;5478:21;;;;;:::i;:::-;;;:25;5470:61;;;::::0;-1:-1:-1;;;5470:61:15;;26385:2:16;5470:61:15::1;::::0;::::1;26367:21:16::0;26424:2;26404:18;;;26397:30;26463:25;26443:18;;;26436:53;26506:18;;5470:61:15::1;26183:347:16::0;5470:61:15::1;5550:14;::::0;;;::::1;;;5549:15;5541:54;;;::::0;-1:-1:-1;;;5541:54:15;;26737:2:16;5541:54:15::1;::::0;::::1;26719:21:16::0;26776:2;26756:18;;;26749:30;26815:28;26795:18;;;26788:56;26861:18;;5541:54:15::1;26535:350:16::0;5541:54:15::1;5605:14;:21:::0;;-1:-1:-1;;5605:21:15::1;::::0;::::1;::::0;;5418:215::o;6999:292::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7134:13:15::1;:22:::0;;-1:-1:-1;;;;;7134:22:15;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;7134:22:15;;::::1;;::::0;;7166:13:::1;:22:::0;;;;::::1;-1:-1:-1::0;;;;;;7166:22:15;;::::1;;::::0;;7198:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;7230:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;7262:13:::1;:22:::0;;;;;::::1;::::0;::::1;;::::0;;6999:292::o;5639:328::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5695:20:15::1;::::0;;;::::1;;;:28;;5719:4;5695:28;5687:97;;;;-1:-1:-1::0;;;5687:97:15::1;;;;;;;:::i;:::-;5802:10;::::0;5813:1:::1;5802:13;;;-1:-1:-1::0;;;;;;5802:18:15::1;5794:90;;;::::0;-1:-1:-1;;;5794:90:15;;27224:2:16;5794:90:15::1;::::0;::::1;27206:21:16::0;27263:2;27243:18;;;27236:30;27302:34;27282:18;;;27275:62;27373:29;27353:18;;;27346:57;27420:19;;5794:90:15::1;27022:423:16::0;5794:90:15::1;5902:5;::::0;5910:1:::1;5902:5;::::0;;::::1;:9;5894:49;;;::::0;-1:-1:-1;;;5894:49:15;;27652:2:16;5894:49:15::1;::::0;::::1;27634:21:16::0;27691:2;27671:18;;;27664:30;27730:29;27710:18;;;27703:57;27777:18;;5894:49:15::1;27450:351:16::0;5894:49:15::1;5953:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;28188:2:16;1998:73:0::1;::::0;::::1;28170:21:16::0;28227:2;28207:18;;;28200:30;28266:34;28246:18;;;28239:62;-1:-1:-1;;;28317:18:16;;;28310:36;28363:19;;1998:73:0::1;27986:402:16::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;945:123:9:-:0;1032:19;;1050:1;1032:19;;;945:123::o;10995:171:2:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:2;-1:-1:-1;;;;;11069:29:2;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:2;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;7536:73;;;;-1:-1:-1;;;7536:73:2;;28595:2:16;7536:73:2;;;28577:21:16;28634:2;28614:18;;;28607:30;28673:34;28653:18;;;28646:62;-1:-1:-1;;;28724:18:16;;;28717:42;28776:19;;7536:73:2;28393:408:16;7536:73:2;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:2;:7;-1:-1:-1;;;;;7676:16:2;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:2;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:2;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:2:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:2;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:2;;10443:85;;;;-1:-1:-1;;;10443:85:2;;29008:2:16;10443:85:2;;;28990:21:16;29047:2;29027:18;;;29020:30;29086:34;29066:18;;;29059:62;-1:-1:-1;;;29137:18:16;;;29130:39;29186:19;;10443:85:2;28806:405:16;10443:85:2;-1:-1:-1;;;;;10546:16:2;;10538:65;;;;-1:-1:-1;;;10538:65:2;;29418:2:16;10538:65:2;;;29400:21:16;29457:2;29437:18;;;29430:30;29496:34;29476:18;;;29469:62;-1:-1:-1;;;29547:18:16;;;29540:34;29591:19;;10538:65:2;29216:400:16;10538:65:2;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:2;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:2;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:2;-1:-1:-1;;;;;10813:21:2;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;3451:96:14:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:14:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;30253:2:16;1669:41:1;;;30235:21:16;30292:2;30272:18;;;30265:30;-1:-1:-1;;;30311:18:16;;;30304:50;30371:18;;1669:41:1;30051:344:16;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:8::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;9652:348:2:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:2;;;;;;:9;:16;;;;;:21;;9907:1;;9887:16;:21;;9907:1;;9887:21;:::i;:::-;;;;-1:-1:-1;;9925:16:2;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:2;;;9957:36;9933:7;;9925:16;-1:-1:-1;;;;;9957:36:2;;;;;9925:16;;9957:36;9701:299;9652:348;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:8::0;;640:96;11301:307:2;11451:8;-1:-1:-1;;;;;11442:17:2;:5;-1:-1:-1;;;;;11442:17:2;;;11434:55;;;;-1:-1:-1;;;11434:55:2;;30602:2:16;11434:55:2;;;30584:21:16;30641:2;30621:18;;;30614:30;30680:27;30660:18;;;30653:55;30725:18;;11434:55:2;30400:349:16;11434:55:2;-1:-1:-1;;;;;11499:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:2;;;;;;;;;;11560:41;;540::16;;;11560::2;;513:18:16;11560:41:2;;;;;;;11301:307;;;:::o;8101:108::-;8176:26;8186:2;8190:7;8176:26;;;;;;;;;;;;:9;:26::i;847:184:11:-;968:4;1020;991:25;1004:5;1011:4;991:12;:25::i;:::-;:33;;847:184;-1:-1:-1;;;;847:184:11:o;6534:307:2:-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:2;;;;;;;:::i;328:703:10:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;9349:175:15;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;8430:311:2:-;8555:18;8561:2;8565:7;8555:5;:18::i;:::-;8604:54;8635:1;8639:2;8643:7;8652:5;8604:22;:54::i;:::-;8583:151;;;;-1:-1:-1;;;8583:151:2;;;;;;;:::i;1383:688:11:-;1466:7;1508:4;1466:7;1522:514;1546:5;:12;1542:1;:16;1522:514;;;1579:20;1602:5;1608:1;1602:8;;;;;;;;:::i;:::-;;;;;;;1579:31;;1644:12;1628;:28;1624:402;;1779:44;;;;;;31447:19:16;;;31482:12;;;31475:28;;;31519:12;;1779:44:11;;;;;;;;;;;;1769:55;;;;;;1754:70;;1624:402;;;1966:44;;;;;;31447:19:16;;;31482:12;;;31475:28;;;31519:12;;1966:44:11;;;;;;;;;;;;1956:55;;;;;;1941:70;;1624:402;-1:-1:-1;1560:3:11;;;;:::i;:::-;;;;1522:514;;;-1:-1:-1;2052:12:11;1383:688;-1:-1:-1;;;1383:688:11:o;12161:778:2:-;12311:4;-1:-1:-1;;;;;12331:13:2;;1087:20:7;1133:8;12327:606:2;;12366:72;;-1:-1:-1;;;12366:72:2;;-1:-1:-1;;;;;12366:36:2;;;;;:72;;719:10:8;;12417:4:2;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:2;;;;;;;;-1:-1:-1;;12366:72:2;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:2;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:2;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:2;-1:-1:-1;;;12488:51:2;;-1:-1:-1;12481:58:2;;12327:606;-1:-1:-1;12918:4:2;12161:778;;;;;;:::o;9063:372::-;-1:-1:-1;;;;;9142:16:2;;9134:61;;;;-1:-1:-1;;;9134:61:2;;32492:2:16;9134:61:2;;;32474:21:16;;;32511:18;;;32504:30;32570:34;32550:18;;;32543:62;32622:18;;9134:61:2;32290:356:16;9134:61:2;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;:30;9205:58;;;;-1:-1:-1;;;9205:58:2;;32853:2:16;9205:58:2;;;32835:21:16;32892:2;32872:18;;;32865:30;32931;32911:18;;;32904:58;32979:18;;9205:58:2;32651:352:16;9205:58:2;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:2;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:2;-1:-1:-1;;;;;9358:21:2;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:16;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:16;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:16;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:16:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:16;;1343:180;-1:-1:-1;1343:180:16:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:16;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:16:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:275;2558:2;2552:9;2623:2;2604:13;;-1:-1:-1;;2600:27:16;2588:40;;2658:18;2643:34;;2679:22;;;2640:62;2637:88;;;2705:18;;:::i;:::-;2741:2;2734:22;2487:275;;-1:-1:-1;2487:275:16:o;2767:407::-;2832:5;2866:18;2858:6;2855:30;2852:56;;;2888:18;;:::i;:::-;2926:57;2971:2;2950:15;;-1:-1:-1;;2946:29:16;2977:4;2942:40;2926:57;:::i;:::-;2917:66;;3006:6;2999:5;2992:21;3046:3;3037:6;3032:3;3028:16;3025:25;3022:45;;;3063:1;3060;3053:12;3022:45;3112:6;3107:3;3100:4;3093:5;3089:16;3076:43;3166:1;3159:4;3150:6;3143:5;3139:18;3135:29;3128:40;2767:407;;;;;:::o;3179:451::-;3248:6;3301:2;3289:9;3280:7;3276:23;3272:32;3269:52;;;3317:1;3314;3307:12;3269:52;3357:9;3344:23;3390:18;3382:6;3379:30;3376:50;;;3422:1;3419;3412:12;3376:50;3445:22;;3498:4;3490:13;;3486:27;-1:-1:-1;3476:55:16;;3527:1;3524;3517:12;3476:55;3550:74;3616:7;3611:2;3598:16;3593:2;3589;3585:11;3550:74;:::i;3635:328::-;3712:6;3720;3728;3781:2;3769:9;3760:7;3756:23;3752:32;3749:52;;;3797:1;3794;3787:12;3749:52;3820:29;3839:9;3820:29;:::i;:::-;3810:39;;3868:38;3902:2;3891:9;3887:18;3868:38;:::i;:::-;3858:48;;3953:2;3942:9;3938:18;3925:32;3915:42;;3635:328;;;;;:::o;4150:156::-;4216:20;;4276:4;4265:16;;4255:27;;4245:55;;4296:1;4293;4286:12;4311:182;4368:6;4421:2;4409:9;4400:7;4396:23;4392:32;4389:52;;;4437:1;4434;4427:12;4389:52;4460:27;4477:9;4460:27;:::i;4498:186::-;4557:6;4610:2;4598:9;4589:7;4585:23;4581:32;4578:52;;;4626:1;4623;4616:12;4578:52;4649:29;4668:9;4649:29;:::i;4874:347::-;4939:6;4947;5000:2;4988:9;4979:7;4975:23;4971:32;4968:52;;;5016:1;5013;5006:12;4968:52;5039:29;5058:9;5039:29;:::i;:::-;5029:39;;5118:2;5107:9;5103:18;5090:32;5165:5;5158:13;5151:21;5144:5;5141:32;5131:60;;5187:1;5184;5177:12;5131:60;5210:5;5200:15;;;4874:347;;;;;:::o;5226:256::-;5292:6;5300;5353:2;5341:9;5332:7;5328:23;5324:32;5321:52;;;5369:1;5366;5359:12;5321:52;5392:27;5409:9;5392:27;:::i;:::-;5382:37;;5438:38;5472:2;5461:9;5457:18;5438:38;:::i;:::-;5428:48;;5226:256;;;;;:::o;5487:1016::-;5578:6;5586;5639:2;5627:9;5618:7;5614:23;5610:32;5607:52;;;5655:1;5652;5645:12;5607:52;5678:27;5695:9;5678:27;:::i;:::-;5668:37;;5724:2;5777;5766:9;5762:18;5749:32;5800:18;5841:2;5833:6;5830:14;5827:34;;;5857:1;5854;5847:12;5827:34;5895:6;5884:9;5880:22;5870:32;;5940:7;5933:4;5929:2;5925:13;5921:27;5911:55;;5962:1;5959;5952:12;5911:55;5998:2;5985:16;6020:2;6016;6013:10;6010:36;;;6026:18;;:::i;:::-;6072:2;6069:1;6065:10;6055:20;;6095:28;6119:2;6115;6111:11;6095:28;:::i;:::-;6157:15;;;6227:11;;;6223:20;;;6188:12;;;;6255:19;;;6252:39;;;6287:1;6284;6277:12;6252:39;6311:11;;;;6331:142;6347:6;6342:3;6339:15;6331:142;;;6413:17;;6401:30;;6364:12;;;;6451;;;;6331:142;;;6492:5;6482:15;;;;;;;;5487:1016;;;;;:::o;6508:667::-;6603:6;6611;6619;6627;6680:3;6668:9;6659:7;6655:23;6651:33;6648:53;;;6697:1;6694;6687:12;6648:53;6720:29;6739:9;6720:29;:::i;:::-;6710:39;;6768:38;6802:2;6791:9;6787:18;6768:38;:::i;:::-;6758:48;;6853:2;6842:9;6838:18;6825:32;6815:42;;6908:2;6897:9;6893:18;6880:32;6935:18;6927:6;6924:30;6921:50;;;6967:1;6964;6957:12;6921:50;6990:22;;7043:4;7035:13;;7031:27;-1:-1:-1;7021:55:16;;7072:1;7069;7062:12;7021:55;7095:74;7161:7;7156:2;7143:16;7138:2;7134;7130:11;7095:74;:::i;:::-;7085:84;;;6508:667;;;;;;;:::o;7369:260::-;7437:6;7445;7498:2;7486:9;7477:7;7473:23;7469:32;7466:52;;;7514:1;7511;7504:12;7466:52;7537:29;7556:9;7537:29;:::i;7634:484::-;7729:6;7737;7745;7753;7761;7814:3;7802:9;7793:7;7789:23;7785:33;7782:53;;;7831:1;7828;7821:12;7782:53;7854:29;7873:9;7854:29;:::i;:::-;7844:39;;7902:38;7936:2;7925:9;7921:18;7902:38;:::i;:::-;7892:48;;7959:38;7993:2;7982:9;7978:18;7959:38;:::i;:::-;7949:48;;8016:38;8050:2;8039:9;8035:18;8016:38;:::i;:::-;8006:48;;8073:39;8107:3;8096:9;8092:19;8073:39;:::i;:::-;8063:49;;7634:484;;;;;;;;:::o;8123:380::-;8202:1;8198:12;;;;8245;;;8266:61;;8320:4;8312:6;8308:17;8298:27;;8266:61;8373:2;8365:6;8362:14;8342:18;8339:38;8336:161;;;8419:10;8414:3;8410:20;8407:1;8400:31;8454:4;8451:1;8444:15;8482:4;8479:1;8472:15;8336:161;;8123:380;;;:::o;9748:356::-;9950:2;9932:21;;;9969:18;;;9962:30;10028:34;10023:2;10008:18;;10001:62;10095:2;10080:18;;9748:356::o;10872:127::-;10933:10;10928:3;10924:20;10921:1;10914:31;10964:4;10961:1;10954:15;10988:4;10985:1;10978:15;11004:125;11044:4;11072:1;11069;11066:8;11063:34;;;11077:18;;:::i;:::-;-1:-1:-1;11114:9:16;;11004:125::o;11134:413::-;11336:2;11318:21;;;11375:2;11355:18;;;11348:30;11414:34;11409:2;11394:18;;11387:62;-1:-1:-1;;;11480:2:16;11465:18;;11458:47;11537:3;11522:19;;11134:413::o;16548:420::-;16750:2;16732:21;;;16789:2;16769:18;;;16762:30;16828:34;16823:2;16808:18;;16801:62;16899:26;16894:2;16879:18;;16872:54;16958:3;16943:19;;16548:420::o;18138:128::-;18178:3;18209:1;18205:6;18202:1;18199:13;18196:39;;;18215:18;;:::i;:::-;-1:-1:-1;18251:9:16;;18138:128::o;18681:135::-;18720:3;-1:-1:-1;;18741:17:16;;18738:43;;;18761:18;;:::i;:::-;-1:-1:-1;18808:1:16;18797:13;;18681:135::o;18821:340::-;19023:2;19005:21;;;19062:2;19042:18;;;19035:30;-1:-1:-1;;;19096:2:16;19081:18;;19074:46;19152:2;19137:18;;18821:340::o;24211:973::-;24296:12;;24261:3;;24351:1;24371:18;;;;24424;;;;24451:61;;24505:4;24497:6;24493:17;24483:27;;24451:61;24531:2;24579;24571:6;24568:14;24548:18;24545:38;24542:161;;;24625:10;24620:3;24616:20;24613:1;24606:31;24660:4;24657:1;24650:15;24688:4;24685:1;24678:15;24542:161;24719:18;24746:104;;;;24864:1;24859:319;;;;24712:466;;24746:104;-1:-1:-1;;24779:24:16;;24767:37;;24824:16;;;;-1:-1:-1;24746:104:16;;24859:319;24158:1;24151:14;;;24195:4;24182:18;;24953:1;24967:165;24981:6;24978:1;24975:13;24967:165;;;25059:14;;25046:11;;;25039:35;25102:16;;;;24996:10;;24967:165;;;24971:3;;25161:6;25156:3;25152:16;25145:23;;24712:466;;;;;;;24211:973;;;;:::o;25189:456::-;25410:3;25438:38;25472:3;25464:6;25438:38;:::i;:::-;25505:6;25499:13;25521:52;25566:6;25562:2;25555:4;25547:6;25543:17;25521:52;:::i;:::-;25589:50;25631:6;25627:2;25623:15;25615:6;25589:50;:::i;:::-;25582:57;25189:456;-1:-1:-1;;;;;;;25189:456:16:o;26000:178::-;26037:3;26081:4;26074:5;26070:16;26105:7;26095:41;;26116:18;;:::i;:::-;-1:-1:-1;;26152:20:16;;26000:178;-1:-1:-1;;26000:178:16:o;26890:127::-;26951:10;26946:3;26942:20;26939:1;26932:31;26982:4;26979:1;26972:15;27006:4;27003:1;26996:15;27806:175;27843:3;27887:4;27880:5;27876:16;27916:4;27907:7;27904:17;27901:43;;;27924:18;;:::i;:::-;27973:1;27960:15;;27806:175;-1:-1:-1;;27806:175:16:o;29621:168::-;29661:7;29727:1;29723;29719:6;29715:14;29712:1;29709:21;29704:1;29697:9;29690:17;29686:45;29683:71;;;29734:18;;:::i;:::-;-1:-1:-1;29774:9:16;;29621:168::o;29794:127::-;29855:10;29850:3;29846:20;29843:1;29836:31;29886:4;29883:1;29876:15;29910:4;29907:1;29900:15;29926:120;29966:1;29992;29982:35;;29997:18;;:::i;:::-;-1:-1:-1;30031:9:16;;29926:120::o;30754:414::-;30956:2;30938:21;;;30995:2;30975:18;;;30968:30;31034:34;31029:2;31014:18;;31007:62;-1:-1:-1;;;31100:2:16;31085:18;;31078:48;31158:3;31143:19;;30754:414::o;31173:112::-;31205:1;31231;31221:35;;31236:18;;:::i;:::-;-1:-1:-1;31270:9:16;;31173:112::o;31542:489::-;-1:-1:-1;;;;;31811:15:16;;;31793:34;;31863:15;;31858:2;31843:18;;31836:43;31910:2;31895:18;;31888:34;;;31958:3;31953:2;31938:18;;31931:31;;;31736:4;;31979:46;;32005:19;;31997:6;31979:46;:::i;:::-;31971:54;31542:489;-1:-1:-1;;;;;;31542:489:16:o;32036:249::-;32105:6;32158:2;32146:9;32137:7;32133:23;32129:32;32126:52;;;32174:1;32171;32164:12;32126:52;32206:9;32200:16;32225:30;32249:5;32225:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    483,
    9527
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE7FCB1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEE3743AB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEE3743AB EQ PUSH2 0xA0D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA22 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA42 JUMPI DUP1 PUSH4 0xFCAA7664 EQ PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x98F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9A4 JUMPI DUP1 PUSH4 0xEA74E190 EQ PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD6D67A09 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x8F4 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x909 JUMPI DUP1 PUSH4 0xDB993F56 EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0xCBD0A2B5 EQ PUSH2 0x8BF JUMPI DUP1 PUSH4 0xD2FAB8B9 EQ PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB61C5E69 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0xC3214581 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB61C5E69 EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xBBC903EA EQ PUSH2 0x7EF JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xB1214392 EQ PUSH2 0x77C JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x79C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x6C0360EB GT PUSH2 0x25F JUMPI DUP1 PUSH4 0x78231978 GT PUSH2 0x22E JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x29B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x61869A93 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A GT PUSH2 0x32E JUMPI DUP1 PUSH4 0x33E61413 GT PUSH2 0x308 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x3C795047 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x36A JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3176 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x3233 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x32FC JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0xE06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3345 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x408 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x464 PUSH2 0xE89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x124C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x3345 JUMP JUMPDEST PUSH2 0x1286 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x57F CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x59F CALLDATASIZE PUSH1 0x4 PUSH2 0x32FC JUMP JUMPDEST PUSH2 0x131B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x408 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x5FF CALLDATASIZE PUSH1 0x4 PUSH2 0x3392 JUMP JUMPDEST PUSH2 0x13AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x13F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x146F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x14FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x33AD JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x15E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x6D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x1684 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x17C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3B1 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x777 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x17D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x408 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x7B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3404 JUMP JUMPDEST PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x464 PUSH2 0x7CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0x1A13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x7EA CALLDATASIZE PUSH1 0x4 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x1FBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x80A CALLDATASIZE PUSH1 0x4 PUSH2 0x33AD JUMP JUMPDEST PUSH2 0x1FF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3B1 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x204A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x2057 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x88A CALLDATASIZE PUSH1 0x4 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x2064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x8AA CALLDATASIZE PUSH1 0x4 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x2118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x408 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x21EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x924 CALLDATASIZE PUSH1 0x4 PUSH2 0x32FC JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x408 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x228A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x97D SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x22A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9BF CALLDATASIZE PUSH1 0x4 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA08 CALLDATASIZE PUSH1 0x4 PUSH2 0x3588 JUMP JUMPDEST PUSH2 0x239B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x243A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA3D CALLDATASIZE PUSH1 0x4 PUSH2 0x33AD JUMP JUMPDEST PUSH2 0x2587 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xAA1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xABC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAD1 SWAP1 PUSH2 0x35ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAFD SWAP1 PUSH2 0x35ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP3 PUSH2 0x13F8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC83 JUMPI POP PUSH2 0xC83 DUP2 CALLER PUSH2 0x9BF JUMP JUMPDEST PUSH2 0xCF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xCFF DUP4 DUP4 PUSH2 0x262E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE02 SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x30C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE13 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x3673 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH2 0xE62 CALLER JUMPDEST DUP3 PUSH2 0x269C JUMP JUMPDEST PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH2 0xCFF DUP4 DUP4 DUP4 PUSH2 0x2793 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF31 PUSH2 0x3E8 PUSH2 0xF2B SELFBALANCE PUSH2 0x2BC PUSH2 0x293E JUMP JUMPDEST SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF6D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFD8 PUSH2 0x3E8 PUSH2 0xF2B SELFBALANCE PUSH1 0x69 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x107F PUSH2 0x3E8 PUSH2 0xF2B SELFBALANCE PUSH1 0x69 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080CC819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1126 PUSH2 0x3E8 PUSH2 0xF2B SELFBALANCE PUSH1 0x2D PUSH2 0x293E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x127C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x1284 PUSH2 0x295D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCFF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x12AA CALLER PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x1318 DUP2 PUSH2 0x29F0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE02 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x147C SWAP1 PUSH2 0x35ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14A8 SWAP1 PUSH2 0x35ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1508 PUSH2 0xE06 JUMP JUMPDEST GT PUSH2 0x154E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xE1D PUSH2 0x61F PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x1284 PUSH1 0x0 PUSH2 0x2A97 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD PUSH2 0x16C3 SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x17BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x1284 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xAD1 SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH2 0xE02 CALLER DUP4 DUP4 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x180E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x36DB JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x1889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2830B9BA1030B4B9323937B810383430B9B297 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x18FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3930B739B0B1BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x195B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x196A PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x3738 JUMP JUMPDEST GT ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3A1039BAB838363C97 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCFF JUMPI PUSH2 0x19F3 DUP3 PUSH2 0x19EE PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C18 JUMP JUMPDEST PUSH2 0x1A01 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1A0B DUP2 PUSH2 0x3750 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37B71039BA30B3B2901817 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3930B739B0B1BA34B7B717 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x1DAB JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1BC7 SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x2C32 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND LT PUSH2 0x1CBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26B4B73A1030B6B7BAB73A1036BAB9BA103132901897 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1CCF SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x293E JUMP JUMPDEST CALLVALUE EQ PUSH2 0x1D17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x24B73B30B634B210333AB7323990383937BB34B232B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1D26 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x1D30 SWAP2 SWAP1 PUSH2 0x3738 JUMP JUMPDEST GT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20657863656564732077686974656C697374207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3838363C97 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1EB7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH2 0x1E36 SWAP1 PUSH1 0xFF DUP6 AND PUSH2 0x3738 JUMP JUMPDEST GT ISZERO PUSH2 0x1E97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x14 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EAC SWAP2 SWAP1 PUSH2 0x3738 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1F84 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1EC7 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x293E JUMP JUMPDEST CALLVALUE EQ PUSH2 0x1F0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x24B73B30B634B210333AB7323990383937BB34B232B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1F1E PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x1F28 SWAP2 SWAP1 PUSH2 0x3738 JUMP JUMPDEST GT ISZERO PUSH2 0x1F84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCFF JUMPI PUSH2 0x1F9E CALLER PUSH2 0x19EE PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FAC PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1FB6 DUP2 PUSH2 0x3750 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F87 JUMP JUMPDEST PUSH2 0x1FC8 CALLER DUP4 PUSH2 0x269C JUMP JUMPDEST PUSH2 0x1FE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH2 0x1FF0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2C48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2026 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x147C SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x147C SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xA PUSH2 0x20EE DUP4 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2102 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x382F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2176 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x36DB JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x21C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81CDD1859D95CC81899599BDC99481A5B9A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x21D3 DUP4 PUSH2 0x3862 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21F9 PUSH2 0xE06 JUMP JUMPDEST GT PUSH2 0x223F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xE1D PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE02 SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2294 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x3673 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0x22E0 SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 POP GT PUSH2 0x232F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x23CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD SWAP5 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 SSTORE PUSH1 0xE DUP1 SLOAD SWAP4 DUP7 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0xF DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x246A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x36DB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH2 0x251D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x77686974656C697374206D696E74696E672063616E20626567696E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x2574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20737461676573206166746572207075626C69632073616C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x21D3 DUP4 PUSH2 0x3895 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x25B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x3628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x261C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x1318 DUP2 PUSH2 0x2A97 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2663 DUP3 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2720 DUP4 PUSH2 0x13F8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x275B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2750 DUP5 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x278B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27A6 DUP3 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x280E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x287B DUP4 DUP4 DUP4 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0x2886 PUSH1 0x0 DUP3 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x28AF SWAP1 DUP5 SWAP1 PUSH2 0x3673 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x28DD SWAP1 DUP5 SWAP1 PUSH2 0x3738 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A DUP3 DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A DUP3 DUP5 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x29A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29FB DUP3 PUSH2 0x13F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A09 DUP2 PUSH1 0x0 DUP5 PUSH2 0x2D79 JUMP JUMPDEST PUSH2 0x2A14 PUSH1 0x0 DUP4 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A3D SWAP1 DUP5 SWAP1 PUSH2 0x3673 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2B14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x29D3 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE02 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C3F DUP6 DUP5 PUSH2 0x2DCF JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C53 DUP5 DUP5 DUP5 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x2C5F DUP5 DUP5 DUP5 DUP5 PUSH2 0x2E7B JUMP JUMPDEST PUSH2 0x1FF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x38FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2C9F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2CC9 JUMPI DUP1 PUSH2 0x2CB3 DUP2 PUSH2 0x3750 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC2 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x38EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CE4 JUMPI PUSH2 0x2CE4 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D0E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x278B JUMPI PUSH2 0x2D23 PUSH1 0x1 DUP4 PUSH2 0x3673 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D30 PUSH1 0xA DUP7 PUSH2 0x3950 JUMP JUMPDEST PUSH2 0x2D3B SWAP1 PUSH1 0x30 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2D50 JUMPI PUSH2 0x2D50 PUSH2 0x387F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2D72 PUSH1 0xA DUP7 PUSH2 0x38EA JUMP JUMPDEST SWAP5 POP PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH2 0x2DA6 DUP4 DUP4 PUSH2 0x2F79 JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2E7B JUMP JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x38FE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2E73 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DF1 JUMPI PUSH2 0x2DF1 PUSH2 0x387F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2E33 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2E6B DUP2 PUSH2 0x3750 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DD4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2F6E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2EBF SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2EFA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2EF7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x39A1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2F54 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2F28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2F4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x38FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x278B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x3034 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x3040 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2D79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x3069 SWAP1 DUP5 SWAP1 PUSH2 0x3738 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x30D3 SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x30F5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x313B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x310E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x313B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x313B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x313B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3120 JUMP JUMPDEST POP PUSH2 0x3147 SWAP3 SWAP2 POP PUSH2 0x314B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3147 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x314C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x294A DUP2 PUSH2 0x3160 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3196 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FF0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x31D7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3193 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x294A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x322E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x324F DUP4 PUSH2 0x3217 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x329C JUMPI PUSH2 0x329C PUSH2 0x325D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x32BE JUMPI PUSH2 0x32BE PUSH2 0x325D JUMP JUMPDEST PUSH2 0x32D1 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x32E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x330E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x278B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x335A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3363 DUP5 PUSH2 0x3217 JUMP JUMPDEST SWAP3 POP PUSH2 0x3371 PUSH1 0x20 DUP6 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x322E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x294A DUP3 PUSH2 0x3381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x294A DUP3 PUSH2 0x3217 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33E4 DUP4 PUSH2 0x3217 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x33F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3420 DUP4 PUSH2 0x3381 JUMP JUMPDEST SWAP2 POP PUSH2 0x342E PUSH1 0x20 DUP5 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x344A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3453 DUP4 PUSH2 0x3381 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3497 JUMPI PUSH2 0x3497 PUSH2 0x325D JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x34A8 DUP5 DUP4 ADD PUSH2 0x3273 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x34C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x34E0 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x34C7 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350F DUP6 PUSH2 0x3217 JUMP JUMPDEST SWAP4 POP PUSH2 0x351D PUSH1 0x20 DUP7 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3560 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x357F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3420 DUP4 PUSH2 0x3217 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x35A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35A9 DUP7 PUSH2 0x3217 JUMP JUMPDEST SWAP5 POP PUSH2 0x35B7 PUSH1 0x20 DUP8 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP4 POP PUSH2 0x35C5 PUSH1 0x40 DUP8 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP3 POP PUSH2 0x35D3 PUSH1 0x60 DUP8 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP2 POP PUSH2 0x35E1 PUSH1 0x80 DUP8 ADD PUSH2 0x3217 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3601 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3622 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3685 JUMPI PUSH2 0x3685 PUSH2 0x365D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x374B JUMPI PUSH2 0x374B PUSH2 0x365D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3764 JUMPI PUSH2 0x3764 PUSH2 0x365D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x37AF JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x37D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x37E5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x37F6 JUMPI PUSH2 0x3823 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3823 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x381B JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3802 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383B DUP3 DUP7 PUSH2 0x3795 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x384B DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x3193 JUMP JUMPDEST PUSH2 0x3857 DUP2 DUP4 ADD DUP7 PUSH2 0x3795 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x3875 JUMPI PUSH2 0x3875 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x38AC JUMPI PUSH2 0x38AC PUSH2 0x365D JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x38CF JUMPI PUSH2 0x38CF PUSH2 0x365D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38F9 JUMPI PUSH2 0x38F9 PUSH2 0x38D4 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x395F JUMPI PUSH2 0x395F PUSH2 0x38D4 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3997 SWAP1 DUP4 ADD DUP5 PUSH2 0x31BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x294A DUP2 PUSH2 0x3160 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SWAP9 0x27 SWAP6 CREATE2 0x4B CODESIZE DUP12 DUP13 PUSH9 0x1B2AC7E5BEAF780E7C 0xC9 0xEE 0xE7 PUSH12 0xD065343B1C2C96BC1864736F PUSH13 0x634300080A0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38C"
    },
    "12": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8456CB59"
    },
    "25": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC"
    },
    "29": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC884EF83"
    },
    "36": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDE7FCB1D"
    },
    "47": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEE3743AB"
    },
    "58": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEE3743AB"
    },
    "69": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA0D"
    },
    "73": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA22"
    },
    "84": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "86": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "92": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA42"
    },
    "95": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "96": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFCAA7664"
    },
    "102": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA58"
    },
    "106": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "107": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "111": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDE7FCB1D"
    },
    "118": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x95E"
    },
    "122": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x98F"
    },
    "133": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "135": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "141": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9A4"
    },
    "144": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "145": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEA74E190"
    },
    "151": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9ED"
    },
    "155": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "156": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "160": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "161": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD6D67A09"
    },
    "167": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "168": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD6D67A09"
    },
    "178": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8F4"
    },
    "182": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDA3EF23F"
    },
    "189": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x909"
    },
    "193": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "195": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDB993F56"
    },
    "200": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "201": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x929"
    },
    "204": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "205": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDE5F9866"
    },
    "211": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "212": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x949"
    },
    "215": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "216": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "220": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "221": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "222": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC884EF83"
    },
    "227": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x88F"
    },
    "231": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "232": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBD0A2B5"
    },
    "238": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "239": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BF"
    },
    "242": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD2FAB8B9"
    },
    "249": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "250": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8D4"
    },
    "253": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "254": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "257": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "258": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "259": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "260": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB61C5E69"
    },
    "265": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "266": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "270": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "271": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC3214581"
    },
    "276": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "277": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "281": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "282": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC3214581"
    },
    "287": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "288": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x82F"
    },
    "291": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "292": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "293": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6682862"
    },
    "298": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "299": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x845"
    },
    "302": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "303": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6AB67A3"
    },
    "309": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "310": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x85A"
    },
    "313": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "314": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "315": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC87B56DD"
    },
    "320": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "321": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x86F"
    },
    "324": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "325": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "328": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "329": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "330": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "331": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB61C5E69"
    },
    "336": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "337": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7BC"
    },
    "340": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "341": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "342": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB88D4FDE"
    },
    "347": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "348": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CF"
    },
    "351": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "352": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "353": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBBC903EA"
    },
    "358": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "359": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7EF"
    },
    "362": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "363": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "364": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC29DE630"
    },
    "369": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "370": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x80F"
    },
    "373": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "374": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "376": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "377": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "378": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "379": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "380": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9A2A9C3D"
    },
    "385": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "386": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "390": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "391": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9A2A9C3D"
    },
    "396": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "397": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x73B"
    },
    "400": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "401": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "402": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA22CB465"
    },
    "407": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "408": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x75C"
    },
    "411": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "412": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "413": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB1214392"
    },
    "418": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "419": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x77C"
    },
    "422": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "423": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "424": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB3CAAD01"
    },
    "429": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "430": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x79C"
    },
    "433": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "434": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "436": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "437": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "438": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "439": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "440": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8456CB59"
    },
    "445": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "446": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6EE"
    },
    "449": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "450": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "451": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "456": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "457": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x703"
    },
    "460": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "461": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "462": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95D89B41"
    },
    "467": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "468": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x726"
    },
    "471": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "472": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "474": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "475": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "476": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "477": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "478": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x42842E0E"
    },
    "483": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "484": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C1"
    },
    "487": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "488": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "489": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6C0360EB"
    },
    "494": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "495": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25F"
    },
    "498": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "499": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "500": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78231978"
    },
    "505": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "506": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22E"
    },
    "509": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "510": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "511": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78231978"
    },
    "516": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "517": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x683"
    },
    "520": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "521": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "522": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x791A2519"
    },
    "527": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "528": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x699"
    },
    "531": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "532": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "533": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7CB64759"
    },
    "538": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "539": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B9"
    },
    "542": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "543": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "544": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81C162F2"
    },
    "549": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "550": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D9"
    },
    "553": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "554": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "557": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "558": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "559": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "560": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6C0360EB"
    },
    "565": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "566": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x624"
    },
    "569": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "570": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "571": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6CBB8985"
    },
    "576": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "577": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x639"
    },
    "580": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "581": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "582": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "587": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "588": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x64E"
    },
    "591": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "592": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "593": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "598": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "599": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66E"
    },
    "602": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "603": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "605": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "606": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "607": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "608": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "609": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "614": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "615": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29B"
    },
    "618": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "619": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "620": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "625": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "626": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A4"
    },
    "629": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "630": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "631": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x61869A93"
    },
    "636": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "637": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5BC"
    },
    "640": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "641": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "642": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x622E4E78"
    },
    "647": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "648": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5E4"
    },
    "651": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "652": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "653": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6352211E"
    },
    "658": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "659": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x604"
    },
    "662": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "663": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "665": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "666": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "667": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "668": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "669": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x42842E0E"
    },
    "674": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "675": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x544"
    },
    "678": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "679": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "680": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x42966C68"
    },
    "685": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "686": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x564"
    },
    "689": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "690": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "691": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x55F804B3"
    },
    "696": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "697": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x584"
    },
    "700": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "701": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "703": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "704": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "705": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "706": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "707": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x20841A6A"
    },
    "712": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "713": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32E"
    },
    "716": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "717": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "718": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x33E61413"
    },
    "723": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "724": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x308"
    },
    "727": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "728": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "729": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x33E61413"
    },
    "734": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "735": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4F1"
    },
    "738": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "739": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "740": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3C795047"
    },
    "745": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "746": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x507"
    },
    "749": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "750": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "751": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3CCFD60B"
    },
    "756": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "757": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x527"
    },
    "760": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "761": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "762": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3F4BA83A"
    },
    "767": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "768": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x52F"
    },
    "771": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "772": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "774": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "775": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "776": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "777": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "778": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x20841A6A"
    },
    "783": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "784": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "787": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "788": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "789": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "794": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "795": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4BB"
    },
    "798": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "799": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "800": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2EB4A7AB"
    },
    "805": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "806": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DB"
    },
    "809": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "810": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "812": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "813": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "814": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "815": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "816": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x88139A6"
    },
    "821": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "GT",
      "path": "15"
    },
    "822": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36A"
    },
    "825": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "826": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "827": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x88139A6"
    },
    "832": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "833": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x420"
    },
    "836": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "837": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "838": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95EA7B3"
    },
    "843": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "844": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x444"
    },
    "847": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "848": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "849": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x10969523"
    },
    "854": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "855": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x466"
    },
    "858": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "859": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "860": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x18160DDD"
    },
    "865": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "866": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486"
    },
    "869": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "870": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "872": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "873": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "874": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "875": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "876": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FFC9A7"
    },
    "881": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "882": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x391"
    },
    "885": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "886": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "887": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6FDDE03"
    },
    "892": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "893": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C6"
    },
    "896": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "897": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "898": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81812FC"
    },
    "903": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "EQ",
      "path": "15"
    },
    "904": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "907": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "908": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "909": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "911": {
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "DUP1",
      "path": "15"
    },
    "912": {
      "first_revert": true,
      "fn": null,
      "offset": [
        483,
        9527
      ],
      "op": "REVERT",
      "path": "15"
    },
    "913": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "914": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "915": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "916": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "917": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39D"
    },
    "920": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "921": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "923": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "924": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "REVERT",
      "path": "2"
    },
    "925": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B1"
    },
    "930": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AC"
    },
    "933": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "934": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "936": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3176"
    },
    "939": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "940": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "941": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA70"
    },
    "944": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "945": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "946": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "948": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "949": {
      "op": "SWAP1"
    },
    "950": {
      "op": "ISZERO"
    },
    "951": {
      "op": "ISZERO"
    },
    "952": {
      "op": "DUP2"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "958": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "960": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "961": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "962": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "963": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "2"
    },
    "964": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "965": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "2"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "970": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "976": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "2"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "2"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DB"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC2"
    },
    "986": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "987": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BD"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "995": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "996": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31EB"
    },
    "999": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1002": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1003": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1004": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1008": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31FE"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1027": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB54"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "AND"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BD"
    },
    "1055": {
      "op": "JUMP"
    },
    "1056": {
      "offset": [
        1902,
        1930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1060": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42C"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "POP",
      "path": "15"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "1073": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1076": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1077": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "offset": [
        1902,
        1930
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1082": {
      "op": "SWAP1"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "offset": [
        1902,
        1930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BD"
    },
    "1091": {
      "op": "JUMP"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1094": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1095": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x450"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3233"
    },
    "1118": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1119": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1120": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBEE"
    },
    "1123": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1124": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1125": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "2"
    },
    "1126": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1128": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1129": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1130": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x472"
    },
    "1133": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1134": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1136": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1137": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1143": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x481"
    },
    "1146": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1147": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1149": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32FC"
    },
    "1152": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1153": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1154": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD04"
    },
    "1157": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1158": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1159": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1160": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1161": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1162": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x492"
    },
    "1165": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1166": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1168": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1169": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1170": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1171": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "POP",
      "path": "15"
    },
    "1172": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "1175": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "1178": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1179": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1180": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1181": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1182": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1183": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A7"
    },
    "1186": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1187": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1189": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1190": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1191": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1196": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1200": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1202": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31FE"
    },
    "1205": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1206": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1207": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE22"
    },
    "1210": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C7"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D6"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3345"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE57"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "offset": [
        749,
        774
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E7"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "POP",
      "path": "15"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1262": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1263": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "offset": [
        749,
        774
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1265": {
      "offset": [
        1691,
        1721
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1269": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1276": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "POP",
      "path": "15"
    },
    "1279": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "1282": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x11"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1285": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1286": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1691,
        1721
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1287": {
      "offset": [
        1221,
        1294
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1288": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1289": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1290": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1291": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x513"
    },
    "1294": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1295": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1297": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1298": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1299": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1300": {
      "op": "POP"
    },
    "1301": {
      "offset": [
        1221,
        1294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "1303": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1304": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "1307": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "offset": [
        1221,
        1294
      ],
      "op": "AND",
      "path": "15"
    },
    "1317": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1318": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1221,
        1294
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1319": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7561,
        8400
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1320": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7561,
        8400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1323": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7561,
        8400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE89"
    },
    "1326": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7561,
        8400
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1327": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1328": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1329": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1330": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1331": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x53B"
    },
    "1334": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1335": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1337": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1338": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1339": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1340": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "POP",
      "path": "15"
    },
    "1341": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1344": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124C"
    },
    "1347": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1350": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1351": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1352": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x550"
    },
    "1355": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1358": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1359": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "1365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55F"
    },
    "1368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1369": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3345"
    },
    "1374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1286"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1380": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1381": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1382": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1383": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1384": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x570"
    },
    "1387": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1388": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1390": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1391": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1392": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x464"
    },
    "1397": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57F"
    },
    "1400": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1401": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1403": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31FE"
    },
    "1406": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1407": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1408": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12A1"
    },
    "1411": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1412": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1413": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1414": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1415": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1416": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x590"
    },
    "1419": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1420": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1422": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1423": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1424": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1429": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x59F"
    },
    "1432": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1433": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1435": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32FC"
    },
    "1438": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1439": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1440": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131B"
    },
    "1443": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1444": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1445": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1446": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1447": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1448": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B0"
    },
    "1451": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1452": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1454": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1455": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1456": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x6"
    },
    "1460": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1461": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1463": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1464": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "1467": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1468": {
      "offset": [
        1041,
        1114
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1469": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1470": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1471": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1472": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5C8"
    },
    "1475": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1476": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1478": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1479": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1480": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "offset": [
        1041,
        1114
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "1484": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1485": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "1488": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1489": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "1495": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1496": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "DIV",
      "path": "15"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "offset": [
        1041,
        1114
      ],
      "op": "AND",
      "path": "15"
    },
    "1506": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1507": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1114
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1508": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1509": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1510": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1511": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1512": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F0"
    },
    "1515": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1516": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1518": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1519": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1520": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1525": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5FF"
    },
    "1528": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1529": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1531": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3392"
    },
    "1534": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1535": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1536": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13AC"
    },
    "1539": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1540": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1542": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1543": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1544": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x610"
    },
    "1547": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1548": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1550": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1551": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1552": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1553": {
      "op": "POP"
    },
    "1554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408"
    },
    "1557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61F"
    },
    "1560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1563": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31FE"
    },
    "1566": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "1571": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1572": {
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x630"
    },
    "1579": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "1586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DB"
    },
    "1589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x146F"
    },
    "1592": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        814,
        840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1593": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1594": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1595": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1596": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1597": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x645"
    },
    "1600": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1601": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1603": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1604": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1605": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1606": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "POP",
      "path": "15"
    },
    "1607": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "1610": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14FD"
    },
    "1613": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8435,
        8599
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1614": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1615": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1616": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1617": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1618": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65A"
    },
    "1621": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1622": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1624": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1625": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1626": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1627": {
      "op": "POP"
    },
    "1628": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x436"
    },
    "1631": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x669"
    },
    "1634": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1635": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1637": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33AD"
    },
    "1640": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1641": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1642": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1559"
    },
    "1645": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67A"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1656": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1660": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E0"
    },
    "1666": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1667": {
      "offset": [
        1966,
        1996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1668": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68F"
    },
    "1674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "POP",
      "path": "15"
    },
    "1681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "1684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x15"
    },
    "1686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1966,
        1996
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1689": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1690": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1691": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1692": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1693": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A5"
    },
    "1696": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1697": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1699": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1700": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1701": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1706": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B4"
    },
    "1709": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1710": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1712": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31FE"
    },
    "1715": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1716": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1717": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x161A"
    },
    "1720": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1721": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1722": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1723": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1724": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1725": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1729": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1731": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1732": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1733": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1738": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D4"
    },
    "1741": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1742": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1744": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31FE"
    },
    "1747": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1748": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1749": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x164F"
    },
    "1752": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1753": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1754": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1755": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1756": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1757": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6E5"
    },
    "1760": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1761": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1763": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1764": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1765": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1766": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "POP",
      "path": "15"
    },
    "1767": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1770": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1684"
    },
    "1773": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1774": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1775": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1776": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1777": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1778": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6FA"
    },
    "1781": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1782": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1784": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1785": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1786": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1787": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "POP",
      "path": "15"
    },
    "1788": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1791": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x178C"
    },
    "1794": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4220,
        4279
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1795": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1796": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1797": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1799": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "1802": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1803": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1805": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1806": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1807": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x6"
    },
    "1811": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1812": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1815": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1826": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1829": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1830": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1831": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1832": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1833": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1834": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "1837": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1838": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1840": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1841": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1842": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1843": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "2"
    },
    "1844": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DB"
    },
    "1847": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C4"
    },
    "1850": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1851": {
      "offset": [
        994,
        1034
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1852": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1853": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1854": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1855": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x747"
    },
    "1858": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1859": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1861": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1862": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1863": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "offset": [
        994,
        1034
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "1867": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1868": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B1"
    },
    "1871": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1872": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "1877": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1878": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "DIV",
      "path": "15"
    },
    "1879": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1881": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "AND",
      "path": "15"
    },
    "1882": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1883": {
      "fn": "ERC721.symbol",
      "offset": [
        994,
        1034
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1885": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1886": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1887": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x768"
    },
    "1891": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1892": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1894": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1895": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1896": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "1901": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x777"
    },
    "1904": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1905": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1907": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33C8"
    },
    "1910": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1911": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1912": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17D3"
    },
    "1915": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1916": {
      "offset": [
        1129,
        1202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1917": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1918": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1919": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1920": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x788"
    },
    "1923": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1924": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1926": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1927": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1928": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "offset": [
        1129,
        1202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "1932": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1933": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "1936": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "offset": [
        1129,
        1202
      ],
      "op": "AND",
      "path": "15"
    },
    "1946": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1947": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1129,
        1202
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1948": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1949": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1950": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1951": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1952": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7A8"
    },
    "1955": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1956": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1958": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1959": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1960": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1965": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7B7"
    },
    "1968": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1969": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1971": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3404"
    },
    "1974": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1975": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1976": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17DE"
    },
    "1979": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1980": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1981": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "1984": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CA"
    },
    "1987": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1988": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1990": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3437"
    },
    "1993": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2596,
        4192
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1994": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1995": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A13"
    },
    "1998": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2596,
        4192
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1999": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "2006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "2016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EA"
    },
    "2019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F0"
    },
    "2025": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FBE"
    },
    "2030": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2031": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2032": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2033": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2034": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2035": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7FB"
    },
    "2038": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2039": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2041": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2042": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2043": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2044": {
      "op": "POP"
    },
    "2045": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2048": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x80A"
    },
    "2051": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2052": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2054": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33AD"
    },
    "2057": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2058": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2059": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FF6"
    },
    "2062": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2063": {
      "offset": [
        954,
        988
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2064": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2065": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2066": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2067": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x81B"
    },
    "2070": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2071": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2073": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2074": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2075": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "offset": [
        954,
        988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "2079": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2080": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B1"
    },
    "2083": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2084": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "2088": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2089": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "DIV",
      "path": "15"
    },
    "2090": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2092": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "AND",
      "path": "15"
    },
    "2093": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2094": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        954,
        988
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2095": {
      "offset": [
        1841,
        1870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2096": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2097": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2098": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2099": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x83B"
    },
    "2102": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2103": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2105": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2106": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2107": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2108": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "POP",
      "path": "15"
    },
    "2109": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "2112": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x13"
    },
    "2114": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2115": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2116": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1841,
        1870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2117": {
      "offset": [
        846,
        883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2118": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2119": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2120": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2121": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x851"
    },
    "2124": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2125": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2127": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2128": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2129": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2130": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "POP",
      "path": "15"
    },
    "2131": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DB"
    },
    "2134": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x204A"
    },
    "2137": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        846,
        883
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2138": {
      "offset": [
        780,
        808
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2139": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2140": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2141": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2142": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x866"
    },
    "2145": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2146": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2148": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2149": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2150": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2151": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "POP",
      "path": "15"
    },
    "2152": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DB"
    },
    "2155": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2057"
    },
    "2158": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        780,
        808
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2159": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2160": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2161": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2162": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2163": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x87B"
    },
    "2166": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2167": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2169": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2170": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2171": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DB"
    },
    "2176": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x88A"
    },
    "2179": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2180": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2182": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31FE"
    },
    "2185": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2186": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2187": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2064"
    },
    "2190": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2191": {
      "offset": [
        1750,
        1789
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2192": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2193": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2194": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2195": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89B"
    },
    "2198": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2199": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2201": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2202": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2203": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B1"
    },
    "2208": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8AA"
    },
    "2211": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2212": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2214": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33AD"
    },
    "2217": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1750,
        1789
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2218": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2219": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "2221": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2223": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2224": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2226": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2227": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2228": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2229": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2231": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2233": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2234": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2236": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "AND",
      "path": "15"
    },
    "2237": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2238": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1750,
        1789
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2239": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2240": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2241": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2242": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2243": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8CB"
    },
    "2246": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2247": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2249": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2250": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2251": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2252": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "POP",
      "path": "15"
    },
    "2253": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2256": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2118"
    },
    "2259": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2260": {
      "offset": [
        1313,
        1386
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2261": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2262": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2263": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2264": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E0"
    },
    "2267": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2268": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2270": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2271": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2272": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "offset": [
        1313,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "2276": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2277": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "2280": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "offset": [
        1313,
        1386
      ],
      "op": "AND",
      "path": "15"
    },
    "2290": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2291": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1313,
        1386
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2292": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2293": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2294": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2295": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2296": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x900"
    },
    "2299": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2300": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2302": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2303": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2304": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2305": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "POP",
      "path": "15"
    },
    "2306": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "2309": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21EE"
    },
    "2312": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8605,
        8756
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2313": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2314": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2315": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2316": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2317": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x915"
    },
    "2320": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2321": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2323": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2324": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2325": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2326": {
      "op": "POP"
    },
    "2327": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2330": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x924"
    },
    "2333": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2334": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2336": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32FC"
    },
    "2339": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2340": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2341": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2247"
    },
    "2344": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2345": {
      "offset": [
        1405,
        1478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2346": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2347": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2348": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2349": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x935"
    },
    "2352": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2353": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2355": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2356": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2357": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "offset": [
        1405,
        1478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "2361": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2362": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "2365": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "op": "SUB"
    },
    "2374": {
      "offset": [
        1405,
        1478
      ],
      "op": "AND",
      "path": "15"
    },
    "2375": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2376": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1405,
        1478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2377": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2378": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2379": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2380": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2381": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x955"
    },
    "2384": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2385": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2387": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2388": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2389": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2390": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "POP",
      "path": "15"
    },
    "2391": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "2394": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x228A"
    },
    "2397": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9146,
        9256
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2398": {
      "offset": [
        918,
        943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2399": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2400": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2401": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2402": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x96A"
    },
    "2405": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2406": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2408": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2409": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2410": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "2414": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2415": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x97D"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2423": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "DIV",
      "path": "15"
    },
    "2424": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2426": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "AND",
      "path": "15"
    },
    "2427": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2428": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2429": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2430": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2432": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        918,
        943
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2435": {
      "op": "SWAP1"
    },
    "2436": {
      "op": "SWAP2"
    },
    "2437": {
      "op": "AND"
    },
    "2438": {
      "op": "DUP2"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "offset": [
        918,
        943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BD"
    },
    "2446": {
      "op": "JUMP"
    },
    "2447": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2448": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2449": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2450": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2451": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x99B"
    },
    "2454": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2455": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2457": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2458": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2459": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2460": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "POP",
      "path": "15"
    },
    "2461": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2464": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22A1"
    },
    "2467": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2469": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B0"
    },
    "2475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2478": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2479": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B1"
    },
    "2485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BF"
    },
    "2488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x356C"
    },
    "2494": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 2
    },
    "2505": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "2507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2512": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2531": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2541": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2542": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2543": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2544": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2545": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F9"
    },
    "2548": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2549": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2551": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2552": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2553": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2558": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA08"
    },
    "2561": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2562": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2564": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3588"
    },
    "2567": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2568": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2569": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x239B"
    },
    "2572": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2573": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2574": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2575": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2576": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2577": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA19"
    },
    "2580": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2581": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2583": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2584": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2585": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2586": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "POP",
      "path": "15"
    },
    "2587": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "2590": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x243A"
    },
    "2593": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        5639,
        5967
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2E"
    },
    "2601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2605": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2606": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "2611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "2614": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33AD"
    },
    "2620": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2587"
    },
    "2625": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2626": {
      "offset": [
        2011,
        2048
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA4E"
    },
    "2633": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "POP",
      "path": "15"
    },
    "2640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x436"
    },
    "2643": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x16"
    },
    "2645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2048
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2648": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2649": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2650": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2651": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2652": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA64"
    },
    "2655": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2656": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2658": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2659": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2660": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9331,
        9336
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0xC"
    },
    "2664": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9331,
        9336
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2665": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9331,
        9336
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2667": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9331,
        9336
      ],
      "op": "AND",
      "path": "15"
    },
    "2668": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x97D"
    },
    "2671": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9266,
        9343
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2672": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2673": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "op": "NOT"
    },
    "2684": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 4
    },
    "2685": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "2"
    },
    "2686": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "2"
    },
    "2695": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2696": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA1"
    },
    "2699": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "op": "SUB"
    },
    "2709": {
      "op": "NOT"
    },
    "2710": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2711": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "2"
    },
    "2712": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "2"
    },
    "2721": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2722": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2723": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "2726": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2727": {
      "op": "POP"
    },
    "2728": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2742": {
      "op": "SHL"
    },
    "2743": {
      "op": "SUB"
    },
    "2744": {
      "op": "NOT"
    },
    "2745": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 5
    },
    "2746": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "12"
    },
    "2747": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "12"
    },
    "2748": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2749": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2750": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2757": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2761": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD1"
    },
    "2764": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2765": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35ED"
    },
    "2768": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2774": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2777": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "2779": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "2780": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2782": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2783": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2785": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2786": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2787": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2788": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2789": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2791": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2792": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2793": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2794": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2797": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2799": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2803": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2804": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFD"
    },
    "2808": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2809": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35ED"
    },
    "2812": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2813": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2814": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2816": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4A"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2820": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2821": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2823": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "2"
    },
    "2824": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1F"
    },
    "2827": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2828": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2831": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2832": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2833": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2834": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "2835": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "2836": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2837": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2838": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2839": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2841": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2842": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2843": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4A"
    },
    "2846": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2847": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2848": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2849": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2850": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2851": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2852": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2854": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2855": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2857": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2859": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2860": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2861": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2862": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2863": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2864": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2865": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2866": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2867": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2869": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2870": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2871": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2873": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2874": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2875": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2876": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "2"
    },
    "2877": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2D"
    },
    "2880": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2881": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2882": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2883": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "2"
    },
    "2884": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2886": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "2"
    },
    "2887": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2888": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2889": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2890": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2891": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2892": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2893": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2894": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2895": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2896": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2897": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "2898": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2899": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2900": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2903": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "2904": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2905": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2906": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2908": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2911": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2913": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2914": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2915": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "2925": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0xBD2"
    },
    "2928": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2929": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2940": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2945": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2946": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "2"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2952": {
      "op": "DUP3"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2990": {
      "op": "DUP3"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "MSTORE"
    },
    "2993": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3008": {
      "op": "SHL"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3011": {
      "op": "DUP3"
    },
    "3012": {
      "op": "ADD"
    },
    "3013": {
      "op": "MSTORE"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3016": {
      "op": "ADD"
    },
    "3017": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3018": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3020": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3021": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3022": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3023": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "2"
    },
    "3024": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3025": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3026": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3027": {
      "op": "POP"
    },
    "3028": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x0"
    },
    "3030": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3031": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3032": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3033": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3035": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3037": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3038": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3040": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3041": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3042": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "2"
    },
    "3052": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3053": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3054": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3055": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3057": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF9"
    },
    "3060": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3061": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "3064": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3065": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3066": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3067": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "2"
    },
    "3068": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 10
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "SUB"
    },
    "3077": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3078": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "op": "SUB"
    },
    "3087": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3088": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "2"
    },
    "3089": {
      "branch": 191,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3090": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC67"
    },
    "3093": {
      "branch": 191,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3094": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3105": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3108": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3110": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3111": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "2"
    },
    "3112": {
      "op": "MSTORE"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3117": {
      "op": "DUP3"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3155": {
      "op": "DUP3"
    },
    "3156": {
      "op": "ADD"
    },
    "3157": {
      "op": "MSTORE"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3162": {
      "op": "SHL"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3170": {
      "op": "ADD"
    },
    "3171": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "3174": {
      "op": "JUMP"
    },
    "3175": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3176": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "3186": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "2"
    },
    "3187": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "2"
    },
    "3188": {
      "branch": 192,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3189": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC83"
    },
    "3192": {
      "branch": 192,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC83"
    },
    "3197": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3198": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BF"
    },
    "3202": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3203": {
      "branch": 193,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3204": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF5"
    },
    "3207": {
      "branch": 193,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3208": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3210": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3219": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3222": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3224": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3225": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "2"
    },
    "3226": {
      "op": "MSTORE"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3231": {
      "op": "DUP3"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3269": {
      "op": "DUP3"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "MSTORE"
    },
    "3272": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3307": {
      "op": "DUP3"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "3316": {
      "op": "JUMP"
    },
    "3317": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3318": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xCFF"
    },
    "3321": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3322": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3323": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262E"
    },
    "3326": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3327": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3328": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3329": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3330": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3331": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3332": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3333": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3335": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3348": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3350": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3351": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3352": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3353": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD34"
    },
    "3356": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3357": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3360": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3366": {
      "op": "SHL"
    },
    "3367": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "3375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "3379": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3381": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6829,
        6830
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0x0"
    },
    "3383": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6803,
        6818
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3384": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6797,
        6826
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3385": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6797,
        6830
      ],
      "op": "GT",
      "path": "15"
    },
    "3386": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD95"
    },
    "3389": {
      "branch": 154,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3390": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3392": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3401": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3404": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3406": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3407": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "ADD",
      "path": "15"
    },
    "3408": {
      "op": "MSTORE"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3413": {
      "op": "DUP3"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "MSTORE"
    },
    "3416": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3464": {
      "op": "SHL"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3467": {
      "op": "DUP3"
    },
    "3468": {
      "op": "ADD"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "3476": {
      "op": "JUMP"
    },
    "3477": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6789,
        6874
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3478": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0xC"
    },
    "3480": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3481": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "3486": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3487": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "DIV",
      "path": "15"
    },
    "3488": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3490": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6893,
        6913
      ],
      "op": "AND",
      "path": "15"
    },
    "3491": {
      "branch": 155,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6892,
        6913
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3492": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDEF"
    },
    "3495": {
      "branch": 155,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3496": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3498": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3507": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3510": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3512": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3513": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "ADD",
      "path": "15"
    },
    "3514": {
      "op": "MSTORE"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "MSTORE"
    },
    "3522": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3557": {
      "op": "DUP3"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3562": {
      "op": "ADD"
    },
    "3563": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "3566": {
      "op": "JUMP"
    },
    "3567": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6884,
        6944
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3568": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 16
    },
    "3569": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3570": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE02"
    },
    "3573": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3574": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "3576": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3577": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3579": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3580": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "ADD",
      "path": "15"
    },
    "3581": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3582": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C7"
    },
    "3585": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6954,
        6986
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3586": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3587": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6954,
        6986
      ],
      "op": "POP",
      "path": "15"
    },
    "3588": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6704,
        6993
      ],
      "op": "POP",
      "path": "15"
    },
    "3589": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        6704,
        6993
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3590": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3591": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8806,
        8813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3593": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8860,
        8861
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x1"
    },
    "3595": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8857
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE13"
    },
    "3598": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3600": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 18
    },
    "3601": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3602": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3603": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8857
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3604": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8861
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE1D"
    },
    "3607": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8861
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3608": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8861
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3609": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8861
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3673"
    },
    "3612": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        8832,
        8861
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3613": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8832,
        8861
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3614": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8825,
        8861
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3615": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8825,
        8861
      ],
      "op": "POP",
      "path": "15"
    },
    "3616": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8762,
        8868
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3617": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        8762,
        8868
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3618": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3628": {
      "op": "SHL"
    },
    "3629": {
      "op": "SUB"
    },
    "3630": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3633": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3634": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3635": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3637": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3638": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3639": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE52"
    },
    "3642": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3652": {
      "op": "SHL"
    },
    "3653": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3654": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3657": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "3661": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "3665": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3667": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6287,
        6301
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 19,
      "value": "0x13"
    },
    "3669": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6287,
        6322
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3670": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        6205,
        6329
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3671": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3672": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xE62"
    },
    "3675": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3676": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4931
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3677": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3678": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "3681": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3682": {
      "branch": 194,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3683": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7E"
    },
    "3686": {
      "branch": 194,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3689": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3698": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3699": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3701": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "2"
    },
    "3702": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "3705": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3706": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x368A"
    },
    "3709": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3710": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3711": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0xCFF"
    },
    "3714": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3715": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3716": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3717": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2793"
    },
    "3720": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3721": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7561,
        8400
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3722": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3724": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "op": "SUB"
    },
    "3733": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3736": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3737": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3738": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3740": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3741": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3742": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB9"
    },
    "3745": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3746": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3757": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3761": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "3764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "3768": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3770": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7648,
        7649
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x0"
    },
    "3772": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7624,
        7645
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "3773": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7624,
        7649
      ],
      "op": "GT",
      "path": "15"
    },
    "3774": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF02"
    },
    "3777": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3778": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3780": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3789": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3792": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3794": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3795": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "ADD",
      "path": "15"
    },
    "3796": {
      "op": "MSTORE"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3832": {
      "op": "DUP3"
    },
    "3833": {
      "op": "ADD"
    },
    "3834": {
      "op": "MSTORE"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "3841": {
      "op": "JUMP"
    },
    "3842": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7616,
        7676
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3843": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "3845": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3846": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7687,
        7694
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3848": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7687,
        7694
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3849": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "3855": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3856": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "DIV",
      "path": "15"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3863": {
      "op": "SHL"
    },
    "3864": {
      "op": "SUB"
    },
    "3865": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7708,
        7721
      ],
      "op": "AND",
      "path": "15"
    },
    "3866": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7775
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF31"
    },
    "3869": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7770,
        7774
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "3872": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7765
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2B"
    },
    "3875": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7756
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "3876": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7761,
        7764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BC"
    },
    "3879": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7760
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "3882": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7735,
        7765
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3883": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7765
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3884": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3885": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2951"
    },
    "3888": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7735,
        7775
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3889": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7735,
        7775
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3890": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3892": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3893": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3895": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3896": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3897": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3898": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3899": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3900": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "GAS",
      "path": "15"
    },
    "3901": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "CALL",
      "path": "15"
    },
    "3902": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3903": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3904": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3905": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3906": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3907": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3908": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3910": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3911": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "EQ",
      "path": "15"
    },
    "3912": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF6D"
    },
    "3915": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3916": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3918": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3919": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3920": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3921": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3923": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "NOT",
      "path": "15"
    },
    "3924": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "3926": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3927": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "ADD",
      "path": "15"
    },
    "3928": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "AND",
      "path": "15"
    },
    "3929": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3930": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "ADD",
      "path": "15"
    },
    "3931": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3933": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3934": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3935": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3936": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3937": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3938": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3940": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3942": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3943": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "ADD",
      "path": "15"
    },
    "3944": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3945": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF72"
    },
    "3948": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3949": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3950": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3952": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3953": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3954": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3955": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7700,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3956": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7686,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3957": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7686,
        7780
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3958": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7686,
        7780
      ],
      "op": "POP",
      "path": "15"
    },
    "3959": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7798,
        7800
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 23
    },
    "3960": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFB8"
    },
    "3963": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3964": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3966": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3973": {
      "op": "SHL"
    },
    "3974": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3975": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3978": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3980": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3981": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "ADD",
      "path": "15"
    },
    "3982": {
      "op": "MSTORE"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3987": {
      "op": "DUP3"
    },
    "3988": {
      "op": "ADD"
    },
    "3989": {
      "op": "MSTORE"
    },
    "3990": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C4819985A5B1959"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4014": {
      "op": "DUP3"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4019": {
      "op": "ADD"
    },
    "4020": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "4023": {
      "op": "JUMP"
    },
    "4024": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7790,
        7823
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4025": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7855,
        7868
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "4027": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7855,
        7868
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4028": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7834,
        7841
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4030": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7834,
        7841
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "SUB"
    },
    "4039": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7855,
        7868
      ],
      "op": "AND",
      "path": "15"
    },
    "4040": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7882,
        7922
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFD8"
    },
    "4043": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7917,
        7921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "4046": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7882,
        7912
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2B"
    },
    "4049": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7882,
        7903
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4050": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7908,
        7911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x69"
    },
    "4052": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7882,
        7907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "4055": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7882,
        7912
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4056": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7882,
        7922
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4057": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4059": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4060": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4062": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4063": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4064": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4065": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4066": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4067": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "GAS",
      "path": "15"
    },
    "4068": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "CALL",
      "path": "15"
    },
    "4069": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4070": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4072": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4073": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4074": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4075": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4077": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4078": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "EQ",
      "path": "15"
    },
    "4079": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1014"
    },
    "4082": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4083": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4085": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4086": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4087": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4088": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4090": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "NOT",
      "path": "15"
    },
    "4091": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4093": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4094": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "ADD",
      "path": "15"
    },
    "4095": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "AND",
      "path": "15"
    },
    "4096": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4097": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "ADD",
      "path": "15"
    },
    "4098": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4100": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4101": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4102": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4103": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4104": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4105": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4107": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4109": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4110": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "ADD",
      "path": "15"
    },
    "4111": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4112": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1019"
    },
    "4115": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4116": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4117": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4119": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4120": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4121": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4122": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7847,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4123": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7833,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4124": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7833,
        7927
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4125": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7833,
        7927
      ],
      "op": "POP",
      "path": "15"
    },
    "4126": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7946,
        7948
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 24
    },
    "4127": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x105F"
    },
    "4130": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4131": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4133": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4142": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4147": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4148": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "ADD",
      "path": "15"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C8819985A5B1959"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4181": {
      "op": "DUP3"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "op": "MSTORE"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4186": {
      "op": "ADD"
    },
    "4187": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "4190": {
      "op": "JUMP"
    },
    "4191": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7938,
        7971
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4192": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8003,
        8016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "4194": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8003,
        8016
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4195": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7982,
        7989
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4197": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7982,
        7989
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8003,
        8016
      ],
      "op": "AND",
      "path": "15"
    },
    "4207": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8030,
        8070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x107F"
    },
    "4210": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8065,
        8069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "4213": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8030,
        8060
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2B"
    },
    "4216": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8030,
        8051
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4217": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8056,
        8059
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x69"
    },
    "4219": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8030,
        8055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "4222": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8030,
        8060
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4223": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8030,
        8070
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4224": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4226": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4227": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4229": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4230": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4231": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4232": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4233": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4234": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "GAS",
      "path": "15"
    },
    "4235": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "CALL",
      "path": "15"
    },
    "4236": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4237": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4238": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4239": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4240": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4241": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4242": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4244": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4245": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "EQ",
      "path": "15"
    },
    "4246": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10BB"
    },
    "4249": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4250": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4252": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4253": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4254": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4255": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4257": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "NOT",
      "path": "15"
    },
    "4258": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4260": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4261": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "ADD",
      "path": "15"
    },
    "4262": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "AND",
      "path": "15"
    },
    "4263": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4264": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "ADD",
      "path": "15"
    },
    "4265": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4267": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4268": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4269": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4270": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4271": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4272": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4274": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4276": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4277": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "ADD",
      "path": "15"
    },
    "4278": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4279": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10C0"
    },
    "4282": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4283": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4284": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4286": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4287": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4288": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4289": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7995,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4290": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7981,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4291": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7981,
        8075
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4292": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7981,
        8075
      ],
      "op": "POP",
      "path": "15"
    },
    "4293": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8094,
        8096
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 25
    },
    "4294": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1106"
    },
    "4297": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4298": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4300": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4307": {
      "op": "SHL"
    },
    "4308": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4309": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4312": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4314": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4315": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "ADD",
      "path": "15"
    },
    "4316": {
      "op": "MSTORE"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "ADD"
    },
    "4323": {
      "op": "MSTORE"
    },
    "4324": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080CC819985A5B1959"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "MSTORE"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4353": {
      "op": "ADD"
    },
    "4354": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "4357": {
      "op": "JUMP"
    },
    "4358": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8086,
        8119
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4359": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8151,
        8164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "4361": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8151,
        8164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4362": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8137
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4364": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8137
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4371": {
      "op": "SHL"
    },
    "4372": {
      "op": "SUB"
    },
    "4373": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8151,
        8164
      ],
      "op": "AND",
      "path": "15"
    },
    "4374": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8178,
        8217
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1126"
    },
    "4377": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8212,
        8216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "4380": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8178,
        8207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2B"
    },
    "4383": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8178,
        8199
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4384": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8204,
        8206
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2D"
    },
    "4386": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8178,
        8203
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "4389": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8178,
        8207
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4390": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8178,
        8217
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4391": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4393": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4394": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4396": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4397": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4398": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4399": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4400": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4401": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "GAS",
      "path": "15"
    },
    "4402": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "CALL",
      "path": "15"
    },
    "4403": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4404": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4405": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4406": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4407": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4408": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4409": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4411": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4412": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "EQ",
      "path": "15"
    },
    "4413": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1162"
    },
    "4416": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4417": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4419": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4420": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4421": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4422": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4424": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "NOT",
      "path": "15"
    },
    "4425": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4427": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4428": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "ADD",
      "path": "15"
    },
    "4429": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "AND",
      "path": "15"
    },
    "4430": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4431": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "ADD",
      "path": "15"
    },
    "4432": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4434": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4435": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4436": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4437": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4438": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4439": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4441": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4443": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4444": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "ADD",
      "path": "15"
    },
    "4445": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4446": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1167"
    },
    "4449": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4450": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4451": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4453": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4454": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4455": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4456": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8143,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4457": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4458": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8222
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4459": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8222
      ],
      "op": "POP",
      "path": "15"
    },
    "4460": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8242
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 26
    },
    "4461": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11AD"
    },
    "4464": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4465": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4467": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4476": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4479": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4481": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4482": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "ADD",
      "path": "15"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4488": {
      "op": "DUP3"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "MSTORE"
    },
    "4491": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D0819985A5B1959"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4520": {
      "op": "ADD"
    },
    "4521": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "4524": {
      "op": "JUMP"
    },
    "4525": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8232,
        8265
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4526": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8297,
        8310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "4528": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8297,
        8310
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4529": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4531": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4532": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8283
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4534": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8283
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8297,
        8310
      ],
      "op": "AND",
      "path": "15"
    },
    "4544": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8297,
        8310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4545": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8324,
        8345
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "4546": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8324,
        8345
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4547": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8283
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4548": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4549": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8283
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4550": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4551": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8324,
        8345
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4552": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8297,
        8310
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4553": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "GAS",
      "path": "15"
    },
    "4554": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "CALL",
      "path": "15"
    },
    "4555": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4556": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4557": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4558": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4559": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4560": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4561": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4563": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4564": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "EQ",
      "path": "15"
    },
    "4565": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11FA"
    },
    "4568": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4569": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4571": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4572": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4573": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4574": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4576": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "NOT",
      "path": "15"
    },
    "4577": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "4579": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4580": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "ADD",
      "path": "15"
    },
    "4581": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "AND",
      "path": "15"
    },
    "4582": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4583": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "ADD",
      "path": "15"
    },
    "4584": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4586": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4587": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4588": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4589": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4590": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4591": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4593": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4595": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4596": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "ADD",
      "path": "15"
    },
    "4597": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4598": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11FF"
    },
    "4601": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4602": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4603": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4605": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4606": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4607": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4608": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4609": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8350
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4611": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8350
      ],
      "op": "POP",
      "path": "15"
    },
    "4612": {
      "branch": 161,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8368,
        8370
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 27
    },
    "4613": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1245"
    },
    "4616": {
      "branch": 161,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4617": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4619": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4628": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4631": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4633": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4634": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "ADD",
      "path": "15"
    },
    "4635": {
      "op": "MSTORE"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4640": {
      "op": "DUP3"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "MSTORE"
    },
    "4643": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D4819985A5B1959"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4664": {
      "op": "SHL"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4667": {
      "op": "DUP3"
    },
    "4668": {
      "op": "ADD"
    },
    "4669": {
      "op": "MSTORE"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "4676": {
      "op": "JUMP"
    },
    "4677": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8360,
        8393
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4678": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7606,
        8400
      ],
      "op": "POP",
      "path": "15"
    },
    "4679": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7606,
        8400
      ],
      "op": "POP",
      "path": "15"
    },
    "4680": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7606,
        8400
      ],
      "op": "POP",
      "path": "15"
    },
    "4681": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7606,
        8400
      ],
      "op": "POP",
      "path": "15"
    },
    "4682": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7606,
        8400
      ],
      "op": "POP",
      "path": "15"
    },
    "4683": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        7561,
        8400
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4684": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4685": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4687": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "op": "SUB"
    },
    "4696": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4699": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4701": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4702": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4703": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4704": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4705": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127C"
    },
    "4708": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4720": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "4727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "4731": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4733": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4331,
        4341
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 28,
      "value": "0x1284"
    },
    "4736": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4331,
        4339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x295D"
    },
    "4739": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4331,
        4341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4740": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4331,
        4341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4741": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4285,
        4348
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4742": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4743": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 29,
      "value": "0xCFF"
    },
    "4746": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4747": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4748": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4749": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4751": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4752": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4753": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4755": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "2"
    },
    "4756": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4758": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4759": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4762": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4764": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "2"
    },
    "4765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FBE"
    },
    "4768": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4769": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4770": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0x12AA"
    },
    "4773": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4774": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        664,
        676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE5C"
    },
    "4777": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4778": {
      "branch": 204,
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4779": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x130F"
    },
    "4782": {
      "branch": 204,
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4783": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4785": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4794": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4797": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4799": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4800": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "ADD",
      "path": "5"
    },
    "4801": {
      "op": "MSTORE"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4806": {
      "op": "DUP3"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "op": "MSTORE"
    },
    "4809": {
      "op": "PUSH32",
      "value": "0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4844": {
      "op": "DUP3"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH16",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD9959"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4866": {
      "op": "SHL"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4869": {
      "op": "DUP3"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "4878": {
      "op": "JUMP"
    },
    "4879": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4880": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0x1318"
    },
    "4883": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        755,
        762
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4884": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29F0"
    },
    "4887": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        749,
        763
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4888": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4889": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "POP",
      "path": "5"
    },
    "4890": {
      "fn": "ERC721Burnable.burn",
      "jump": "o",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4891": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5249,
        5407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4892": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4906": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4907": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4908": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4909": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4910": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4911": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4912": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134B"
    },
    "4915": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4927": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4928": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4930": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4931": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "4934": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4935": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "4938": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4939": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4940": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0xC"
    },
    "4942": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4943": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "4947": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4948": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "DIV",
      "path": "15"
    },
    "4949": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4951": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5332,
        5346
      ],
      "op": "AND",
      "path": "15"
    },
    "4952": {
      "branch": 162,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5331,
        5346
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4953": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1399"
    },
    "4956": {
      "branch": 162,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4957": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4959": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4966": {
      "op": "SHL"
    },
    "4967": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4968": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4971": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4973": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4974": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "ADD",
      "path": "15"
    },
    "4975": {
      "op": "MSTORE"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "ADD"
    },
    "4982": {
      "op": "MSTORE"
    },
    "4983": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5007": {
      "op": "DUP3"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "MSTORE"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "5016": {
      "op": "JUMP"
    },
    "5017": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5323,
        5369
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5018": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 33
    },
    "5019": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5020": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE02"
    },
    "5023": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5024": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "5026": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5386
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5027": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5029": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5030": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "ADD",
      "path": "15"
    },
    "5031": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5032": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5379,
        5400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C7"
    },
    "5035": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5379,
        5400
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5036": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5037": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5039": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5046": {
      "op": "SHL"
    },
    "5047": {
      "op": "SUB"
    },
    "5048": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5051": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5052": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5053": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5054": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5055": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5056": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5057": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DC"
    },
    "5060": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5061": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "5079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "5083": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5085": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6672
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 34,
      "value": "0xC"
    },
    "5087": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5088": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5089": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5091": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5092": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5093": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "AND",
      "path": "15"
    },
    "5094": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5097": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "MUL",
      "path": "15"
    },
    "5098": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5101": {
      "op": "NOT"
    },
    "5102": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5103": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5104": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "AND",
      "path": "15"
    },
    "5105": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5106": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5107": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5108": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "OR",
      "path": "15"
    },
    "5109": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5110": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6660,
        6691
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5111": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        6584,
        6698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5112": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5113": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5115": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5116": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5117": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5118": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5120": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5122": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5123": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5125": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5126": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5127": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "op": "SUB"
    },
    "5136": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "2"
    },
    "5137": {
      "branch": 195,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 35
    },
    "5138": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "5141": {
      "branch": 195,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5142": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5144": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5151": {
      "op": "SHL"
    },
    "5152": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5153": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5156": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5158": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5159": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "2"
    },
    "5160": {
      "op": "MSTORE"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5165": {
      "op": "DUP3"
    },
    "5166": {
      "op": "ADD"
    },
    "5167": {
      "op": "MSTORE"
    },
    "5168": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5203": {
      "op": "DUP3"
    },
    "5204": {
      "op": "ADD"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5218": {
      "op": "SHL"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5221": {
      "op": "DUP3"
    },
    "5222": {
      "op": "ADD"
    },
    "5223": {
      "op": "MSTORE"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5226": {
      "op": "ADD"
    },
    "5227": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "5230": {
      "op": "JUMP"
    },
    "5231": {
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5232": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "5234": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5235": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5236": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x147C"
    },
    "5239": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5240": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "5243": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        814,
        840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5244": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5245": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5248": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5249": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5253": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DIV",
      "path": "15"
    },
    "5254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MUL",
      "path": "15"
    },
    "5255": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5258": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5261": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5262": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5263": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5264": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5266": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5267": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5268": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5273": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5274": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5277": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5278": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5279": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5280": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A8"
    },
    "5283": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5284": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "5287": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        814,
        840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F5"
    },
    "5294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "LT",
      "path": "15"
    },
    "5299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14CA"
    },
    "5302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5306": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5307": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5308": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5309": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DIV",
      "path": "15"
    },
    "5310": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MUL",
      "path": "15"
    },
    "5311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F5"
    },
    "5321": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5322": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5323": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5324": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5325": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5326": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5330": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5336": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5337": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5338": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5339": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5340": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5341": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5342": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5344": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5345": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5346": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5348": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5349": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5350": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "GT",
      "path": "15"
    },
    "5352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D8"
    },
    "5355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5356": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5357": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SUB",
      "path": "15"
    },
    "5359": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "5361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "AND",
      "path": "15"
    },
    "5362": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5363": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "ADD",
      "path": "15"
    },
    "5364": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5365": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "5367": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "5368": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "5369": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "5370": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "POP",
      "path": "15"
    },
    "5371": {
      "fn": "ERC721.ownerOf",
      "offset": [
        814,
        840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5372": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        814,
        840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5373": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8435,
        8599
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5374": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8483,
        8490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5376": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8525,
        8526
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 36
    },
    "5377": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8509,
        8522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1508"
    },
    "5380": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8509,
        8520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "5383": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8509,
        8522
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5384": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8509,
        8522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5385": {
      "branch": 163,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8509,
        8526
      ],
      "op": "GT",
      "path": "15"
    },
    "5386": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x154E"
    },
    "5389": {
      "branch": 163,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5390": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5392": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5399": {
      "op": "SHL"
    },
    "5400": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5401": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5404": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5406": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5407": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "ADD",
      "path": "15"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5413": {
      "op": "DUP3"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "MSTORE"
    },
    "5416": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5441": {
      "op": "SHL"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5444": {
      "op": "DUP3"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5449": {
      "op": "ADD"
    },
    "5450": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "5453": {
      "op": "JUMP"
    },
    "5454": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8501,
        8553
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5455": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8570,
        8592
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0xE1D"
    },
    "5458": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8578,
        8591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x61F"
    },
    "5461": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8578,
        8589
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "5464": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8578,
        8591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5465": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5466": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5474": {
      "op": "SHL"
    },
    "5475": {
      "op": "SUB"
    },
    "5476": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 38
    },
    "5477": {
      "branch": 196,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "2"
    },
    "5478": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C4"
    },
    "5481": {
      "branch": 196,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5484": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5499": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "2"
    },
    "5500": {
      "op": "MSTORE"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5505": {
      "op": "DUP3"
    },
    "5506": {
      "op": "ADD"
    },
    "5507": {
      "op": "MSTORE"
    },
    "5508": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "ADD"
    },
    "5545": {
      "op": "MSTORE"
    },
    "5546": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5562": {
      "op": "DUP3"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "MSTORE"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5567": {
      "op": "ADD"
    },
    "5568": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "5571": {
      "op": "JUMP"
    },
    "5572": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5573": {
      "op": "POP"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5580": {
      "op": "SHL"
    },
    "5581": {
      "op": "SUB"
    },
    "5582": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "2",
      "statement": 39
    },
    "5583": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5585": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5586": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5587": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5588": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5590": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5592": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5593": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5595": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5596": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5597": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5598": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5599": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5601": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5603": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5610": {
      "op": "SHL"
    },
    "5611": {
      "op": "SUB"
    },
    "5612": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5615": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5616": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5617": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5618": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5619": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5620": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5621": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1610"
    },
    "5624": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5634": {
      "op": "SHL"
    },
    "5635": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "5643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "5647": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0x1284"
    },
    "5652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A97"
    },
    "5657": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5658": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5659": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5661": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5668": {
      "op": "SHL"
    },
    "5669": {
      "op": "SUB"
    },
    "5670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5676": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5677": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5678": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5679": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164A"
    },
    "5682": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5692": {
      "op": "SHL"
    },
    "5693": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5698": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "5701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "5705": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5707": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6546,
        6555
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x16"
    },
    "5709": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6546,
        6571
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5710": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        6468,
        6578
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5711": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5712": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5721": {
      "op": "SHL"
    },
    "5722": {
      "op": "SUB"
    },
    "5723": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5726": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5727": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5728": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5729": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5730": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5731": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5732": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167F"
    },
    "5735": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5738": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5745": {
      "op": "SHL"
    },
    "5746": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5747": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5751": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "5754": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5755": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "5758": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5759": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5760": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5212,
        5222
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x8"
    },
    "5762": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5212,
        5236
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5763": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5141,
        5243
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5764": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5765": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5767": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5774": {
      "op": "SHL"
    },
    "5775": {
      "op": "SUB"
    },
    "5776": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5779": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5781": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5782": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5783": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5784": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5785": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B4"
    },
    "5788": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5789": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5798": {
      "op": "SHL"
    },
    "5799": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5800": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "5807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "5811": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5813": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7395,
        7396
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 43,
      "value": "0x0"
    },
    "5815": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7370,
        7384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "5817": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5818": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5819": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16C3"
    },
    "5822": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5823": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "5826": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7364,
        7392
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5827": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5828": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5829": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7392
      ],
      "op": "POP",
      "path": "15"
    },
    "5830": {
      "branch": 164,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7364,
        7396
      ],
      "op": "GT",
      "path": "15"
    },
    "5831": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1712"
    },
    "5834": {
      "branch": 164,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5835": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5837": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5844": {
      "op": "SHL"
    },
    "5845": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5846": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5849": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5851": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5852": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "ADD",
      "path": "15"
    },
    "5853": {
      "op": "DUP2"
    },
    "5854": {
      "op": "SWAP1"
    },
    "5855": {
      "op": "MSTORE"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5858": {
      "op": "DUP3"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5896": {
      "op": "DUP3"
    },
    "5897": {
      "op": "ADD"
    },
    "5898": {
      "op": "MSTORE"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5901": {
      "op": "ADD"
    },
    "5902": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "5905": {
      "op": "JUMP"
    },
    "5906": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7356,
        7433
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5907": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0xC"
    },
    "5909": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5910": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "5915": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5916": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "DIV",
      "path": "15"
    },
    "5917": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5919": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7452,
        7472
      ],
      "op": "AND",
      "path": "15"
    },
    "5920": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7451,
        7472
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5921": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1777"
    },
    "5924": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5925": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5927": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5934": {
      "op": "SHL"
    },
    "5935": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5936": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5939": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5941": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5942": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "ADD",
      "path": "15"
    },
    "5943": {
      "op": "MSTORE"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5948": {
      "op": "DUP3"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "MSTORE"
    },
    "5951": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5986": {
      "op": "DUP3"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5997": {
      "op": "DUP3"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "MSTORE"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6002": {
      "op": "ADD"
    },
    "6003": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6006": {
      "op": "JUMP"
    },
    "6007": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7443,
        7511
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6008": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7541
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 45,
      "value": "0xC"
    },
    "6010": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6011": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6012": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "6017": {
      "op": "NOT"
    },
    "6018": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "AND",
      "path": "15"
    },
    "6019": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "6024": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "OR",
      "path": "15"
    },
    "6025": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6026": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7521,
        7548
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6027": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        7297,
        7555
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6028": {
      "fn": "CryptidToken.pause",
      "offset": [
        4220,
        4279
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6029": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6031": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6038": {
      "op": "SHL"
    },
    "6039": {
      "op": "SUB"
    },
    "6040": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6043": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6044": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6045": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6046": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6047": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6048": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6049": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17BC"
    },
    "6052": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6062": {
      "op": "SHL"
    },
    "6063": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6068": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "6071": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "6075": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6077": {
      "fn": "CryptidToken.pause",
      "offset": [
        4264,
        4272
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 46,
      "value": "0x1284"
    },
    "6080": {
      "fn": "CryptidToken.pause",
      "offset": [
        4264,
        4270
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AF1"
    },
    "6083": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4264,
        4272
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6084": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6085": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6087": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x1"
    },
    "6089": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6090": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6091": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD1"
    },
    "6094": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6095": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35ED"
    },
    "6098": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6099": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6100": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 48,
      "value": "0xE02"
    },
    "6103": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6104": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6105": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6106": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B49"
    },
    "6109": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6110": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4462,
        5135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6111": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6113": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "SUB"
    },
    "6122": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6125": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6126": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6127": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6128": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6129": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6130": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6131": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180E"
    },
    "6134": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6135": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6137": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6144": {
      "op": "SHL"
    },
    "6145": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6146": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6147": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6149": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6150": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "6153": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "6157": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6159": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 49,
      "value": "0xC"
    },
    "6161": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6162": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "6167": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6168": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "DIV",
      "path": "15"
    },
    "6169": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6171": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4573
      ],
      "op": "AND",
      "path": "15"
    },
    "6172": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4581
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6173": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4581
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6174": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4577,
        4581
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6176": {
      "branch": 166,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4553,
        4581
      ],
      "op": "EQ",
      "path": "15"
    },
    "6177": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x183C"
    },
    "6180": {
      "branch": 166,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6181": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6183": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6190": {
      "op": "SHL"
    },
    "6191": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6192": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6193": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6195": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "ADD",
      "path": "15"
    },
    "6196": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6199": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6200": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36DB"
    },
    "6203": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4545,
        4642
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6204": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4545,
        4642
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6205": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0xC"
    },
    "6207": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6208": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4668,
        4669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6210": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6212": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6213": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6214": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4665
      ],
      "op": "AND",
      "path": "15"
    },
    "6215": {
      "branch": 167,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4660,
        4669
      ],
      "op": "LT",
      "path": "15"
    },
    "6216": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1889"
    },
    "6219": {
      "branch": 167,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6220": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6222": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6229": {
      "op": "SHL"
    },
    "6230": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6231": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6234": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6236": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6237": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "ADD",
      "path": "15"
    },
    "6238": {
      "op": "MSTORE"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6243": {
      "op": "DUP3"
    },
    "6244": {
      "op": "ADD"
    },
    "6245": {
      "op": "MSTORE"
    },
    "6246": {
      "op": "PUSH19",
      "value": "0x2830B9BA1030B4B9323937B810383430B9B297"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "6268": {
      "op": "SHL"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6271": {
      "op": "DUP3"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6280": {
      "op": "JUMP"
    },
    "6281": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4652,
        4693
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6282": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 51,
      "value": "0xC"
    },
    "6284": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6285": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6287": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6290": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6291": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6292": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "DIV",
      "path": "15"
    },
    "6293": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6294": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4726,
        4738
      ],
      "op": "AND",
      "path": "15"
    },
    "6295": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4711,
        4738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6296": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4711,
        4738
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6297": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4711,
        4738
      ],
      "op": "AND",
      "path": "15"
    },
    "6298": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4711,
        4738
      ],
      "op": "GT",
      "path": "15"
    },
    "6299": {
      "branch": 168,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4711,
        4738
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6300": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18FA"
    },
    "6303": {
      "branch": 168,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6304": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6306": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6313": {
      "op": "SHL"
    },
    "6314": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6315": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6318": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6320": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6321": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "ADD",
      "path": "15"
    },
    "6322": {
      "op": "MSTORE"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6327": {
      "op": "DUP3"
    },
    "6328": {
      "op": "ADD"
    },
    "6329": {
      "op": "MSTORE"
    },
    "6330": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6365": {
      "op": "DUP3"
    },
    "6366": {
      "op": "ADD"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "op": "PUSH10",
      "value": "0x3930B739B0B1BA34B7B7"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "6381": {
      "op": "SHL"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6384": {
      "op": "DUP3"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "op": "MSTORE"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6389": {
      "op": "ADD"
    },
    "6390": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6393": {
      "op": "JUMP"
    },
    "6394": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4703,
        4785
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6395": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4817,
        4818
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 52,
      "value": "0x0"
    },
    "6397": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4803,
        4814
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6398": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4803,
        4818
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6400": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4803,
        4818
      ],
      "op": "AND",
      "path": "15"
    },
    "6401": {
      "branch": 169,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4803,
        4818
      ],
      "op": "GT",
      "path": "15"
    },
    "6402": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x195B"
    },
    "6405": {
      "branch": 169,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6406": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6408": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6415": {
      "op": "SHL"
    },
    "6416": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6417": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6420": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6422": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6423": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "ADD",
      "path": "15"
    },
    "6424": {
      "op": "MSTORE"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6429": {
      "op": "DUP3"
    },
    "6430": {
      "op": "ADD"
    },
    "6431": {
      "op": "MSTORE"
    },
    "6432": {
      "op": "PUSH32",
      "value": "0x41697264726F7020616D6F756E74206D75737420626520677265617465722074"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6467": {
      "op": "DUP3"
    },
    "6468": {
      "op": "ADD"
    },
    "6469": {
      "op": "MSTORE"
    },
    "6470": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "6478": {
      "op": "SHL"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6481": {
      "op": "DUP3"
    },
    "6482": {
      "op": "ADD"
    },
    "6483": {
      "op": "MSTORE"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6486": {
      "op": "ADD"
    },
    "6487": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6490": {
      "op": "JUMP"
    },
    "6491": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4795,
        4860
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6492": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4908,
        4923
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x11"
    },
    "6494": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4908,
        4923
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6495": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4893,
        4904
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6496": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6498": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "AND",
      "path": "15"
    },
    "6499": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x196A"
    },
    "6502": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "6505": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4878,
        4891
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6506": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4891
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6507": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1974"
    },
    "6510": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6511": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6512": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3738"
    },
    "6515": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4878,
        4904
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6516": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4904
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6517": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4923
      ],
      "op": "GT",
      "path": "15"
    },
    "6518": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4878,
        4923
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6519": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D4"
    },
    "6522": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6523": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6525": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6532": {
      "op": "SHL"
    },
    "6533": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6534": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6537": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6539": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6540": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "ADD",
      "path": "15"
    },
    "6541": {
      "op": "MSTORE"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6546": {
      "op": "DUP3"
    },
    "6547": {
      "op": "ADD"
    },
    "6548": {
      "op": "MSTORE"
    },
    "6549": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6584": {
      "op": "DUP3"
    },
    "6585": {
      "op": "ADD"
    },
    "6586": {
      "op": "MSTORE"
    },
    "6587": {
      "op": "PUSH9",
      "value": "0x3A1039BAB838363C97"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6602": {
      "op": "DUP3"
    },
    "6603": {
      "op": "ADD"
    },
    "6604": {
      "op": "MSTORE"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6607": {
      "op": "ADD"
    },
    "6608": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6611": {
      "op": "JUMP"
    },
    "6612": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4870,
        4969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6613": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4996,
        4997
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6615": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4979,
        5129
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6616": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5004,
        5015
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6617": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4999,
        5015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6619": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4999,
        5015
      ],
      "op": "AND",
      "path": "15"
    },
    "6620": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4999,
        5000
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6621": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4999,
        5015
      ],
      "op": "GT",
      "path": "15"
    },
    "6622": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4979,
        5129
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCFF"
    },
    "6625": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4979,
        5129
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6626": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5036,
        5077
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 54,
      "value": "0x19F3"
    },
    "6629": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5046,
        5049
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6630": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5051,
        5076
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19EE"
    },
    "6633": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5051,
        5066
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6635": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6636": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6637": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6638": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5051,
        5076
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6639": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5036,
        5045
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C18"
    },
    "6642": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        5036,
        5077
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6643": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5036,
        5077
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6644": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5091,
        5118
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 55,
      "value": "0x1A01"
    },
    "6647": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5091,
        5106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6649": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 56
    },
    "6650": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6651": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6653": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "6654": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6655": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6656": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6657": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5091,
        5118
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6658": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 57
    },
    "6659": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0B"
    },
    "6662": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6663": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3750"
    },
    "6666": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        5017,
        5020
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6667": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6668": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6669": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "POP",
      "path": "15"
    },
    "6670": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5017,
        5020
      ],
      "op": "POP",
      "path": "15"
    },
    "6671": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4979,
        5129
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D7"
    },
    "6674": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4979,
        5129
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6675": {
      "fn": "CryptidToken.mint",
      "offset": [
        2596,
        4192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6676": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6678": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6679": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6681": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "6682": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6683": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A36"
    },
    "6686": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6687": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6689": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6698": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6699": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6701": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "6702": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC9"
    },
    "6705": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6706": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x376B"
    },
    "6709": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6710": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6711": {
      "fn": "CryptidToken.mint",
      "offset": [
        2700,
        2705
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 58,
      "value": "0xC"
    },
    "6713": {
      "fn": "CryptidToken.mint",
      "offset": [
        2700,
        2705
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6714": {
      "fn": "CryptidToken.mint",
      "offset": [
        2700,
        2705
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6716": {
      "fn": "CryptidToken.mint",
      "offset": [
        2700,
        2705
      ],
      "op": "AND",
      "path": "15"
    },
    "6717": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9C"
    },
    "6720": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6721": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6723": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6730": {
      "op": "SHL"
    },
    "6731": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6732": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6735": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6737": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6738": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "ADD",
      "path": "15"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6744": {
      "op": "DUP3"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "op": "MSTORE"
    },
    "6747": {
      "op": "PUSH32",
      "value": "0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6782": {
      "op": "DUP3"
    },
    "6783": {
      "op": "ADD"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "op": "PUSH11",
      "value": "0x37B71039BA30B3B2901817"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6799": {
      "op": "SHL"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6802": {
      "op": "DUP3"
    },
    "6803": {
      "op": "ADD"
    },
    "6804": {
      "op": "MSTORE"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6807": {
      "op": "ADD"
    },
    "6808": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6811": {
      "op": "JUMP"
    },
    "6812": {
      "fn": "CryptidToken.mint",
      "offset": [
        2692,
        2757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6813": {
      "fn": "CryptidToken.mint",
      "offset": [
        2789,
        2790
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 59,
      "value": "0x0"
    },
    "6815": {
      "fn": "CryptidToken.mint",
      "offset": [
        2775,
        2786
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6816": {
      "fn": "CryptidToken.mint",
      "offset": [
        2775,
        2790
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6818": {
      "fn": "CryptidToken.mint",
      "offset": [
        2775,
        2790
      ],
      "op": "AND",
      "path": "15"
    },
    "6819": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        2775,
        2790
      ],
      "op": "GT",
      "path": "15"
    },
    "6820": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AFB"
    },
    "6823": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6824": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6826": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6833": {
      "op": "SHL"
    },
    "6834": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6835": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6838": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6840": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6841": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "ADD",
      "path": "15"
    },
    "6842": {
      "op": "MSTORE"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6847": {
      "op": "DUP3"
    },
    "6848": {
      "op": "ADD"
    },
    "6849": {
      "op": "MSTORE"
    },
    "6850": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6885": {
      "op": "DUP3"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "MSTORE"
    },
    "6888": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6894": {
      "op": "SHL"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6897": {
      "op": "DUP3"
    },
    "6898": {
      "op": "ADD"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6902": {
      "op": "ADD"
    },
    "6903": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "6906": {
      "op": "JUMP"
    },
    "6907": {
      "fn": "CryptidToken.mint",
      "offset": [
        2767,
        2830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6908": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 60,
      "value": "0xC"
    },
    "6910": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6911": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6913": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6916": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6917": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6918": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "DIV",
      "path": "15"
    },
    "6919": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6920": {
      "fn": "CryptidToken.mint",
      "offset": [
        2863,
        2875
      ],
      "op": "AND",
      "path": "15"
    },
    "6921": {
      "fn": "CryptidToken.mint",
      "offset": [
        2848,
        2875
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6922": {
      "fn": "CryptidToken.mint",
      "offset": [
        2848,
        2875
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6923": {
      "fn": "CryptidToken.mint",
      "offset": [
        2848,
        2875
      ],
      "op": "AND",
      "path": "15"
    },
    "6924": {
      "fn": "CryptidToken.mint",
      "offset": [
        2848,
        2875
      ],
      "op": "GT",
      "path": "15"
    },
    "6925": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        2848,
        2875
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6926": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6D"
    },
    "6929": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6930": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6932": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6939": {
      "op": "SHL"
    },
    "6940": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6941": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6944": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6946": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6947": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "ADD",
      "path": "15"
    },
    "6948": {
      "op": "MSTORE"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6953": {
      "op": "DUP3"
    },
    "6954": {
      "op": "ADD"
    },
    "6955": {
      "op": "MSTORE"
    },
    "6956": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074"
    },
    "6989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6991": {
      "op": "DUP3"
    },
    "6992": {
      "op": "ADD"
    },
    "6993": {
      "op": "MSTORE"
    },
    "6994": {
      "op": "PUSH11",
      "value": "0x3930B739B0B1BA34B7B717"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7008": {
      "op": "SHL"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7011": {
      "op": "DUP3"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "op": "MSTORE"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7016": {
      "op": "ADD"
    },
    "7017": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7020": {
      "op": "JUMP"
    },
    "7021": {
      "fn": "CryptidToken.mint",
      "offset": [
        2840,
        2923
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7022": {
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "7024": {
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2942
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7025": {
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7027": {
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2942
      ],
      "op": "AND",
      "path": "15"
    },
    "7028": {
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7030": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        2937,
        2947
      ],
      "op": "EQ",
      "path": "15"
    },
    "7031": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7032": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DAB"
    },
    "7035": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7036": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3015
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 61,
      "value": "0x8"
    },
    "7038": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3015
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7039": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7041": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7042": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7055": {
      "op": "NOT"
    },
    "7056": {
      "fn": "CryptidToken.mint",
      "offset": [
        3044,
        3054
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "op": "AND"
    },
    "7061": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7063": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7064": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "ADD",
      "path": "15"
    },
    "7065": {
      "op": "MSTORE"
    },
    "7066": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BC7"
    },
    "7069": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7070": {
      "fn": "CryptidToken.mint",
      "offset": [
        3005,
        3015
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7073": {
      "op": "ADD"
    },
    "7074": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7076": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7077": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7079": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7080": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7081": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "SUB",
      "path": "15"
    },
    "7082": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "SUB",
      "path": "15"
    },
    "7083": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7084": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7085": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7086": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7088": {
      "fn": "CryptidToken.mint",
      "offset": [
        3027,
        3055
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7089": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7090": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7091": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7092": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7094": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "ADD",
      "path": "15"
    },
    "7095": {
      "fn": "CryptidToken.mint",
      "offset": [
        3017,
        3056
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7096": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        2997
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7097": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C32"
    },
    "7100": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3004
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7101": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7102": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7103": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7104": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "7109": {
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "AND",
      "path": "15"
    },
    "7110": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2992,
        3057
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7111": {
      "branch": 174,
      "fn": "CryptidToken.mint",
      "offset": [
        2992,
        3057
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7112": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C13"
    },
    "7115": {
      "branch": 174,
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7116": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7118": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7125": {
      "op": "SHL"
    },
    "7126": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7127": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7130": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7132": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7133": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "ADD",
      "path": "15"
    },
    "7134": {
      "op": "MSTORE"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7139": {
      "op": "DUP3"
    },
    "7140": {
      "op": "ADD"
    },
    "7141": {
      "op": "MSTORE"
    },
    "7142": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F742077686974656C69737465642E0000000000000000"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7177": {
      "op": "DUP3"
    },
    "7178": {
      "op": "ADD"
    },
    "7179": {
      "op": "MSTORE"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7186": {
      "op": "JUMP"
    },
    "7187": {
      "fn": "CryptidToken.mint",
      "offset": [
        2984,
        3086
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7188": {
      "fn": "CryptidToken.mint",
      "offset": [
        3116,
        3126
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 62
    },
    "7189": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7191": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7192": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7193": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7194": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3115
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "7196": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7198": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7199": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7201": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7202": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7203": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7204": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7206": {
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3127
      ],
      "op": "AND",
      "path": "15"
    },
    "7207": {
      "branch": 175,
      "fn": "CryptidToken.mint",
      "offset": [
        3108,
        3136
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7208": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C73"
    },
    "7211": {
      "branch": 175,
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7212": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7214": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7223": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7226": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7228": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7229": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "ADD",
      "path": "15"
    },
    "7230": {
      "op": "MSTORE"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7235": {
      "op": "DUP3"
    },
    "7236": {
      "op": "ADD"
    },
    "7237": {
      "op": "MSTORE"
    },
    "7238": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7273": {
      "op": "DUP3"
    },
    "7274": {
      "op": "ADD"
    },
    "7275": {
      "op": "MSTORE"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7278": {
      "op": "ADD"
    },
    "7279": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7282": {
      "op": "JUMP"
    },
    "7283": {
      "fn": "CryptidToken.mint",
      "offset": [
        3100,
        3172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7284": {
      "fn": "CryptidToken.mint",
      "offset": [
        3209,
        3210
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x2"
    },
    "7286": {
      "fn": "CryptidToken.mint",
      "offset": [
        3195,
        3206
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7287": {
      "fn": "CryptidToken.mint",
      "offset": [
        3195,
        3210
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7289": {
      "fn": "CryptidToken.mint",
      "offset": [
        3195,
        3210
      ],
      "op": "AND",
      "path": "15"
    },
    "7290": {
      "branch": 176,
      "fn": "CryptidToken.mint",
      "offset": [
        3195,
        3210
      ],
      "op": "LT",
      "path": "15"
    },
    "7291": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CBF"
    },
    "7294": {
      "branch": 176,
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7295": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7297": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7304": {
      "op": "SHL"
    },
    "7305": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7306": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7309": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7311": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7312": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "ADD",
      "path": "15"
    },
    "7313": {
      "op": "MSTORE"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7318": {
      "op": "DUP3"
    },
    "7319": {
      "op": "ADD"
    },
    "7320": {
      "op": "MSTORE"
    },
    "7321": {
      "op": "PUSH22",
      "value": "0x26B4B73A1030B6B7BAB73A1036BAB9BA103132901897"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "7346": {
      "op": "SHL"
    },
    "7347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7349": {
      "op": "DUP3"
    },
    "7350": {
      "op": "ADD"
    },
    "7351": {
      "op": "MSTORE"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7354": {
      "op": "ADD"
    },
    "7355": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7358": {
      "op": "JUMP"
    },
    "7359": {
      "fn": "CryptidToken.mint",
      "offset": [
        3187,
        3237
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7360": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3281
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 64,
      "value": "0x16"
    },
    "7362": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3281
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7363": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CCF"
    },
    "7366": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7367": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7369": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7370": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "AND",
      "path": "15"
    },
    "7371": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3285
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "7374": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3272,
        3298
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7375": {
      "fn": "CryptidToken.mint",
      "offset": [
        3272,
        3298
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7376": {
      "fn": "CryptidToken.mint",
      "offset": [
        3259,
        3268
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "7377": {
      "branch": 177,
      "fn": "CryptidToken.mint",
      "offset": [
        3259,
        3298
      ],
      "op": "EQ",
      "path": "15"
    },
    "7378": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D17"
    },
    "7381": {
      "branch": 177,
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7382": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7384": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7393": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7396": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7398": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7399": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "ADD",
      "path": "15"
    },
    "7400": {
      "op": "MSTORE"
    },
    "7401": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7405": {
      "op": "DUP3"
    },
    "7406": {
      "op": "ADD"
    },
    "7407": {
      "op": "MSTORE"
    },
    "7408": {
      "op": "PUSH23",
      "value": "0x24B73B30B634B210333AB7323990383937BB34B232B217"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7437": {
      "op": "DUP3"
    },
    "7438": {
      "op": "ADD"
    },
    "7439": {
      "op": "MSTORE"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7446": {
      "op": "JUMP"
    },
    "7447": {
      "fn": "CryptidToken.mint",
      "offset": [
        3251,
        3326
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7448": {
      "fn": "CryptidToken.mint",
      "offset": [
        3379,
        3394
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 65,
      "value": "0x11"
    },
    "7450": {
      "fn": "CryptidToken.mint",
      "offset": [
        3379,
        3394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7451": {
      "fn": "CryptidToken.mint",
      "offset": [
        3364,
        3375
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7452": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7454": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "AND",
      "path": "15"
    },
    "7455": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3361
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D26"
    },
    "7458": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3359
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "7461": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3348,
        3361
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7462": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3361
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7463": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D30"
    },
    "7466": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7467": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7468": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3738"
    },
    "7471": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3348,
        3375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7472": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7473": {
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3394
      ],
      "op": "GT",
      "path": "15"
    },
    "7474": {
      "branch": 178,
      "fn": "CryptidToken.mint",
      "offset": [
        3348,
        3394
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7475": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D8C"
    },
    "7478": {
      "branch": 178,
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7479": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7481": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7488": {
      "op": "SHL"
    },
    "7489": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7490": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7493": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7495": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7496": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "ADD",
      "path": "15"
    },
    "7497": {
      "op": "MSTORE"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7502": {
      "op": "DUP3"
    },
    "7503": {
      "op": "ADD"
    },
    "7504": {
      "op": "MSTORE"
    },
    "7505": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20657863656564732077686974656C697374207375"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7540": {
      "op": "DUP3"
    },
    "7541": {
      "op": "ADD"
    },
    "7542": {
      "op": "MSTORE"
    },
    "7543": {
      "op": "PUSH5",
      "value": "0x3838363C97"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "7551": {
      "op": "SHL"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7554": {
      "op": "DUP3"
    },
    "7555": {
      "op": "ADD"
    },
    "7556": {
      "op": "MSTORE"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7559": {
      "op": "ADD"
    },
    "7560": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7563": {
      "op": "JUMP"
    },
    "7564": {
      "fn": "CryptidToken.mint",
      "offset": [
        3340,
        3436
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7565": {
      "fn": "CryptidToken.mint",
      "offset": [
        3458,
        3468
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 66
    },
    "7566": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7568": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7569": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7570": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7571": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3457
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "7573": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7575": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7576": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7578": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7579": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3469
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7580": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7581": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7584": {
      "op": "NOT"
    },
    "7585": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "AND",
      "path": "15"
    },
    "7586": {
      "fn": "CryptidToken.mint",
      "offset": [
        3472,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7588": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "OR",
      "path": "15"
    },
    "7589": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7590": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3476
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7591": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F84"
    },
    "7594": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7595": {
      "fn": "CryptidToken.mint",
      "offset": [
        2933,
        4020
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7596": {
      "fn": "CryptidToken.mint",
      "offset": [
        3495,
        3500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "7598": {
      "fn": "CryptidToken.mint",
      "offset": [
        3495,
        3500
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7599": {
      "fn": "CryptidToken.mint",
      "offset": [
        3495,
        3500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7601": {
      "fn": "CryptidToken.mint",
      "offset": [
        3495,
        3500
      ],
      "op": "AND",
      "path": "15"
    },
    "7602": {
      "fn": "CryptidToken.mint",
      "offset": [
        3504,
        3505
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "7604": {
      "branch": 179,
      "fn": "CryptidToken.mint",
      "offset": [
        3495,
        3505
      ],
      "op": "EQ",
      "path": "15"
    },
    "7605": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7606": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EB7"
    },
    "7609": {
      "branch": 179,
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7612": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7619": {
      "op": "SHL"
    },
    "7620": {
      "op": "SUB"
    },
    "7621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7624": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7625": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7626": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7627": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7628": {
      "fn": "CryptidToken.mint",
      "offset": [
        3561,
        3571
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 67
    },
    "7629": {
      "branch": 180,
      "fn": "CryptidToken.mint",
      "offset": [
        3550,
        3571
      ],
      "op": "EQ",
      "path": "15"
    },
    "7630": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E23"
    },
    "7633": {
      "branch": 180,
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7634": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7636": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7643": {
      "op": "SHL"
    },
    "7644": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7645": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7648": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7650": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7651": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "ADD",
      "path": "15"
    },
    "7652": {
      "op": "MSTORE"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7657": {
      "op": "DUP3"
    },
    "7658": {
      "op": "ADD"
    },
    "7659": {
      "op": "MSTORE"
    },
    "7660": {
      "op": "PUSH32",
      "value": "0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7695": {
      "op": "DUP3"
    },
    "7696": {
      "op": "ADD"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7702": {
      "op": "SHL"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7705": {
      "op": "DUP3"
    },
    "7706": {
      "op": "ADD"
    },
    "7707": {
      "op": "MSTORE"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7710": {
      "op": "ADD"
    },
    "7711": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7714": {
      "op": "JUMP"
    },
    "7715": {
      "fn": "CryptidToken.mint",
      "offset": [
        3542,
        3609
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7716": {
      "fn": "CryptidToken.mint",
      "offset": [
        3662,
        3676
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 68,
      "value": "0x13"
    },
    "7718": {
      "fn": "CryptidToken.mint",
      "offset": [
        3662,
        3676
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7719": {
      "fn": "CryptidToken.mint",
      "offset": [
        3645,
        3658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "7721": {
      "fn": "CryptidToken.mint",
      "offset": [
        3645,
        3658
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7722": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E36"
    },
    "7725": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7726": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7728": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7729": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "AND",
      "path": "15"
    },
    "7730": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3738"
    },
    "7733": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3631,
        3658
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7734": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3658
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7735": {
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3676
      ],
      "op": "GT",
      "path": "15"
    },
    "7736": {
      "branch": 181,
      "fn": "CryptidToken.mint",
      "offset": [
        3631,
        3676
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7737": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E97"
    },
    "7740": {
      "branch": 181,
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7741": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7743": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7750": {
      "op": "SHL"
    },
    "7751": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7752": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7755": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7757": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7758": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "ADD",
      "path": "15"
    },
    "7759": {
      "op": "MSTORE"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7764": {
      "op": "DUP3"
    },
    "7765": {
      "op": "ADD"
    },
    "7766": {
      "op": "MSTORE"
    },
    "7767": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7802": {
      "op": "DUP3"
    },
    "7803": {
      "op": "ADD"
    },
    "7804": {
      "op": "MSTORE"
    },
    "7805": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7818": {
      "op": "SHL"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7821": {
      "op": "DUP3"
    },
    "7822": {
      "op": "ADD"
    },
    "7823": {
      "op": "MSTORE"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7826": {
      "op": "ADD"
    },
    "7827": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7830": {
      "op": "JUMP"
    },
    "7831": {
      "fn": "CryptidToken.mint",
      "offset": [
        3623,
        3723
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7832": {
      "fn": "CryptidToken.mint",
      "offset": [
        3760,
        3771
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 69
    },
    "7833": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7835": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "AND",
      "path": "15"
    },
    "7836": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x14"
    },
    "7838": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7840": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7841": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7842": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7843": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EAC"
    },
    "7846": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7847": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7848": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3738"
    },
    "7851": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3743,
        3771
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7852": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7853": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7854": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7855": {
      "fn": "CryptidToken.mint",
      "offset": [
        3743,
        3771
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7856": {
      "op": "POP"
    },
    "7857": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F84"
    },
    "7860": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7861": {
      "op": "POP"
    },
    "7862": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7863": {
      "fn": "CryptidToken.mint",
      "offset": [
        3491,
        4020
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7864": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3853
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 70,
      "value": "0x16"
    },
    "7866": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3853
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7867": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EC7"
    },
    "7870": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7871": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7873": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7874": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "AND",
      "path": "15"
    },
    "7875": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3857
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x293E"
    },
    "7878": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3844,
        3870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7879": {
      "fn": "CryptidToken.mint",
      "offset": [
        3844,
        3870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7880": {
      "fn": "CryptidToken.mint",
      "offset": [
        3831,
        3840
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "7881": {
      "branch": 182,
      "fn": "CryptidToken.mint",
      "offset": [
        3831,
        3870
      ],
      "op": "EQ",
      "path": "15"
    },
    "7882": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F0F"
    },
    "7885": {
      "branch": 182,
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7886": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7888": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7895": {
      "op": "SHL"
    },
    "7896": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7897": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7900": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7902": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7903": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "ADD",
      "path": "15"
    },
    "7904": {
      "op": "MSTORE"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7909": {
      "op": "DUP3"
    },
    "7910": {
      "op": "ADD"
    },
    "7911": {
      "op": "MSTORE"
    },
    "7912": {
      "op": "PUSH23",
      "value": "0x24B73B30B634B210333AB7323990383937BB34B232B217"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "7938": {
      "op": "SHL"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7941": {
      "op": "DUP3"
    },
    "7942": {
      "op": "ADD"
    },
    "7943": {
      "op": "MSTORE"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7946": {
      "op": "ADD"
    },
    "7947": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "7950": {
      "op": "JUMP"
    },
    "7951": {
      "fn": "CryptidToken.mint",
      "offset": [
        3823,
        3898
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7952": {
      "fn": "CryptidToken.mint",
      "offset": [
        3952,
        3967
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x15"
    },
    "7954": {
      "fn": "CryptidToken.mint",
      "offset": [
        3952,
        3967
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7955": {
      "fn": "CryptidToken.mint",
      "offset": [
        3937,
        3948
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7956": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7958": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "AND",
      "path": "15"
    },
    "7959": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3933
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F1E"
    },
    "7962": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "7965": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3920,
        3933
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7966": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3933
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7967": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F28"
    },
    "7970": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7971": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7972": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3738"
    },
    "7975": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3920,
        3948
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7976": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3948
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7977": {
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3967
      ],
      "op": "GT",
      "path": "15"
    },
    "7978": {
      "branch": 183,
      "fn": "CryptidToken.mint",
      "offset": [
        3920,
        3967
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7979": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F84"
    },
    "7982": {
      "branch": 183,
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7983": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7985": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7992": {
      "op": "SHL"
    },
    "7993": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7994": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7997": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7999": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8000": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "ADD",
      "path": "15"
    },
    "8001": {
      "op": "MSTORE"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8006": {
      "op": "DUP3"
    },
    "8007": {
      "op": "ADD"
    },
    "8008": {
      "op": "MSTORE"
    },
    "8009": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8044": {
      "op": "DUP3"
    },
    "8045": {
      "op": "ADD"
    },
    "8046": {
      "op": "MSTORE"
    },
    "8047": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8055": {
      "op": "SHL"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8058": {
      "op": "DUP3"
    },
    "8059": {
      "op": "ADD"
    },
    "8060": {
      "op": "MSTORE"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8063": {
      "op": "ADD"
    },
    "8064": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "8067": {
      "op": "JUMP"
    },
    "8068": {
      "fn": "CryptidToken.mint",
      "offset": [
        3912,
        4009
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8069": {
      "fn": "CryptidToken.mint",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8071": {
      "fn": "CryptidToken.mint",
      "offset": [
        4029,
        4186
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8072": {
      "fn": "CryptidToken.mint",
      "offset": [
        4054,
        4065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8073": {
      "fn": "CryptidToken.mint",
      "offset": [
        4049,
        4065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8075": {
      "fn": "CryptidToken.mint",
      "offset": [
        4049,
        4065
      ],
      "op": "AND",
      "path": "15"
    },
    "8076": {
      "fn": "CryptidToken.mint",
      "offset": [
        4049,
        4050
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8077": {
      "fn": "CryptidToken.mint",
      "offset": [
        4049,
        4065
      ],
      "op": "GT",
      "path": "15"
    },
    "8078": {
      "fn": "CryptidToken.mint",
      "offset": [
        4029,
        4186
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCFF"
    },
    "8081": {
      "fn": "CryptidToken.mint",
      "offset": [
        4029,
        4186
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8082": {
      "fn": "CryptidToken.mint",
      "offset": [
        4086,
        4134
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 72,
      "value": "0x1F9E"
    },
    "8085": {
      "fn": "CryptidToken.mint",
      "offset": [
        4096,
        4106
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8086": {
      "fn": "CryptidToken.mint",
      "offset": [
        4108,
        4133
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19EE"
    },
    "8089": {
      "fn": "CryptidToken.mint",
      "offset": [
        4108,
        4123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8091": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8092": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8093": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8094": {
      "fn": "CryptidToken.mint",
      "offset": [
        4086,
        4134
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8095": {
      "fn": "CryptidToken.mint",
      "offset": [
        4148,
        4175
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 73,
      "value": "0x1FAC"
    },
    "8098": {
      "fn": "CryptidToken.mint",
      "offset": [
        4148,
        4163
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8100": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "8101": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8102": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "8104": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "8105": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8106": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8107": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8108": {
      "fn": "CryptidToken.mint",
      "offset": [
        4148,
        4175
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8109": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 74
    },
    "8110": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB6"
    },
    "8113": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8114": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3750"
    },
    "8117": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4067,
        4070
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8118": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8119": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8120": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "POP",
      "path": "15"
    },
    "8121": {
      "fn": "CryptidToken.mint",
      "offset": [
        4067,
        4070
      ],
      "op": "POP",
      "path": "15"
    },
    "8122": {
      "fn": "CryptidToken.mint",
      "offset": [
        4029,
        4186
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F87"
    },
    "8125": {
      "fn": "CryptidToken.mint",
      "offset": [
        4029,
        4186
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8126": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0x1FC8"
    },
    "8130": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "8135": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8136": {
      "branch": 197,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8137": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE4"
    },
    "8140": {
      "branch": 197,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8141": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8143": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8150": {
      "op": "SHL"
    },
    "8151": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8152": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8153": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8155": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "2"
    },
    "8156": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "8159": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8160": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x368A"
    },
    "8163": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8164": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8165": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0x1FF0"
    },
    "8168": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8169": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8172": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C48"
    },
    "8175": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8176": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8177": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8178": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8179": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8180": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8181": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8182": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8185": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8192": {
      "op": "SHL"
    },
    "8193": {
      "op": "SUB"
    },
    "8194": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8197": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8198": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8199": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8200": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8201": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8202": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8203": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2026"
    },
    "8206": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8216": {
      "op": "SHL"
    },
    "8217": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8218": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8222": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "8225": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8226": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "8229": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8237": {
      "op": "SHL"
    },
    "8238": {
      "op": "SUB"
    },
    "8239": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "AND",
      "path": "15",
      "statement": 77
    },
    "8240": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8242": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8243": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8244": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8245": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "8247": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8249": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8250": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8252": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8253": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4442
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8254": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8255": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8258": {
      "op": "NOT"
    },
    "8259": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "AND",
      "path": "15"
    },
    "8260": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4445,
        4449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8262": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "OR",
      "path": "15"
    },
    "8263": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8264": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        4423,
        4449
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8265": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "o",
      "offset": [
        4354,
        4456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8266": {
      "offset": [
        846,
        883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8267": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "8269": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8270": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8271": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x147C"
    },
    "8274": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8275": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        846,
        883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "8278": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        846,
        883
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8279": {
      "offset": [
        780,
        808
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8280": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "8282": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8283": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8284": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x147C"
    },
    "8287": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8288": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        780,
        808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "8291": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        780,
        808
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8292": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8293": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8295": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8296": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8297": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8298": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8300": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8302": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8303": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8305": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8306": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8307": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8308": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8947,
        8960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8310": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8947,
        8960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8317": {
      "op": "SHL"
    },
    "8318": {
      "op": "SUB"
    },
    "8319": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "8320": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 78,
      "value": "0x20E3"
    },
    "8323": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8324": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8326": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8333": {
      "op": "SHL"
    },
    "8334": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8335": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8338": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8340": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8341": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "ADD",
      "path": "15"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8347": {
      "op": "DUP3"
    },
    "8348": {
      "op": "ADD"
    },
    "8349": {
      "op": "MSTORE"
    },
    "8350": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8385": {
      "op": "DUP3"
    },
    "8386": {
      "op": "ADD"
    },
    "8387": {
      "op": "MSTORE"
    },
    "8388": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8406": {
      "op": "SHL"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8409": {
      "op": "DUP3"
    },
    "8410": {
      "op": "ADD"
    },
    "8411": {
      "op": "MSTORE"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8414": {
      "op": "ADD"
    },
    "8415": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "8418": {
      "op": "JUMP"
    },
    "8419": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8972,
        9048
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8420": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9089,
        9096
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 79,
      "value": "0xA"
    },
    "8422": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9098,
        9116
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20EE"
    },
    "8425": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9098,
        9105
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8426": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9098,
        9114
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C7B"
    },
    "8429": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9098,
        9116
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8430": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9098,
        9116
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8431": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9118,
        9131
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "8433": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8435": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8436": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8438": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "ADD",
      "path": "15"
    },
    "8439": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2102"
    },
    "8442": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8443": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8444": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8445": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8446": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x382F"
    },
    "8449": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9072,
        9132
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8450": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8451": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8453": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8454": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8456": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8457": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8458": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SUB",
      "path": "15"
    },
    "8459": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SUB",
      "path": "15"
    },
    "8460": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8461": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8462": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8463": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8465": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9072,
        9132
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8466": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9058,
        9133
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8467": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9058,
        9133
      ],
      "op": "POP",
      "path": "15"
    },
    "8468": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8469": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8470": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8874,
        9140
      ],
      "op": "POP",
      "path": "15"
    },
    "8471": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        8874,
        9140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8472": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8473": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8475": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8482": {
      "op": "SHL"
    },
    "8483": {
      "op": "SUB"
    },
    "8484": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8487": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8489": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8490": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8491": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8492": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8493": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2148"
    },
    "8496": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8499": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8506": {
      "op": "SHL"
    },
    "8507": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8508": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8511": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8512": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "8515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "8519": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8520": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8521": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 80,
      "value": "0xC"
    },
    "8523": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8524": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "8529": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8530": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "DIV",
      "path": "15"
    },
    "8531": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8533": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6049
      ],
      "op": "AND",
      "path": "15"
    },
    "8534": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6057
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8535": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6057
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8536": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6053,
        6057
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8538": {
      "branch": 184,
      "fn": "CryptidToken.prevStage",
      "offset": [
        6029,
        6057
      ],
      "op": "EQ",
      "path": "15"
    },
    "8539": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2176"
    },
    "8542": {
      "branch": 184,
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8543": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8545": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8552": {
      "op": "SHL"
    },
    "8553": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8554": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8555": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8557": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "ADD",
      "path": "15"
    },
    "8558": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "8561": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8562": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36DB"
    },
    "8565": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6021,
        6118
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8566": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6021,
        6118
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8567": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6136,
        6141
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 81,
      "value": "0xC"
    },
    "8569": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6136,
        6141
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8570": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6136,
        6141
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8572": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6136,
        6141
      ],
      "op": "AND",
      "path": "15"
    },
    "8573": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21C0"
    },
    "8576": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8577": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8579": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8586": {
      "op": "SHL"
    },
    "8587": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8588": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8591": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8593": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8594": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "ADD",
      "path": "15"
    },
    "8595": {
      "op": "MSTORE"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8600": {
      "op": "DUP3"
    },
    "8601": {
      "op": "ADD"
    },
    "8602": {
      "op": "MSTORE"
    },
    "8603": {
      "op": "PUSH21",
      "value": "0x139BC81CDD1859D95CC81899599BDC99481A5B9A5D"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "8627": {
      "op": "SHL"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8630": {
      "op": "DUP3"
    },
    "8631": {
      "op": "ADD"
    },
    "8632": {
      "op": "MSTORE"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8635": {
      "op": "ADD"
    },
    "8636": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "8639": {
      "op": "JUMP"
    },
    "8640": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6128,
        6171
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8641": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6186
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 82,
      "value": "0xC"
    },
    "8643": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8644": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8645": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8647": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "AND",
      "path": "15"
    },
    "8648": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8649": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6186
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8651": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21D3"
    },
    "8654": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8655": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3862"
    },
    "8658": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6181,
        6188
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8659": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8660": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8661": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8662": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8665": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "EXP",
      "path": "15"
    },
    "8666": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8667": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8668": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8669": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8671": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "MUL",
      "path": "15"
    },
    "8672": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "NOT",
      "path": "15"
    },
    "8673": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "AND",
      "path": "15"
    },
    "8674": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8675": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8676": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8678": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "AND",
      "path": "15"
    },
    "8679": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "MUL",
      "path": "15"
    },
    "8680": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "OR",
      "path": "15"
    },
    "8681": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8682": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8683": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "POP",
      "path": "15"
    },
    "8684": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6181,
        6188
      ],
      "op": "POP",
      "path": "15"
    },
    "8685": {
      "fn": "CryptidToken.prevStage",
      "jump": "o",
      "offset": [
        5973,
        6195
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8686": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8605,
        8756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8687": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8648,
        8655
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8689": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8690,
        8691
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 83
    },
    "8690": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8674,
        8687
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21F9"
    },
    "8693": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8674,
        8685
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "8696": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8674,
        8687
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8697": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8674,
        8687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8698": {
      "branch": 185,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8674,
        8691
      ],
      "op": "GT",
      "path": "15"
    },
    "8699": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x223F"
    },
    "8702": {
      "branch": 185,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8703": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8705": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8712": {
      "op": "SHL"
    },
    "8713": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8714": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8717": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8719": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8720": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "ADD",
      "path": "15"
    },
    "8721": {
      "op": "MSTORE"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8726": {
      "op": "DUP3"
    },
    "8727": {
      "op": "ADD"
    },
    "8728": {
      "op": "MSTORE"
    },
    "8729": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "8754": {
      "op": "SHL"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8757": {
      "op": "DUP3"
    },
    "8758": {
      "op": "ADD"
    },
    "8759": {
      "op": "MSTORE"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8762": {
      "op": "ADD"
    },
    "8763": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "8766": {
      "op": "JUMP"
    },
    "8767": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8666,
        8718
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8768": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8735,
        8748
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 84,
      "value": "0xE1D"
    },
    "8771": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8735,
        8746
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "8774": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8735,
        8748
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8775": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6335,
        6461
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8776": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8778": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8785": {
      "op": "SHL"
    },
    "8786": {
      "op": "SUB"
    },
    "8787": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8790": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8791": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8792": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8793": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8794": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8795": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8796": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2277"
    },
    "8799": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8800": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8809": {
      "op": "SHL"
    },
    "8810": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8811": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "8818": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "8822": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8823": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8824": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 85
    },
    "8825": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8826": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE02"
    },
    "8829": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8830": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "8832": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6434
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8833": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8835": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8836": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "ADD",
      "path": "15"
    },
    "8837": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8838": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C7"
    },
    "8841": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8842": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9146,
        9256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8843": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9192,
        9199
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8845": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9236,
        9249
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 86,
      "value": "0x2294"
    },
    "8848": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9236,
        9247
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE06"
    },
    "8851": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9236,
        9249
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8852": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9236,
        9249
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8853": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9233
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x15"
    },
    "8855": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9233
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8856": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9249
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE1D"
    },
    "8859": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8860": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8861": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9218,
        9249
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3673"
    },
    "8864": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9218,
        9249
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8865": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8866": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8868": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8875": {
      "op": "SHL"
    },
    "8876": {
      "op": "SUB"
    },
    "8877": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8881": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8882": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8883": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8884": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8885": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8886": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D1"
    },
    "8889": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8899": {
      "op": "SHL"
    },
    "8900": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8902": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "8908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "8912": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8914": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5502,
        5503
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 87,
      "value": "0x0"
    },
    "8916": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5484,
        5491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "8918": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8919": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8920": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22E0"
    },
    "8923": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8924": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35ED"
    },
    "8927": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5478,
        5499
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8928": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8929": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8930": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5499
      ],
      "op": "POP",
      "path": "15"
    },
    "8931": {
      "branch": 186,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5478,
        5503
      ],
      "op": "GT",
      "path": "15"
    },
    "8932": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x232F"
    },
    "8935": {
      "branch": 186,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8936": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8938": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8945": {
      "op": "SHL"
    },
    "8946": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8947": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8950": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8952": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8953": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "ADD",
      "path": "15"
    },
    "8954": {
      "op": "MSTORE"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8959": {
      "op": "DUP3"
    },
    "8960": {
      "op": "ADD"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8997": {
      "op": "DUP3"
    },
    "8998": {
      "op": "ADD"
    },
    "8999": {
      "op": "MSTORE"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9002": {
      "op": "ADD"
    },
    "9003": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "9006": {
      "op": "JUMP"
    },
    "9007": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5470,
        5531
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9008": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 88,
      "value": "0xC"
    },
    "9010": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9011": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "9015": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9016": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "DIV",
      "path": "15"
    },
    "9017": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9019": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5550,
        5564
      ],
      "op": "AND",
      "path": "15"
    },
    "9020": {
      "branch": 187,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5549,
        5564
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9021": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2388"
    },
    "9024": {
      "branch": 187,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9025": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9027": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9034": {
      "op": "SHL"
    },
    "9035": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9036": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9039": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9041": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9042": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "ADD",
      "path": "15"
    },
    "9043": {
      "op": "MSTORE"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9048": {
      "op": "DUP3"
    },
    "9049": {
      "op": "ADD"
    },
    "9050": {
      "op": "MSTORE"
    },
    "9051": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9086": {
      "op": "DUP3"
    },
    "9087": {
      "op": "ADD"
    },
    "9088": {
      "op": "MSTORE"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9091": {
      "op": "ADD"
    },
    "9092": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "9095": {
      "op": "JUMP"
    },
    "9096": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5541,
        5595
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9097": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5619
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 89,
      "value": "0xC"
    },
    "9099": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9100": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9101": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "9105": {
      "op": "NOT"
    },
    "9106": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "AND",
      "path": "15"
    },
    "9107": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x10000"
    },
    "9111": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "OR",
      "path": "15"
    },
    "9112": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9113": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5605,
        5626
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9114": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5418,
        5633
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9115": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9118": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9125": {
      "op": "SHL"
    },
    "9126": {
      "op": "SUB"
    },
    "9127": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9130": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9131": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9132": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9133": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9134": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9135": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9136": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23CB"
    },
    "9139": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9142": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9149": {
      "op": "SHL"
    },
    "9150": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9151": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9152": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9155": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "9158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "9162": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9164": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 90,
      "value": "0xC"
    },
    "9166": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9167": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9174": {
      "op": "SHL"
    },
    "9175": {
      "op": "SUB"
    },
    "9176": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9177": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9178": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "AND",
      "path": "15"
    },
    "9179": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0x100000000"
    },
    "9185": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "MUL",
      "path": "15"
    },
    "9186": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9196": {
      "op": "SHL"
    },
    "9197": {
      "op": "SUB"
    },
    "9198": {
      "op": "NOT"
    },
    "9199": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9200": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9201": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "AND",
      "path": "15"
    },
    "9202": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "OR",
      "path": "15"
    },
    "9203": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9204": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7134,
        7156
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9205": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7179
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 91,
      "value": "0xD"
    },
    "9207": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9208": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9209": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9210": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9211": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "AND",
      "path": "15"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9218": {
      "op": "SHL"
    },
    "9219": {
      "op": "SUB"
    },
    "9220": {
      "op": "NOT"
    },
    "9221": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "9222": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9223": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "AND",
      "path": "15"
    },
    "9224": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "OR",
      "path": "15"
    },
    "9225": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9226": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7166,
        7188
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9227": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7211
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 92,
      "value": "0xE"
    },
    "9229": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9230": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9231": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9232": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9233": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "AND",
      "path": "15"
    },
    "9234": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9235": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9236": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "AND",
      "path": "15"
    },
    "9237": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9238": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9239": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9240": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "OR",
      "path": "15"
    },
    "9241": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9242": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9243": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7198,
        7220
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9244": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7243
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 93,
      "value": "0xF"
    },
    "9246": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9247": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9248": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9249": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9250": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "AND",
      "path": "15"
    },
    "9251": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9252": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9253": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "AND",
      "path": "15"
    },
    "9254": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9255": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9256": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9257": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "OR",
      "path": "15"
    },
    "9258": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9259": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7230,
        7252
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9260": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7275
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 94,
      "value": "0x10"
    },
    "9262": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9263": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9264": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9265": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9266": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9267": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "AND",
      "path": "15"
    },
    "9268": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9269": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "AND",
      "path": "15"
    },
    "9270": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "OR",
      "path": "15"
    },
    "9271": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9272": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7262,
        7284
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9273": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "o",
      "offset": [
        6999,
        7291
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9274": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5639,
        5967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9275": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9277": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9284": {
      "op": "SHL"
    },
    "9285": {
      "op": "SUB"
    },
    "9286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9289": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9290": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9291": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9292": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9293": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9294": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9295": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246A"
    },
    "9298": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9308": {
      "op": "SHL"
    },
    "9309": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9313": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9314": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "9317": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9318": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "9321": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9322": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9323": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 95,
      "value": "0xC"
    },
    "9325": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9326": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1000000"
    },
    "9331": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9332": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "DIV",
      "path": "15"
    },
    "9333": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9335": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5715
      ],
      "op": "AND",
      "path": "15"
    },
    "9336": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5723
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9337": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5723
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9338": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5719,
        5723
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9340": {
      "branch": 188,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5695,
        5723
      ],
      "op": "EQ",
      "path": "15"
    },
    "9341": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2498"
    },
    "9344": {
      "branch": 188,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9345": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9347": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9354": {
      "op": "SHL"
    },
    "9355": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9356": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9357": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9359": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "ADD",
      "path": "15"
    },
    "9360": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "9363": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9364": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36DB"
    },
    "9367": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        5687,
        5784
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9368": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5687,
        5784
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9369": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5812
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 96,
      "value": "0x8"
    },
    "9371": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5812
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9372": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5813,
        5814
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9374": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5815
      ],
      "op": "BYTE",
      "path": "15"
    },
    "9375": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5815
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF8"
    },
    "9377": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5815
      ],
      "op": "SHL",
      "path": "15"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9384": {
      "op": "SHL"
    },
    "9385": {
      "op": "SUB"
    },
    "9386": {
      "op": "NOT"
    },
    "9387": {
      "branch": 189,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5802,
        5820
      ],
      "op": "AND",
      "path": "15"
    },
    "9388": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x251D"
    },
    "9391": {
      "branch": 189,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9392": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9394": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9401": {
      "op": "SHL"
    },
    "9402": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9403": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9406": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9408": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9409": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "ADD",
      "path": "15"
    },
    "9410": {
      "op": "MSTORE"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9415": {
      "op": "DUP3"
    },
    "9416": {
      "op": "ADD"
    },
    "9417": {
      "op": "MSTORE"
    },
    "9418": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9453": {
      "op": "DUP3"
    },
    "9454": {
      "op": "ADD"
    },
    "9455": {
      "op": "MSTORE"
    },
    "9456": {
      "op": "PUSH32",
      "value": "0x77686974656C697374206D696E74696E672063616E20626567696E0000000000"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9491": {
      "op": "DUP3"
    },
    "9492": {
      "op": "ADD"
    },
    "9493": {
      "op": "MSTORE"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9496": {
      "op": "ADD"
    },
    "9497": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "9500": {
      "op": "JUMP"
    },
    "9501": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5794,
        5884
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9502": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 97,
      "value": "0xC"
    },
    "9504": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9505": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5910,
        5911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9507": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9509": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9510": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9511": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5907
      ],
      "op": "AND",
      "path": "15"
    },
    "9512": {
      "branch": 190,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5902,
        5911
      ],
      "op": "LT",
      "path": "15"
    },
    "9513": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2574"
    },
    "9516": {
      "branch": 190,
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9517": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9519": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9526": {
      "op": "SHL"
    },
    "9527": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9528": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9531": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9533": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9534": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "ADD",
      "path": "15"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9540": {
      "op": "DUP3"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "MSTORE"
    },
    "9543": {
      "op": "PUSH32",
      "value": "0x4E6F20737461676573206166746572207075626C69632073616C650000000000"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9578": {
      "op": "DUP3"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9583": {
      "op": "ADD"
    },
    "9584": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC9"
    },
    "9587": {
      "op": "JUMP"
    },
    "9588": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5894,
        5943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9589": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5958
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 98,
      "value": "0xC"
    },
    "9591": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9592": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9593": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9595": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "AND",
      "path": "15"
    },
    "9596": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9597": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5958
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9599": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21D3"
    },
    "9602": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9603": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        5953,
        5960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3895"
    },
    "9606": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        5953,
        5960
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9608": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9617": {
      "op": "SHL"
    },
    "9618": {
      "op": "SUB"
    },
    "9619": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9622": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9623": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9624": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9625": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9626": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9627": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9628": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B7"
    },
    "9631": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9634": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9641": {
      "op": "SHL"
    },
    "9642": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "9650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3628"
    },
    "9654": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9662": {
      "op": "SHL"
    },
    "9663": {
      "op": "SUB"
    },
    "9664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 99
    },
    "9665": {
      "branch": 206,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9666": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261C"
    },
    "9669": {
      "branch": 206,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9679": {
      "op": "SHL"
    },
    "9680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9688": {
      "op": "MSTORE"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9693": {
      "op": "DUP3"
    },
    "9694": {
      "op": "ADD"
    },
    "9695": {
      "op": "MSTORE"
    },
    "9696": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9731": {
      "op": "DUP3"
    },
    "9732": {
      "op": "ADD"
    },
    "9733": {
      "op": "MSTORE"
    },
    "9734": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9743": {
      "op": "SHL"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9746": {
      "op": "DUP3"
    },
    "9747": {
      "op": "ADD"
    },
    "9748": {
      "op": "MSTORE"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "9755": {
      "op": "JUMP"
    },
    "9756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 100,
      "value": "0x1318"
    },
    "9760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A97"
    },
    "9764": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9765": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9766": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9767": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9768": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9770": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "9771": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9772": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "9773": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9774": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9775": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x0"
    },
    "9777": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9778": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9779": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9780": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9782": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9784": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9785": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9787": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9788": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9789": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9790": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9797": {
      "op": "SHL"
    },
    "9798": {
      "op": "SUB"
    },
    "9799": {
      "op": "NOT"
    },
    "9800": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9807": {
      "op": "SHL"
    },
    "9808": {
      "op": "SUB"
    },
    "9809": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9810": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "9811": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9812": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9813": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "2"
    },
    "9814": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9815": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9816": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9817": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9818": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9819": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 102,
      "value": "0x2663"
    },
    "9822": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9823": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "9826": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9827": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9834": {
      "op": "SHL"
    },
    "9835": {
      "op": "SUB"
    },
    "9836": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "2"
    },
    "9837": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9870": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9872": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9873": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9875": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9876": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9877": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9878": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "2"
    },
    "9879": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9880": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "2"
    },
    "9881": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "9882": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "9883": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9884": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9885": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9887": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9888": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9889": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9890": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9892": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9894": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9895": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9897": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9898": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9899": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "op": "SUB"
    },
    "9908": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "9909": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 103,
      "value": "0x2715"
    },
    "9912": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9913": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9915": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9922": {
      "op": "SHL"
    },
    "9923": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9924": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9927": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9929": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9930": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "2"
    },
    "9931": {
      "op": "MSTORE"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9936": {
      "op": "DUP3"
    },
    "9937": {
      "op": "ADD"
    },
    "9938": {
      "op": "MSTORE"
    },
    "9939": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9974": {
      "op": "DUP3"
    },
    "9975": {
      "op": "ADD"
    },
    "9976": {
      "op": "MSTORE"
    },
    "9977": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9992": {
      "op": "SHL"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9995": {
      "op": "DUP3"
    },
    "9996": {
      "op": "ADD"
    },
    "9997": {
      "op": "MSTORE"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10000": {
      "op": "ADD"
    },
    "10001": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "10004": {
      "op": "JUMP"
    },
    "10005": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10006": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10008": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2720"
    },
    "10011": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10012": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "10015": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10017": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10018": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "2"
    },
    "10019": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 104
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10026": {
      "op": "SHL"
    },
    "10027": {
      "op": "SUB"
    },
    "10028": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10029": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10036": {
      "op": "SHL"
    },
    "10037": {
      "op": "SUB"
    },
    "10038": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10039": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "2"
    },
    "10040": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10041": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x275B"
    },
    "10044": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10045": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "2"
    },
    "10046": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10053": {
      "op": "SHL"
    },
    "10054": {
      "op": "SUB"
    },
    "10055": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10056": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2750"
    },
    "10059": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10060": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB54"
    },
    "10063": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10064": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10071": {
      "op": "SHL"
    },
    "10072": {
      "op": "SUB"
    },
    "10073": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10074": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "2"
    },
    "10075": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10076": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10077": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278B"
    },
    "10080": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10081": {
      "op": "POP"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "op": "SUB"
    },
    "10090": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10092": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "10093": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10095": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10096": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10097": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10098": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10100": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10102": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10103": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10104": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10105": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10107": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10108": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10109": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10110": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10111": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10112": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10113": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10114": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10115": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10116": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10117": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10118": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10119": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10120": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10126": {
      "op": "POP"
    },
    "10127": {
      "op": "POP"
    },
    "10128": {
      "op": "POP"
    },
    "10129": {
      "op": "POP"
    },
    "10130": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10131": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10132": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 105
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10139": {
      "op": "SHL"
    },
    "10140": {
      "op": "SUB"
    },
    "10141": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10142": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A6"
    },
    "10145": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10146": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "10149": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10150": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10157": {
      "op": "SHL"
    },
    "10158": {
      "op": "SUB"
    },
    "10159": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10160": {
      "branch": 198,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "2"
    },
    "10161": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x280E"
    },
    "10164": {
      "branch": 198,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10165": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10167": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10174": {
      "op": "SHL"
    },
    "10175": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10176": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10179": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10181": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10182": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "2"
    },
    "10183": {
      "op": "MSTORE"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10188": {
      "op": "DUP3"
    },
    "10189": {
      "op": "ADD"
    },
    "10190": {
      "op": "MSTORE"
    },
    "10191": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10226": {
      "op": "DUP3"
    },
    "10227": {
      "op": "ADD"
    },
    "10228": {
      "op": "MSTORE"
    },
    "10229": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10241": {
      "op": "SHL"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10244": {
      "op": "DUP3"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "op": "MSTORE"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10249": {
      "op": "ADD"
    },
    "10250": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "10253": {
      "op": "JUMP"
    },
    "10254": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10261": {
      "op": "SHL"
    },
    "10262": {
      "op": "SUB"
    },
    "10263": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 106
    },
    "10264": {
      "branch": 199,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "2"
    },
    "10265": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2870"
    },
    "10268": {
      "branch": 199,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10269": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10271": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10272": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10278": {
      "op": "SHL"
    },
    "10279": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10280": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10283": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10285": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10286": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "2"
    },
    "10287": {
      "op": "MSTORE"
    },
    "10288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10290": {
      "op": "DUP1"
    },
    "10291": {
      "op": "DUP3"
    },
    "10292": {
      "op": "ADD"
    },
    "10293": {
      "op": "MSTORE"
    },
    "10294": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10329": {
      "op": "DUP3"
    },
    "10330": {
      "op": "ADD"
    },
    "10331": {
      "op": "MSTORE"
    },
    "10332": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10339": {
      "op": "SHL"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10342": {
      "op": "DUP3"
    },
    "10343": {
      "op": "ADD"
    },
    "10344": {
      "op": "MSTORE"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10347": {
      "op": "ADD"
    },
    "10348": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "10351": {
      "op": "JUMP"
    },
    "10352": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10353": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 107,
      "value": "0x287B"
    },
    "10356": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10357": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10358": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10359": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D79"
    },
    "10362": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10363": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10364": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 108,
      "value": "0x2886"
    },
    "10367": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10369": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10370": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262E"
    },
    "10373": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10374": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10381": {
      "op": "SHL"
    },
    "10382": {
      "op": "SUB"
    },
    "10383": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 109
    },
    "10384": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "2"
    },
    "10385": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10387": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10388": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10389": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10390": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10392": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10394": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10395": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10397": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10398": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10399": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10400": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10401": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10403": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10404": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10405": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28AF"
    },
    "10408": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10409": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10410": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10411": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3673"
    },
    "10414": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10415": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10416": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10417": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10418": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10419": {
      "op": "POP"
    },
    "10420": {
      "op": "POP"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10427": {
      "op": "SHL"
    },
    "10428": {
      "op": "SUB"
    },
    "10429": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 110
    },
    "10430": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "2"
    },
    "10431": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10433": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10434": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10435": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10436": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10438": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10440": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10441": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10443": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10444": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10445": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10446": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10447": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10449": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10450": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10451": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DD"
    },
    "10454": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10455": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10456": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10457": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3738"
    },
    "10460": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10461": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10462": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10463": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10464": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10465": {
      "op": "POP"
    },
    "10466": {
      "op": "POP"
    },
    "10467": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 111,
      "value": "0x0"
    },
    "10469": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10470": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10471": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10472": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10474": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10476": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10477": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10479": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10480": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10481": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10482": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10483": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10490": {
      "op": "SHL"
    },
    "10491": {
      "op": "SUB"
    },
    "10492": {
      "op": "NOT"
    },
    "10493": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10500": {
      "op": "SHL"
    },
    "10501": {
      "op": "SUB"
    },
    "10502": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10503": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10504": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "10505": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10506": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10507": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "2"
    },
    "10508": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10509": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10510": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10511": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 112
    },
    "10512": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10513": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10514": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10515": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10516": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10517": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "2"
    },
    "10518": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10519": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10552": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10553": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "2"
    },
    "10554": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10555": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10556": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10557": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10558": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10559": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "10561": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 113,
      "value": "0x294A"
    },
    "10564": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10565": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "14"
    },
    "10566": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38B5"
    },
    "10569": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10570": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10571": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "10572": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "10573": {
      "op": "POP"
    },
    "10574": {
      "op": "POP"
    },
    "10575": {
      "op": "POP"
    },
    "10576": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10577": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10578": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "10580": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 114,
      "value": "0x294A"
    },
    "10583": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10584": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "14"
    },
    "10585": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38EA"
    },
    "10588": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10589": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10590": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "10592": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10593": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10595": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10596": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29A6"
    },
    "10599": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10600": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10602": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10609": {
      "op": "SHL"
    },
    "10610": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10611": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10614": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10616": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10617": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "10618": {
      "op": "MSTORE"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10623": {
      "op": "DUP3"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "op": "MSTORE"
    },
    "10626": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10649": {
      "op": "SHL"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10652": {
      "op": "DUP3"
    },
    "10653": {
      "op": "ADD"
    },
    "10654": {
      "op": "MSTORE"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10657": {
      "op": "ADD"
    },
    "10658": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC9"
    },
    "10661": {
      "op": "JUMP"
    },
    "10662": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10663": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 115,
      "value": "0x6"
    },
    "10665": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10666": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10669": {
      "op": "NOT"
    },
    "10670": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "10671": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10672": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10673": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 116,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "10706": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "10707": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10708": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10710": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10717": {
      "op": "SHL"
    },
    "10718": {
      "op": "SUB"
    },
    "10719": {
      "op": "SWAP1"
    },
    "10720": {
      "op": "SWAP2"
    },
    "10721": {
      "op": "AND"
    },
    "10722": {
      "op": "DUP2"
    },
    "10723": {
      "op": "MSTORE"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10729": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10730": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10731": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10732": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "10733": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10734": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "10735": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10736": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10737": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10739": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29FB"
    },
    "10742": {
      "fn": "ERC721._burn",
      "offset": [
        9742,
        9749
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10743": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F8"
    },
    "10746": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10747": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10748": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10749": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "POP",
      "path": "2"
    },
    "10750": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 117,
      "value": "0x2A09"
    },
    "10753": {
      "fn": "ERC721._burn",
      "offset": [
        9782,
        9787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10754": {
      "fn": "ERC721._burn",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10756": {
      "fn": "ERC721._burn",
      "offset": [
        9801,
        9808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10757": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D79"
    },
    "10760": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10761": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10762": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 118,
      "value": "0x2A14"
    },
    "10765": {
      "fn": "ERC721._burn",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10767": {
      "fn": "ERC721._burn",
      "offset": [
        9868,
        9875
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10768": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262E"
    },
    "10771": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10772": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10779": {
      "op": "SHL"
    },
    "10780": {
      "op": "SUB"
    },
    "10781": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 119
    },
    "10782": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "AND",
      "path": "2"
    },
    "10783": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10785": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10786": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10787": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10788": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10790": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10792": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10793": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10795": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10796": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10797": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10798": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10799": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10801": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10802": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10803": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A3D"
    },
    "10806": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10807": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10808": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10809": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3673"
    },
    "10812": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10813": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10814": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10815": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10816": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10817": {
      "op": "POP"
    },
    "10818": {
      "op": "POP"
    },
    "10819": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 120,
      "value": "0x0"
    },
    "10821": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10822": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10823": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10824": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10826": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10828": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10829": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10831": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10832": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10833": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10834": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10835": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10842": {
      "op": "SHL"
    },
    "10843": {
      "op": "SUB"
    },
    "10844": {
      "op": "NOT"
    },
    "10845": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "2"
    },
    "10846": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10847": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10848": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 121
    },
    "10849": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10850": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10851": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10858": {
      "op": "SHL"
    },
    "10859": {
      "op": "SUB"
    },
    "10860": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10861": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "AND",
      "path": "2"
    },
    "10862": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10863": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10896": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10897": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10898": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10899": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "LOG4",
      "path": "2"
    },
    "10900": {
      "fn": "ERC721._burn",
      "offset": [
        9701,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "10901": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "10902": {
      "fn": "ERC721._burn",
      "jump": "o",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10903": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10904": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "10906": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10914": {
      "op": "SHL"
    },
    "10915": {
      "op": "SUB"
    },
    "10916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 122
    },
    "10917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10919": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10923": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "10925": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10932": {
      "op": "SHL"
    },
    "10933": {
      "op": "SUB"
    },
    "10934": {
      "op": "NOT"
    },
    "10935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "10938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 123,
      "value": "0x40"
    },
    "10943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10944": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10945": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10946": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10947": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "10948": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "10949": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10950": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10952": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10986": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10992": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10993": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10994": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "10996": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10997": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10999": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11000": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11001": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B14"
    },
    "11004": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11005": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11007": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11014": {
      "op": "SHL"
    },
    "11015": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11016": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11017": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11019": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11020": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC9"
    },
    "11023": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11024": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x376B"
    },
    "11027": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11028": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11029": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 124,
      "value": "0x6"
    },
    "11031": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11032": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11035": {
      "op": "NOT"
    },
    "11036": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "11037": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11039": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "11040": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11041": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11042": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 125,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "11075": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29D3"
    },
    "11078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "11079": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11080": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11081": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11082": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 126
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11089": {
      "op": "SHL"
    },
    "11090": {
      "op": "SUB"
    },
    "11091": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11092": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11099": {
      "op": "SHL"
    },
    "11100": {
      "op": "SUB"
    },
    "11101": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11102": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "2"
    },
    "11103": {
      "branch": 200,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11104": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BAB"
    },
    "11107": {
      "branch": 200,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11108": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11110": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11117": {
      "op": "SHL"
    },
    "11118": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11119": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11122": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11124": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11125": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "2"
    },
    "11126": {
      "op": "MSTORE"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11131": {
      "op": "DUP3"
    },
    "11132": {
      "op": "ADD"
    },
    "11133": {
      "op": "MSTORE"
    },
    "11134": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11169": {
      "op": "DUP3"
    },
    "11170": {
      "op": "ADD"
    },
    "11171": {
      "op": "MSTORE"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11174": {
      "op": "ADD"
    },
    "11175": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "11178": {
      "op": "JUMP"
    },
    "11179": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11186": {
      "op": "SHL"
    },
    "11187": {
      "op": "SUB"
    },
    "11188": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 127
    },
    "11189": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11190": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "2"
    },
    "11191": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11193": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11194": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11195": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11196": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11198": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11200": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11201": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11202": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11203": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11205": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11206": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11207": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11208": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11209": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11210": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "2"
    },
    "11211": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11212": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11213": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11214": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11215": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11216": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11217": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11218": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11219": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11220": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11221": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11222": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11225": {
      "op": "NOT"
    },
    "11226": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "2"
    },
    "11227": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11228": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11229": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11230": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11231": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11232": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "2"
    },
    "11233": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11234": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11235": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11236": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 128
    },
    "11237": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11238": {
      "op": "SWAP2"
    },
    "11239": {
      "op": "DUP3"
    },
    "11240": {
      "op": "MSTORE"
    },
    "11241": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11274": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11275": {
      "op": "ADD"
    },
    "11276": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11278": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11279": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11280": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11281": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "2"
    },
    "11282": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11283": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "2"
    },
    "11284": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11285": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11286": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11287": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11288": {
      "fn": "ERC721._safeMint",
      "offset": [
        8101,
        8209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11289": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 129,
      "value": "0xE02"
    },
    "11292": {
      "fn": "ERC721._safeMint",
      "offset": [
        8186,
        8188
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11293": {
      "fn": "ERC721._safeMint",
      "offset": [
        8190,
        8197
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11294": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11296": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11297": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11298": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11300": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "ADD",
      "path": "2"
    },
    "11301": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11303": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11304": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11305": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11307": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11308": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11309": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "11310": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D9C"
    },
    "11313": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8176,
        8202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11314": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11315": {
      "fn": "MerkleProof.verify",
      "offset": [
        968,
        972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11317": {
      "fn": "MerkleProof.verify",
      "offset": [
        1020,
        1024
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 130
    },
    "11318": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3F"
    },
    "11321": {
      "fn": "MerkleProof.verify",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11322": {
      "fn": "MerkleProof.verify",
      "offset": [
        1011,
        1015
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11323": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1003
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DCF"
    },
    "11326": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        991,
        1016
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11327": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11328": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "EQ",
      "path": "11"
    },
    "11329": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "11330": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11331": {
      "op": "POP"
    },
    "11332": {
      "op": "POP"
    },
    "11333": {
      "op": "POP"
    },
    "11334": {
      "op": "POP"
    },
    "11335": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        847,
        1031
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11336": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11337": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 131,
      "value": "0x2C53"
    },
    "11340": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11341": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11342": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11343": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2793"
    },
    "11346": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11347": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11348": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 132,
      "value": "0x2C5F"
    },
    "11351": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11352": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11353": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11354": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11355": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7B"
    },
    "11358": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11359": {
      "branch": 201,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11360": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF0"
    },
    "11363": {
      "branch": 201,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11364": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11366": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11373": {
      "op": "SHL"
    },
    "11374": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11375": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11376": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11378": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "2"
    },
    "11379": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "11382": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11383": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38FE"
    },
    "11386": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11387": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11388": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "11390": {
      "branch": 207,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11391": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C9F"
    },
    "11394": {
      "branch": 207,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11395": {
      "op": "POP"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 133,
      "value": "0x40"
    },
    "11399": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11400": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11401": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11402": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11403": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "11404": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11405": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11406": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11407": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11409": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11410": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11413": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "11415": {
      "op": "SHL"
    },
    "11416": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11418": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11419": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "11420": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11421": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11422": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11423": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11424": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11425": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11427": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11428": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11429": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11430": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CC9"
    },
    "11433": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11434": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 134
    },
    "11435": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CB3"
    },
    "11438": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11439": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3750"
    },
    "11442": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11443": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11444": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11445": {
      "op": "POP"
    },
    "11446": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 135,
      "value": "0x2CC2"
    },
    "11449": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11450": {
      "op": "POP"
    },
    "11451": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11453": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11454": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38EA"
    },
    "11457": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11458": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11459": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11460": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "10"
    },
    "11461": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CA3"
    },
    "11464": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11465": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11466": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11468": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11469": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11478": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11479": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "10"
    },
    "11480": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11481": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CE4"
    },
    "11484": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11485": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CE4"
    },
    "11488": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x325D"
    },
    "11491": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11492": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11493": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11495": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11496": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11497": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11498": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11499": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11500": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11501": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "11503": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11504": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "11506": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "10"
    },
    "11507": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "10"
    },
    "11508": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11510": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11511": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11512": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11513": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11515": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11516": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11517": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11518": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D0E"
    },
    "11521": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11522": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11524": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11525": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11526": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11527": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11528": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "11529": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11530": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "11531": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11532": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11533": {
      "op": "POP"
    },
    "11534": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11535": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "11536": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11537": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "11538": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11539": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11540": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11541": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x278B"
    },
    "11544": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11545": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 136,
      "value": "0x2D23"
    },
    "11548": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11550": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11551": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3673"
    },
    "11554": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11555": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11556": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 137,
      "value": "0x2D30"
    },
    "11561": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11563": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11564": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3950"
    },
    "11567": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11568": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11569": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D3B"
    },
    "11572": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11573": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "11575": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3738"
    },
    "11578": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11579": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11580": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF8"
    },
    "11582": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "10"
    },
    "11583": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11584": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11585": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11586": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11587": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11588": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "10"
    },
    "11589": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D50"
    },
    "11592": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11593": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D50"
    },
    "11596": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387F"
    },
    "11599": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11600": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11601": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11603": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "11604": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "11605": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11612": {
      "op": "SHL"
    },
    "11613": {
      "op": "SUB"
    },
    "11614": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "10"
    },
    "11615": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "10"
    },
    "11616": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11617": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11618": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11620": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "10"
    },
    "11621": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11622": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "11623": {
      "op": "POP"
    },
    "11624": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 138,
      "value": "0x2D72"
    },
    "11627": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11629": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11630": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38EA"
    },
    "11633": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11634": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11635": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11636": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "10"
    },
    "11637": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D12"
    },
    "11640": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11641": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9349,
        9524
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11642": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11644": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11645": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11647": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11648": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11649": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCFF"
    },
    "11652": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11653": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11655": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11662": {
      "op": "SHL"
    },
    "11663": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11664": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11665": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11667": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11668": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC9"
    },
    "11671": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11672": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x376B"
    },
    "11675": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11676": {
      "fn": "ERC721._safeMint",
      "offset": [
        8430,
        8741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11677": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 139,
      "value": "0x2DA6"
    },
    "11680": {
      "fn": "ERC721._safeMint",
      "offset": [
        8561,
        8563
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11681": {
      "fn": "ERC721._safeMint",
      "offset": [
        8565,
        8572
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11682": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F79"
    },
    "11685": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11686": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11687": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 140,
      "value": "0x2DB3"
    },
    "11690": {
      "fn": "ERC721._safeMint",
      "offset": [
        8635,
        8636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11692": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11693": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11694": {
      "fn": "ERC721._safeMint",
      "offset": [
        8652,
        8657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11695": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7B"
    },
    "11698": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11699": {
      "branch": 202,
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11700": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCFF"
    },
    "11703": {
      "branch": 202,
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11704": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11706": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11713": {
      "op": "SHL"
    },
    "11714": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11715": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11716": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11718": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "ADD",
      "path": "2"
    },
    "11719": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "11722": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11723": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38FE"
    },
    "11726": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11727": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11728": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11730": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1508,
        1512
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11731": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11732": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11733": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1551
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11734": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1558
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11735": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1543
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11736": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1558
      ],
      "op": "LT",
      "path": "11"
    },
    "11737": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11738": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E73"
    },
    "11741": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11742": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1599
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11744": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1607
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11745": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1608,
        1609
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11746": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11747": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11748": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11749": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "LT",
      "path": "11"
    },
    "11750": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DF1"
    },
    "11753": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11754": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DF1"
    },
    "11757": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x387F"
    },
    "11760": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11761": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11762": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11764": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MUL",
      "path": "11"
    },
    "11765": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11767": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "11"
    },
    "11768": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "11"
    },
    "11769": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11770": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11771": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "POP",
      "path": "11"
    },
    "11772": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1644,
        1656
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11773": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1640
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11774": {
      "branch": 205,
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1656
      ],
      "op": "GT",
      "path": "11"
    },
    "11775": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E33"
    },
    "11778": {
      "branch": 205,
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11779": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 141,
      "value": "0x40"
    },
    "11781": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11782": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11783": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11785": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11786": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "ADD",
      "path": "11"
    },
    "11787": {
      "op": "DUP6"
    },
    "11788": {
      "op": "SWAP1"
    },
    "11789": {
      "op": "MSTORE"
    },
    "11790": {
      "op": "SWAP1"
    },
    "11791": {
      "op": "DUP2"
    },
    "11792": {
      "op": "ADD"
    },
    "11793": {
      "op": "DUP3"
    },
    "11794": {
      "op": "SWAP1"
    },
    "11795": {
      "op": "MSTORE"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11798": {
      "op": "ADD"
    },
    "11799": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11801": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11802": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11804": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11805": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11806": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "11"
    },
    "11807": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "11"
    },
    "11808": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11809": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11810": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11811": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11813": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11814": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11815": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11816": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11817": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11819": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "ADD",
      "path": "11"
    },
    "11820": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "11821": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11822": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "POP",
      "path": "11"
    },
    "11823": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E60"
    },
    "11826": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11827": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11828": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 142,
      "value": "0x40"
    },
    "11830": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11831": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11832": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11834": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11835": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "ADD",
      "path": "11"
    },
    "11836": {
      "op": "DUP4"
    },
    "11837": {
      "op": "SWAP1"
    },
    "11838": {
      "op": "MSTORE"
    },
    "11839": {
      "op": "SWAP1"
    },
    "11840": {
      "op": "DUP2"
    },
    "11841": {
      "op": "ADD"
    },
    "11842": {
      "op": "DUP5"
    },
    "11843": {
      "op": "SWAP1"
    },
    "11844": {
      "op": "MSTORE"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11847": {
      "op": "ADD"
    },
    "11848": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11850": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11851": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11853": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11854": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11855": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "11"
    },
    "11856": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "11"
    },
    "11857": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11858": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11859": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11860": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11862": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11863": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11864": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11865": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11866": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11868": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "ADD",
      "path": "11"
    },
    "11869": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "11870": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11871": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "POP",
      "path": "11"
    },
    "11872": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11873": {
      "op": "POP"
    },
    "11874": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 143
    },
    "11875": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E6B"
    },
    "11878": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11879": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3750"
    },
    "11882": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11883": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11884": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11885": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "11"
    },
    "11886": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "11"
    },
    "11887": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DD4"
    },
    "11890": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11891": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11892": {
      "op": "POP"
    },
    "11893": {
      "fn": "MerkleProof.processProof",
      "offset": [
        2052,
        2064
      ],
      "op": "SWAP4",
      "path": "11",
      "statement": 144
    },
    "11894": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11895": {
      "op": "POP"
    },
    "11896": {
      "op": "POP"
    },
    "11897": {
      "op": "POP"
    },
    "11898": {
      "fn": "MerkleProof.processProof",
      "jump": "o",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11908": {
      "op": "SHL"
    },
    "11909": {
      "op": "SUB"
    },
    "11910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "2"
    },
    "11912": {
      "op": "EXTCODESIZE"
    },
    "11913": {
      "op": "ISZERO"
    },
    "11914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6E"
    },
    "11917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11921": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11928": {
      "op": "SHL"
    },
    "11929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11937": {
      "op": "SHL"
    },
    "11938": {
      "op": "SUB"
    },
    "11939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "2"
    },
    "11941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "11947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBF"
    },
    "11951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11952": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "11953": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "11963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3964"
    },
    "11966": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "2"
    },
    "11976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "2"
    },
    "11981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "2"
    },
    "11982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "11984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "11985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "11986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EFA"
    },
    "11991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11992": {
      "op": "POP"
    },
    "11993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12005": {
      "op": "NOT"
    },
    "12006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "2"
    },
    "12007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF7"
    },
    "12015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12016": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A1"
    },
    "12022": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F54"
    },
    "12030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F28"
    },
    "12038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "2"
    },
    "12047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "12049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "2"
    },
    "12052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2D"
    },
    "12071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12078": {
      "op": "POP"
    },
    "12079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F4C"
    },
    "12084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 145,
      "value": "0x40"
    },
    "12087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12094": {
      "op": "SHL"
    },
    "12095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "2"
    },
    "12100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "12103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38FE"
    },
    "12107": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "2"
    },
    "12115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12123": {
      "op": "SHL"
    },
    "12124": {
      "op": "SUB"
    },
    "12125": {
      "op": "NOT"
    },
    "12126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "2",
      "statement": 146
    },
    "12127": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12132": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12134": {
      "op": "SHL"
    },
    "12135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "2"
    },
    "12136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12137": {
      "op": "POP"
    },
    "12138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278B"
    },
    "12141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12143": {
      "op": "POP"
    },
    "12144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 147,
      "value": "0x1"
    },
    "12146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12152": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12153": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12160": {
      "op": "SHL"
    },
    "12161": {
      "op": "SUB"
    },
    "12162": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 148
    },
    "12163": {
      "branch": 203,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "2"
    },
    "12164": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FCF"
    },
    "12167": {
      "branch": 203,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12168": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12170": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12177": {
      "op": "SHL"
    },
    "12178": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12179": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12182": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12184": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12185": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "2"
    },
    "12186": {
      "op": "DUP2"
    },
    "12187": {
      "op": "SWAP1"
    },
    "12188": {
      "op": "MSTORE"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12191": {
      "op": "DUP3"
    },
    "12192": {
      "op": "ADD"
    },
    "12193": {
      "op": "MSTORE"
    },
    "12194": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12229": {
      "op": "DUP3"
    },
    "12230": {
      "op": "ADD"
    },
    "12231": {
      "op": "MSTORE"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12234": {
      "op": "ADD"
    },
    "12235": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "12238": {
      "op": "JUMP"
    },
    "12239": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12240": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12242": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12243": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12244": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12245": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12247": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12249": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12250": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12252": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12253": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12254": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12261": {
      "op": "SHL"
    },
    "12262": {
      "op": "SUB"
    },
    "12263": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "12264": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12265": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 149,
      "value": "0x3034"
    },
    "12268": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12269": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12271": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12272": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12278": {
      "op": "SHL"
    },
    "12279": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12280": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12283": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12285": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12286": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "2"
    },
    "12287": {
      "op": "MSTORE"
    },
    "12288": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12292": {
      "op": "DUP3"
    },
    "12293": {
      "op": "ADD"
    },
    "12294": {
      "op": "MSTORE"
    },
    "12295": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12330": {
      "op": "DUP3"
    },
    "12331": {
      "op": "ADD"
    },
    "12332": {
      "op": "MSTORE"
    },
    "12333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12335": {
      "op": "ADD"
    },
    "12336": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC9"
    },
    "12339": {
      "op": "JUMP"
    },
    "12340": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12341": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 150,
      "value": "0x3040"
    },
    "12344": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12346": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12347": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12348": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D79"
    },
    "12351": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12352": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12359": {
      "op": "SHL"
    },
    "12360": {
      "op": "SUB"
    },
    "12361": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 151
    },
    "12362": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "2"
    },
    "12363": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12365": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12366": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12367": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12368": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12370": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12372": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12373": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12375": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12376": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12377": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12378": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12379": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12381": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12382": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12383": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3069"
    },
    "12386": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12387": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12388": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12389": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3738"
    },
    "12392": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12393": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12394": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12395": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12396": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12397": {
      "op": "POP"
    },
    "12398": {
      "op": "POP"
    },
    "12399": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 152,
      "value": "0x0"
    },
    "12401": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12402": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12403": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12404": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12406": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12408": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12409": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12411": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12412": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12413": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12414": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12415": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12422": {
      "op": "SHL"
    },
    "12423": {
      "op": "SUB"
    },
    "12424": {
      "op": "NOT"
    },
    "12425": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12432": {
      "op": "SHL"
    },
    "12433": {
      "op": "SUB"
    },
    "12434": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12435": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12436": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12437": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12438": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "2"
    },
    "12439": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12440": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12441": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12442": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 153
    },
    "12443": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12444": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12445": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12446": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12447": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12480": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12481": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12482": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12483": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12484": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12485": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12486": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12487": {
      "op": "JUMPDEST"
    },
    "12488": {
      "op": "DUP3"
    },
    "12489": {
      "op": "DUP1"
    },
    "12490": {
      "op": "SLOAD"
    },
    "12491": {
      "op": "PUSH2",
      "value": "0x30D3"
    },
    "12494": {
      "op": "SWAP1"
    },
    "12495": {
      "op": "PUSH2",
      "value": "0x35ED"
    },
    "12498": {
      "jump": "i",
      "op": "JUMP"
    },
    "12499": {
      "op": "JUMPDEST"
    },
    "12500": {
      "op": "SWAP1"
    },
    "12501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12503": {
      "op": "MSTORE"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12508": {
      "op": "KECCAK256"
    },
    "12509": {
      "op": "SWAP1"
    },
    "12510": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12512": {
      "op": "ADD"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12515": {
      "op": "SWAP1"
    },
    "12516": {
      "op": "DIV"
    },
    "12517": {
      "op": "DUP2"
    },
    "12518": {
      "op": "ADD"
    },
    "12519": {
      "op": "SWAP3"
    },
    "12520": {
      "op": "DUP3"
    },
    "12521": {
      "op": "PUSH2",
      "value": "0x30F5"
    },
    "12524": {
      "op": "JUMPI"
    },
    "12525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12527": {
      "op": "DUP6"
    },
    "12528": {
      "op": "SSTORE"
    },
    "12529": {
      "op": "PUSH2",
      "value": "0x313B"
    },
    "12532": {
      "op": "JUMP"
    },
    "12533": {
      "op": "JUMPDEST"
    },
    "12534": {
      "op": "DUP3"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12537": {
      "op": "LT"
    },
    "12538": {
      "op": "PUSH2",
      "value": "0x310E"
    },
    "12541": {
      "op": "JUMPI"
    },
    "12542": {
      "op": "DUP1"
    },
    "12543": {
      "op": "MLOAD"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12546": {
      "op": "NOT"
    },
    "12547": {
      "op": "AND"
    },
    "12548": {
      "op": "DUP4"
    },
    "12549": {
      "op": "DUP1"
    },
    "12550": {
      "op": "ADD"
    },
    "12551": {
      "op": "OR"
    },
    "12552": {
      "op": "DUP6"
    },
    "12553": {
      "op": "SSTORE"
    },
    "12554": {
      "op": "PUSH2",
      "value": "0x313B"
    },
    "12557": {
      "op": "JUMP"
    },
    "12558": {
      "op": "JUMPDEST"
    },
    "12559": {
      "op": "DUP3"
    },
    "12560": {
      "op": "DUP1"
    },
    "12561": {
      "op": "ADD"
    },
    "12562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12564": {
      "op": "ADD"
    },
    "12565": {
      "op": "DUP6"
    },
    "12566": {
      "op": "SSTORE"
    },
    "12567": {
      "op": "DUP3"
    },
    "12568": {
      "op": "ISZERO"
    },
    "12569": {
      "op": "PUSH2",
      "value": "0x313B"
    },
    "12572": {
      "op": "JUMPI"
    },
    "12573": {
      "op": "SWAP2"
    },
    "12574": {
      "op": "DUP3"
    },
    "12575": {
      "op": "ADD"
    },
    "12576": {
      "op": "JUMPDEST"
    },
    "12577": {
      "op": "DUP3"
    },
    "12578": {
      "op": "DUP2"
    },
    "12579": {
      "op": "GT"
    },
    "12580": {
      "op": "ISZERO"
    },
    "12581": {
      "op": "PUSH2",
      "value": "0x313B"
    },
    "12584": {
      "op": "JUMPI"
    },
    "12585": {
      "op": "DUP3"
    },
    "12586": {
      "op": "MLOAD"
    },
    "12587": {
      "op": "DUP3"
    },
    "12588": {
      "op": "SSTORE"
    },
    "12589": {
      "op": "SWAP2"
    },
    "12590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12592": {
      "op": "ADD"
    },
    "12593": {
      "op": "SWAP2"
    },
    "12594": {
      "op": "SWAP1"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12597": {
      "op": "ADD"
    },
    "12598": {
      "op": "SWAP1"
    },
    "12599": {
      "op": "PUSH2",
      "value": "0x3120"
    },
    "12602": {
      "op": "JUMP"
    },
    "12603": {
      "op": "JUMPDEST"
    },
    "12604": {
      "op": "POP"
    },
    "12605": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "12608": {
      "op": "SWAP3"
    },
    "12609": {
      "op": "SWAP2"
    },
    "12610": {
      "op": "POP"
    },
    "12611": {
      "op": "PUSH2",
      "value": "0x314B"
    },
    "12614": {
      "jump": "i",
      "op": "JUMP"
    },
    "12615": {
      "op": "JUMPDEST"
    },
    "12616": {
      "op": "POP"
    },
    "12617": {
      "op": "SWAP1"
    },
    "12618": {
      "jump": "o",
      "op": "JUMP"
    },
    "12619": {
      "op": "JUMPDEST"
    },
    "12620": {
      "op": "JUMPDEST"
    },
    "12621": {
      "op": "DUP1"
    },
    "12622": {
      "op": "DUP3"
    },
    "12623": {
      "op": "GT"
    },
    "12624": {
      "op": "ISZERO"
    },
    "12625": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "12628": {
      "op": "JUMPI"
    },
    "12629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12631": {
      "op": "DUP2"
    },
    "12632": {
      "op": "SSTORE"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "PUSH2",
      "value": "0x314C"
    },
    "12639": {
      "op": "JUMP"
    },
    "12640": {
      "op": "JUMPDEST"
    },
    "12641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12647": {
      "op": "SHL"
    },
    "12648": {
      "op": "SUB"
    },
    "12649": {
      "op": "NOT"
    },
    "12650": {
      "op": "DUP2"
    },
    "12651": {
      "op": "AND"
    },
    "12652": {
      "op": "DUP2"
    },
    "12653": {
      "op": "EQ"
    },
    "12654": {
      "op": "PUSH2",
      "value": "0x1318"
    },
    "12657": {
      "op": "JUMPI"
    },
    "12658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12660": {
      "op": "DUP1"
    },
    "12661": {
      "op": "REVERT"
    },
    "12662": {
      "op": "JUMPDEST"
    },
    "12663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12667": {
      "op": "DUP3"
    },
    "12668": {
      "op": "DUP5"
    },
    "12669": {
      "op": "SUB"
    },
    "12670": {
      "op": "SLT"
    },
    "12671": {
      "op": "ISZERO"
    },
    "12672": {
      "op": "PUSH2",
      "value": "0x3188"
    },
    "12675": {
      "op": "JUMPI"
    },
    "12676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12678": {
      "op": "DUP1"
    },
    "12679": {
      "op": "REVERT"
    },
    "12680": {
      "op": "JUMPDEST"
    },
    "12681": {
      "op": "DUP2"
    },
    "12682": {
      "op": "CALLDATALOAD"
    },
    "12683": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "12686": {
      "op": "DUP2"
    },
    "12687": {
      "op": "PUSH2",
      "value": "0x3160"
    },
    "12690": {
      "jump": "i",
      "op": "JUMP"
    },
    "12691": {
      "op": "JUMPDEST"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12694": {
      "op": "JUMPDEST"
    },
    "12695": {
      "op": "DUP4"
    },
    "12696": {
      "op": "DUP2"
    },
    "12697": {
      "op": "LT"
    },
    "12698": {
      "op": "ISZERO"
    },
    "12699": {
      "op": "PUSH2",
      "value": "0x31AE"
    },
    "12702": {
      "op": "JUMPI"
    },
    "12703": {
      "op": "DUP2"
    },
    "12704": {
      "op": "DUP2"
    },
    "12705": {
      "op": "ADD"
    },
    "12706": {
      "op": "MLOAD"
    },
    "12707": {
      "op": "DUP4"
    },
    "12708": {
      "op": "DUP3"
    },
    "12709": {
      "op": "ADD"
    },
    "12710": {
      "op": "MSTORE"
    },
    "12711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12713": {
      "op": "ADD"
    },
    "12714": {
      "op": "PUSH2",
      "value": "0x3196"
    },
    "12717": {
      "op": "JUMP"
    },
    "12718": {
      "op": "JUMPDEST"
    },
    "12719": {
      "op": "DUP4"
    },
    "12720": {
      "op": "DUP2"
    },
    "12721": {
      "op": "GT"
    },
    "12722": {
      "op": "ISZERO"
    },
    "12723": {
      "op": "PUSH2",
      "value": "0x1FF0"
    },
    "12726": {
      "op": "JUMPI"
    },
    "12727": {
      "op": "POP"
    },
    "12728": {
      "op": "POP"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12731": {
      "op": "SWAP2"
    },
    "12732": {
      "op": "ADD"
    },
    "12733": {
      "op": "MSTORE"
    },
    "12734": {
      "jump": "o",
      "op": "JUMP"
    },
    "12735": {
      "op": "JUMPDEST"
    },
    "12736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12738": {
      "op": "DUP2"
    },
    "12739": {
      "op": "MLOAD"
    },
    "12740": {
      "op": "DUP1"
    },
    "12741": {
      "op": "DUP5"
    },
    "12742": {
      "op": "MSTORE"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x31D7"
    },
    "12746": {
      "op": "DUP2"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12749": {
      "op": "DUP7"
    },
    "12750": {
      "op": "ADD"
    },
    "12751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12753": {
      "op": "DUP7"
    },
    "12754": {
      "op": "ADD"
    },
    "12755": {
      "op": "PUSH2",
      "value": "0x3193"
    },
    "12758": {
      "jump": "i",
      "op": "JUMP"
    },
    "12759": {
      "op": "JUMPDEST"
    },
    "12760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12762": {
      "op": "ADD"
    },
    "12763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12765": {
      "op": "NOT"
    },
    "12766": {
      "op": "AND"
    },
    "12767": {
      "op": "SWAP3"
    },
    "12768": {
      "op": "SWAP1"
    },
    "12769": {
      "op": "SWAP3"
    },
    "12770": {
      "op": "ADD"
    },
    "12771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12773": {
      "op": "ADD"
    },
    "12774": {
      "op": "SWAP3"
    },
    "12775": {
      "op": "SWAP2"
    },
    "12776": {
      "op": "POP"
    },
    "12777": {
      "op": "POP"
    },
    "12778": {
      "jump": "o",
      "op": "JUMP"
    },
    "12779": {
      "op": "JUMPDEST"
    },
    "12780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12782": {
      "op": "DUP2"
    },
    "12783": {
      "op": "MSTORE"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12786": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "12789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12791": {
      "op": "DUP4"
    },
    "12792": {
      "op": "ADD"
    },
    "12793": {
      "op": "DUP5"
    },
    "12794": {
      "op": "PUSH2",
      "value": "0x31BF"
    },
    "12797": {
      "jump": "i",
      "op": "JUMP"
    },
    "12798": {
      "op": "JUMPDEST"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12803": {
      "op": "DUP3"
    },
    "12804": {
      "op": "DUP5"
    },
    "12805": {
      "op": "SUB"
    },
    "12806": {
      "op": "SLT"
    },
    "12807": {
      "op": "ISZERO"
    },
    "12808": {
      "op": "PUSH2",
      "value": "0x3210"
    },
    "12811": {
      "op": "JUMPI"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12814": {
      "op": "DUP1"
    },
    "12815": {
      "op": "REVERT"
    },
    "12816": {
      "op": "JUMPDEST"
    },
    "12817": {
      "op": "POP"
    },
    "12818": {
      "op": "CALLDATALOAD"
    },
    "12819": {
      "op": "SWAP2"
    },
    "12820": {
      "op": "SWAP1"
    },
    "12821": {
      "op": "POP"
    },
    "12822": {
      "jump": "o",
      "op": "JUMP"
    },
    "12823": {
      "op": "JUMPDEST"
    },
    "12824": {
      "op": "DUP1"
    },
    "12825": {
      "op": "CALLDATALOAD"
    },
    "12826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12832": {
      "op": "SHL"
    },
    "12833": {
      "op": "SUB"
    },
    "12834": {
      "op": "DUP2"
    },
    "12835": {
      "op": "AND"
    },
    "12836": {
      "op": "DUP2"
    },
    "12837": {
      "op": "EQ"
    },
    "12838": {
      "op": "PUSH2",
      "value": "0x322E"
    },
    "12841": {
      "op": "JUMPI"
    },
    "12842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12844": {
      "op": "DUP1"
    },
    "12845": {
      "op": "REVERT"
    },
    "12846": {
      "op": "JUMPDEST"
    },
    "12847": {
      "op": "SWAP2"
    },
    "12848": {
      "op": "SWAP1"
    },
    "12849": {
      "op": "POP"
    },
    "12850": {
      "jump": "o",
      "op": "JUMP"
    },
    "12851": {
      "op": "JUMPDEST"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12854": {
      "op": "DUP1"
    },
    "12855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12857": {
      "op": "DUP4"
    },
    "12858": {
      "op": "DUP6"
    },
    "12859": {
      "op": "SUB"
    },
    "12860": {
      "op": "SLT"
    },
    "12861": {
      "op": "ISZERO"
    },
    "12862": {
      "op": "PUSH2",
      "value": "0x3246"
    },
    "12865": {
      "op": "JUMPI"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12868": {
      "op": "DUP1"
    },
    "12869": {
      "op": "REVERT"
    },
    "12870": {
      "op": "JUMPDEST"
    },
    "12871": {
      "op": "PUSH2",
      "value": "0x324F"
    },
    "12874": {
      "op": "DUP4"
    },
    "12875": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "12878": {
      "jump": "i",
      "op": "JUMP"
    },
    "12879": {
      "op": "JUMPDEST"
    },
    "12880": {
      "op": "SWAP5"
    },
    "12881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12883": {
      "op": "SWAP4"
    },
    "12884": {
      "op": "SWAP1"
    },
    "12885": {
      "op": "SWAP4"
    },
    "12886": {
      "op": "ADD"
    },
    "12887": {
      "op": "CALLDATALOAD"
    },
    "12888": {
      "op": "SWAP4"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "op": "POP"
    },
    "12891": {
      "op": "POP"
    },
    "12892": {
      "jump": "o",
      "op": "JUMP"
    },
    "12893": {
      "op": "JUMPDEST"
    },
    "12894": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12901": {
      "op": "SHL"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12904": {
      "op": "MSTORE"
    },
    "12905": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12909": {
      "op": "MSTORE"
    },
    "12910": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12914": {
      "op": "REVERT"
    },
    "12915": {
      "op": "JUMPDEST"
    },
    "12916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12918": {
      "op": "MLOAD"
    },
    "12919": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12921": {
      "op": "DUP3"
    },
    "12922": {
      "op": "ADD"
    },
    "12923": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12925": {
      "op": "NOT"
    },
    "12926": {
      "op": "AND"
    },
    "12927": {
      "op": "DUP2"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12938": {
      "op": "DUP2"
    },
    "12939": {
      "op": "GT"
    },
    "12940": {
      "op": "DUP3"
    },
    "12941": {
      "op": "DUP3"
    },
    "12942": {
      "op": "LT"
    },
    "12943": {
      "op": "OR"
    },
    "12944": {
      "op": "ISZERO"
    },
    "12945": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "12948": {
      "op": "JUMPI"
    },
    "12949": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "12952": {
      "op": "PUSH2",
      "value": "0x325D"
    },
    "12955": {
      "jump": "i",
      "op": "JUMP"
    },
    "12956": {
      "op": "JUMPDEST"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12959": {
      "op": "MSTORE"
    },
    "12960": {
      "op": "SWAP2"
    },
    "12961": {
      "op": "SWAP1"
    },
    "12962": {
      "op": "POP"
    },
    "12963": {
      "jump": "o",
      "op": "JUMP"
    },
    "12964": {
      "op": "JUMPDEST"
    },
    "12965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12967": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12976": {
      "op": "DUP4"
    },
    "12977": {
      "op": "GT"
    },
    "12978": {
      "op": "ISZERO"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x32BE"
    },
    "12982": {
      "op": "JUMPI"
    },
    "12983": {
      "op": "PUSH2",
      "value": "0x32BE"
    },
    "12986": {
      "op": "PUSH2",
      "value": "0x325D"
    },
    "12989": {
      "jump": "i",
      "op": "JUMP"
    },
    "12990": {
      "op": "JUMPDEST"
    },
    "12991": {
      "op": "PUSH2",
      "value": "0x32D1"
    },
    "12994": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12996": {
      "op": "DUP5"
    },
    "12997": {
      "op": "ADD"
    },
    "12998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13000": {
      "op": "NOT"
    },
    "13001": {
      "op": "AND"
    },
    "13002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13004": {
      "op": "ADD"
    },
    "13005": {
      "op": "PUSH2",
      "value": "0x3273"
    },
    "13008": {
      "jump": "i",
      "op": "JUMP"
    },
    "13009": {
      "op": "JUMPDEST"
    },
    "13010": {
      "op": "SWAP1"
    },
    "13011": {
      "op": "POP"
    },
    "13012": {
      "op": "DUP3"
    },
    "13013": {
      "op": "DUP2"
    },
    "13014": {
      "op": "MSTORE"
    },
    "13015": {
      "op": "DUP4"
    },
    "13016": {
      "op": "DUP4"
    },
    "13017": {
      "op": "DUP4"
    },
    "13018": {
      "op": "ADD"
    },
    "13019": {
      "op": "GT"
    },
    "13020": {
      "op": "ISZERO"
    },
    "13021": {
      "op": "PUSH2",
      "value": "0x32E5"
    },
    "13024": {
      "op": "JUMPI"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13027": {
      "op": "DUP1"
    },
    "13028": {
      "op": "REVERT"
    },
    "13029": {
      "op": "JUMPDEST"
    },
    "13030": {
      "op": "DUP3"
    },
    "13031": {
      "op": "DUP3"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13034": {
      "op": "DUP4"
    },
    "13035": {
      "op": "ADD"
    },
    "13036": {
      "op": "CALLDATACOPY"
    },
    "13037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13041": {
      "op": "DUP5"
    },
    "13042": {
      "op": "DUP4"
    },
    "13043": {
      "op": "ADD"
    },
    "13044": {
      "op": "ADD"
    },
    "13045": {
      "op": "MSTORE"
    },
    "13046": {
      "op": "SWAP4"
    },
    "13047": {
      "op": "SWAP3"
    },
    "13048": {
      "op": "POP"
    },
    "13049": {
      "op": "POP"
    },
    "13050": {
      "op": "POP"
    },
    "13051": {
      "jump": "o",
      "op": "JUMP"
    },
    "13052": {
      "op": "JUMPDEST"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13057": {
      "op": "DUP3"
    },
    "13058": {
      "op": "DUP5"
    },
    "13059": {
      "op": "SUB"
    },
    "13060": {
      "op": "SLT"
    },
    "13061": {
      "op": "ISZERO"
    },
    "13062": {
      "op": "PUSH2",
      "value": "0x330E"
    },
    "13065": {
      "op": "JUMPI"
    },
    "13066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13068": {
      "op": "DUP1"
    },
    "13069": {
      "op": "REVERT"
    },
    "13070": {
      "op": "JUMPDEST"
    },
    "13071": {
      "op": "DUP2"
    },
    "13072": {
      "op": "CALLDATALOAD"
    },
    "13073": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13082": {
      "op": "DUP2"
    },
    "13083": {
      "op": "GT"
    },
    "13084": {
      "op": "ISZERO"
    },
    "13085": {
      "op": "PUSH2",
      "value": "0x3325"
    },
    "13088": {
      "op": "JUMPI"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13091": {
      "op": "DUP1"
    },
    "13092": {
      "op": "REVERT"
    },
    "13093": {
      "op": "JUMPDEST"
    },
    "13094": {
      "op": "DUP3"
    },
    "13095": {
      "op": "ADD"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13098": {
      "op": "DUP2"
    },
    "13099": {
      "op": "ADD"
    },
    "13100": {
      "op": "DUP5"
    },
    "13101": {
      "op": "SGT"
    },
    "13102": {
      "op": "PUSH2",
      "value": "0x3336"
    },
    "13105": {
      "op": "JUMPI"
    },
    "13106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13108": {
      "op": "DUP1"
    },
    "13109": {
      "op": "REVERT"
    },
    "13110": {
      "op": "JUMPDEST"
    },
    "13111": {
      "op": "PUSH2",
      "value": "0x278B"
    },
    "13114": {
      "op": "DUP5"
    },
    "13115": {
      "op": "DUP3"
    },
    "13116": {
      "op": "CALLDATALOAD"
    },
    "13117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13119": {
      "op": "DUP5"
    },
    "13120": {
      "op": "ADD"
    },
    "13121": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13124": {
      "jump": "i",
      "op": "JUMP"
    },
    "13125": {
      "op": "JUMPDEST"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13128": {
      "op": "DUP1"
    },
    "13129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13133": {
      "op": "DUP5"
    },
    "13134": {
      "op": "DUP7"
    },
    "13135": {
      "op": "SUB"
    },
    "13136": {
      "op": "SLT"
    },
    "13137": {
      "op": "ISZERO"
    },
    "13138": {
      "op": "PUSH2",
      "value": "0x335A"
    },
    "13141": {
      "op": "JUMPI"
    },
    "13142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13144": {
      "op": "DUP1"
    },
    "13145": {
      "op": "REVERT"
    },
    "13146": {
      "op": "JUMPDEST"
    },
    "13147": {
      "op": "PUSH2",
      "value": "0x3363"
    },
    "13150": {
      "op": "DUP5"
    },
    "13151": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13154": {
      "jump": "i",
      "op": "JUMP"
    },
    "13155": {
      "op": "JUMPDEST"
    },
    "13156": {
      "op": "SWAP3"
    },
    "13157": {
      "op": "POP"
    },
    "13158": {
      "op": "PUSH2",
      "value": "0x3371"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13163": {
      "op": "DUP6"
    },
    "13164": {
      "op": "ADD"
    },
    "13165": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13168": {
      "jump": "i",
      "op": "JUMP"
    },
    "13169": {
      "op": "JUMPDEST"
    },
    "13170": {
      "op": "SWAP2"
    },
    "13171": {
      "op": "POP"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13174": {
      "op": "DUP5"
    },
    "13175": {
      "op": "ADD"
    },
    "13176": {
      "op": "CALLDATALOAD"
    },
    "13177": {
      "op": "SWAP1"
    },
    "13178": {
      "op": "POP"
    },
    "13179": {
      "op": "SWAP3"
    },
    "13180": {
      "op": "POP"
    },
    "13181": {
      "op": "SWAP3"
    },
    "13182": {
      "op": "POP"
    },
    "13183": {
      "op": "SWAP3"
    },
    "13184": {
      "jump": "o",
      "op": "JUMP"
    },
    "13185": {
      "op": "JUMPDEST"
    },
    "13186": {
      "op": "DUP1"
    },
    "13187": {
      "op": "CALLDATALOAD"
    },
    "13188": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13190": {
      "op": "DUP2"
    },
    "13191": {
      "op": "AND"
    },
    "13192": {
      "op": "DUP2"
    },
    "13193": {
      "op": "EQ"
    },
    "13194": {
      "op": "PUSH2",
      "value": "0x322E"
    },
    "13197": {
      "op": "JUMPI"
    },
    "13198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13200": {
      "op": "DUP1"
    },
    "13201": {
      "op": "REVERT"
    },
    "13202": {
      "op": "JUMPDEST"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13207": {
      "op": "DUP3"
    },
    "13208": {
      "op": "DUP5"
    },
    "13209": {
      "op": "SUB"
    },
    "13210": {
      "op": "SLT"
    },
    "13211": {
      "op": "ISZERO"
    },
    "13212": {
      "op": "PUSH2",
      "value": "0x33A4"
    },
    "13215": {
      "op": "JUMPI"
    },
    "13216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13218": {
      "op": "DUP1"
    },
    "13219": {
      "op": "REVERT"
    },
    "13220": {
      "op": "JUMPDEST"
    },
    "13221": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "13224": {
      "op": "DUP3"
    },
    "13225": {
      "op": "PUSH2",
      "value": "0x3381"
    },
    "13228": {
      "jump": "i",
      "op": "JUMP"
    },
    "13229": {
      "op": "JUMPDEST"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13234": {
      "op": "DUP3"
    },
    "13235": {
      "op": "DUP5"
    },
    "13236": {
      "op": "SUB"
    },
    "13237": {
      "op": "SLT"
    },
    "13238": {
      "op": "ISZERO"
    },
    "13239": {
      "op": "PUSH2",
      "value": "0x33BF"
    },
    "13242": {
      "op": "JUMPI"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13245": {
      "op": "DUP1"
    },
    "13246": {
      "op": "REVERT"
    },
    "13247": {
      "op": "JUMPDEST"
    },
    "13248": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "13251": {
      "op": "DUP3"
    },
    "13252": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13255": {
      "jump": "i",
      "op": "JUMP"
    },
    "13256": {
      "op": "JUMPDEST"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13259": {
      "op": "DUP1"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13262": {
      "op": "DUP4"
    },
    "13263": {
      "op": "DUP6"
    },
    "13264": {
      "op": "SUB"
    },
    "13265": {
      "op": "SLT"
    },
    "13266": {
      "op": "ISZERO"
    },
    "13267": {
      "op": "PUSH2",
      "value": "0x33DB"
    },
    "13270": {
      "op": "JUMPI"
    },
    "13271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13273": {
      "op": "DUP1"
    },
    "13274": {
      "op": "REVERT"
    },
    "13275": {
      "op": "JUMPDEST"
    },
    "13276": {
      "op": "PUSH2",
      "value": "0x33E4"
    },
    "13279": {
      "op": "DUP4"
    },
    "13280": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13283": {
      "jump": "i",
      "op": "JUMP"
    },
    "13284": {
      "op": "JUMPDEST"
    },
    "13285": {
      "op": "SWAP2"
    },
    "13286": {
      "op": "POP"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13289": {
      "op": "DUP4"
    },
    "13290": {
      "op": "ADD"
    },
    "13291": {
      "op": "CALLDATALOAD"
    },
    "13292": {
      "op": "DUP1"
    },
    "13293": {
      "op": "ISZERO"
    },
    "13294": {
      "op": "ISZERO"
    },
    "13295": {
      "op": "DUP2"
    },
    "13296": {
      "op": "EQ"
    },
    "13297": {
      "op": "PUSH2",
      "value": "0x33F9"
    },
    "13300": {
      "op": "JUMPI"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13303": {
      "op": "DUP1"
    },
    "13304": {
      "op": "REVERT"
    },
    "13305": {
      "op": "JUMPDEST"
    },
    "13306": {
      "op": "DUP1"
    },
    "13307": {
      "op": "SWAP2"
    },
    "13308": {
      "op": "POP"
    },
    "13309": {
      "op": "POP"
    },
    "13310": {
      "op": "SWAP3"
    },
    "13311": {
      "op": "POP"
    },
    "13312": {
      "op": "SWAP3"
    },
    "13313": {
      "op": "SWAP1"
    },
    "13314": {
      "op": "POP"
    },
    "13315": {
      "jump": "o",
      "op": "JUMP"
    },
    "13316": {
      "op": "JUMPDEST"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13319": {
      "op": "DUP1"
    },
    "13320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13322": {
      "op": "DUP4"
    },
    "13323": {
      "op": "DUP6"
    },
    "13324": {
      "op": "SUB"
    },
    "13325": {
      "op": "SLT"
    },
    "13326": {
      "op": "ISZERO"
    },
    "13327": {
      "op": "PUSH2",
      "value": "0x3417"
    },
    "13330": {
      "op": "JUMPI"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13333": {
      "op": "DUP1"
    },
    "13334": {
      "op": "REVERT"
    },
    "13335": {
      "op": "JUMPDEST"
    },
    "13336": {
      "op": "PUSH2",
      "value": "0x3420"
    },
    "13339": {
      "op": "DUP4"
    },
    "13340": {
      "op": "PUSH2",
      "value": "0x3381"
    },
    "13343": {
      "jump": "i",
      "op": "JUMP"
    },
    "13344": {
      "op": "JUMPDEST"
    },
    "13345": {
      "op": "SWAP2"
    },
    "13346": {
      "op": "POP"
    },
    "13347": {
      "op": "PUSH2",
      "value": "0x342E"
    },
    "13350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13352": {
      "op": "DUP5"
    },
    "13353": {
      "op": "ADD"
    },
    "13354": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13357": {
      "jump": "i",
      "op": "JUMP"
    },
    "13358": {
      "op": "JUMPDEST"
    },
    "13359": {
      "op": "SWAP1"
    },
    "13360": {
      "op": "POP"
    },
    "13361": {
      "op": "SWAP3"
    },
    "13362": {
      "op": "POP"
    },
    "13363": {
      "op": "SWAP3"
    },
    "13364": {
      "op": "SWAP1"
    },
    "13365": {
      "op": "POP"
    },
    "13366": {
      "jump": "o",
      "op": "JUMP"
    },
    "13367": {
      "op": "JUMPDEST"
    },
    "13368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13370": {
      "op": "DUP1"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13373": {
      "op": "DUP4"
    },
    "13374": {
      "op": "DUP6"
    },
    "13375": {
      "op": "SUB"
    },
    "13376": {
      "op": "SLT"
    },
    "13377": {
      "op": "ISZERO"
    },
    "13378": {
      "op": "PUSH2",
      "value": "0x344A"
    },
    "13381": {
      "op": "JUMPI"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13384": {
      "op": "DUP1"
    },
    "13385": {
      "op": "REVERT"
    },
    "13386": {
      "op": "JUMPDEST"
    },
    "13387": {
      "op": "PUSH2",
      "value": "0x3453"
    },
    "13390": {
      "op": "DUP4"
    },
    "13391": {
      "op": "PUSH2",
      "value": "0x3381"
    },
    "13394": {
      "jump": "i",
      "op": "JUMP"
    },
    "13395": {
      "op": "JUMPDEST"
    },
    "13396": {
      "op": "SWAP2"
    },
    "13397": {
      "op": "POP"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13400": {
      "op": "DUP1"
    },
    "13401": {
      "op": "DUP5"
    },
    "13402": {
      "op": "ADD"
    },
    "13403": {
      "op": "CALLDATALOAD"
    },
    "13404": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13413": {
      "op": "DUP1"
    },
    "13414": {
      "op": "DUP3"
    },
    "13415": {
      "op": "GT"
    },
    "13416": {
      "op": "ISZERO"
    },
    "13417": {
      "op": "PUSH2",
      "value": "0x3471"
    },
    "13420": {
      "op": "JUMPI"
    },
    "13421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13423": {
      "op": "DUP1"
    },
    "13424": {
      "op": "REVERT"
    },
    "13425": {
      "op": "JUMPDEST"
    },
    "13426": {
      "op": "DUP2"
    },
    "13427": {
      "op": "DUP7"
    },
    "13428": {
      "op": "ADD"
    },
    "13429": {
      "op": "SWAP2"
    },
    "13430": {
      "op": "POP"
    },
    "13431": {
      "op": "DUP7"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13434": {
      "op": "DUP4"
    },
    "13435": {
      "op": "ADD"
    },
    "13436": {
      "op": "SLT"
    },
    "13437": {
      "op": "PUSH2",
      "value": "0x3485"
    },
    "13440": {
      "op": "JUMPI"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13443": {
      "op": "DUP1"
    },
    "13444": {
      "op": "REVERT"
    },
    "13445": {
      "op": "JUMPDEST"
    },
    "13446": {
      "op": "DUP2"
    },
    "13447": {
      "op": "CALLDATALOAD"
    },
    "13448": {
      "op": "DUP2"
    },
    "13449": {
      "op": "DUP2"
    },
    "13450": {
      "op": "GT"
    },
    "13451": {
      "op": "ISZERO"
    },
    "13452": {
      "op": "PUSH2",
      "value": "0x3497"
    },
    "13455": {
      "op": "JUMPI"
    },
    "13456": {
      "op": "PUSH2",
      "value": "0x3497"
    },
    "13459": {
      "op": "PUSH2",
      "value": "0x325D"
    },
    "13462": {
      "jump": "i",
      "op": "JUMP"
    },
    "13463": {
      "op": "JUMPDEST"
    },
    "13464": {
      "op": "DUP1"
    },
    "13465": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13467": {
      "op": "SHL"
    },
    "13468": {
      "op": "SWAP2"
    },
    "13469": {
      "op": "POP"
    },
    "13470": {
      "op": "PUSH2",
      "value": "0x34A8"
    },
    "13473": {
      "op": "DUP5"
    },
    "13474": {
      "op": "DUP4"
    },
    "13475": {
      "op": "ADD"
    },
    "13476": {
      "op": "PUSH2",
      "value": "0x3273"
    },
    "13479": {
      "jump": "i",
      "op": "JUMP"
    },
    "13480": {
      "op": "JUMPDEST"
    },
    "13481": {
      "op": "DUP2"
    },
    "13482": {
      "op": "DUP2"
    },
    "13483": {
      "op": "MSTORE"
    },
    "13484": {
      "op": "SWAP2"
    },
    "13485": {
      "op": "DUP4"
    },
    "13486": {
      "op": "ADD"
    },
    "13487": {
      "op": "DUP5"
    },
    "13488": {
      "op": "ADD"
    },
    "13489": {
      "op": "SWAP2"
    },
    "13490": {
      "op": "DUP5"
    },
    "13491": {
      "op": "DUP2"
    },
    "13492": {
      "op": "ADD"
    },
    "13493": {
      "op": "SWAP1"
    },
    "13494": {
      "op": "DUP10"
    },
    "13495": {
      "op": "DUP5"
    },
    "13496": {
      "op": "GT"
    },
    "13497": {
      "op": "ISZERO"
    },
    "13498": {
      "op": "PUSH2",
      "value": "0x34C2"
    },
    "13501": {
      "op": "JUMPI"
    },
    "13502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13504": {
      "op": "DUP1"
    },
    "13505": {
      "op": "REVERT"
    },
    "13506": {
      "op": "JUMPDEST"
    },
    "13507": {
      "op": "SWAP4"
    },
    "13508": {
      "op": "DUP6"
    },
    "13509": {
      "op": "ADD"
    },
    "13510": {
      "op": "SWAP4"
    },
    "13511": {
      "op": "JUMPDEST"
    },
    "13512": {
      "op": "DUP4"
    },
    "13513": {
      "op": "DUP6"
    },
    "13514": {
      "op": "LT"
    },
    "13515": {
      "op": "ISZERO"
    },
    "13516": {
      "op": "PUSH2",
      "value": "0x34E0"
    },
    "13519": {
      "op": "JUMPI"
    },
    "13520": {
      "op": "DUP5"
    },
    "13521": {
      "op": "CALLDATALOAD"
    },
    "13522": {
      "op": "DUP3"
    },
    "13523": {
      "op": "MSTORE"
    },
    "13524": {
      "op": "SWAP4"
    },
    "13525": {
      "op": "DUP6"
    },
    "13526": {
      "op": "ADD"
    },
    "13527": {
      "op": "SWAP4"
    },
    "13528": {
      "op": "SWAP1"
    },
    "13529": {
      "op": "DUP6"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "SWAP1"
    },
    "13532": {
      "op": "PUSH2",
      "value": "0x34C7"
    },
    "13535": {
      "op": "JUMP"
    },
    "13536": {
      "op": "JUMPDEST"
    },
    "13537": {
      "op": "DUP1"
    },
    "13538": {
      "op": "SWAP7"
    },
    "13539": {
      "op": "POP"
    },
    "13540": {
      "op": "POP"
    },
    "13541": {
      "op": "POP"
    },
    "13542": {
      "op": "POP"
    },
    "13543": {
      "op": "POP"
    },
    "13544": {
      "op": "POP"
    },
    "13545": {
      "op": "POP"
    },
    "13546": {
      "op": "SWAP3"
    },
    "13547": {
      "op": "POP"
    },
    "13548": {
      "op": "SWAP3"
    },
    "13549": {
      "op": "SWAP1"
    },
    "13550": {
      "op": "POP"
    },
    "13551": {
      "jump": "o",
      "op": "JUMP"
    },
    "13552": {
      "op": "JUMPDEST"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13555": {
      "op": "DUP1"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13558": {
      "op": "DUP1"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13561": {
      "op": "DUP6"
    },
    "13562": {
      "op": "DUP8"
    },
    "13563": {
      "op": "SUB"
    },
    "13564": {
      "op": "SLT"
    },
    "13565": {
      "op": "ISZERO"
    },
    "13566": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13569": {
      "op": "JUMPI"
    },
    "13570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13572": {
      "op": "DUP1"
    },
    "13573": {
      "op": "REVERT"
    },
    "13574": {
      "op": "JUMPDEST"
    },
    "13575": {
      "op": "PUSH2",
      "value": "0x350F"
    },
    "13578": {
      "op": "DUP6"
    },
    "13579": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13582": {
      "jump": "i",
      "op": "JUMP"
    },
    "13583": {
      "op": "JUMPDEST"
    },
    "13584": {
      "op": "SWAP4"
    },
    "13585": {
      "op": "POP"
    },
    "13586": {
      "op": "PUSH2",
      "value": "0x351D"
    },
    "13589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13591": {
      "op": "DUP7"
    },
    "13592": {
      "op": "ADD"
    },
    "13593": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13596": {
      "jump": "i",
      "op": "JUMP"
    },
    "13597": {
      "op": "JUMPDEST"
    },
    "13598": {
      "op": "SWAP3"
    },
    "13599": {
      "op": "POP"
    },
    "13600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13602": {
      "op": "DUP6"
    },
    "13603": {
      "op": "ADD"
    },
    "13604": {
      "op": "CALLDATALOAD"
    },
    "13605": {
      "op": "SWAP2"
    },
    "13606": {
      "op": "POP"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13609": {
      "op": "DUP6"
    },
    "13610": {
      "op": "ADD"
    },
    "13611": {
      "op": "CALLDATALOAD"
    },
    "13612": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13621": {
      "op": "DUP2"
    },
    "13622": {
      "op": "GT"
    },
    "13623": {
      "op": "ISZERO"
    },
    "13624": {
      "op": "PUSH2",
      "value": "0x3540"
    },
    "13627": {
      "op": "JUMPI"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13630": {
      "op": "DUP1"
    },
    "13631": {
      "op": "REVERT"
    },
    "13632": {
      "op": "JUMPDEST"
    },
    "13633": {
      "op": "DUP6"
    },
    "13634": {
      "op": "ADD"
    },
    "13635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13637": {
      "op": "DUP2"
    },
    "13638": {
      "op": "ADD"
    },
    "13639": {
      "op": "DUP8"
    },
    "13640": {
      "op": "SGT"
    },
    "13641": {
      "op": "PUSH2",
      "value": "0x3551"
    },
    "13644": {
      "op": "JUMPI"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13647": {
      "op": "DUP1"
    },
    "13648": {
      "op": "REVERT"
    },
    "13649": {
      "op": "JUMPDEST"
    },
    "13650": {
      "op": "PUSH2",
      "value": "0x3560"
    },
    "13653": {
      "op": "DUP8"
    },
    "13654": {
      "op": "DUP3"
    },
    "13655": {
      "op": "CALLDATALOAD"
    },
    "13656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13658": {
      "op": "DUP5"
    },
    "13659": {
      "op": "ADD"
    },
    "13660": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13663": {
      "jump": "i",
      "op": "JUMP"
    },
    "13664": {
      "op": "JUMPDEST"
    },
    "13665": {
      "op": "SWAP2"
    },
    "13666": {
      "op": "POP"
    },
    "13667": {
      "op": "POP"
    },
    "13668": {
      "op": "SWAP3"
    },
    "13669": {
      "op": "SWAP6"
    },
    "13670": {
      "op": "SWAP2"
    },
    "13671": {
      "op": "SWAP5"
    },
    "13672": {
      "op": "POP"
    },
    "13673": {
      "op": "SWAP3"
    },
    "13674": {
      "op": "POP"
    },
    "13675": {
      "jump": "o",
      "op": "JUMP"
    },
    "13676": {
      "op": "JUMPDEST"
    },
    "13677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13679": {
      "op": "DUP1"
    },
    "13680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13682": {
      "op": "DUP4"
    },
    "13683": {
      "op": "DUP6"
    },
    "13684": {
      "op": "SUB"
    },
    "13685": {
      "op": "SLT"
    },
    "13686": {
      "op": "ISZERO"
    },
    "13687": {
      "op": "PUSH2",
      "value": "0x357F"
    },
    "13690": {
      "op": "JUMPI"
    },
    "13691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13693": {
      "op": "DUP1"
    },
    "13694": {
      "op": "REVERT"
    },
    "13695": {
      "op": "JUMPDEST"
    },
    "13696": {
      "op": "PUSH2",
      "value": "0x3420"
    },
    "13699": {
      "op": "DUP4"
    },
    "13700": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13703": {
      "jump": "i",
      "op": "JUMP"
    },
    "13704": {
      "op": "JUMPDEST"
    },
    "13705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13707": {
      "op": "DUP1"
    },
    "13708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13710": {
      "op": "DUP1"
    },
    "13711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13715": {
      "op": "DUP7"
    },
    "13716": {
      "op": "DUP9"
    },
    "13717": {
      "op": "SUB"
    },
    "13718": {
      "op": "SLT"
    },
    "13719": {
      "op": "ISZERO"
    },
    "13720": {
      "op": "PUSH2",
      "value": "0x35A0"
    },
    "13723": {
      "op": "JUMPI"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13726": {
      "op": "DUP1"
    },
    "13727": {
      "op": "REVERT"
    },
    "13728": {
      "op": "JUMPDEST"
    },
    "13729": {
      "op": "PUSH2",
      "value": "0x35A9"
    },
    "13732": {
      "op": "DUP7"
    },
    "13733": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13736": {
      "jump": "i",
      "op": "JUMP"
    },
    "13737": {
      "op": "JUMPDEST"
    },
    "13738": {
      "op": "SWAP5"
    },
    "13739": {
      "op": "POP"
    },
    "13740": {
      "op": "PUSH2",
      "value": "0x35B7"
    },
    "13743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13745": {
      "op": "DUP8"
    },
    "13746": {
      "op": "ADD"
    },
    "13747": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13750": {
      "jump": "i",
      "op": "JUMP"
    },
    "13751": {
      "op": "JUMPDEST"
    },
    "13752": {
      "op": "SWAP4"
    },
    "13753": {
      "op": "POP"
    },
    "13754": {
      "op": "PUSH2",
      "value": "0x35C5"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13759": {
      "op": "DUP8"
    },
    "13760": {
      "op": "ADD"
    },
    "13761": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13764": {
      "jump": "i",
      "op": "JUMP"
    },
    "13765": {
      "op": "JUMPDEST"
    },
    "13766": {
      "op": "SWAP3"
    },
    "13767": {
      "op": "POP"
    },
    "13768": {
      "op": "PUSH2",
      "value": "0x35D3"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13773": {
      "op": "DUP8"
    },
    "13774": {
      "op": "ADD"
    },
    "13775": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13778": {
      "jump": "i",
      "op": "JUMP"
    },
    "13779": {
      "op": "JUMPDEST"
    },
    "13780": {
      "op": "SWAP2"
    },
    "13781": {
      "op": "POP"
    },
    "13782": {
      "op": "PUSH2",
      "value": "0x35E1"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13787": {
      "op": "DUP8"
    },
    "13788": {
      "op": "ADD"
    },
    "13789": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "13792": {
      "jump": "i",
      "op": "JUMP"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "SWAP1"
    },
    "13795": {
      "op": "POP"
    },
    "13796": {
      "op": "SWAP3"
    },
    "13797": {
      "op": "SWAP6"
    },
    "13798": {
      "op": "POP"
    },
    "13799": {
      "op": "SWAP3"
    },
    "13800": {
      "op": "SWAP6"
    },
    "13801": {
      "op": "SWAP1"
    },
    "13802": {
      "op": "SWAP4"
    },
    "13803": {
      "op": "POP"
    },
    "13804": {
      "jump": "o",
      "op": "JUMP"
    },
    "13805": {
      "op": "JUMPDEST"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13808": {
      "op": "DUP2"
    },
    "13809": {
      "op": "DUP2"
    },
    "13810": {
      "op": "SHR"
    },
    "13811": {
      "op": "SWAP1"
    },
    "13812": {
      "op": "DUP3"
    },
    "13813": {
      "op": "AND"
    },
    "13814": {
      "op": "DUP1"
    },
    "13815": {
      "op": "PUSH2",
      "value": "0x3601"
    },
    "13818": {
      "op": "JUMPI"
    },
    "13819": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13821": {
      "op": "DUP3"
    },
    "13822": {
      "op": "AND"
    },
    "13823": {
      "op": "SWAP2"
    },
    "13824": {
      "op": "POP"
    },
    "13825": {
      "op": "JUMPDEST"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13828": {
      "op": "DUP3"
    },
    "13829": {
      "op": "LT"
    },
    "13830": {
      "op": "DUP2"
    },
    "13831": {
      "op": "EQ"
    },
    "13832": {
      "op": "ISZERO"
    },
    "13833": {
      "op": "PUSH2",
      "value": "0x3622"
    },
    "13836": {
      "op": "JUMPI"
    },
    "13837": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13844": {
      "op": "SHL"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13847": {
      "op": "MSTORE"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13852": {
      "op": "MSTORE"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13857": {
      "op": "REVERT"
    },
    "13858": {
      "op": "JUMPDEST"
    },
    "13859": {
      "op": "POP"
    },
    "13860": {
      "op": "SWAP2"
    },
    "13861": {
      "op": "SWAP1"
    },
    "13862": {
      "op": "POP"
    },
    "13863": {
      "jump": "o",
      "op": "JUMP"
    },
    "13864": {
      "op": "JUMPDEST"
    },
    "13865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13867": {
      "op": "DUP1"
    },
    "13868": {
      "op": "DUP3"
    },
    "13869": {
      "op": "MSTORE"
    },
    "13870": {
      "op": "DUP2"
    },
    "13871": {
      "op": "DUP2"
    },
    "13872": {
      "op": "ADD"
    },
    "13873": {
      "op": "MSTORE"
    },
    "13874": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13909": {
      "op": "DUP3"
    },
    "13910": {
      "op": "ADD"
    },
    "13911": {
      "op": "MSTORE"
    },
    "13912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13914": {
      "op": "ADD"
    },
    "13915": {
      "op": "SWAP1"
    },
    "13916": {
      "jump": "o",
      "op": "JUMP"
    },
    "13917": {
      "op": "JUMPDEST"
    },
    "13918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13925": {
      "op": "SHL"
    },
    "13926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13928": {
      "op": "MSTORE"
    },
    "13929": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13933": {
      "op": "MSTORE"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13938": {
      "op": "REVERT"
    },
    "13939": {
      "op": "JUMPDEST"
    },
    "13940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13942": {
      "op": "DUP3"
    },
    "13943": {
      "op": "DUP3"
    },
    "13944": {
      "op": "LT"
    },
    "13945": {
      "op": "ISZERO"
    },
    "13946": {
      "op": "PUSH2",
      "value": "0x3685"
    },
    "13949": {
      "op": "JUMPI"
    },
    "13950": {
      "op": "PUSH2",
      "value": "0x3685"
    },
    "13953": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "13956": {
      "jump": "i",
      "op": "JUMP"
    },
    "13957": {
      "op": "JUMPDEST"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "op": "SUB"
    },
    "13960": {
      "op": "SWAP1"
    },
    "13961": {
      "jump": "o",
      "op": "JUMP"
    },
    "13962": {
      "op": "JUMPDEST"
    },
    "13963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13965": {
      "op": "DUP1"
    },
    "13966": {
      "op": "DUP3"
    },
    "13967": {
      "op": "MSTORE"
    },
    "13968": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13970": {
      "op": "SWAP1"
    },
    "13971": {
      "op": "DUP3"
    },
    "13972": {
      "op": "ADD"
    },
    "13973": {
      "op": "MSTORE"
    },
    "13974": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14009": {
      "op": "DUP3"
    },
    "14010": {
      "op": "ADD"
    },
    "14011": {
      "op": "MSTORE"
    },
    "14012": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14030": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14032": {
      "op": "SHL"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14035": {
      "op": "DUP3"
    },
    "14036": {
      "op": "ADD"
    },
    "14037": {
      "op": "MSTORE"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14040": {
      "op": "ADD"
    },
    "14041": {
      "op": "SWAP1"
    },
    "14042": {
      "jump": "o",
      "op": "JUMP"
    },
    "14043": {
      "op": "JUMPDEST"
    },
    "14044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14046": {
      "op": "DUP1"
    },
    "14047": {
      "op": "DUP3"
    },
    "14048": {
      "op": "MSTORE"
    },
    "14049": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "14051": {
      "op": "SWAP1"
    },
    "14052": {
      "op": "DUP3"
    },
    "14053": {
      "op": "ADD"
    },
    "14054": {
      "op": "MSTORE"
    },
    "14055": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "14088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14090": {
      "op": "DUP3"
    },
    "14091": {
      "op": "ADD"
    },
    "14092": {
      "op": "MSTORE"
    },
    "14093": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "14126": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14128": {
      "op": "DUP3"
    },
    "14129": {
      "op": "ADD"
    },
    "14130": {
      "op": "MSTORE"
    },
    "14131": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14133": {
      "op": "ADD"
    },
    "14134": {
      "op": "SWAP1"
    },
    "14135": {
      "jump": "o",
      "op": "JUMP"
    },
    "14136": {
      "op": "JUMPDEST"
    },
    "14137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14139": {
      "op": "DUP3"
    },
    "14140": {
      "op": "NOT"
    },
    "14141": {
      "op": "DUP3"
    },
    "14142": {
      "op": "GT"
    },
    "14143": {
      "op": "ISZERO"
    },
    "14144": {
      "op": "PUSH2",
      "value": "0x374B"
    },
    "14147": {
      "op": "JUMPI"
    },
    "14148": {
      "op": "PUSH2",
      "value": "0x374B"
    },
    "14151": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14154": {
      "jump": "i",
      "op": "JUMP"
    },
    "14155": {
      "op": "JUMPDEST"
    },
    "14156": {
      "op": "POP"
    },
    "14157": {
      "op": "ADD"
    },
    "14158": {
      "op": "SWAP1"
    },
    "14159": {
      "jump": "o",
      "op": "JUMP"
    },
    "14160": {
      "op": "JUMPDEST"
    },
    "14161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14165": {
      "op": "NOT"
    },
    "14166": {
      "op": "DUP3"
    },
    "14167": {
      "op": "EQ"
    },
    "14168": {
      "op": "ISZERO"
    },
    "14169": {
      "op": "PUSH2",
      "value": "0x3764"
    },
    "14172": {
      "op": "JUMPI"
    },
    "14173": {
      "op": "PUSH2",
      "value": "0x3764"
    },
    "14176": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14179": {
      "jump": "i",
      "op": "JUMP"
    },
    "14180": {
      "op": "JUMPDEST"
    },
    "14181": {
      "op": "POP"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14184": {
      "op": "ADD"
    },
    "14185": {
      "op": "SWAP1"
    },
    "14186": {
      "jump": "o",
      "op": "JUMP"
    },
    "14187": {
      "op": "JUMPDEST"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14190": {
      "op": "DUP1"
    },
    "14191": {
      "op": "DUP3"
    },
    "14192": {
      "op": "MSTORE"
    },
    "14193": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14195": {
      "op": "SWAP1"
    },
    "14196": {
      "op": "DUP3"
    },
    "14197": {
      "op": "ADD"
    },
    "14198": {
      "op": "MSTORE"
    },
    "14199": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14216": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14218": {
      "op": "SHL"
    },
    "14219": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14221": {
      "op": "DUP3"
    },
    "14222": {
      "op": "ADD"
    },
    "14223": {
      "op": "MSTORE"
    },
    "14224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14226": {
      "op": "ADD"
    },
    "14227": {
      "op": "SWAP1"
    },
    "14228": {
      "jump": "o",
      "op": "JUMP"
    },
    "14229": {
      "op": "JUMPDEST"
    },
    "14230": {
      "op": "DUP1"
    },
    "14231": {
      "op": "SLOAD"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14234": {
      "op": "SWAP1"
    },
    "14235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14237": {
      "op": "DUP2"
    },
    "14238": {
      "op": "DUP2"
    },
    "14239": {
      "op": "SHR"
    },
    "14240": {
      "op": "SWAP1"
    },
    "14241": {
      "op": "DUP1"
    },
    "14242": {
      "op": "DUP4"
    },
    "14243": {
      "op": "AND"
    },
    "14244": {
      "op": "DUP1"
    },
    "14245": {
      "op": "PUSH2",
      "value": "0x37AF"
    },
    "14248": {
      "op": "JUMPI"
    },
    "14249": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14251": {
      "op": "DUP4"
    },
    "14252": {
      "op": "AND"
    },
    "14253": {
      "op": "SWAP3"
    },
    "14254": {
      "op": "POP"
    },
    "14255": {
      "op": "JUMPDEST"
    },
    "14256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14258": {
      "op": "DUP1"
    },
    "14259": {
      "op": "DUP5"
    },
    "14260": {
      "op": "LT"
    },
    "14261": {
      "op": "DUP3"
    },
    "14262": {
      "op": "EQ"
    },
    "14263": {
      "op": "ISZERO"
    },
    "14264": {
      "op": "PUSH2",
      "value": "0x37D1"
    },
    "14267": {
      "op": "JUMPI"
    },
    "14268": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14275": {
      "op": "SHL"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14278": {
      "op": "MSTORE"
    },
    "14279": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14281": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14283": {
      "op": "MSTORE"
    },
    "14284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14288": {
      "op": "REVERT"
    },
    "14289": {
      "op": "JUMPDEST"
    },
    "14290": {
      "op": "DUP2"
    },
    "14291": {
      "op": "DUP1"
    },
    "14292": {
      "op": "ISZERO"
    },
    "14293": {
      "op": "PUSH2",
      "value": "0x37E5"
    },
    "14296": {
      "op": "JUMPI"
    },
    "14297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14299": {
      "op": "DUP2"
    },
    "14300": {
      "op": "EQ"
    },
    "14301": {
      "op": "PUSH2",
      "value": "0x37F6"
    },
    "14304": {
      "op": "JUMPI"
    },
    "14305": {
      "op": "PUSH2",
      "value": "0x3823"
    },
    "14308": {
      "op": "JUMP"
    },
    "14309": {
      "op": "JUMPDEST"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14312": {
      "op": "NOT"
    },
    "14313": {
      "op": "DUP7"
    },
    "14314": {
      "op": "AND"
    },
    "14315": {
      "op": "DUP10"
    },
    "14316": {
      "op": "MSTORE"
    },
    "14317": {
      "op": "DUP5"
    },
    "14318": {
      "op": "DUP10"
    },
    "14319": {
      "op": "ADD"
    },
    "14320": {
      "op": "SWAP7"
    },
    "14321": {
      "op": "POP"
    },
    "14322": {
      "op": "PUSH2",
      "value": "0x3823"
    },
    "14325": {
      "op": "JUMP"
    },
    "14326": {
      "op": "JUMPDEST"
    },
    "14327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14329": {
      "op": "DUP9"
    },
    "14330": {
      "op": "DUP2"
    },
    "14331": {
      "op": "MSTORE"
    },
    "14332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14334": {
      "op": "SWAP1"
    },
    "14335": {
      "op": "KECCAK256"
    },
    "14336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14338": {
      "op": "JUMPDEST"
    },
    "14339": {
      "op": "DUP7"
    },
    "14340": {
      "op": "DUP2"
    },
    "14341": {
      "op": "LT"
    },
    "14342": {
      "op": "ISZERO"
    },
    "14343": {
      "op": "PUSH2",
      "value": "0x381B"
    },
    "14346": {
      "op": "JUMPI"
    },
    "14347": {
      "op": "DUP2"
    },
    "14348": {
      "op": "SLOAD"
    },
    "14349": {
      "op": "DUP12"
    },
    "14350": {
      "op": "DUP3"
    },
    "14351": {
      "op": "ADD"
    },
    "14352": {
      "op": "MSTORE"
    },
    "14353": {
      "op": "SWAP1"
    },
    "14354": {
      "op": "DUP6"
    },
    "14355": {
      "op": "ADD"
    },
    "14356": {
      "op": "SWAP1"
    },
    "14357": {
      "op": "DUP4"
    },
    "14358": {
      "op": "ADD"
    },
    "14359": {
      "op": "PUSH2",
      "value": "0x3802"
    },
    "14362": {
      "op": "JUMP"
    },
    "14363": {
      "op": "JUMPDEST"
    },
    "14364": {
      "op": "POP"
    },
    "14365": {
      "op": "POP"
    },
    "14366": {
      "op": "DUP5"
    },
    "14367": {
      "op": "DUP10"
    },
    "14368": {
      "op": "ADD"
    },
    "14369": {
      "op": "SWAP7"
    },
    "14370": {
      "op": "POP"
    },
    "14371": {
      "op": "JUMPDEST"
    },
    "14372": {
      "op": "POP"
    },
    "14373": {
      "op": "POP"
    },
    "14374": {
      "op": "POP"
    },
    "14375": {
      "op": "POP"
    },
    "14376": {
      "op": "POP"
    },
    "14377": {
      "op": "POP"
    },
    "14378": {
      "op": "SWAP3"
    },
    "14379": {
      "op": "SWAP2"
    },
    "14380": {
      "op": "POP"
    },
    "14381": {
      "op": "POP"
    },
    "14382": {
      "jump": "o",
      "op": "JUMP"
    },
    "14383": {
      "op": "JUMPDEST"
    },
    "14384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14386": {
      "op": "PUSH2",
      "value": "0x383B"
    },
    "14389": {
      "op": "DUP3"
    },
    "14390": {
      "op": "DUP7"
    },
    "14391": {
      "op": "PUSH2",
      "value": "0x3795"
    },
    "14394": {
      "jump": "i",
      "op": "JUMP"
    },
    "14395": {
      "op": "JUMPDEST"
    },
    "14396": {
      "op": "DUP5"
    },
    "14397": {
      "op": "MLOAD"
    },
    "14398": {
      "op": "PUSH2",
      "value": "0x384B"
    },
    "14401": {
      "op": "DUP2"
    },
    "14402": {
      "op": "DUP4"
    },
    "14403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14405": {
      "op": "DUP10"
    },
    "14406": {
      "op": "ADD"
    },
    "14407": {
      "op": "PUSH2",
      "value": "0x3193"
    },
    "14410": {
      "jump": "i",
      "op": "JUMP"
    },
    "14411": {
      "op": "JUMPDEST"
    },
    "14412": {
      "op": "PUSH2",
      "value": "0x3857"
    },
    "14415": {
      "op": "DUP2"
    },
    "14416": {
      "op": "DUP4"
    },
    "14417": {
      "op": "ADD"
    },
    "14418": {
      "op": "DUP7"
    },
    "14419": {
      "op": "PUSH2",
      "value": "0x3795"
    },
    "14422": {
      "jump": "i",
      "op": "JUMP"
    },
    "14423": {
      "op": "JUMPDEST"
    },
    "14424": {
      "op": "SWAP8"
    },
    "14425": {
      "op": "SWAP7"
    },
    "14426": {
      "op": "POP"
    },
    "14427": {
      "op": "POP"
    },
    "14428": {
      "op": "POP"
    },
    "14429": {
      "op": "POP"
    },
    "14430": {
      "op": "POP"
    },
    "14431": {
      "op": "POP"
    },
    "14432": {
      "op": "POP"
    },
    "14433": {
      "jump": "o",
      "op": "JUMP"
    },
    "14434": {
      "op": "JUMPDEST"
    },
    "14435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14437": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14439": {
      "op": "DUP3"
    },
    "14440": {
      "op": "AND"
    },
    "14441": {
      "op": "DUP1"
    },
    "14442": {
      "op": "PUSH2",
      "value": "0x3875"
    },
    "14445": {
      "op": "JUMPI"
    },
    "14446": {
      "op": "PUSH2",
      "value": "0x3875"
    },
    "14449": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14452": {
      "jump": "i",
      "op": "JUMP"
    },
    "14453": {
      "op": "JUMPDEST"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14456": {
      "op": "NOT"
    },
    "14457": {
      "op": "ADD"
    },
    "14458": {
      "op": "SWAP3"
    },
    "14459": {
      "op": "SWAP2"
    },
    "14460": {
      "op": "POP"
    },
    "14461": {
      "op": "POP"
    },
    "14462": {
      "jump": "o",
      "op": "JUMP"
    },
    "14463": {
      "op": "JUMPDEST"
    },
    "14464": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14471": {
      "op": "SHL"
    },
    "14472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14474": {
      "op": "MSTORE"
    },
    "14475": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14477": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14479": {
      "op": "MSTORE"
    },
    "14480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14484": {
      "op": "REVERT"
    },
    "14485": {
      "op": "JUMPDEST"
    },
    "14486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14488": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14490": {
      "op": "DUP3"
    },
    "14491": {
      "op": "AND"
    },
    "14492": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14494": {
      "op": "DUP2"
    },
    "14495": {
      "op": "EQ"
    },
    "14496": {
      "op": "ISZERO"
    },
    "14497": {
      "op": "PUSH2",
      "value": "0x38AC"
    },
    "14500": {
      "op": "JUMPI"
    },
    "14501": {
      "op": "PUSH2",
      "value": "0x38AC"
    },
    "14504": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14507": {
      "jump": "i",
      "op": "JUMP"
    },
    "14508": {
      "op": "JUMPDEST"
    },
    "14509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14511": {
      "op": "ADD"
    },
    "14512": {
      "op": "SWAP3"
    },
    "14513": {
      "op": "SWAP2"
    },
    "14514": {
      "op": "POP"
    },
    "14515": {
      "op": "POP"
    },
    "14516": {
      "jump": "o",
      "op": "JUMP"
    },
    "14517": {
      "op": "JUMPDEST"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14520": {
      "op": "DUP2"
    },
    "14521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14523": {
      "op": "NOT"
    },
    "14524": {
      "op": "DIV"
    },
    "14525": {
      "op": "DUP4"
    },
    "14526": {
      "op": "GT"
    },
    "14527": {
      "op": "DUP3"
    },
    "14528": {
      "op": "ISZERO"
    },
    "14529": {
      "op": "ISZERO"
    },
    "14530": {
      "op": "AND"
    },
    "14531": {
      "op": "ISZERO"
    },
    "14532": {
      "op": "PUSH2",
      "value": "0x38CF"
    },
    "14535": {
      "op": "JUMPI"
    },
    "14536": {
      "op": "PUSH2",
      "value": "0x38CF"
    },
    "14539": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14542": {
      "jump": "i",
      "op": "JUMP"
    },
    "14543": {
      "op": "JUMPDEST"
    },
    "14544": {
      "op": "POP"
    },
    "14545": {
      "op": "MUL"
    },
    "14546": {
      "op": "SWAP1"
    },
    "14547": {
      "jump": "o",
      "op": "JUMP"
    },
    "14548": {
      "op": "JUMPDEST"
    },
    "14549": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14556": {
      "op": "SHL"
    },
    "14557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14559": {
      "op": "MSTORE"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14562": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14564": {
      "op": "MSTORE"
    },
    "14565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14569": {
      "op": "REVERT"
    },
    "14570": {
      "op": "JUMPDEST"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14573": {
      "op": "DUP3"
    },
    "14574": {
      "op": "PUSH2",
      "value": "0x38F9"
    },
    "14577": {
      "op": "JUMPI"
    },
    "14578": {
      "op": "PUSH2",
      "value": "0x38F9"
    },
    "14581": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14584": {
      "jump": "i",
      "op": "JUMP"
    },
    "14585": {
      "op": "JUMPDEST"
    },
    "14586": {
      "op": "POP"
    },
    "14587": {
      "op": "DIV"
    },
    "14588": {
      "op": "SWAP1"
    },
    "14589": {
      "jump": "o",
      "op": "JUMP"
    },
    "14590": {
      "op": "JUMPDEST"
    },
    "14591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14593": {
      "op": "DUP1"
    },
    "14594": {
      "op": "DUP3"
    },
    "14595": {
      "op": "MSTORE"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14598": {
      "op": "SWAP1"
    },
    "14599": {
      "op": "DUP3"
    },
    "14600": {
      "op": "ADD"
    },
    "14601": {
      "op": "MSTORE"
    },
    "14602": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14637": {
      "op": "DUP3"
    },
    "14638": {
      "op": "ADD"
    },
    "14639": {
      "op": "MSTORE"
    },
    "14640": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14659": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14661": {
      "op": "SHL"
    },
    "14662": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14664": {
      "op": "DUP3"
    },
    "14665": {
      "op": "ADD"
    },
    "14666": {
      "op": "MSTORE"
    },
    "14667": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14669": {
      "op": "ADD"
    },
    "14670": {
      "op": "SWAP1"
    },
    "14671": {
      "jump": "o",
      "op": "JUMP"
    },
    "14672": {
      "op": "JUMPDEST"
    },
    "14673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14675": {
      "op": "DUP3"
    },
    "14676": {
      "op": "PUSH2",
      "value": "0x395F"
    },
    "14679": {
      "op": "JUMPI"
    },
    "14680": {
      "op": "PUSH2",
      "value": "0x395F"
    },
    "14683": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14686": {
      "jump": "i",
      "op": "JUMP"
    },
    "14687": {
      "op": "JUMPDEST"
    },
    "14688": {
      "op": "POP"
    },
    "14689": {
      "op": "MOD"
    },
    "14690": {
      "op": "SWAP1"
    },
    "14691": {
      "jump": "o",
      "op": "JUMP"
    },
    "14692": {
      "op": "JUMPDEST"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14699": {
      "op": "SHL"
    },
    "14700": {
      "op": "SUB"
    },
    "14701": {
      "op": "DUP6"
    },
    "14702": {
      "op": "DUP2"
    },
    "14703": {
      "op": "AND"
    },
    "14704": {
      "op": "DUP3"
    },
    "14705": {
      "op": "MSTORE"
    },
    "14706": {
      "op": "DUP5"
    },
    "14707": {
      "op": "AND"
    },
    "14708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14710": {
      "op": "DUP3"
    },
    "14711": {
      "op": "ADD"
    },
    "14712": {
      "op": "MSTORE"
    },
    "14713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14715": {
      "op": "DUP2"
    },
    "14716": {
      "op": "ADD"
    },
    "14717": {
      "op": "DUP4"
    },
    "14718": {
      "op": "SWAP1"
    },
    "14719": {
      "op": "MSTORE"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14722": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14724": {
      "op": "DUP3"
    },
    "14725": {
      "op": "ADD"
    },
    "14726": {
      "op": "DUP2"
    },
    "14727": {
      "op": "SWAP1"
    },
    "14728": {
      "op": "MSTORE"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14731": {
      "op": "SWAP1"
    },
    "14732": {
      "op": "PUSH2",
      "value": "0x3997"
    },
    "14735": {
      "op": "SWAP1"
    },
    "14736": {
      "op": "DUP4"
    },
    "14737": {
      "op": "ADD"
    },
    "14738": {
      "op": "DUP5"
    },
    "14739": {
      "op": "PUSH2",
      "value": "0x31BF"
    },
    "14742": {
      "jump": "i",
      "op": "JUMP"
    },
    "14743": {
      "op": "JUMPDEST"
    },
    "14744": {
      "op": "SWAP7"
    },
    "14745": {
      "op": "SWAP6"
    },
    "14746": {
      "op": "POP"
    },
    "14747": {
      "op": "POP"
    },
    "14748": {
      "op": "POP"
    },
    "14749": {
      "op": "POP"
    },
    "14750": {
      "op": "POP"
    },
    "14751": {
      "op": "POP"
    },
    "14752": {
      "jump": "o",
      "op": "JUMP"
    },
    "14753": {
      "op": "JUMPDEST"
    },
    "14754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14758": {
      "op": "DUP3"
    },
    "14759": {
      "op": "DUP5"
    },
    "14760": {
      "op": "SUB"
    },
    "14761": {
      "op": "SLT"
    },
    "14762": {
      "op": "ISZERO"
    },
    "14763": {
      "op": "PUSH2",
      "value": "0x39B3"
    },
    "14766": {
      "op": "JUMPI"
    },
    "14767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14769": {
      "op": "DUP1"
    },
    "14770": {
      "op": "REVERT"
    },
    "14771": {
      "op": "JUMPDEST"
    },
    "14772": {
      "op": "DUP2"
    },
    "14773": {
      "op": "MLOAD"
    },
    "14774": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "14777": {
      "op": "DUP2"
    },
    "14778": {
      "op": "PUSH2",
      "value": "0x3160"
    },
    "14781": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "ee8ac71753c7865486b0dfb38a680d997da14fd8",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol';\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract CryptidToken is ERC721, Pausable, Ownable, ERC721Burnable{ \n    using Strings for uint256;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 private stage = 0;\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawDest1 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // trust\n    address public withdrawDest2 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 1\n    address public withdrawDest3 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // founder 2\n    address public withdrawDest4 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 3\n    address public withdrawDest5 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 4\n    \n    // ~ Sale stages ~\n    // stage 0: Airdrops for Trivia/Contest Winners\n    // stage 1: Whitelist\n    // stage 2: Team Mint \n    // stage 3: Public Sale\n\n    // Whitelist mint (stage=1)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=2)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=3)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.10 ether;  \n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    //Public mint function\n    function mint(uint8 _mintAmount, bytes32[] memory proof) public payable whenNotPaused {\n        require(stage > 0, \"Minting not initiated. Currenly on stage 0.\");\n        require(_mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction.\");\n        if (stage == 1) {\n        // Whitelist\n            require(proof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not whitelisted.\");\n            require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n            require(_mintAmount < 2, \"Mint amount must be 1.\");\n            require(msg.value == salePrice.mul(_mintAmount), \"Invalid funds provided.\");\n            require(totalSupply() + _mintAmount <= whitelistSupply, \"Transaction exceeds whitelist supply.\");\n            claimed[msg.sender] = true;\n    }   else if (stage == 2) {\n        // Team Sale\n            require(owner() == msg.sender, \"Only Owner can mint at this stage\");\n            require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n            teamMintCount += _mintAmount;\n    }   else {\n        // Public Sale\n            require(msg.value == salePrice.mul(_mintAmount), \"Invalid funds provided.\");\n            require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        }\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function overrideClaim(address _wlAddress) public onlyOwner{\n        claimed[_wlAddress] = true;\n    }\n\n    function airdropCryptid(uint8 _mintAmount, address _to) public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage < 1, \"Past airdrop phase.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction\");\n        require(_mintAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(totalSupply()+ _mintAmount <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(_to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() public onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function nextStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot[0] != 0, \"Merkle root must be set beefore whitelist minting can begin\");\n        require(stage < 4, \"No stages after public sale\");\n        stage++;\n    }\n\n    function prevStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage > 0, \"No stages before init\");\n        stage--;\n    }\n    \n    function setTeamMintSupply(uint256 _newTeamMintSupply) public onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n\n    function setPublicSalePrice(uint256 _newSalePrice) public onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) public onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function setWithdrawAddress(address _dest1, address _dest2, address _dest3, address _dest4, address _dest5) public onlyOwner {\n        withdrawDest1 = _dest1;\n        withdrawDest2 = _dest2;\n        withdrawDest3 = _dest3;\n        withdrawDest4 = _dest4;\n        withdrawDest5 = _dest5;\n    }\n\n    function freezeProvenanceHash() public onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool ms, ) = payable(withdrawDest1).call{value: address(this).balance.mul(700).div(1000)}(\"\");\n        require(ms, \"withdrawl 1 failed\");\n        (bool ns, ) = payable(withdrawDest2).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(ns, \"withdrawl 2 failed\");\n        (bool cr, ) = payable(withdrawDest3).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(cr, \"withdrawl 3 failed\");\n        (bool sn, ) = payable(withdrawDest4).call{value: address(this).balance.mul(45).div(1000)}(\"\");\n        require(sn, \"withdrawl 4 failed\");\n        (bool gr, ) = payable(withdrawDest5).call{value: address(this).balance}(\"\");\n        require(gr, \"withdrawl 5 failed\");\n    }\n\n    // Public view functions\n    function lastMintAddress() public view returns (address){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() public view returns (uint256){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return(totalSupply());\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() public view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function getStage() public view returns (uint8) {\n        return stage;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n}",
  "sourceMap": "814:26:15:-:0;483:9044;814:26;;;-1:-1:-1;483:9044:15;814:26;;;;;;;;:::i;:::-;-1:-1:-1;846:37:15;;;;;;;;;;;;;-1:-1:-1;;;846:37:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;889:23:15;;;-1:-1:-1;;;;;;1041:73:15;;;;;1129;;;1160:42;-1:-1:-1;;;;;;1129:73:15;;;;;;;;1221;;;1072:42;1221:73;;;;;;1313;;;;;;;;;1405;;;;;;;;;;;2038:10;2011:37;;2057:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:2;;2307:5:15;;2314:7;;1441:13:2;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:8;921:18:0;:32::i;:::-;2333:15:15::1;:34:::0;;;2377:14:::1;:32:::0;;;2419:15:::1;:34:::0;;;2463:12:::1;:28:::0;;-1:-1:-1;;2463:28:15::1;;;::::0;::::1;;;::::0;;2501:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2529:27;:15;:25;;;;;:27;;:::i;:::-;2057:506:::0;;;;;;;483:9044;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:9:-;1032:19;;1050:1;1032:19;;;945:123::o;483:9044:15:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9044:15;;;-1:-1:-1;483:9044:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:16:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:16;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;483:9044:15;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}