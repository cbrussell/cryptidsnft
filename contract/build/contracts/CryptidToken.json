{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_presaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presaleMintCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleMintMax",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presalePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presaleUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removePresaleUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeWhitelistUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPresalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPresalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "setPresaleUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_mints",
          "type": "uint8[]"
        }
      ],
      "name": "setWhitelistUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dest1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest2",
          "type": "address"
        }
      ],
      "name": "setWithdrawAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistMintCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
    "14": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "5": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "9": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2850
      ],
      "Context": [
        2392
      ],
      "Counters": [
        2058
      ],
      "CryptidToken": [
        926
      ],
      "ERC165": [
        3077
      ],
      "ERC721": [
        1954
      ],
      "ERC721Burnable": [
        1984
      ],
      "IERC165": [
        3089
      ],
      "IERC721": [
        2508
      ],
      "IERC721Metadata": [
        2553
      ],
      "IERC721Receiver": [
        2526
      ],
      "Ownable": [
        1031
      ],
      "Pausable": [
        1123
      ],
      "SafeMath": [
        2370
      ],
      "Strings": [
        3053
      ]
    },
    "id": 927,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:14"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 1955,
        "src": "58:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 1032,
        "src": "116:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 2371,
        "src": "169:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 2059,
        "src": "227:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 1124,
        "src": "280:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 927,
        "sourceUnit": 1985,
        "src": "336:76:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1954,
              "src": "439:6:14"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "439:6:14"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1123,
              "src": "447:8:14"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "447:8:14"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1031,
              "src": "457:7:14"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "457:7:14"
          },
          {
            "baseName": {
              "id": 14,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1984,
              "src": "466:14:14"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "466:14:14"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 926,
        "linearizedBaseContracts": [
          926,
          1984,
          1031,
          1123,
          1954,
          2553,
          2508,
          3077,
          3089,
          2392
        ],
        "name": "CryptidToken",
        "nameLocation": "423:12:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18,
            "libraryName": {
              "id": 16,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3053,
              "src": "493:7:14"
            },
            "nodeType": "UsingForDirective",
            "src": "487:26:14",
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21,
            "libraryName": {
              "id": 19,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2370,
              "src": "524:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "518:27:14",
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "id": 22,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2058,
              "src": "556:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "550:36:14",
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1990,
                "src": "569:16:14"
              },
              "referencedDeclaration": 1990,
              "src": "569:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1990_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "617:15:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "592:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1990_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1990,
                "src": "592:16:14"
              },
              "referencedDeclaration": 1990,
              "src": "592:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1990_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 30,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "653:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "639:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "639:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 33,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "687:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "673:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "673:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "697:2:14",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 36,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "719:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "705:37:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "705:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "762:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "748:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 37,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "748:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "770:1:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 41,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "790:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "777:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 40,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "777:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 44,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "825:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "813:34:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 42,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "813:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 47,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "865:20:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "853:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 45,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "853:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "888:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61869a93",
            "id": 50,
            "mutability": "mutable",
            "name": "withdrawDest1",
            "nameLocation": "914:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "899:73:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "899:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "930:42:14",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1214392",
            "id": 53,
            "mutability": "mutable",
            "name": "withdrawDest2",
            "nameLocation": "993:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "978:73:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1009:42:14",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6ec55dbc",
            "id": 57,
            "mutability": "mutable",
            "name": "whitelistUsers",
            "nameLocation": "1285:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1252:47:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1260:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1252:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 55,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1271:5:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3bdf4ac6",
            "id": 61,
            "mutability": "mutable",
            "name": "whitelistMintCount",
            "nameLocation": "1338:18:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1305:51:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1313:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1305:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 59,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1324:5:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0b0c312d",
            "id": 65,
            "mutability": "mutable",
            "name": "presaleUsers",
            "nameLocation": "1425:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1393:44:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1401:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1393:24:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 63,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1412:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b3a196e9",
            "id": 67,
            "mutability": "mutable",
            "name": "presaleSupply",
            "nameLocation": "1458:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1443:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1443:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "000e7fa8",
            "id": 70,
            "mutability": "mutable",
            "name": "presalePrice",
            "nameLocation": "1515:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1500:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1500:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3034",
              "id": 69,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1530:10:14",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40000000000000000_by_1",
                "typeString": "int_const 40000000000000000"
              },
              "value": "0.04"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e6cbb6b1",
            "id": 73,
            "mutability": "mutable",
            "name": "presaleMintMax",
            "nameLocation": "1559:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1546:31:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 71,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1546:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1576:1:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094e4072",
            "id": 77,
            "mutability": "mutable",
            "name": "presaleMintCount",
            "nameLocation": "1634:16:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1601:49:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1609:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1601:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 75,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1620:5:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 79,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1699:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1684:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1684:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 81,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1760:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1745:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 80,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1745:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 84,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1824:9:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1809:37:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 82,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1809:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3035",
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1836:10:14",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000_by_1",
                "typeString": "int_const 50000000000000000"
              },
              "value": "0.05"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 86,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1867:15:14",
            "nodeType": "VariableDeclaration",
            "scope": 926,
            "src": "1852:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1852:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2162:236:14",
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "presaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2172:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_presaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2188:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2172:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:30:14"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2212:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2229:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2212:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2212:32:14"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2254:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2272:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2254:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:34:14"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2298:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2313:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2298:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:28:14"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2336:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2346:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2336:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:18:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 127,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2364:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1990_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2016,
                      "src": "2364:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1990_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2364:27:14"
                }
              ]
            },
            "id": 133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 103,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "2146:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 104,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 90,
                    "src": "2153:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 105,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 102,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "2139:6:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2139:22:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1933:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1919:19:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1962:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1948:21:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1993:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1979:22:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_presaleSupply",
                  "nameLocation": "2019:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2011:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2051:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2043:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2084:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2076:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2116:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2110:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:227:14"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:0:14"
            },
            "scope": 926,
            "src": "1898:500:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "2493:1813:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2511:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2519:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2511:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c79206f6e20737461676520302028696e6974292e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2522:52:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98985e7aa1506f348a395bdb1977c508b8b78e4a707047e44d8fdd1212852832",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0 (init).\""
                        },
                        "value": "Minting not initiated. Currenly on stage 0 (init)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98985e7aa1506f348a395bdb1977c508b8b78e4a707047e44d8fdd1212852832",
                          "typeString": "literal_string \"Minting not initiated. Currenly on stage 0 (init).\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2503:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:72:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:72:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2593:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2607:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2593:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bfd92d7d44a8546adb9aab282c9304b359738a389d4611ab6009036ea270cb2",
                          "typeString": "literal_string \"Mint amount must be greater than 0\""
                        },
                        "value": "Mint amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bfd92d7d44a8546adb9aab282c9304b359738a389d4611ab6009036ea270cb2",
                          "typeString": "literal_string \"Mint amount must be greater than 0\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2585:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:62:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2665:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 156,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2680:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2665:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2694:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        },
                        "value": "Exceeds max allowed amount per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2657:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2657:82:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:82:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 161,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2753:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2762:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2753:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 197,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3090:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3099:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "3090:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 249,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "3611:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3620:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3611:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 296,
                        "nodeType": "Block",
                        "src": "3902:232:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 276,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3947:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "3947:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 280,
                                        "name": "_mintAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 135,
                                        "src": "3974:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "expression": {
                                        "id": 278,
                                        "name": "salePrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 84,
                                        "src": "3960:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 279,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2264,
                                      "src": "3960:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3960:26:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3947:39:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4e6f7420656e6f7567682065746865722073656e74",
                                  "id": 283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3988:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                    "typeString": "literal_string \"Not enough ether sent\""
                                  },
                                  "value": "Not enough ether sent"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                    "typeString": "literal_string \"Not enough ether sent\""
                                  }
                                ],
                                "id": 275,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3939:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3939:73:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 285,
                            "nodeType": "ExpressionStatement",
                            "src": "3939:73:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 287,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 856,
                                        "src": "4034:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4034:13:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 289,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 135,
                                      "src": "4051:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "4034:28:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 291,
                                    "name": "totalSaleSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "4066:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4034:47:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                                  "id": 293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4083:39:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                    "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                  },
                                  "value": "Transaction exceeds total sale supply"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                                    "typeString": "literal_string \"Transaction exceeds total sale supply\""
                                  }
                                ],
                                "id": 286,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4026:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4026:97:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 295,
                            "nodeType": "ExpressionStatement",
                            "src": "4026:97:14"
                          }
                        ]
                      },
                      "id": 297,
                      "nodeType": "IfStatement",
                      "src": "3607:527:14",
                      "trueBody": {
                        "id": 274,
                        "nodeType": "Block",
                        "src": "3623:271:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 253,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 959,
                                      "src": "3666:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3666:7:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 255,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3677:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3677:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3666:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4f6e6c79204f776e65722063616e206d696e742061742074686973207374616765",
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3689:35:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                    "typeString": "literal_string \"Only Owner can mint at this stage\""
                                  },
                                  "value": "Only Owner can mint at this stage"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_14a74f9bf66bd23dd6cb7920df289896609f557d88b5e7a1c7fe887f83724e5d",
                                    "typeString": "literal_string \"Only Owner can mint at this stage\""
                                  }
                                ],
                                "id": 252,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3658:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3658:67:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 260,
                            "nodeType": "ExpressionStatement",
                            "src": "3658:67:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 262,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 135,
                                      "src": "3747:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 263,
                                      "name": "teamMintCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "3761:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3747:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 265,
                                    "name": "teamMintSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "3778:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3747:45:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                                  "id": 267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3794:44:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                    "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                  },
                                  "value": "Transaction exceeds total team-sale supply"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                                    "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                                  }
                                ],
                                "id": 261,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3739:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3739:100:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 269,
                            "nodeType": "ExpressionStatement",
                            "src": "3739:100:14"
                          },
                          {
                            "expression": {
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 270,
                                "name": "teamMintCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "3859:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 271,
                                "name": "_mintAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "3876:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "3859:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 273,
                            "nodeType": "ExpressionStatement",
                            "src": "3859:28:14"
                          }
                        ]
                      }
                    },
                    "id": 298,
                    "nodeType": "IfStatement",
                    "src": "3086:1048:14",
                    "trueBody": {
                      "id": 248,
                      "nodeType": "Block",
                      "src": "3102:497:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 201,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3145:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3145:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 205,
                                      "name": "_mintAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 135,
                                      "src": "3175:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "expression": {
                                      "id": 203,
                                      "name": "presalePrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 70,
                                      "src": "3158:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2264,
                                    "src": "3158:16:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3158:29:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3145:42:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4e6f7420656e6f7567682065746865722073656e74",
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3189:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                  "typeString": "literal_string \"Not enough ether sent\""
                                },
                                "value": "Not enough ether sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
                                  "typeString": "literal_string \"Not enough ether sent\""
                                }
                              ],
                              "id": 200,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3137:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3137:76:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 210,
                          "nodeType": "ExpressionStatement",
                          "src": "3137:76:14"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 212,
                                  "name": "presaleUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "3235:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 215,
                                "indexExpression": {
                                  "expression": {
                                    "id": 213,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3248:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3248:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3235:24:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "41646472657373206e6f74206f6e2070726573616c65206c697374",
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3261:29:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_530f7f2619601d48f0e6cf0513f250a58817c6cc9c19eb07f300d01d9f2c5d91",
                                  "typeString": "literal_string \"Address not on presale list\""
                                },
                                "value": "Address not on presale list"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_530f7f2619601d48f0e6cf0513f250a58817c6cc9c19eb07f300d01d9f2c5d91",
                                  "typeString": "literal_string \"Address not on presale list\""
                                }
                              ],
                              "id": 211,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3227:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3227:64:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 218,
                          "nodeType": "ExpressionStatement",
                          "src": "3227:64:14"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 220,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 856,
                                      "src": "3313:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3313:13:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 222,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 135,
                                    "src": "3329:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "3313:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 224,
                                  "name": "presaleSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "3344:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3313:44:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e2065786365656473207072652d73616c6520737570706c79",
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3359:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e4b65ef9a1f381ce7d84a6789bec3dc0ee29cb2a6c194476efcc463d75edc5e",
                                  "typeString": "literal_string \"Transaction exceeds pre-sale supply\""
                                },
                                "value": "Transaction exceeds pre-sale supply"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2e4b65ef9a1f381ce7d84a6789bec3dc0ee29cb2a6c194476efcc463d75edc5e",
                                  "typeString": "literal_string \"Transaction exceeds pre-sale supply\""
                                }
                              ],
                              "id": 219,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3305:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3305:92:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 228,
                          "nodeType": "ExpressionStatement",
                          "src": "3305:92:14"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 230,
                                    "name": "_mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 135,
                                    "src": "3419:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "baseExpression": {
                                      "id": 231,
                                      "name": "presaleMintCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77,
                                      "src": "3433:16:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                        "typeString": "mapping(address => uint8)"
                                      }
                                    },
                                    "id": 234,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 232,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3450:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3450:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3433:28:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "3419:42:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 236,
                                  "name": "presaleMintMax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73,
                                  "src": "3465:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3419:60:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642070726573616c65206d696e7473",
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3481:47:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5857678cede615cfd07acb0d6843c293c247832abf56a23ff37330df48e846dd",
                                  "typeString": "literal_string \"Transaction exceeds max allowed presale mints\""
                                },
                                "value": "Transaction exceeds max allowed presale mints"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5857678cede615cfd07acb0d6843c293c247832abf56a23ff37330df48e846dd",
                                  "typeString": "literal_string \"Transaction exceeds max allowed presale mints\""
                                }
                              ],
                              "id": 229,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3411:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3411:118:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 240,
                          "nodeType": "ExpressionStatement",
                          "src": "3411:118:14"
                        },
                        {
                          "expression": {
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 241,
                                "name": "presaleMintCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "3549:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                  "typeString": "mapping(address => uint8)"
                                }
                              },
                              "id": 244,
                              "indexExpression": {
                                "expression": {
                                  "id": 242,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3566:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3566:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "3549:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 245,
                              "name": "_mintAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "3581:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "3549:43:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 247,
                          "nodeType": "ExpressionStatement",
                          "src": "3549:43:14"
                        }
                      ]
                    }
                  },
                  "id": 299,
                  "nodeType": "IfStatement",
                  "src": "2749:1385:14",
                  "trueBody": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "2765:313:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 165,
                                  "name": "whitelistUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "2808:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                    "typeString": "mapping(address => uint8)"
                                  }
                                },
                                "id": 168,
                                "indexExpression": {
                                  "expression": {
                                    "id": 166,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2823:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2823:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2808:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2837:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2808:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d696e746572206e6f742077686974656c69737465642e",
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2840:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cfc0ea30b9f56615d1796151ae0b89bac289150a82539c67f470487375f935e8",
                                "typeString": "literal_string \"Minter not whitelisted.\""
                              },
                              "value": "Minter not whitelisted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cfc0ea30b9f56615d1796151ae0b89bac289150a82539c67f470487375f935e8",
                                "typeString": "literal_string \"Minter not whitelisted.\""
                              }
                            ],
                            "id": 164,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2800:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2800:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2800:66:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 175,
                                  "name": "_mintAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "2888:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 176,
                                    "name": "whitelistMintCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61,
                                    "src": "2902:18:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                      "typeString": "mapping(address => uint8)"
                                    }
                                  },
                                  "id": 179,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 177,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2921:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2921:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2902:30:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2888:44:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 181,
                                  "name": "whitelistUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "2936:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                    "typeString": "mapping(address => uint8)"
                                  }
                                },
                                "id": 184,
                                "indexExpression": {
                                  "expression": {
                                    "id": 182,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2951:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2951:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2936:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "2888:74:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73616374696f6e20657863656564732072656d61696e696e672077686974656c697374206d696e7473",
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2964:47:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ec8bc52e92a7a2a3bc231b932c81b772d7e84bd5d272e8a31e06adaf65a5085",
                                "typeString": "literal_string \"Transaction exceeds remaining whitelist mints\""
                              },
                              "value": "Transaction exceeds remaining whitelist mints"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ec8bc52e92a7a2a3bc231b932c81b772d7e84bd5d272e8a31e06adaf65a5085",
                                "typeString": "literal_string \"Transaction exceeds remaining whitelist mints\""
                              }
                            ],
                            "id": 174,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2880:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2880:132:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "2880:132:14"
                      },
                      {
                        "expression": {
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 189,
                              "name": "whitelistMintCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "3026:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                "typeString": "mapping(address => uint8)"
                              }
                            },
                            "id": 192,
                            "indexExpression": {
                              "expression": {
                                "id": 190,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3045:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3045:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3026:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 193,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3060:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3026:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 195,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:45:14"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "4186:114:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 311,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4210:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4210:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 313,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "4222:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1990_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2002,
                                "src": "4222:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1990_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4222:25:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 310,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1618,
                              1647
                            ],
                            "referencedDeclaration": 1618,
                            "src": "4200:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4200:48:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "4200:48:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 318,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "4262:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1990_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2016,
                            "src": "4262:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1990_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4262:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "4262:27:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 304,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "4163:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 305,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "4168:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4163:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 324,
                  "initializationExpression": {
                    "assignments": [
                      301
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4156:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "4148:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4148:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 303,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4160:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4148:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4181:3:14",
                      "subExpression": {
                        "id": 307,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4181:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 309,
                    "nodeType": "ExpressionStatement",
                    "src": "4181:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "4143:157:14"
                }
              ]
            },
            "functionSelector": "6ecd2306",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 137,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1079,
                  "src": "2479:13:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2479:13:14"
              }
            ],
            "name": "mint",
            "nameLocation": "2440:4:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "2451:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "2445:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2444:19:14"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:0:14"
            },
            "scope": 926,
            "src": "2431:1875:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "4368:25:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 331,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "4378:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:8:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "4378:8:14"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 328,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "4358:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4358:9:14"
              }
            ],
            "name": "pause",
            "nameLocation": "4343:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:2:14"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4368:0:14"
            },
            "scope": 926,
            "src": "4334:59:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "4435:27:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 340,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "4445:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:10:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:10:14"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 338,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 337,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "4425:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4425:9:14"
              }
            ],
            "name": "unpause",
            "nameLocation": "4408:7:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4415:2:14"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4435:0:14"
            },
            "scope": 926,
            "src": "4399:63:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "4541:597:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 354,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "4559:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4583:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4559:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:58:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4551:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4551:97:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 361,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "4666:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4674:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4666:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506173742077686974656c6973742073616c652e",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4677:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b373d63d96da5291d18c59cce0ffdaf75d84baa741f70e8dced1645bd80719",
                          "typeString": "literal_string \"Past whitelist sale.\""
                        },
                        "value": "Past whitelist sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b373d63d96da5291d18c59cce0ffdaf75d84baa741f70e8dced1645bd80719",
                          "typeString": "literal_string \"Past whitelist sale.\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4658:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4658:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "4658:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 368,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "4718:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 369,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "4733:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4718:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f77656420616d6f756e7420706572207472616e73616374696f6e",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4747:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        },
                        "value": "Exceeds max allowed amount per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e7581a198a9e01b25ff17972167b61d5c7a662c8d7e5a151f88934c7a32e5bd",
                          "typeString": "literal_string \"Exceeds max allowed amount per transaction\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4710:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:82:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4710:82:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 375,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "4810:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4824:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4810:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4827:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        },
                        "value": "Airdrop amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4802:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4802:65:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 382,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "4885:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4885:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 384,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "4900:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4885:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 386,
                          "name": "presaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "4915:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4885:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642070726573616c6520737570706c792e",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4930:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_412b58f8482274940d7a2b48104f038eb5df3815c07c4141b0fcd6f581d925be",
                          "typeString": "literal_string \"Mint amount will exceed presale supply.\""
                        },
                        "value": "Mint amount will exceed presale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_412b58f8482274940d7a2b48104f038eb5df3815c07c4141b0fcd6f581d925be",
                          "typeString": "literal_string \"Mint amount will exceed presale supply.\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4877:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:95:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:95:14"
                },
                {
                  "body": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "5025:107:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 402,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "5049:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 403,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "5054:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1990_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2002,
                                "src": "5054:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1990_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5054:25:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 401,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1618,
                              1647
                            ],
                            "referencedDeclaration": 1618,
                            "src": "5039:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5039:41:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "5039:41:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 408,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "5094:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1990_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2016,
                            "src": "5094:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1990_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5094:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 412,
                        "nodeType": "ExpressionStatement",
                        "src": "5094:27:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 395,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "5002:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 396,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "5007:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5002:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 414,
                  "initializationExpression": {
                    "assignments": [
                      392
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4995:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "4987:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4987:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 394,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4999:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4987:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5020:3:14",
                      "subExpression": {
                        "id": 398,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5020:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 400,
                    "nodeType": "ExpressionStatement",
                    "src": "5020:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "4982:150:14"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 350,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "4531:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4531:9:14"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "4477:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4498:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4492:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4519:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4511:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4491:32:14"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:0:14"
            },
            "scope": 926,
            "src": "4468:670:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "5236:159:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 428,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "5254:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5262:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5254:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c6520697320636f6e636c756465642e",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5265:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        },
                        "value": "Whitelist sale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5246:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5246:50:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "5246:50:14"
                },
                {
                  "body": {
                    "expression": {
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 445,
                          "name": "whitelistUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "5351:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                            "typeString": "mapping(address => uint8)"
                          }
                        },
                        "id": 449,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 446,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "5366:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 448,
                          "indexExpression": {
                            "id": 447,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "5373:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5366:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5351:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 450,
                          "name": "_mints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "5379:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        "id": 452,
                        "indexExpression": {
                          "id": 451,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "5386:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5379:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "5351:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 454,
                    "nodeType": "ExpressionStatement",
                    "src": "5351:37:14"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 438,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "5322:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 439,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5324:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5324:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5322:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 455,
                  "initializationExpression": {
                    "assignments": [
                      435
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5318:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "5310:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5310:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 437,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5320:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5310:11:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5338:3:14",
                      "subExpression": {
                        "id": 442,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "5338:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 444,
                    "nodeType": "ExpressionStatement",
                    "src": "5338:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "5306:82:14"
                }
              ]
            },
            "functionSelector": "865054ed",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 424,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "5226:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5226:9:14"
              }
            ],
            "name": "setWhitelistUsers",
            "nameLocation": "5153:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "5188:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "5171:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 417,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5171:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 418,
                    "nodeType": "ArrayTypeName",
                    "src": "5171:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_mints",
                  "nameLocation": "5211:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "5196:21:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 420,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "5196:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 421,
                    "nodeType": "ArrayTypeName",
                    "src": "5196:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:48:14"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5236:0:14"
            },
            "scope": 926,
            "src": "5144:251:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "5468:145:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 466,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "5486:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5494:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5486:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726573616c6520697320636f6e636c756465642e",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5497:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8194e581c982e3fcc715ae08c03edec11566d86fe2151c79e7e24673ac36b95",
                          "typeString": "literal_string \"Presale is concluded.\""
                        },
                        "value": "Presale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8194e581c982e3fcc715ae08c03edec11566d86fe2151c79e7e24673ac36b95",
                          "typeString": "literal_string \"Presale is concluded.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5478:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:43:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:43:14"
                },
                {
                  "body": {
                    "expression": {
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 483,
                          "name": "presaleUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "5576:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 487,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 484,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "5589:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 486,
                          "indexExpression": {
                            "id": 485,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "5596:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5589:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5576:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5602:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "5576:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 490,
                    "nodeType": "ExpressionStatement",
                    "src": "5576:30:14"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 476,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "5547:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 477,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5549:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5549:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5547:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 491,
                  "initializationExpression": {
                    "assignments": [
                      473
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5543:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "5535:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5535:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 475,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5545:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5535:11:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5563:3:14",
                      "subExpression": {
                        "id": 480,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "5563:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 482,
                    "nodeType": "ExpressionStatement",
                    "src": "5563:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "5531:75:14"
                }
              ]
            },
            "functionSelector": "23957c66",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "5458:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5458:9:14"
              }
            ],
            "name": "setPresaleUsers",
            "nameLocation": "5410:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "5443:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "5426:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5426:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "nodeType": "ArrayTypeName",
                    "src": "5426:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5425:25:14"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5468:0:14"
            },
            "scope": 926,
            "src": "5401:212:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "5680:175:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 501,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "5698:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5706:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5698:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c6520697320636f6e636c756465642e",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5709:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        },
                        "value": "Whitelist sale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e2ca99ce3e81034b0b0068526cbf395b92ef32836dcdf3d5c553d4d17bd4c4c",
                          "typeString": "literal_string \"Whitelist sale is concluded.\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5690:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:50:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:50:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 508,
                            "name": "whitelistUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "5758:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 510,
                          "indexExpression": {
                            "id": 509,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 495,
                            "src": "5773:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5758:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5782:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5758:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206973206e6f74206f6e2077686974656c6973742e",
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5785:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59f37ff5d40c6ae245512439c458650753e46e0efe86e3e4968d21a7bccde4de",
                          "typeString": "literal_string \"User is not on whitelist.\""
                        },
                        "value": "User is not on whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59f37ff5d40c6ae245512439c458650753e46e0efe86e3e4968d21a7bccde4de",
                          "typeString": "literal_string \"User is not on whitelist.\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5750:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5750:63:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "5750:63:14"
                },
                {
                  "expression": {
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 516,
                        "name": "whitelistUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "5823:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 518,
                      "indexExpression": {
                        "id": 517,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "5838:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5823:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5847:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5823:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "5823:25:14"
                }
              ]
            },
            "functionSelector": "30cc7ae0",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 497,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "5670:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5670:9:14"
              }
            ],
            "name": "removeWhitelistUser",
            "nameLocation": "5628:19:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5656:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "5648:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5647:15:14"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5680:0:14"
            },
            "scope": 926,
            "src": "5619:236:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "5920:111:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 531,
                          "name": "presaleUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "5938:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 533,
                        "indexExpression": {
                          "id": 532,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 525,
                          "src": "5951:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5938:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f74206f6e2070726573616c65206c6973742e",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5959:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a697a3c00713b9459c47e9d60e01f2ec57144d6f27948108db95924d457234f5",
                          "typeString": "literal_string \"User not on presale list.\""
                        },
                        "value": "User not on presale list."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a697a3c00713b9459c47e9d60e01f2ec57144d6f27948108db95924d457234f5",
                          "typeString": "literal_string \"User not on presale list.\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5930:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5930:57:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:57:14"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 537,
                        "name": "presaleUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "5997:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 539,
                      "indexExpression": {
                        "id": 538,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "6010:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5997:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6019:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5997:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:27:14"
                }
              ]
            },
            "functionSelector": "ed931e17",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 527,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "5910:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5910:9:14"
              }
            ],
            "name": "removePresaleUser",
            "nameLocation": "5870:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5896:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "5888:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5888:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5887:15:14"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5920:0:14"
            },
            "scope": 926,
            "src": "5861:170:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "6101:94:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6119:15:14",
                        "subExpression": {
                          "id": 552,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6120:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6136:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6111:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "6111:46:14"
                },
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 557,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "6167:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 558,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6177:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6167:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "6167:21:14"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 548,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6091:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6091:9:14"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "6046:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "6071:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "6057:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6057:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6056:27:14"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6101:0:14"
            },
            "scope": 926,
            "src": "6037:158:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "6248:173:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 570,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "6272:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6266:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 568,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6266:5:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6266:14:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6266:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6290:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6266:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6293:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6258:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6258:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "6258:61:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6337:15:14",
                        "subExpression": {
                          "id": 579,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6338:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6354:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6329:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6329:54:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "6329:54:14"
                },
                {
                  "expression": {
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 584,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "6393:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6410:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6393:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "6393:21:14"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 564,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6238:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6238:9:14"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "6215:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6228:2:14"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6248:0:14"
            },
            "scope": 926,
            "src": "6206:215:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "6465:190:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 595,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "6483:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6507:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6483:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6513:58:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6475:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6475:97:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "6475:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 602,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "6590:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6598:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6590:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206166746572207075626c69632073616c65",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6601:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        },
                        "value": "No stages after public sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        }
                      ],
                      "id": 601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6582:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6582:49:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "6582:49:14"
                },
                {
                  "expression": {
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6641:7:14",
                    "subExpression": {
                      "id": 608,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "6641:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "6641:7:14"
                }
              ]
            },
            "functionSelector": "ee3743ab",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 592,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 591,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6455:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6455:9:14"
              }
            ],
            "name": "nextStage",
            "nameLocation": "6436:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6445:2:14"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6465:0:14"
            },
            "scope": 926,
            "src": "6427:228:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "6737:52:14",
              "statements": [
                {
                  "expression": {
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 619,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "6747:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 620,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "6764:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6747:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:35:14"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 617,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 616,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6727:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6727:9:14"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "6674:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "6700:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6692:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6692:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6691:28:14"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:0:14"
            },
            "scope": 926,
            "src": "6665:124:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 635,
              "nodeType": "Block",
              "src": "6871:50:14",
              "statements": [
                {
                  "expression": {
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6881:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 632,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "6897:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6881:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "6881:33:14"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 636,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 628,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6861:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6861:9:14"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "6804:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "6835:17:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 636,
                  "src": "6821:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6821:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6820:33:14"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6871:0:14"
            },
            "scope": 926,
            "src": "6795:126:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "6995:101:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 644,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "7013:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7021:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "7013:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726573616c6520697320636f6e636c756465642e",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7024:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8194e581c982e3fcc715ae08c03edec11566d86fe2151c79e7e24673ac36b95",
                          "typeString": "literal_string \"Presale is concluded.\""
                        },
                        "value": "Presale is concluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8194e581c982e3fcc715ae08c03edec11566d86fe2151c79e7e24673ac36b95",
                          "typeString": "literal_string \"Presale is concluded.\""
                        }
                      ],
                      "id": 643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7005:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7005:43:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7005:43:14"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "presalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "7058:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 651,
                      "name": "_newPresalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "7073:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7058:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "7058:31:14"
                }
              ]
            },
            "functionSelector": "3549345e",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 640,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "6985:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6985:9:14"
              }
            ],
            "name": "setPresalePrice",
            "nameLocation": "6936:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "_newPresalePrice",
                  "nameLocation": "6960:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6952:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6952:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6951:26:14"
            },
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6995:0:14"
            },
            "scope": 926,
            "src": "6927:169:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "7170:42:14",
              "statements": [
                {
                  "expression": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 662,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "7180:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 663,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "7192:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7180:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "7180:25:14"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 660,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 659,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7160:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7160:9:14"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "7111:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "7138:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "7130:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7130:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7129:23:14"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7170:0:14"
            },
            "scope": 926,
            "src": "7102:110:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "7284:48:14",
              "statements": [
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 674,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "7294:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 675,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "7309:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "7294:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "7294:31:14"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 672,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 671,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7274:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7274:9:14"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "7227:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "7249:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "7243:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7242:24:14"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7284:0:14"
            },
            "scope": 926,
            "src": "7218:114:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "7413:119:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7431:21:14",
                        "subExpression": {
                          "id": 687,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "7432:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7454:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7423:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7423:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "7423:60:14"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 692,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "7493:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 693,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "7510:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7493:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "7493:32:14"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 683,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7403:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7403:9:14"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "7347:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "7379:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "7365:29:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7365:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7364:31:14"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7413:0:14"
            },
            "scope": 926,
            "src": "7338:194:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "7615:71:14",
              "statements": [
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 706,
                      "name": "withdrawDest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "7625:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "_dest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "7641:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7625:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "7625:22:14"
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 710,
                      "name": "withdrawDest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "7657:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 711,
                      "name": "_dest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "7673:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7657:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "7657:22:14"
                }
              ]
            },
            "functionSelector": "e59a2f99",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 704,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 703,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7605:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7605:9:14"
              }
            ],
            "name": "setWithdrawAddress",
            "nameLocation": "7547:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "_dest1",
                  "nameLocation": "7574:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "7566:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7566:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_dest2",
                  "nameLocation": "7590:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "7582:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7582:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7565:32:14"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7615:0:14"
            },
            "scope": 926,
            "src": "7538:148:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "7741:209:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 723,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "7765:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7759:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 721,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7759:5:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7759:21:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7759:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7790:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7759:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7793:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7751:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7751:77:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "7751:77:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7846:21:14",
                        "subExpression": {
                          "id": 732,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "7847:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7869:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7838:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "7838:68:14"
                },
                {
                  "expression": {
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 737,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "7916:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7939:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7916:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "7916:27:14"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 717,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7731:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7731:9:14"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "7701:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7721:2:14"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7741:0:14"
            },
            "scope": 926,
            "src": "7692:258:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "8001:350:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 750,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8027:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$926",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$926",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8019:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 748,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8019:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8019:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8019:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8043:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8019:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8046:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8011:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8011:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "8011:60:14"
                },
                {
                  "assignments": [
                    759,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "hs",
                      "nameLocation": "8087:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 806,
                      "src": "8082:7:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8082:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 779,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8170:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 762,
                              "name": "withdrawDest1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "8103:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8095:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8095:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8095:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8095:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030",
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8164:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "3530",
                                  "id": 771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8156:2:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 767,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8138:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$926",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$926",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 766,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8130:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 765,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8130:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8130:13:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8130:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2264,
                                "src": "8130:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8130:29:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2279,
                            "src": "8130:33:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8130:38:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8095:74:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8095:78:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8081:92:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 781,
                        "name": "hs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "8191:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2031206661696c6564",
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8195:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        },
                        "value": "withdrawl 1 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8183:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8183:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:33:14"
                },
                {
                  "assignments": [
                    786,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 786,
                      "mutability": "mutable",
                      "name": "os",
                      "nameLocation": "8232:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 806,
                      "src": "8227:7:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 785,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8227:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 800,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8298:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 789,
                              "name": "withdrawDest2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "8248:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8240:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8240:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8240:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8240:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 794,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8283:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$926",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$926",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8275:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 792,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8275:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8275:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8275:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8240:57:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8240:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8226:75:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "os",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "8319:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2032206661696c6564",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8323:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        },
                        "value": "withdrawl 2 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        }
                      ],
                      "id": 801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8311:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8311:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "8311:33:14"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 745,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 744,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 973,
                  "src": "7991:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7991:9:14"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7965:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7973:2:14"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8001:0:14"
            },
            "scope": 926,
            "src": "7956:395:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 825,
              "nodeType": "Block",
              "src": "8442:108:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 813,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "8460:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8460:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8476:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8460:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8479:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8452:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8452:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "8452:52:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 821,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "8529:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8529:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "8521:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8521:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 811,
                  "id": 824,
                  "nodeType": "Return",
                  "src": "8514:29:14"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "8395:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8410:2:14"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "8434:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8434:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8433:9:14"
            },
            "scope": 926,
            "src": "8386:164:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "8607:100:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 832,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "8625:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8625:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8641:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8625:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8644:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8617:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8617:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "8617:52:14"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 839,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "8686:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8686:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 841,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8685:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 830,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "8679:21:14"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "8565:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8575:2:14"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "8599:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8599:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8598:9:14"
            },
            "scope": 926,
            "src": "8556:151:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "8766:53:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 849,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "8783:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1990_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2002,
                        "src": "8783:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1990_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1990_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8783:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8811:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8783:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 848,
                  "id": 854,
                  "nodeType": "Return",
                  "src": "8776:36:14"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 856,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "8722:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8733:2:14"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "8757:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8757:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8756:9:14"
            },
            "scope": 926,
            "src": "8713:106:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1331
            ],
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "8913:191:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 866,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "8939:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 865,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "8931:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8931:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8949:49:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8923:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8923:76:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "8923:76:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 875,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "9040:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 876,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 858,
                                "src": "9049:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2935,
                              "src": "9049:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9049:18:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 879,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "9069:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 873,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9023:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9023:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9023:60:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9016:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9016:6:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9016:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 863,
                  "id": 882,
                  "nodeType": "Return",
                  "src": "9009:75:14"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8834:8:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8880:8:14"
            },
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8851:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "8843:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8843:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8842:17:14"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "8898:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8898:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8897:15:14"
            },
            "scope": 926,
            "src": "8825:279:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 894,
              "nodeType": "Block",
              "src": "9165:55:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 889,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "9182:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 890,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "9200:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9200:13:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9182:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 888,
                  "id": 893,
                  "nodeType": "Return",
                  "src": "9175:38:14"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "9119:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9132:2:14"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "9156:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9156:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9155:9:14"
            },
            "scope": 926,
            "src": "9110:110:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "9278:29:14",
              "statements": [
                {
                  "expression": {
                    "id": 900,
                    "name": "stage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "9295:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 899,
                  "id": 901,
                  "nodeType": "Return",
                  "src": "9288:12:14"
                }
              ]
            },
            "functionSelector": "fcaa7664",
            "id": 903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStage",
            "nameLocation": "9239:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9247:2:14"
            },
            "returnParameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "9271:5:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9271:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9270:7:14"
            },
            "scope": 926,
            "src": "9230:77:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1953
            ],
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "9426:62:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "9463:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 920,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "9469:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 921,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "9473:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 916,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9436:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$926_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1953,
                      "src": "9436:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:45:14"
                }
              ]
            },
            "id": 925,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 912,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 911,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1079,
                  "src": "9395:13:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "9395:13:14"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9322:20:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 914,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 913,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "9418:6:14"
                }
              ],
              "src": "9409:16:14"
            },
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9351:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9343:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9343:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9365:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9357:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9357:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9377:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9369:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9369:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9342:43:14"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9426:0:14"
            },
            "scope": 926,
            "src": "9313:175:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 927,
        "src": "414:9077:14",
        "usedErrors": []
      }
    ],
    "src": "32:9459:14"
  },
  "bytecode": "60a06040819052600060808190526200001b91600991620001f8565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600a91620001f8565b50600b8054771953bc1ff76f5e61cd775a4482bd85bac56ad1eb0000000061ff01600160c01b0319909116179055600c80546001600160a01b0319167312b58f5331a6dc897932aa7fb5101667acdf03e2179055668e1bc9bf0400006011556012805460ff1916600517905566b1a2bc2ec50000601655348015620000ce57600080fd5b5060405162003f7e38038062003f7e833981016040819052620000f1916200036b565b8651879087906200010a906000906020850190620001f8565b50805162000120906001906020840190620001f8565b50506006805460ff1916905550620001383362000195565b601084905560148390556017829055600b805461ff00191661010060ff841602179055845162000170906009906020880190620001f8565b50620001886007620001ef60201b6200272e1760201c565b5050505050505062000472565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620002069062000435565b90600052602060002090601f0160209004810192826200022a576000855562000275565b82601f106200024557805160ff191683800117855562000275565b8280016001018555821562000275579182015b828111156200027557825182559160200191906001019062000258565b506200028392915062000287565b5090565b5b8082111562000283576000815560010162000288565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002c657600080fd5b81516001600160401b0380821115620002e357620002e36200029e565b604051601f8301601f19908116603f011681019082821181831017156200030e576200030e6200029e565b816040528381526020925086838588010111156200032b57600080fd5b600091505b838210156200034f578582018301518183018401529082019062000330565b83821115620003615760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200038757600080fd5b87516001600160401b03808211156200039f57600080fd5b620003ad8b838c01620002b4565b985060208a0151915080821115620003c457600080fd5b620003d28b838c01620002b4565b975060408a0151915080821115620003e957600080fd5b50620003f88a828b01620002b4565b955050606088015193506080880151925060a0880151915060c088015160ff811681146200042557600080fd5b8091505092959891949750929550565b600181811c908216806200044a57607f821691505b602082108114156200046c57634e487b7160e01b600052602260045260246000fd5b50919050565b613afc80620004826000396000f3fe6080604052600436106103ac5760003560e01c806378231978116101e7578063c66828621161010d578063e6cbb6b1116100a0578063ee3743ab1161006f578063ee3743ab14610ac2578063f2fde38b14610ad7578063f51f96dd14610af7578063fcaa766414610b0d57600080fd5b8063e6cbb6b114610a2a578063e7bc820814610a44578063e985e9c514610a59578063ed931e1714610aa257600080fd5b8063da3ef23f116100dc578063da3ef23f146109b6578063de5f9866146109d6578063de7fcb1d146109eb578063e59a2f9914610a0a57600080fd5b8063c668286214610957578063c6ab67a31461096c578063c87b56dd14610981578063d6d67a09146109a157600080fd5b80639a2a9c3d11610185578063b3caad0111610154578063b3caad01146108e1578063b88d4fde14610901578063c29de63014610921578063c32145811461094157600080fd5b80639a2a9c3d1461086a578063a22cb4651461088b578063b1214392146108ab578063b3a196e9146108cb57600080fd5b80638456cb59116101c15780638456cb59146107fd578063865054ed146108125780638da5cb5b1461083257806395d89b411461085557600080fd5b806378231978146107b2578063791a2519146107c857806381c162f2146107e857600080fd5b80633bdf4ac6116102d7578063622e4e781161026a5780636ec55dbc116102395780636ec55dbc1461073a5780636ecd23061461076a57806370a082311461077d578063715018a61461079d57600080fd5b8063622e4e78146106d05780636352211e146106f05780636c0360eb146107105780636cbb89851461072557600080fd5b806342966c68116102a657806342966c681461065057806355f804b3146106705780635c975abb1461069057806361869a93146106a857600080fd5b80633bdf4ac6146105e35780633ccfd60b146106135780633f4ba83a1461061b57806342842e0e1461063057600080fd5b80630b0c312d1161034f57806323957c661161031e57806323957c661461056357806323b872dd1461058357806330cc7ae0146105a35780633549345e146105c357600080fd5b80630b0c312d146104de578063109695231461050e57806318160ddd1461052e57806320841a6a1461054357600080fd5b8063081812fc1161038b578063081812fc1461042c578063088139a614610464578063094e40721461047a578063095ea7b3146104bc57600080fd5b80620e7fa8146103b157806301ffc9a7146103da57806306fdde031461040a575b600080fd5b3480156103bd57600080fd5b506103c760115481565b6040519081526020015b60405180910390f35b3480156103e657600080fd5b506103fa6103f53660046131bd565b610b25565b60405190151581526020016103d1565b34801561041657600080fd5b5061041f610b77565b6040516103d19190613232565b34801561043857600080fd5b5061044c610447366004613245565b610c09565b6040516001600160a01b0390911681526020016103d1565b34801561047057600080fd5b506103c760155481565b34801561048657600080fd5b506104aa61049536600461327a565b60136020526000908152604090205460ff1681565b60405160ff90911681526020016103d1565b3480156104c857600080fd5b506104dc6104d7366004613295565b610ca3565b005b3480156104ea57600080fd5b506103fa6104f936600461327a565b600f6020526000908152604090205460ff1681565b34801561051a57600080fd5b506104dc61052936600461335e565b610db9565b34801561053a57600080fd5b506103c7610e5a565b34801561054f57600080fd5b506104dc61055e366004613245565b610e76565b34801561056f57600080fd5b506104dc61057e36600461343d565b610eab565b34801561058f57600080fd5b506104dc61059e366004613472565b610f92565b3480156105af57600080fd5b506104dc6105be36600461327a565b610fc4565b3480156105cf57600080fd5b506104dc6105de366004613245565b6110d4565b3480156105ef57600080fd5b506104aa6105fe36600461327a565b600e6020526000908152604090205460ff1681565b6104dc611158565b34801561062757600080fd5b506104dc61131d565b34801561063c57600080fd5b506104dc61064b366004613472565b611357565b34801561065c57600080fd5b506104dc61066b366004613245565b611372565b34801561067c57600080fd5b506104dc61068b36600461335e565b6113ec565b34801561069c57600080fd5b5060065460ff166103fa565b3480156106b457600080fd5b50600b5461044c9064010000000090046001600160a01b031681565b3480156106dc57600080fd5b506104dc6106eb3660046134bf565b61147d565b3480156106fc57600080fd5b5061044c61070b366004613245565b6114c9565b34801561071c57600080fd5b5061041f611540565b34801561073157600080fd5b5061044c6115ce565b34801561074657600080fd5b506104aa61075536600461327a565b600d6020526000908152604090205460ff1681565b6104dc6107783660046134bf565b61162a565b34801561078957600080fd5b506103c761079836600461327a565b611c81565b3480156107a957600080fd5b506104dc611d08565b3480156107be57600080fd5b506103c760175481565b3480156107d457600080fd5b506104dc6107e3366004613245565b611d42565b3480156107f457600080fd5b506104dc611d77565b34801561080957600080fd5b506104dc611e7f565b34801561081e57600080fd5b506104dc61082d3660046134da565b611eb7565b34801561083e57600080fd5b5060065461010090046001600160a01b031661044c565b34801561086157600080fd5b5061041f611fcd565b34801561087657600080fd5b50600b546103fa906301000000900460ff1681565b34801561089757600080fd5b506104dc6108a636600461359c565b611fdc565b3480156108b757600080fd5b50600c5461044c906001600160a01b031681565b3480156108d757600080fd5b506103c760105481565b3480156108ed57600080fd5b506104dc6108fc3660046135d8565b611fe7565b34801561090d57600080fd5b506104dc61091c36600461360b565b6121d3565b34801561092d57600080fd5b50600b546103fa9062010000900460ff1681565b34801561094d57600080fd5b506103c760145481565b34801561096357600080fd5b5061041f61220b565b34801561097857600080fd5b5061041f612218565b34801561098d57600080fd5b5061041f61099c366004613245565b612225565b3480156109ad57600080fd5b506103c76122d9565b3480156109c257600080fd5b506104dc6109d136600461335e565b612332565b3480156109e257600080fd5b506103c7612375565b3480156109f757600080fd5b50600b546104aa90610100900460ff1681565b348015610a1657600080fd5b506104dc610a25366004613687565b61238c565b348015610a3657600080fd5b506012546104aa9060ff1681565b348015610a5057600080fd5b506104dc6123fa565b348015610a6557600080fd5b506103fa610a74366004613687565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610aae57600080fd5b506104dc610abd36600461327a565b6124f4565b348015610ace57600080fd5b506104dc6125ad565b348015610ae357600080fd5b506104dc610af236600461327a565b612690565b348015610b0357600080fd5b506103c760165481565b348015610b1957600080fd5b50600b5460ff166104aa565b60006001600160e01b031982166380ac58cd60e01b1480610b5657506001600160e01b03198216635b5e139f60e01b145b80610b7157506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610b86906136a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb2906136a3565b8015610bff5780601f10610bd457610100808354040283529160200191610bff565b820191906000526020600020905b815481529060010190602001808311610be257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c875760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610cae826114c9565b9050806001600160a01b0316836001600160a01b03161415610d1c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c7e565b336001600160a01b0382161480610d385750610d388133610a74565b610daa5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c7e565b610db48383612737565b505050565b6006546001600160a01b03610100909104163314610de95760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff1615610e435760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610c7e565b8051610e5690600890602084019061310e565b5050565b60006001610e6760075490565b610e719190613729565b905090565b6006546001600160a01b03610100909104163314610ea65760405162461bcd60e51b8152600401610c7e906136de565b601455565b6006546001600160a01b03610100909104163314610edb5760405162461bcd60e51b8152600401610c7e906136de565b600b54600360ff90911610610f2a5760405162461bcd60e51b8152602060048201526015602482015274283932b9b0b6329034b99031b7b731b63ab232b21760591b6044820152606401610c7e565b60005b8151811015610e56576001600f6000848481518110610f4e57610f4e613740565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610f8a81613756565b915050610f2d565b610f9d335b826127a5565b610fb95760405162461bcd60e51b8152600401610c7e90613771565b610db483838361289c565b6006546001600160a01b03610100909104163314610ff45760405162461bcd60e51b8152600401610c7e906136de565b600b54600260ff9091161061104b5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610c7e565b6001600160a01b0381166000908152600d602052604090205460ff166110b35760405162461bcd60e51b815260206004820152601960248201527f55736572206973206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610c7e565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146111045760405162461bcd60e51b8152600401610c7e906136de565b600b54600360ff909116106111535760405162461bcd60e51b8152602060048201526015602482015274283932b9b0b6329034b99031b7b731b63ab232b21760591b6044820152606401610c7e565b601155565b6006546001600160a01b036101009091041633146111885760405162461bcd60e51b8152600401610c7e906136de565b600047116111d15760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610c7e565b600b5460009064010000000090046001600160a01b03166111fe60646111f8476032612a47565b90612a5a565b604051600081818185875af1925050503d806000811461123a576040519150601f19603f3d011682016040523d82523d6000602084013e61123f565b606091505b50509050806112855760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610c7e565b600c546040516000916001600160a01b03169047908381818185875af1925050503d80600081146112d2576040519150601f19603f3d011682016040523d82523d6000602084013e6112d7565b606091505b5050905080610e565760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610c7e565b6006546001600160a01b0361010090910416331461134d5760405162461bcd60e51b8152600401610c7e906136de565b611355612a66565b565b610db4838383604051806020016040528060008152506121d3565b61137b33610f97565b6113e05760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610c7e565b6113e981612af9565b50565b6006546001600160a01b0361010090910416331461141c5760405162461bcd60e51b8152600401610c7e906136de565b600b5462010000900460ff161561146a5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610c7e565b8051610e5690600990602084019061310e565b6006546001600160a01b036101009091041633146114ad5760405162461bcd60e51b8152600401610c7e906136de565b600b805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610b715760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c7e565b6009805461154d906136a3565b80601f0160208091040260200160405190810160405280929190818152602001828054611579906136a3565b80156115c65780601f1061159b576101008083540402835291602001916115c6565b820191906000526020600020905b8154815290600101906020018083116115a957829003601f168201915b505050505081565b6000806115d9610e5a565b1161161f5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c7e565b610e7161070b610e5a565b60065460ff161561164d5760405162461bcd60e51b8152600401610c7e906137c2565b600b5460ff166116ba5760405162461bcd60e51b815260206004820152603260248201527f4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c792060448201527137b71039ba30b3b29018101434b734ba149760711b6064820152608401610c7e565b60008160ff16116117185760405162461bcd60e51b815260206004820152602260248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610c7e565b600b5460ff610100909104811690821611156117465760405162461bcd60e51b8152600401610c7e906137ec565b600b5460ff166001141561188657336000908152600d602052604090205460ff166117b35760405162461bcd60e51b815260206004820152601760248201527f4d696e746572206e6f742077686974656c69737465642e0000000000000000006044820152606401610c7e565b336000908152600d6020908152604080832054600e9092529091205460ff918216916117e0911683613836565b60ff1611156118475760405162461bcd60e51b815260206004820152602d60248201527f5472616e73616374696f6e20657863656564732072656d61696e696e6720776860448201526c6974656c697374206d696e747360981b6064820152608401610c7e565b336000908152600e60205260408120805483929061186990849060ff16613836565b92506101000a81548160ff021916908360ff160217905550611c42565b600b5460ff1660021415611a6a576011546118a49060ff8316612a47565b3410156118eb5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610c7e565b336000908152600f602052604090205460ff1661194a5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206e6f74206f6e2070726573616c65206c69737400000000006044820152606401610c7e565b6010548160ff16611959610e5a565b611963919061385b565b11156119bd5760405162461bcd60e51b815260206004820152602360248201527f5472616e73616374696f6e2065786365656473207072652d73616c6520737570604482015262706c7960e81b6064820152608401610c7e565b6012543360009081526013602052604090205460ff918216916119e1911683613836565b60ff161115611a485760405162461bcd60e51b815260206004820152602d60248201527f5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642060448201526c70726573616c65206d696e747360981b6064820152608401610c7e565b336000908152601360205260408120805483929061186990849060ff16613836565b600b5460ff1660031415611b76576006546001600160a01b03610100909104163314611ae25760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204f776e65722063616e206d696e74206174207468697320737461676044820152606560f81b6064820152608401610c7e565b601454601554611af59060ff841661385b565b1115611b565760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610c7e565b8060ff1660156000828254611b6b919061385b565b90915550611c429050565b601654611b869060ff8316612a47565b341015611bcd5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610c7e565b6017548160ff16611bdc610e5a565b611be6919061385b565b1115611c425760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610c7e565b60015b8160ff168111610e5657611c6133611c5c60075490565b612ba0565b611c6f600780546001019055565b80611c7981613756565b915050611c45565b60006001600160a01b038216611cec5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c7e565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03610100909104163314611d385760405162461bcd60e51b8152600401610c7e906136de565b6113556000612bba565b6006546001600160a01b03610100909104163314611d725760405162461bcd60e51b8152600401610c7e906136de565b601655565b6006546001600160a01b03610100909104163314611da75760405162461bcd60e51b8152600401610c7e906136de565b600060088054611db6906136a3565b905011611e055760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610c7e565b600b546301000000900460ff1615611e6a5760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610c7e565b600b805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611eaf5760405162461bcd60e51b8152600401610c7e906136de565b611355612c14565b6006546001600160a01b03610100909104163314611ee75760405162461bcd60e51b8152600401610c7e906136de565b600b54600260ff90911610611f3e5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610c7e565b60005b8251811015610db457818181518110611f5c57611f5c613740565b6020026020010151600d6000858481518110611f7a57611f7a613740565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508080611fc590613756565b915050611f41565b606060018054610b86906136a3565b610e56338383612c6c565b6006546001600160a01b036101009091041633146120175760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff1615156001146120455760405162461bcd60e51b8152600401610c7e90613873565b600b54600260ff909116106120935760405162461bcd60e51b81526020600482015260146024820152732830b9ba103bb434ba32b634b9ba1039b0b6329760611b6044820152606401610c7e565b600b5460ff610100909104811690831611156120c15760405162461bcd60e51b8152600401610c7e906137ec565b60008260ff16116121225760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610c7e565b6010548260ff16612131610e5a565b61213b919061385b565b11156121995760405162461bcd60e51b815260206004820152602760248201527f4d696e7420616d6f756e742077696c6c206578636565642070726573616c652060448201526639bab838363c9760c91b6064820152608401610c7e565b60015b8260ff168111610db4576121b382611c5c60075490565b6121c1600780546001019055565b806121cb81613756565b91505061219c565b6121dd33836127a5565b6121f95760405162461bcd60e51b8152600401610c7e90613771565b61220584848484612d3b565b50505050565b600a805461154d906136a3565b6008805461154d906136a3565b6000818152600260205260409020546060906001600160a01b03166122a45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c7e565b60096122af83612d6e565b600a6040516020016122c39392919061396a565b6040516020818303038152906040529050919050565b6000806122e4610e5a565b1161232a5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c7e565b610e71610e5a565b6006546001600160a01b036101009091041633146123625760405162461bcd60e51b8152600401610c7e906136de565b8051610e5690600a90602084019061310e565b600061237f610e5a565b601754610e719190613729565b6006546001600160a01b036101009091041633146123bc5760405162461bcd60e51b8152600401610c7e906136de565b600b8054640100000000600160c01b0319166401000000006001600160a01b0394851602179055600c80546001600160a01b03191691909216179055565b6006546001600160a01b0361010090910416331461242a5760405162461bcd60e51b8152600401610c7e906136de565b600060098054612439906136a3565b9050116124885760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610c7e565b600b5462010000900460ff16156124e15760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610c7e565b600b805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146125245760405162461bcd60e51b8152600401610c7e906136de565b6001600160a01b0381166000908152600f602052604090205460ff1661258c5760405162461bcd60e51b815260206004820152601960248201527f55736572206e6f74206f6e2070726573616c65206c6973742e000000000000006044820152606401610c7e565b6001600160a01b03166000908152600f60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146125dd5760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff16151560011461260b5760405162461bcd60e51b8152600401610c7e90613873565b600b54600460ff909116106126625760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610c7e565b600b805460ff169060006126758361399d565b91906101000a81548160ff021916908360ff16021790555050565b6006546001600160a01b036101009091041633146126c05760405162461bcd60e51b8152600401610c7e906136de565b6001600160a01b0381166127255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c7e565b6113e981612bba565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061276c826114c9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661281e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c7e565b6000612829836114c9565b9050806001600160a01b0316846001600160a01b031614806128645750836001600160a01b031661285984610c09565b6001600160a01b0316145b8061289457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166128af826114c9565b6001600160a01b0316146129175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c7e565b6001600160a01b0382166129795760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c7e565b612984838383612e6c565b61298f600082612737565b6001600160a01b03831660009081526003602052604081208054600192906129b8908490613729565b90915550506001600160a01b03821660009081526003602052604081208054600192906129e690849061385b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000612a5382846139bd565b9392505050565b6000612a5382846139f2565b60065460ff16612aaf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c7e565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612b04826114c9565b9050612b1281600084612e6c565b612b1d600083612737565b6001600160a01b0381166000908152600360205260408120805460019290612b46908490613729565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610e56828260405180602001604052806000815250612e8f565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612c375760405162461bcd60e51b8152600401610c7e906137c2565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612adc3390565b816001600160a01b0316836001600160a01b03161415612cce5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c7e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612d4684848461289c565b612d5284848484612ec2565b6122055760405162461bcd60e51b8152600401610c7e90613a06565b606081612d925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612dbc5780612da681613756565b9150612db59050600a836139f2565b9150612d96565b60008167ffffffffffffffff811115612dd757612dd76132bf565b6040519080825280601f01601f191660200182016040528015612e01576020820181803683370190505b5090505b841561289457612e16600183613729565b9150612e23600a86613a58565b612e2e90603061385b565b60f81b818381518110612e4357612e43613740565b60200101906001600160f81b031916908160001a905350612e65600a866139f2565b9450612e05565b60065460ff1615610db45760405162461bcd60e51b8152600401610c7e906137c2565b612e998383612fc0565b612ea66000848484612ec2565b610db45760405162461bcd60e51b8152600401610c7e90613a06565b60006001600160a01b0384163b15612fb557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612f06903390899088908890600401613a6c565b6020604051808303816000875af1925050508015612f41575060408051601f3d908101601f19168201909252612f3e91810190613aa9565b60015b612f9b573d808015612f6f576040519150601f19603f3d011682016040523d82523d6000602084013e612f74565b606091505b508051612f935760405162461bcd60e51b8152600401610c7e90613a06565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612894565b506001949350505050565b6001600160a01b0382166130165760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c7e565b6000818152600260205260409020546001600160a01b03161561307b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c7e565b61308760008383612e6c565b6001600160a01b03821660009081526003602052604081208054600192906130b090849061385b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461311a906136a3565b90600052602060002090601f01602090048101928261313c5760008555613182565b82601f1061315557805160ff1916838001178555613182565b82800160010185558215613182579182015b82811115613182578251825591602001919060010190613167565b5061318e929150613192565b5090565b5b8082111561318e5760008155600101613193565b6001600160e01b0319811681146113e957600080fd5b6000602082840312156131cf57600080fd5b8135612a53816131a7565b60005b838110156131f55781810151838201526020016131dd565b838111156122055750506000910152565b6000815180845261321e8160208601602086016131da565b601f01601f19169290920160200192915050565b602081526000612a536020830184613206565b60006020828403121561325757600080fd5b5035919050565b80356001600160a01b038116811461327557600080fd5b919050565b60006020828403121561328c57600080fd5b612a538261325e565b600080604083850312156132a857600080fd5b6132b18361325e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156132fe576132fe6132bf565b604052919050565b600067ffffffffffffffff831115613320576133206132bf565b613333601f8401601f19166020016132d5565b905082815283838301111561334757600080fd5b828260208301376000602084830101529392505050565b60006020828403121561337057600080fd5b813567ffffffffffffffff81111561338757600080fd5b8201601f8101841361339857600080fd5b61289484823560208401613306565b600067ffffffffffffffff8211156133c1576133c16132bf565b5060051b60200190565b600082601f8301126133dc57600080fd5b813560206133f16133ec836133a7565b6132d5565b82815260059290921b8401810191818101908684111561341057600080fd5b8286015b84811015613432576134258161325e565b8352918301918301613414565b509695505050505050565b60006020828403121561344f57600080fd5b813567ffffffffffffffff81111561346657600080fd5b612894848285016133cb565b60008060006060848603121561348757600080fd5b6134908461325e565b925061349e6020850161325e565b9150604084013590509250925092565b803560ff8116811461327557600080fd5b6000602082840312156134d157600080fd5b612a53826134ae565b600080604083850312156134ed57600080fd5b823567ffffffffffffffff8082111561350557600080fd5b613511868387016133cb565b935060209150818501358181111561352857600080fd5b85019050601f8101861361353b57600080fd5b80356135496133ec826133a7565b81815260059190911b8201830190838101908883111561356857600080fd5b928401925b8284101561358d5761357e846134ae565b8252928401929084019061356d565b80955050505050509250929050565b600080604083850312156135af57600080fd5b6135b88361325e565b9150602083013580151581146135cd57600080fd5b809150509250929050565b600080604083850312156135eb57600080fd5b6135f4836134ae565b91506136026020840161325e565b90509250929050565b6000806000806080858703121561362157600080fd5b61362a8561325e565b93506136386020860161325e565b925060408501359150606085013567ffffffffffffffff81111561365b57600080fd5b8501601f8101871361366c57600080fd5b61367b87823560208401613306565b91505092959194509250565b6000806040838503121561369a57600080fd5b6135f48361325e565b600181811c908216806136b757607f821691505b602082108114156136d857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561373b5761373b613713565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561376a5761376a613713565b5060010190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602a908201527f45786365656473206d617820616c6c6f77656420616d6f756e742070657220746040820152693930b739b0b1ba34b7b760b11b606082015260800190565b600060ff821660ff84168060ff0382111561385357613853613713565b019392505050565b6000821982111561386e5761386e613713565b500190565b60208082526038908201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260408201527f65666f7265206d696e74696e672063616e2073746172742e0000000000000000606082015260800190565b8054600090600181811c90808316806138ea57607f831692505b602080841082141561390c57634e487b7160e01b600052602260045260246000fd5b81801561392057600181146139315761395e565b60ff1986168952848901965061395e565b60008881526020902060005b868110156139565781548b82015290850190830161393d565b505084890196505b50505050505092915050565b600061397682866138d0565b84516139868183602089016131da565b613992818301866138d0565b979650505050505050565b600060ff821660ff8114156139b4576139b4613713565b60010192915050565b60008160001904831182151516156139d7576139d7613713565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613a0157613a016139dc565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082613a6757613a676139dc565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a9f90830184613206565b9695505050505050565b600060208284031215613abb57600080fd5b8151612a53816131a756fea26469706673582212203c5386b11b947c134a2c0b73d19cf0150a19485677458bc7af3fab5bf9901cb864736f6c634300080a0033",
  "bytecodeSha1": "b8ffb31b7dabd13a8a64bcd67e545b96d0bc4ad3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "202": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "Strings.toString": {
          "203": [
            601,
            611,
            false
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "CryptidToken.airdropCryptid": {
          "177": [
            4559,
            4587,
            true
          ],
          "178": [
            4666,
            4675,
            true
          ],
          "179": [
            4718,
            4745,
            true
          ],
          "180": [
            4810,
            4825,
            true
          ],
          "181": [
            4885,
            4928,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "183": [
            6266,
            6291,
            true
          ],
          "184": [
            6337,
            6352,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "174": [
            7759,
            7791,
            true
          ],
          "175": [
            7846,
            7867,
            true
          ]
        },
        "CryptidToken.lastMintAddress": {
          "159": [
            8460,
            8477,
            true
          ]
        },
        "CryptidToken.lastMintID": {
          "182": [
            8625,
            8642,
            true
          ]
        },
        "CryptidToken.mint": {
          "160": [
            2593,
            2608,
            true
          ],
          "161": [
            2665,
            2692,
            true
          ],
          "162": [
            2753,
            2763,
            false
          ],
          "163": [
            2888,
            2962,
            true
          ],
          "164": [
            3090,
            3100,
            false
          ],
          "165": [
            3145,
            3187,
            true
          ],
          "166": [
            3235,
            3259,
            true
          ],
          "167": [
            3313,
            3357,
            true
          ],
          "168": [
            3419,
            3479,
            true
          ],
          "169": [
            3611,
            3621,
            false
          ],
          "170": [
            3666,
            3687,
            true
          ],
          "171": [
            3747,
            3792,
            true
          ],
          "172": [
            3947,
            3986,
            true
          ],
          "173": [
            4034,
            4081,
            true
          ]
        },
        "CryptidToken.nextStage": {
          "186": [
            6483,
            6511,
            true
          ],
          "187": [
            6590,
            6599,
            true
          ]
        },
        "CryptidToken.removePresaleUser": {
          "185": [
            5938,
            5957,
            true
          ]
        },
        "CryptidToken.removeWhitelistUser": {
          "153": [
            5698,
            5707,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "158": [
            6119,
            6134,
            true
          ]
        },
        "CryptidToken.setPresalePrice": {
          "154": [
            7013,
            7022,
            true
          ]
        },
        "CryptidToken.setPresaleUsers": {
          "152": [
            5486,
            5495,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "151": [
            7431,
            7452,
            true
          ]
        },
        "CryptidToken.setWhitelistUsers": {
          "176": [
            5254,
            5263,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "155": [
            8019,
            8044,
            true
          ],
          "156": [
            8191,
            8193,
            true
          ],
          "157": [
            8319,
            8321,
            true
          ]
        }
      },
      "2": {
        "ERC721._mint": {
          "200": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeMint": {
          "199": [
            8604,
            8658,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "198": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "197": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "195": [
            10451,
            10482,
            true
          ],
          "196": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "188": [
            3659,
            3670,
            true
          ],
          "189": [
            3740,
            3761,
            true
          ],
          "190": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "193": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "192": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "194": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "191": [
            4900,
            4941,
            true
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "201": [
            645,
            686,
            true
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "125": [
            2378,
            2395
          ],
          "126": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "64": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "101": [
            1998,
            2071
          ],
          "102": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "127": [
            1922,
            1936
          ],
          "128": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "117": [
            2168,
            2183
          ],
          "118": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Strings.toString": {
          "134": [
            627,
            637
          ],
          "135": [
            743,
            751
          ],
          "136": [
            765,
            775
          ],
          "137": [
            877,
            888
          ],
          "138": [
            902,
            958
          ],
          "139": [
            972,
            983
          ]
        }
      },
      "11": {
        "ERC165.supportsInterface": {
          "5": [
            930,
            977
          ]
        }
      },
      "12": {},
      "13": {
        "SafeMath.div": {
          "116": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "115": [
            3528,
            3540
          ]
        }
      },
      "14": {
        "CryptidToken.airdropCryptid": {
          "75": [
            4551,
            4648
          ],
          "76": [
            4658,
            4700
          ],
          "77": [
            4710,
            4792
          ],
          "78": [
            4802,
            4867
          ],
          "79": [
            4877,
            4972
          ],
          "80": [
            5039,
            5080
          ],
          "81": [
            5094,
            5121
          ],
          "82": [
            5020,
            5023
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "93": [
            6258,
            6319
          ],
          "94": [
            6329,
            6383
          ],
          "95": [
            6393,
            6414
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "66": [
            7751,
            7828
          ],
          "67": [
            7838,
            7906
          ],
          "68": [
            7916,
            7943
          ]
        },
        "CryptidToken.getStage": {
          "3": [
            9288,
            9300
          ]
        },
        "CryptidToken.getTokensLeft": {
          "90": [
            9175,
            9213
          ]
        },
        "CryptidToken.lastMintAddress": {
          "40": [
            8452,
            8504
          ],
          "41": [
            8514,
            8543
          ]
        },
        "CryptidToken.lastMintID": {
          "87": [
            8617,
            8669
          ],
          "88": [
            8679,
            8700
          ]
        },
        "CryptidToken.mint": {
          "42": [
            2503,
            2575
          ],
          "43": [
            2585,
            2647
          ],
          "44": [
            2657,
            2739
          ],
          "45": [
            2800,
            2866
          ],
          "46": [
            2880,
            3012
          ],
          "47": [
            3026,
            3071
          ],
          "48": [
            3137,
            3213
          ],
          "49": [
            3227,
            3291
          ],
          "50": [
            3305,
            3397
          ],
          "51": [
            3411,
            3529
          ],
          "52": [
            3549,
            3592
          ],
          "53": [
            3658,
            3725
          ],
          "54": [
            3739,
            3839
          ],
          "55": [
            3859,
            3887
          ],
          "56": [
            3939,
            4012
          ],
          "57": [
            4026,
            4123
          ],
          "58": [
            4200,
            4248
          ],
          "59": [
            4262,
            4289
          ],
          "61": [
            4181,
            4184
          ]
        },
        "CryptidToken.nextStage": {
          "98": [
            6475,
            6572
          ],
          "99": [
            6582,
            6631
          ],
          "100": [
            6641,
            6648
          ]
        },
        "CryptidToken.pause": {
          "69": [
            4378,
            4386
          ]
        },
        "CryptidToken.removePresaleUser": {
          "96": [
            5930,
            5987
          ],
          "97": [
            5997,
            6024
          ]
        },
        "CryptidToken.removeWhitelistUser": {
          "24": [
            5690,
            5740
          ],
          "25": [
            5750,
            5813
          ],
          "26": [
            5823,
            5848
          ]
        },
        "CryptidToken.setBaseExtension": {
          "89": [
            6881,
            6914
          ]
        },
        "CryptidToken.setBaseURI": {
          "36": [
            6111,
            6157
          ],
          "37": [
            6167,
            6188
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "38": [
            7294,
            7325
          ]
        },
        "CryptidToken.setPresalePrice": {
          "27": [
            7005,
            7048
          ],
          "28": [
            7058,
            7089
          ]
        },
        "CryptidToken.setPresaleUsers": {
          "19": [
            5478,
            5521
          ],
          "20": [
            5576,
            5606
          ],
          "21": [
            5563,
            5566
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "14": [
            7423,
            7483
          ],
          "15": [
            7493,
            7525
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "65": [
            7180,
            7205
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "18": [
            6747,
            6782
          ]
        },
        "CryptidToken.setWhitelistUsers": {
          "70": [
            5246,
            5296
          ],
          "71": [
            5351,
            5388
          ],
          "72": [
            5338,
            5341
          ]
        },
        "CryptidToken.setWithdrawAddress": {
          "91": [
            7625,
            7647
          ],
          "92": [
            7657,
            7679
          ]
        },
        "CryptidToken.tokenURI": {
          "85": [
            8923,
            8999
          ],
          "86": [
            9009,
            9084
          ]
        },
        "CryptidToken.totalSupply": {
          "16": [
            8776,
            8812
          ]
        },
        "CryptidToken.unpause": {
          "32": [
            4445,
            4455
          ]
        },
        "CryptidToken.withdraw": {
          "29": [
            8011,
            8071
          ],
          "30": [
            8183,
            8216
          ],
          "31": [
            8311,
            8344
          ]
        }
      },
      "2": {
        "ERC721._approve": {
          "103": [
            11069,
            11098
          ],
          "104": [
            11108,
            11159
          ]
        },
        "ERC721._burn": {
          "119": [
            9761,
            9809
          ],
          "120": [
            9847,
            9876
          ],
          "121": [
            9887,
            9908
          ],
          "122": [
            9918,
            9941
          ],
          "123": [
            9952,
            9993
          ]
        },
        "ERC721._checkOnERC721Received": {
          "142": [
            12647,
            12707
          ],
          "143": [
            12481,
            12539
          ],
          "144": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "7": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "105": [
            7536,
            7609
          ],
          "106": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "145": [
            9134,
            9195
          ],
          "146": [
            9205,
            9263
          ],
          "147": [
            9274,
            9319
          ],
          "148": [
            9330,
            9348
          ],
          "149": [
            9358,
            9379
          ],
          "150": [
            9390,
            9428
          ]
        },
        "ERC721._safeMint": {
          "124": [
            8176,
            8202
          ],
          "140": [
            8555,
            8573
          ],
          "141": [
            8583,
            8734
          ]
        },
        "ERC721._safeTransfer": {
          "132": [
            6685,
            6713
          ],
          "133": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "129": [
            11434,
            11489
          ],
          "130": [
            11499,
            11545
          ],
          "131": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "107": [
            10443,
            10528
          ],
          "108": [
            10538,
            10603
          ],
          "109": [
            10614,
            10653
          ],
          "110": [
            10715,
            10744
          ],
          "111": [
            10755,
            10775
          ],
          "112": [
            10785,
            10803
          ],
          "113": [
            10813,
            10834
          ],
          "114": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "10": [
            3651,
            3708
          ],
          "12": [
            3719,
            3884
          ],
          "13": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "62": [
            2005,
            2079
          ],
          "63": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4079,
            4152
          ],
          "9": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "6": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "39": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "33": [
            5240,
            5279
          ],
          "83": [
            5513,
            5616
          ],
          "84": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "74": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "4": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "73": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "22": [
            4892,
            4995
          ],
          "23": [
            5006,
            5034
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721Burnable.burn": {
          "34": [
            637,
            739
          ],
          "35": [
            749,
            763
          ]
        }
      },
      "6": {},
      "8": {
        "Context._msgSender": {
          "11": [
            712,
            729
          ]
        }
      },
      "9": {
        "Counters.current": {
          "17": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "60": [
            1032,
            1051
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "6080604052600436106103ac5760003560e01c806378231978116101e7578063c66828621161010d578063e6cbb6b1116100a0578063ee3743ab1161006f578063ee3743ab14610ac2578063f2fde38b14610ad7578063f51f96dd14610af7578063fcaa766414610b0d57600080fd5b8063e6cbb6b114610a2a578063e7bc820814610a44578063e985e9c514610a59578063ed931e1714610aa257600080fd5b8063da3ef23f116100dc578063da3ef23f146109b6578063de5f9866146109d6578063de7fcb1d146109eb578063e59a2f9914610a0a57600080fd5b8063c668286214610957578063c6ab67a31461096c578063c87b56dd14610981578063d6d67a09146109a157600080fd5b80639a2a9c3d11610185578063b3caad0111610154578063b3caad01146108e1578063b88d4fde14610901578063c29de63014610921578063c32145811461094157600080fd5b80639a2a9c3d1461086a578063a22cb4651461088b578063b1214392146108ab578063b3a196e9146108cb57600080fd5b80638456cb59116101c15780638456cb59146107fd578063865054ed146108125780638da5cb5b1461083257806395d89b411461085557600080fd5b806378231978146107b2578063791a2519146107c857806381c162f2146107e857600080fd5b80633bdf4ac6116102d7578063622e4e781161026a5780636ec55dbc116102395780636ec55dbc1461073a5780636ecd23061461076a57806370a082311461077d578063715018a61461079d57600080fd5b8063622e4e78146106d05780636352211e146106f05780636c0360eb146107105780636cbb89851461072557600080fd5b806342966c68116102a657806342966c681461065057806355f804b3146106705780635c975abb1461069057806361869a93146106a857600080fd5b80633bdf4ac6146105e35780633ccfd60b146106135780633f4ba83a1461061b57806342842e0e1461063057600080fd5b80630b0c312d1161034f57806323957c661161031e57806323957c661461056357806323b872dd1461058357806330cc7ae0146105a35780633549345e146105c357600080fd5b80630b0c312d146104de578063109695231461050e57806318160ddd1461052e57806320841a6a1461054357600080fd5b8063081812fc1161038b578063081812fc1461042c578063088139a614610464578063094e40721461047a578063095ea7b3146104bc57600080fd5b80620e7fa8146103b157806301ffc9a7146103da57806306fdde031461040a575b600080fd5b3480156103bd57600080fd5b506103c760115481565b6040519081526020015b60405180910390f35b3480156103e657600080fd5b506103fa6103f53660046131bd565b610b25565b60405190151581526020016103d1565b34801561041657600080fd5b5061041f610b77565b6040516103d19190613232565b34801561043857600080fd5b5061044c610447366004613245565b610c09565b6040516001600160a01b0390911681526020016103d1565b34801561047057600080fd5b506103c760155481565b34801561048657600080fd5b506104aa61049536600461327a565b60136020526000908152604090205460ff1681565b60405160ff90911681526020016103d1565b3480156104c857600080fd5b506104dc6104d7366004613295565b610ca3565b005b3480156104ea57600080fd5b506103fa6104f936600461327a565b600f6020526000908152604090205460ff1681565b34801561051a57600080fd5b506104dc61052936600461335e565b610db9565b34801561053a57600080fd5b506103c7610e5a565b34801561054f57600080fd5b506104dc61055e366004613245565b610e76565b34801561056f57600080fd5b506104dc61057e36600461343d565b610eab565b34801561058f57600080fd5b506104dc61059e366004613472565b610f92565b3480156105af57600080fd5b506104dc6105be36600461327a565b610fc4565b3480156105cf57600080fd5b506104dc6105de366004613245565b6110d4565b3480156105ef57600080fd5b506104aa6105fe36600461327a565b600e6020526000908152604090205460ff1681565b6104dc611158565b34801561062757600080fd5b506104dc61131d565b34801561063c57600080fd5b506104dc61064b366004613472565b611357565b34801561065c57600080fd5b506104dc61066b366004613245565b611372565b34801561067c57600080fd5b506104dc61068b36600461335e565b6113ec565b34801561069c57600080fd5b5060065460ff166103fa565b3480156106b457600080fd5b50600b5461044c9064010000000090046001600160a01b031681565b3480156106dc57600080fd5b506104dc6106eb3660046134bf565b61147d565b3480156106fc57600080fd5b5061044c61070b366004613245565b6114c9565b34801561071c57600080fd5b5061041f611540565b34801561073157600080fd5b5061044c6115ce565b34801561074657600080fd5b506104aa61075536600461327a565b600d6020526000908152604090205460ff1681565b6104dc6107783660046134bf565b61162a565b34801561078957600080fd5b506103c761079836600461327a565b611c81565b3480156107a957600080fd5b506104dc611d08565b3480156107be57600080fd5b506103c760175481565b3480156107d457600080fd5b506104dc6107e3366004613245565b611d42565b3480156107f457600080fd5b506104dc611d77565b34801561080957600080fd5b506104dc611e7f565b34801561081e57600080fd5b506104dc61082d3660046134da565b611eb7565b34801561083e57600080fd5b5060065461010090046001600160a01b031661044c565b34801561086157600080fd5b5061041f611fcd565b34801561087657600080fd5b50600b546103fa906301000000900460ff1681565b34801561089757600080fd5b506104dc6108a636600461359c565b611fdc565b3480156108b757600080fd5b50600c5461044c906001600160a01b031681565b3480156108d757600080fd5b506103c760105481565b3480156108ed57600080fd5b506104dc6108fc3660046135d8565b611fe7565b34801561090d57600080fd5b506104dc61091c36600461360b565b6121d3565b34801561092d57600080fd5b50600b546103fa9062010000900460ff1681565b34801561094d57600080fd5b506103c760145481565b34801561096357600080fd5b5061041f61220b565b34801561097857600080fd5b5061041f612218565b34801561098d57600080fd5b5061041f61099c366004613245565b612225565b3480156109ad57600080fd5b506103c76122d9565b3480156109c257600080fd5b506104dc6109d136600461335e565b612332565b3480156109e257600080fd5b506103c7612375565b3480156109f757600080fd5b50600b546104aa90610100900460ff1681565b348015610a1657600080fd5b506104dc610a25366004613687565b61238c565b348015610a3657600080fd5b506012546104aa9060ff1681565b348015610a5057600080fd5b506104dc6123fa565b348015610a6557600080fd5b506103fa610a74366004613687565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610aae57600080fd5b506104dc610abd36600461327a565b6124f4565b348015610ace57600080fd5b506104dc6125ad565b348015610ae357600080fd5b506104dc610af236600461327a565b612690565b348015610b0357600080fd5b506103c760165481565b348015610b1957600080fd5b50600b5460ff166104aa565b60006001600160e01b031982166380ac58cd60e01b1480610b5657506001600160e01b03198216635b5e139f60e01b145b80610b7157506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610b86906136a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb2906136a3565b8015610bff5780601f10610bd457610100808354040283529160200191610bff565b820191906000526020600020905b815481529060010190602001808311610be257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c875760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610cae826114c9565b9050806001600160a01b0316836001600160a01b03161415610d1c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c7e565b336001600160a01b0382161480610d385750610d388133610a74565b610daa5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c7e565b610db48383612737565b505050565b6006546001600160a01b03610100909104163314610de95760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff1615610e435760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610c7e565b8051610e5690600890602084019061310e565b5050565b60006001610e6760075490565b610e719190613729565b905090565b6006546001600160a01b03610100909104163314610ea65760405162461bcd60e51b8152600401610c7e906136de565b601455565b6006546001600160a01b03610100909104163314610edb5760405162461bcd60e51b8152600401610c7e906136de565b600b54600360ff90911610610f2a5760405162461bcd60e51b8152602060048201526015602482015274283932b9b0b6329034b99031b7b731b63ab232b21760591b6044820152606401610c7e565b60005b8151811015610e56576001600f6000848481518110610f4e57610f4e613740565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610f8a81613756565b915050610f2d565b610f9d335b826127a5565b610fb95760405162461bcd60e51b8152600401610c7e90613771565b610db483838361289c565b6006546001600160a01b03610100909104163314610ff45760405162461bcd60e51b8152600401610c7e906136de565b600b54600260ff9091161061104b5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610c7e565b6001600160a01b0381166000908152600d602052604090205460ff166110b35760405162461bcd60e51b815260206004820152601960248201527f55736572206973206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610c7e565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146111045760405162461bcd60e51b8152600401610c7e906136de565b600b54600360ff909116106111535760405162461bcd60e51b8152602060048201526015602482015274283932b9b0b6329034b99031b7b731b63ab232b21760591b6044820152606401610c7e565b601155565b6006546001600160a01b036101009091041633146111885760405162461bcd60e51b8152600401610c7e906136de565b600047116111d15760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610c7e565b600b5460009064010000000090046001600160a01b03166111fe60646111f8476032612a47565b90612a5a565b604051600081818185875af1925050503d806000811461123a576040519150601f19603f3d011682016040523d82523d6000602084013e61123f565b606091505b50509050806112855760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610c7e565b600c546040516000916001600160a01b03169047908381818185875af1925050503d80600081146112d2576040519150601f19603f3d011682016040523d82523d6000602084013e6112d7565b606091505b5050905080610e565760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610c7e565b6006546001600160a01b0361010090910416331461134d5760405162461bcd60e51b8152600401610c7e906136de565b611355612a66565b565b610db4838383604051806020016040528060008152506121d3565b61137b33610f97565b6113e05760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610c7e565b6113e981612af9565b50565b6006546001600160a01b0361010090910416331461141c5760405162461bcd60e51b8152600401610c7e906136de565b600b5462010000900460ff161561146a5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610c7e565b8051610e5690600990602084019061310e565b6006546001600160a01b036101009091041633146114ad5760405162461bcd60e51b8152600401610c7e906136de565b600b805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610b715760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c7e565b6009805461154d906136a3565b80601f0160208091040260200160405190810160405280929190818152602001828054611579906136a3565b80156115c65780601f1061159b576101008083540402835291602001916115c6565b820191906000526020600020905b8154815290600101906020018083116115a957829003601f168201915b505050505081565b6000806115d9610e5a565b1161161f5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c7e565b610e7161070b610e5a565b60065460ff161561164d5760405162461bcd60e51b8152600401610c7e906137c2565b600b5460ff166116ba5760405162461bcd60e51b815260206004820152603260248201527f4d696e74696e67206e6f7420696e697469617465642e2043757272656e6c792060448201527137b71039ba30b3b29018101434b734ba149760711b6064820152608401610c7e565b60008160ff16116117185760405162461bcd60e51b815260206004820152602260248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610c7e565b600b5460ff610100909104811690821611156117465760405162461bcd60e51b8152600401610c7e906137ec565b600b5460ff166001141561188657336000908152600d602052604090205460ff166117b35760405162461bcd60e51b815260206004820152601760248201527f4d696e746572206e6f742077686974656c69737465642e0000000000000000006044820152606401610c7e565b336000908152600d6020908152604080832054600e9092529091205460ff918216916117e0911683613836565b60ff1611156118475760405162461bcd60e51b815260206004820152602d60248201527f5472616e73616374696f6e20657863656564732072656d61696e696e6720776860448201526c6974656c697374206d696e747360981b6064820152608401610c7e565b336000908152600e60205260408120805483929061186990849060ff16613836565b92506101000a81548160ff021916908360ff160217905550611c42565b600b5460ff1660021415611a6a576011546118a49060ff8316612a47565b3410156118eb5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610c7e565b336000908152600f602052604090205460ff1661194a5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206e6f74206f6e2070726573616c65206c69737400000000006044820152606401610c7e565b6010548160ff16611959610e5a565b611963919061385b565b11156119bd5760405162461bcd60e51b815260206004820152602360248201527f5472616e73616374696f6e2065786365656473207072652d73616c6520737570604482015262706c7960e81b6064820152608401610c7e565b6012543360009081526013602052604090205460ff918216916119e1911683613836565b60ff161115611a485760405162461bcd60e51b815260206004820152602d60248201527f5472616e73616374696f6e2065786365656473206d617820616c6c6f7765642060448201526c70726573616c65206d696e747360981b6064820152608401610c7e565b336000908152601360205260408120805483929061186990849060ff16613836565b600b5460ff1660031415611b76576006546001600160a01b03610100909104163314611ae25760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204f776e65722063616e206d696e74206174207468697320737461676044820152606560f81b6064820152608401610c7e565b601454601554611af59060ff841661385b565b1115611b565760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610c7e565b8060ff1660156000828254611b6b919061385b565b90915550611c429050565b601654611b869060ff8316612a47565b341015611bcd5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08195d1a195c881cd95b9d605a1b6044820152606401610c7e565b6017548160ff16611bdc610e5a565b611be6919061385b565b1115611c425760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610c7e565b60015b8160ff168111610e5657611c6133611c5c60075490565b612ba0565b611c6f600780546001019055565b80611c7981613756565b915050611c45565b60006001600160a01b038216611cec5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c7e565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03610100909104163314611d385760405162461bcd60e51b8152600401610c7e906136de565b6113556000612bba565b6006546001600160a01b03610100909104163314611d725760405162461bcd60e51b8152600401610c7e906136de565b601655565b6006546001600160a01b03610100909104163314611da75760405162461bcd60e51b8152600401610c7e906136de565b600060088054611db6906136a3565b905011611e055760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610c7e565b600b546301000000900460ff1615611e6a5760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610c7e565b600b805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611eaf5760405162461bcd60e51b8152600401610c7e906136de565b611355612c14565b6006546001600160a01b03610100909104163314611ee75760405162461bcd60e51b8152600401610c7e906136de565b600b54600260ff90911610611f3e5760405162461bcd60e51b815260206004820152601c60248201527f57686974656c6973742073616c6520697320636f6e636c756465642e000000006044820152606401610c7e565b60005b8251811015610db457818181518110611f5c57611f5c613740565b6020026020010151600d6000858481518110611f7a57611f7a613740565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508080611fc590613756565b915050611f41565b606060018054610b86906136a3565b610e56338383612c6c565b6006546001600160a01b036101009091041633146120175760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff1615156001146120455760405162461bcd60e51b8152600401610c7e90613873565b600b54600260ff909116106120935760405162461bcd60e51b81526020600482015260146024820152732830b9ba103bb434ba32b634b9ba1039b0b6329760611b6044820152606401610c7e565b600b5460ff610100909104811690831611156120c15760405162461bcd60e51b8152600401610c7e906137ec565b60008260ff16116121225760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610c7e565b6010548260ff16612131610e5a565b61213b919061385b565b11156121995760405162461bcd60e51b815260206004820152602760248201527f4d696e7420616d6f756e742077696c6c206578636565642070726573616c652060448201526639bab838363c9760c91b6064820152608401610c7e565b60015b8260ff168111610db4576121b382611c5c60075490565b6121c1600780546001019055565b806121cb81613756565b91505061219c565b6121dd33836127a5565b6121f95760405162461bcd60e51b8152600401610c7e90613771565b61220584848484612d3b565b50505050565b600a805461154d906136a3565b6008805461154d906136a3565b6000818152600260205260409020546060906001600160a01b03166122a45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c7e565b60096122af83612d6e565b600a6040516020016122c39392919061396a565b6040516020818303038152906040529050919050565b6000806122e4610e5a565b1161232a5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c7e565b610e71610e5a565b6006546001600160a01b036101009091041633146123625760405162461bcd60e51b8152600401610c7e906136de565b8051610e5690600a90602084019061310e565b600061237f610e5a565b601754610e719190613729565b6006546001600160a01b036101009091041633146123bc5760405162461bcd60e51b8152600401610c7e906136de565b600b8054640100000000600160c01b0319166401000000006001600160a01b0394851602179055600c80546001600160a01b03191691909216179055565b6006546001600160a01b0361010090910416331461242a5760405162461bcd60e51b8152600401610c7e906136de565b600060098054612439906136a3565b9050116124885760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610c7e565b600b5462010000900460ff16156124e15760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610c7e565b600b805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146125245760405162461bcd60e51b8152600401610c7e906136de565b6001600160a01b0381166000908152600f602052604090205460ff1661258c5760405162461bcd60e51b815260206004820152601960248201527f55736572206e6f74206f6e2070726573616c65206c6973742e000000000000006044820152606401610c7e565b6001600160a01b03166000908152600f60205260409020805460ff19169055565b6006546001600160a01b036101009091041633146125dd5760405162461bcd60e51b8152600401610c7e906136de565b600b546301000000900460ff16151560011461260b5760405162461bcd60e51b8152600401610c7e90613873565b600b54600460ff909116106126625760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610c7e565b600b805460ff169060006126758361399d565b91906101000a81548160ff021916908360ff16021790555050565b6006546001600160a01b036101009091041633146126c05760405162461bcd60e51b8152600401610c7e906136de565b6001600160a01b0381166127255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c7e565b6113e981612bba565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061276c826114c9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661281e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c7e565b6000612829836114c9565b9050806001600160a01b0316846001600160a01b031614806128645750836001600160a01b031661285984610c09565b6001600160a01b0316145b8061289457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166128af826114c9565b6001600160a01b0316146129175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c7e565b6001600160a01b0382166129795760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c7e565b612984838383612e6c565b61298f600082612737565b6001600160a01b03831660009081526003602052604081208054600192906129b8908490613729565b90915550506001600160a01b03821660009081526003602052604081208054600192906129e690849061385b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000612a5382846139bd565b9392505050565b6000612a5382846139f2565b60065460ff16612aaf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c7e565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612b04826114c9565b9050612b1281600084612e6c565b612b1d600083612737565b6001600160a01b0381166000908152600360205260408120805460019290612b46908490613729565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610e56828260405180602001604052806000815250612e8f565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612c375760405162461bcd60e51b8152600401610c7e906137c2565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612adc3390565b816001600160a01b0316836001600160a01b03161415612cce5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c7e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612d4684848461289c565b612d5284848484612ec2565b6122055760405162461bcd60e51b8152600401610c7e90613a06565b606081612d925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612dbc5780612da681613756565b9150612db59050600a836139f2565b9150612d96565b60008167ffffffffffffffff811115612dd757612dd76132bf565b6040519080825280601f01601f191660200182016040528015612e01576020820181803683370190505b5090505b841561289457612e16600183613729565b9150612e23600a86613a58565b612e2e90603061385b565b60f81b818381518110612e4357612e43613740565b60200101906001600160f81b031916908160001a905350612e65600a866139f2565b9450612e05565b60065460ff1615610db45760405162461bcd60e51b8152600401610c7e906137c2565b612e998383612fc0565b612ea66000848484612ec2565b610db45760405162461bcd60e51b8152600401610c7e90613a06565b60006001600160a01b0384163b15612fb557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612f06903390899088908890600401613a6c565b6020604051808303816000875af1925050508015612f41575060408051601f3d908101601f19168201909252612f3e91810190613aa9565b60015b612f9b573d808015612f6f576040519150601f19603f3d011682016040523d82523d6000602084013e612f74565b606091505b508051612f935760405162461bcd60e51b8152600401610c7e90613a06565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612894565b506001949350505050565b6001600160a01b0382166130165760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c7e565b6000818152600260205260409020546001600160a01b03161561307b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c7e565b61308760008383612e6c565b6001600160a01b03821660009081526003602052604081208054600192906130b090849061385b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461311a906136a3565b90600052602060002090601f01602090048101928261313c5760008555613182565b82601f1061315557805160ff1916838001178555613182565b82800160010185558215613182579182015b82811115613182578251825591602001919060010190613167565b5061318e929150613192565b5090565b5b8082111561318e5760008155600101613193565b6001600160e01b0319811681146113e957600080fd5b6000602082840312156131cf57600080fd5b8135612a53816131a7565b60005b838110156131f55781810151838201526020016131dd565b838111156122055750506000910152565b6000815180845261321e8160208601602086016131da565b601f01601f19169290920160200192915050565b602081526000612a536020830184613206565b60006020828403121561325757600080fd5b5035919050565b80356001600160a01b038116811461327557600080fd5b919050565b60006020828403121561328c57600080fd5b612a538261325e565b600080604083850312156132a857600080fd5b6132b18361325e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156132fe576132fe6132bf565b604052919050565b600067ffffffffffffffff831115613320576133206132bf565b613333601f8401601f19166020016132d5565b905082815283838301111561334757600080fd5b828260208301376000602084830101529392505050565b60006020828403121561337057600080fd5b813567ffffffffffffffff81111561338757600080fd5b8201601f8101841361339857600080fd5b61289484823560208401613306565b600067ffffffffffffffff8211156133c1576133c16132bf565b5060051b60200190565b600082601f8301126133dc57600080fd5b813560206133f16133ec836133a7565b6132d5565b82815260059290921b8401810191818101908684111561341057600080fd5b8286015b84811015613432576134258161325e565b8352918301918301613414565b509695505050505050565b60006020828403121561344f57600080fd5b813567ffffffffffffffff81111561346657600080fd5b612894848285016133cb565b60008060006060848603121561348757600080fd5b6134908461325e565b925061349e6020850161325e565b9150604084013590509250925092565b803560ff8116811461327557600080fd5b6000602082840312156134d157600080fd5b612a53826134ae565b600080604083850312156134ed57600080fd5b823567ffffffffffffffff8082111561350557600080fd5b613511868387016133cb565b935060209150818501358181111561352857600080fd5b85019050601f8101861361353b57600080fd5b80356135496133ec826133a7565b81815260059190911b8201830190838101908883111561356857600080fd5b928401925b8284101561358d5761357e846134ae565b8252928401929084019061356d565b80955050505050509250929050565b600080604083850312156135af57600080fd5b6135b88361325e565b9150602083013580151581146135cd57600080fd5b809150509250929050565b600080604083850312156135eb57600080fd5b6135f4836134ae565b91506136026020840161325e565b90509250929050565b6000806000806080858703121561362157600080fd5b61362a8561325e565b93506136386020860161325e565b925060408501359150606085013567ffffffffffffffff81111561365b57600080fd5b8501601f8101871361366c57600080fd5b61367b87823560208401613306565b91505092959194509250565b6000806040838503121561369a57600080fd5b6135f48361325e565b600181811c908216806136b757607f821691505b602082108114156136d857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561373b5761373b613713565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561376a5761376a613713565b5060010190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602a908201527f45786365656473206d617820616c6c6f77656420616d6f756e742070657220746040820152693930b739b0b1ba34b7b760b11b606082015260800190565b600060ff821660ff84168060ff0382111561385357613853613713565b019392505050565b6000821982111561386e5761386e613713565b500190565b60208082526038908201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260408201527f65666f7265206d696e74696e672063616e2073746172742e0000000000000000606082015260800190565b8054600090600181811c90808316806138ea57607f831692505b602080841082141561390c57634e487b7160e01b600052602260045260246000fd5b81801561392057600181146139315761395e565b60ff1986168952848901965061395e565b60008881526020902060005b868110156139565781548b82015290850190830161393d565b505084890196505b50505050505092915050565b600061397682866138d0565b84516139868183602089016131da565b613992818301866138d0565b979650505050505050565b600060ff821660ff8114156139b4576139b4613713565b60010192915050565b60008160001904831182151516156139d7576139d7613713565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613a0157613a016139dc565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082613a6757613a676139dc565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a9f90830184613206565b9695505050505050565b600060208284031215613abb57600080fd5b8151612a53816131a756fea26469706673582212203c5386b11b947c134a2c0b73d19cf0150a19485677458bc7af3fab5bf9901cb864736f6c634300080a0033",
  "deployedSourceMap": "414:9077:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:40;;;;;;;;;;;;;;;;;;;160:25:15;;;148:2;133:18;1500:40:14;;;;;;;;1555:300:2;;;;;;;;;;-1:-1:-1;1555:300:2;;;;;:::i;:::-;;:::i;:::-;;;747:14:15;;740:22;722:41;;710:2;695:18;1555:300:2;582:187:15;2473:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1874:32:15;;;1856:51;;1844:2;1829:18;3984:217:2;1710:203:15;1745:28:14;;;;;;;;;;;;;;;;1601:49;;;;;;;;;;-1:-1:-1;1601:49:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2459:4:15;2447:17;;;2429:36;;2417:2;2402:18;1601:49:14;2287:184:15;3522:401:2;;;;;;;;;;-1:-1:-1;3522:401:2;;;;;:::i;:::-;;:::i;:::-;;1393:44:14;;;;;;;;;;-1:-1:-1;1393:44:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;7338:194;;;;;;;;;;-1:-1:-1;7338:194:14;;;;;:::i;:::-;;:::i;8713:106::-;;;;;;;;;;;;;:::i;6665:124::-;;;;;;;;;;-1:-1:-1;6665:124:14;;;;;:::i;:::-;;:::i;5401:212::-;;;;;;;;;;-1:-1:-1;5401:212:14;;;;;:::i;:::-;;:::i;4711:330:2:-;;;;;;;;;;-1:-1:-1;4711:330:2;;;;;:::i;:::-;;:::i;5619:236:14:-;;;;;;;;;;-1:-1:-1;5619:236:14;;;;;:::i;:::-;;:::i;6927:169::-;;;;;;;;;;-1:-1:-1;6927:169:14;;;;;:::i;:::-;;:::i;1305:51::-;;;;;;;;;;-1:-1:-1;1305:51:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;7956:395;;;:::i;4399:63::-;;;;;;;;;;;;;:::i;5107:179:2:-;;;;;;;;;;-1:-1:-1;5107:179:2;;;;;:::i;:::-;;:::i;529:241:5:-;;;;;;;;;;-1:-1:-1;529:241:5;;;;;:::i;:::-;;:::i;6037:158:14:-;;;;;;;;;;-1:-1:-1;6037:158:14;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;899:73:14;;;;;;;;;;-1:-1:-1;899:73:14;;;;;;;-1:-1:-1;;;;;899:73:14;;;7218:114;;;;;;;;;;-1:-1:-1;7218:114:14;;;;;:::i;:::-;;:::i;2176:235:2:-;;;;;;;;;;-1:-1:-1;2176:235:2;;;;;:::i;:::-;;:::i;673:26:14:-;;;;;;;;;;;;;:::i;8386:164::-;;;;;;;;;;;;;:::i;1252:47::-;;;;;;;;;;-1:-1:-1;1252:47:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;2431:1875;;;;;;:::i;:::-;;:::i;1914:205:2:-;;;;;;;;;;-1:-1:-1;1914:205:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1852:30:14:-;;;;;;;;;;;;;;;;7102:110;;;;;;;;;;-1:-1:-1;7102:110:14;;;;;:::i;:::-;;:::i;7692:258::-;;;;;;;;;;;;;:::i;4334:59::-;;;;;;;;;;;;;:::i;5144:251::-;;;;;;;;;;-1:-1:-1;5144:251:14;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:2;;;;;;;;;;;;;:::i;853:40:14:-;;;;;;;;;;-1:-1:-1;853:40:14;;;;;;;;;;;4268:153:2;;;;;;;;;;-1:-1:-1;4268:153:2;;;;;:::i;:::-;;:::i;978:73:14:-;;;;;;;;;;-1:-1:-1;978:73:14;;;;-1:-1:-1;;;;;978:73:14;;;1443:28;;;;;;;;;;;;;;;;4468:670;;;;;;;;;;-1:-1:-1;4468:670:14;;;;;:::i;:::-;;:::i;5352:320:2:-;;;;;;;;;;-1:-1:-1;5352:320:2;;;;;:::i;:::-;;:::i;813:34:14:-;;;;;;;;;;-1:-1:-1;813:34:14;;;;;;;;;;;1684:29;;;;;;;;;;;;;;;;705:37;;;;;;;;;;;;;:::i;639:28::-;;;;;;;;;;;;;:::i;8825:279::-;;;;;;;;;;-1:-1:-1;8825:279:14;;;;;:::i;:::-;;:::i;8556:151::-;;;;;;;;;;;;;:::i;6795:126::-;;;;;;;;;;-1:-1:-1;6795:126:14;;;;;:::i;:::-;;:::i;9110:110::-;;;;;;;;;;;;;:::i;777:25::-;;;;;;;;;;-1:-1:-1;777:25:14;;;;;;;;;;;7538:148;;;;;;;;;;-1:-1:-1;7538:148:14;;;;;:::i;:::-;;:::i;1546:31::-;;;;;;;;;;-1:-1:-1;1546:31:14;;;;;;;;6206:215;;;;;;;;;;;;;:::i;4487:162:2:-;;;;;;;;;;-1:-1:-1;4487:162:2;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;5861:170:14;;;;;;;;;;-1:-1:-1;5861:170:14;;;;;:::i;:::-;;:::i;6427:228::-;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1809:37:14:-;;;;;;;;;;;;;;;;9230:77;;;;;;;;;;-1:-1:-1;9295:5:14;;;;9230:77;;1555:300:2;1657:4;-1:-1:-1;;;;;;1692:40:2;;-1:-1:-1;;;1692:40:2;;:104;;-1:-1:-1;;;;;;;1748:48:2;;-1:-1:-1;;;1748:48:2;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1812:36:2;1673:175;1555:300;-1:-1:-1;;1555:300:2:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;4079:73;;;;-1:-1:-1;;;4079:73:2;;9192:2:15;4079:73:2;;;9174:21:15;9231:2;9211:18;;;9204:30;9270:34;9250:18;;;9243:62;-1:-1:-1;;;9321:18:15;;;9314:42;9373:19;;4079:73:2;;;;;;;;;-1:-1:-1;4170:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:2;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:2;:2;-1:-1:-1;;;;;3659:11:2;;;3651:57;;;;-1:-1:-1;;;3651:57:2;;9605:2:15;3651:57:2;;;9587:21:15;9644:2;9624:18;;;9617:30;9683:34;9663:18;;;9656:62;-1:-1:-1;;;9734:18:15;;;9727:31;9775:19;;3651:57:2;9403:397:15;3651:57:2;719:10:8;-1:-1:-1;;;;;3740:21:2;;;;:62;;-1:-1:-1;3765:37:2;3782:5;719:10:8;4487:162:2;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:2;;10007:2:15;3719:165:2;;;9989:21:15;10046:2;10026:18;;;10019:30;10085:34;10065:18;;;10058:62;10156:26;10136:18;;;10129:54;10200:19;;3719:165:2;9805:420:15;3719:165:2;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;7338:194:14:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7432:20:14::1;::::0;;;::::1;;;7431:21;7423:60;;;::::0;-1:-1:-1;;;7423:60:14;;10793:2:15;7423:60:14::1;::::0;::::1;10775:21:15::0;10832:2;10812:18;;;10805:30;10871:28;10851:18;;;10844:56;10917:18;;7423:60:14::1;10591:350:15::0;7423:60:14::1;7493:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;7338:194:::0;:::o;8713:106::-;8757:7;8811:1;8783:25;:15;918:14:9;;827:112;8783:25:14;:29;;;;:::i;:::-;8776:36;;8713:106;:::o;6665:124::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6747:14:14::1;:35:::0;6665:124::o;5401:212::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5486:5:14::1;::::0;5494:1:::1;5486:5;::::0;;::::1;:9;5478:43;;;::::0;-1:-1:-1;;;5478:43:14;;11410:2:15;5478:43:14::1;::::0;::::1;11392:21:15::0;11449:2;11429:18;;;11422:30;-1:-1:-1;;;11468:18:15;;;11461:51;11529:18;;5478:43:14::1;11208:345:15::0;5478:43:14::1;5535:9;5531:75;5549:6;:13;5547:1;:15;5531:75;;;5602:4;5576:12;:23;5589:6;5596:1;5589:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;5576:23:14::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5576:23:14;:30;;-1:-1:-1;;5576:30:14::1;::::0;::::1;;::::0;;;::::1;::::0;;5563:3;::::1;::::0;::::1;:::i;:::-;;;;5531:75;;4711:330:2::0;4900:41;719:10:8;4919:12:2;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:2;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5619:236:14:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5698:5:14::1;::::0;5706:1:::1;5698:5;::::0;;::::1;:9;5690:50;;;::::0;-1:-1:-1;;;5690:50:14;;12450:2:15;5690:50:14::1;::::0;::::1;12432:21:15::0;12489:2;12469:18;;;12462:30;12528;12508:18;;;12501:58;12576:18;;5690:50:14::1;12248:352:15::0;5690:50:14::1;-1:-1:-1::0;;;;;5758:21:14;::::1;5782:1;5758:21:::0;;;:14:::1;:21;::::0;;;;;::::1;;5750:63;;;::::0;-1:-1:-1;;;5750:63:14;;12807:2:15;5750:63:14::1;::::0;::::1;12789:21:15::0;12846:2;12826:18;;;12819:30;12885:27;12865:18;;;12858:55;12930:18;;5750:63:14::1;12605:349:15::0;5750:63:14::1;-1:-1:-1::0;;;;;5823:21:14::1;5847:1;5823:21:::0;;;:14:::1;:21;::::0;;;;:25;;-1:-1:-1;;5823:25:14::1;::::0;;5619:236::o;6927:169::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7013:5:14::1;::::0;7021:1:::1;7013:5;::::0;;::::1;:9;7005:43;;;::::0;-1:-1:-1;;;7005:43:14;;11410:2:15;7005:43:14::1;::::0;::::1;11392:21:15::0;11449:2;11429:18;;;11422:30;-1:-1:-1;;;11468:18:15;;;11461:51;11529:18;;7005:43:14::1;11208:345:15::0;7005:43:14::1;7058:12;:31:::0;6927:169::o;7956:395::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8043:1:14::1;8019:21;:25;8011:60;;;::::0;-1:-1:-1;;;8011:60:14;;13161:2:15;8011:60:14::1;::::0;::::1;13143:21:15::0;13200:2;13180:18;;;13173:30;-1:-1:-1;;;13219:18:15;;;13212:52;13281:18;;8011:60:14::1;12959:346:15::0;8011:60:14::1;8103:13;::::0;8082:7:::1;::::0;8103:13;;::::1;-1:-1:-1::0;;;;;8103:13:14::1;8130:38;8164:3;8130:29;:21;8156:2;8130:25;:29::i;:::-;:33:::0;::::1;:38::i;:::-;8095:78;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8081:92;;;8191:2;8183:33;;;::::0;-1:-1:-1;;;8183:33:14;;13722:2:15;8183:33:14::1;::::0;::::1;13704:21:15::0;13761:2;13741:18;;;13734:30;-1:-1:-1;;;13780:18:15;;;13773:48;13838:18;;8183:33:14::1;13520:342:15::0;8183:33:14::1;8248:13;::::0;8240:61:::1;::::0;8227:7:::1;::::0;-1:-1:-1;;;;;8248:13:14::1;::::0;8275:21:::1;::::0;8227:7;8240:61;8227:7;8240:61;8275:21;8248:13;8240:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8226:75;;;8319:2;8311:33;;;::::0;-1:-1:-1;;;8311:33:14;;14069:2:15;8311:33:14::1;::::0;::::1;14051:21:15::0;14108:2;14088:18;;;14081:30;-1:-1:-1;;;14127:18:15;;;14120:48;14185:18;;8311:33:14::1;13867:342:15::0;4399:63:14;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4445:10:14::1;:8;:10::i;:::-;4399:63::o:0;5107:179:2:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:5:-;645:41;719:10:8;664:12:5;640:96:8;645:41:5;637:102;;;;-1:-1:-1;;;637:102:5;;14416:2:15;637:102:5;;;14398:21:15;14455:2;14435:18;;;14428:30;14494:34;14474:18;;;14467:62;-1:-1:-1;;;14545:18:15;;;14538:46;14601:19;;637:102:5;14214:412:15;637:102:5;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;6037:158:14:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6120:14:14::1;::::0;;;::::1;;;6119:15;6111:46;;;::::0;-1:-1:-1;;;6111:46:14;;14833:2:15;6111:46:14::1;::::0;::::1;14815:21:15::0;14872:2;14852:18;;;14845:30;-1:-1:-1;;;14891:18:15;;;14884:48;14949:18;;6111:46:14::1;14631:342:15::0;6111:46:14::1;6167:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;7218:114::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7294:12:14::1;:31:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7294:31:14;;::::1;::::0;;;::::1;::::0;;7218:114::o;2176:235:2:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:2;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:2;;15180:2:15;2309:73:2;;;15162:21:15;15219:2;15199:18;;;15192:30;15258:34;15238:18;;;15231:62;-1:-1:-1;;;15309:18:15;;;15302:39;15358:19;;2309:73:2;14978:405:15;673:26:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8386:164::-;8434:7;8476:1;8460:13;:11;:13::i;:::-;:17;8452:52;;;;-1:-1:-1;;;8452:52:14;;15590:2:15;8452:52:14;;;15572:21:15;15629:2;15609:18;;;15602:30;-1:-1:-1;;;15648:18:15;;;15641:52;15710:18;;8452:52:14;15388:346:15;8452:52:14;8521:22;8529:13;:11;:13::i;2431:1875::-;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;2511:5:14::1;::::0;::::1;;2503:72;;;::::0;-1:-1:-1;;;2503:72:14;;16286:2:15;2503:72:14::1;::::0;::::1;16268:21:15::0;16325:2;16305:18;;;16298:30;16364:34;16344:18;;;16337:62;-1:-1:-1;;;16415:18:15;;;16408:48;16473:19;;2503:72:14::1;16084:414:15::0;2503:72:14::1;2607:1;2593:11;:15;;;2585:62;;;::::0;-1:-1:-1;;;2585:62:14;;16705:2:15;2585:62:14::1;::::0;::::1;16687:21:15::0;16744:2;16724:18;;;16717:30;16783:34;16763:18;;;16756:62;-1:-1:-1;;;16834:18:15;;;16827:32;16876:19;;2585:62:14::1;16503:398:15::0;2585:62:14::1;2680:12;::::0;::::1;;::::0;;::::1;::::0;::::1;2665:27:::0;;::::1;;;2657:82;;;;-1:-1:-1::0;;;2657:82:14::1;;;;;;;:::i;:::-;2753:5;::::0;::::1;;::::0;:10:::1;2749:1385;;;2823:10;2837:1;2808:26:::0;;;:14:::1;:26;::::0;;;;;::::1;;2800:66;;;::::0;-1:-1:-1;;;2800:66:14;;17519:2:15;2800:66:14::1;::::0;::::1;17501:21:15::0;17558:2;17538:18;;;17531:30;17597:25;17577:18;;;17570:53;17640:18;;2800:66:14::1;17317:347:15::0;2800:66:14::1;2951:10;2936:26;::::0;;;:14:::1;:26;::::0;;;;;;;;2902:18:::1;:30:::0;;;;;;;2936:26:::1;::::0;;::::1;::::0;2888:44:::1;::::0;2902:30:::1;2888:11:::0;:44:::1;:::i;:::-;:74;;;;2880:132;;;::::0;-1:-1:-1;;;2880:132:14;;18080:2:15;2880:132:14::1;::::0;::::1;18062:21:15::0;18119:2;18099:18;;;18092:30;18158:34;18138:18;;;18131:62;-1:-1:-1;;;18209:18:15;;;18202:43;18262:19;;2880:132:14::1;17878:409:15::0;2880:132:14::1;3045:10;3026:30;::::0;;;:18:::1;:30;::::0;;;;:45;;3060:11;;3026:30;:45:::1;::::0;3060:11;;3026:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2749:1385;;;3090:5;::::0;::::1;;3099:1;3090:10;3086:1048;;;3158:12;::::0;:29:::1;::::0;::::1;::::0;::::1;:16;:29::i;:::-;3145:9;:42;;3137:76;;;::::0;-1:-1:-1;;;3137:76:14;;18494:2:15;3137:76:14::1;::::0;::::1;18476:21:15::0;18533:2;18513:18;;;18506:30;-1:-1:-1;;;18552:18:15;;;18545:51;18613:18;;3137:76:14::1;18292:345:15::0;3137:76:14::1;3248:10;3235:24;::::0;;;:12:::1;:24;::::0;;;;;::::1;;3227:64;;;::::0;-1:-1:-1;;;3227:64:14;;18844:2:15;3227:64:14::1;::::0;::::1;18826:21:15::0;18883:2;18863:18;;;18856:30;18922:29;18902:18;;;18895:57;18969:18;;3227:64:14::1;18642:351:15::0;3227:64:14::1;3344:13;;3329:11;3313:27;;:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:44;;3305:92;;;::::0;-1:-1:-1;;;3305:92:14;;19333:2:15;3305:92:14::1;::::0;::::1;19315:21:15::0;19372:2;19352:18;;;19345:30;19411:34;19391:18;;;19384:62;-1:-1:-1;;;19462:18:15;;;19455:33;19505:19;;3305:92:14::1;19131:399:15::0;3305:92:14::1;3465:14;::::0;3450:10:::1;3465:14;3433:28:::0;;;:16:::1;:28;::::0;;;;;3465:14:::1;::::0;;::::1;::::0;3419:42:::1;::::0;3433:28:::1;3419:11:::0;:42:::1;:::i;:::-;:60;;;;3411:118;;;::::0;-1:-1:-1;;;3411:118:14;;19737:2:15;3411:118:14::1;::::0;::::1;19719:21:15::0;19776:2;19756:18;;;19749:30;19815:34;19795:18;;;19788:62;-1:-1:-1;;;19866:18:15;;;19859:43;19919:19;;3411:118:14::1;19535:409:15::0;3411:118:14::1;3566:10;3549:28;::::0;;;:16:::1;:28;::::0;;;;:43;;3581:11;;3549:28;:43:::1;::::0;3581:11;;3549:43:::1;;;:::i;3086:1048::-;3611:5;::::0;::::1;;3620:1;3611:10;3607:527;;;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;;;;3677:10:14::1;3666:21;3658:67;;;::::0;-1:-1:-1;;;3658:67:14;;20151:2:15;3658:67:14::1;::::0;::::1;20133:21:15::0;20190:2;20170:18;;;20163:30;20229:34;20209:18;;;20202:62;-1:-1:-1;;;20280:18:15;;;20273:31;20321:19;;3658:67:14::1;19949:397:15::0;3658:67:14::1;3778:14;::::0;3761:13:::1;::::0;3747:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;3739:100;;;::::0;-1:-1:-1;;;3739:100:14;;20553:2:15;3739:100:14::1;::::0;::::1;20535:21:15::0;20592:2;20572:18;;;20565:30;20631:34;20611:18;;;20604:62;-1:-1:-1;;;20682:18:15;;;20675:40;20732:19;;3739:100:14::1;20351:406:15::0;3739:100:14::1;3876:11;3859:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3607:527:14::1;::::0;-1:-1:-1;3607:527:14::1;;3960:9;::::0;:26:::1;::::0;::::1;::::0;::::1;:13;:26::i;:::-;3947:9;:39;;3939:73;;;::::0;-1:-1:-1;;;3939:73:14;;18494:2:15;3939:73:14::1;::::0;::::1;18476:21:15::0;18533:2;18513:18;;;18506:30;-1:-1:-1;;;18552:18:15;;;18545:51;18613:18;;3939:73:14::1;18292:345:15::0;3939:73:14::1;4066:15;;4051:11;4034:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;4026:97;;;::::0;-1:-1:-1;;;4026:97:14;;20964:2:15;4026:97:14::1;::::0;::::1;20946:21:15::0;21003:2;20983:18;;;20976:30;21042:34;21022:18;;;21015:62;-1:-1:-1;;;21093:18:15;;;21086:35;21138:19;;4026:97:14::1;20762:401:15::0;4026:97:14::1;4160:1;4143:157;4168:11;4163:16;;:1;:16;4143:157;;4200:48;4210:10;4222:25;:15;918:14:9::0;;827:112;4222:25:14::1;4200:9;:48::i;:::-;4262:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;4262:27:14::1;4181:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4143:157;;1914:205:2::0;1986:7;-1:-1:-1;;;;;2013:19:2;;2005:74;;;;-1:-1:-1;;;2005:74:2;;21370:2:15;2005:74:2;;;21352:21:15;21409:2;21389:18;;;21382:30;21448:34;21428:18;;;21421:62;-1:-1:-1;;;21499:18:15;;;21492:40;21549:19;;2005:74:2;21168:406:15;2005:74:2;-1:-1:-1;;;;;;2096:16:2;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;7102:110:14:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7180:9:14::1;:25:::0;7102:110::o;7692:258::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7790:1:14::1;7765:14;7759:28;;;;;:::i;:::-;;;:32;7751:77;;;::::0;-1:-1:-1;;;7751:77:14;;21781:2:15;7751:77:14::1;::::0;::::1;21763:21:15::0;;;21800:18;;;21793:30;21859:34;21839:18;;;21832:62;21911:18;;7751:77:14::1;21579:356:15::0;7751:77:14::1;7847:20;::::0;;;::::1;;;7846:21;7838:68;;;::::0;-1:-1:-1;;;7838:68:14;;22142:2:15;7838:68:14::1;::::0;::::1;22124:21:15::0;22181:2;22161:18;;;22154:30;22220:34;22200:18;;;22193:62;-1:-1:-1;;;22271:18:15;;;22264:32;22313:19;;7838:68:14::1;21940:398:15::0;7838:68:14::1;7916:20;:27:::0;;-1:-1:-1;;7916:27:14::1;::::0;::::1;::::0;;7692:258::o;4334:59::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4378:8:14::1;:6;:8::i;5144:251::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5254:5:14::1;::::0;5262:1:::1;5254:5;::::0;;::::1;:9;5246:50;;;::::0;-1:-1:-1;;;5246:50:14;;12450:2:15;5246:50:14::1;::::0;::::1;12432:21:15::0;12489:2;12469:18;;;12462:30;12528;12508:18;;;12501:58;12576:18;;5246:50:14::1;12248:352:15::0;5246:50:14::1;5310:9;5306:82;5324:6;:13;5322:1;:15;5306:82;;;5379:6;5386:1;5379:9;;;;;;;;:::i;:::-;;;;;;;5351:14;:25;5366:6;5373:1;5366:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5351:25:14::1;-1:-1:-1::0;;;;;5351:25:14::1;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;5338:3;;;;;:::i;:::-;;;;5306:82;;2635:102:2::0;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:8;4395:8:2;4405;4362:18;:52::i;4468:670:14:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4559:20:14::1;::::0;;;::::1;;;:28;;4583:4;4559:28;4551:97;;;;-1:-1:-1::0;;;4551:97:14::1;;;;;;;:::i;:::-;4666:5;::::0;4674:1:::1;4666:5;::::0;;::::1;:9;4658:42;;;::::0;-1:-1:-1;;;4658:42:14;;22970:2:15;4658:42:14::1;::::0;::::1;22952:21:15::0;23009:2;22989:18;;;22982:30;-1:-1:-1;;;23028:18:15;;;23021:50;23088:18;;4658:42:14::1;22768:344:15::0;4658:42:14::1;4733:12;::::0;::::1;;::::0;;::::1;::::0;::::1;4718:27:::0;;::::1;;;4710:82;;;;-1:-1:-1::0;;;4710:82:14::1;;;;;;;:::i;:::-;4824:1;4810:11;:15;;;4802:65;;;::::0;-1:-1:-1;;;4802:65:14;;23319:2:15;4802:65:14::1;::::0;::::1;23301:21:15::0;23358:2;23338:18;;;23331:30;23397:34;23377:18;;;23370:62;-1:-1:-1;;;23448:18:15;;;23441:35;23493:19;;4802:65:14::1;23117:401:15::0;4802:65:14::1;4915:13;;4900:11;4885:26;;:13;:11;:13::i;:::-;:26;;;;:::i;:::-;:43;;4877:95;;;::::0;-1:-1:-1;;;4877:95:14;;23725:2:15;4877:95:14::1;::::0;::::1;23707:21:15::0;23764:2;23744:18;;;23737:30;23803:34;23783:18;;;23776:62;-1:-1:-1;;;23854:18:15;;;23847:37;23901:19;;4877:95:14::1;23523:403:15::0;4877:95:14::1;4999:1;4982:150;5007:11;5002:16;;:1;:16;4982:150;;5039:41;5049:3;5054:25;:15;918:14:9::0;;827:112;5039:41:14::1;5094:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;5094:27:14::1;5020:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4982:150;;5352:320:2::0;5521:41;719:10:8;5554:7:2;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:2;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;705:37:14:-;;;;;;;:::i;639:28::-;;;;;;;:::i;8825:279::-;7209:4:2;7232:16;;;:7;:16;;;;;;8898:13:14;;-1:-1:-1;;;;;7232:16:2;8923:76:14;;;;-1:-1:-1;;;8923:76:14;;24133:2:15;8923:76:14;;;24115:21:15;24172:2;24152:18;;;24145:30;24211:34;24191:18;;;24184:62;-1:-1:-1;;;24262:18:15;;;24255:45;24317:19;;8923:76:14;23931:411:15;8923:76:14;9040:7;9049:18;:7;:16;:18::i;:::-;9069:13;9023:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9009:75;;8825:279;;;:::o;8556:151::-;8599:7;8641:1;8625:13;:11;:13::i;:::-;:17;8617:52;;;;-1:-1:-1;;;8617:52:14;;15590:2:15;8617:52:14;;;15572:21:15;15629:2;15609:18;;;15602:30;-1:-1:-1;;;15648:18:15;;;15641:52;15710:18;;8617:52:14;15388:346:15;8617:52:14;8686:13;:11;:13::i;6795:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6881:33:14;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;9110:110::-:0;9156:7;9200:13;:11;:13::i;:::-;9182:15;;:31;;;;:::i;7538:148::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7625:13:14::1;:22:::0;;-1:-1:-1;;;;;;7625:22:14::1;::::0;-1:-1:-1;;;;;7625:22:14;;::::1;;;::::0;;7657:13:::1;:22:::0;;-1:-1:-1;;;;;;7657:22:14::1;::::0;;;::::1;;::::0;;7538:148::o;6206:215::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6290:1:14::1;6272:7;6266:21;;;;;:::i;:::-;;;:25;6258:61;;;::::0;-1:-1:-1;;;6258:61:14;;26114:2:15;6258:61:14::1;::::0;::::1;26096:21:15::0;26153:2;26133:18;;;26126:30;26192:25;26172:18;;;26165:53;26235:18;;6258:61:14::1;25912:347:15::0;6258:61:14::1;6338:14;::::0;;;::::1;;;6337:15;6329:54;;;::::0;-1:-1:-1;;;6329:54:14;;26466:2:15;6329:54:14::1;::::0;::::1;26448:21:15::0;26505:2;26485:18;;;26478:30;26544:28;26524:18;;;26517:56;26590:18;;6329:54:14::1;26264:350:15::0;6329:54:14::1;6393:14;:21:::0;;-1:-1:-1;;6393:21:14::1;::::0;::::1;::::0;;6206:215::o;5861:170::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5938:19:14;::::1;;::::0;;;:12:::1;:19;::::0;;;;;::::1;;5930:57;;;::::0;-1:-1:-1;;;5930:57:14;;26821:2:15;5930:57:14::1;::::0;::::1;26803:21:15::0;26860:2;26840:18;;;26833:30;26899:27;26879:18;;;26872:55;26944:18;;5930:57:14::1;26619:349:15::0;5930:57:14::1;-1:-1:-1::0;;;;;5997:19:14::1;6019:5;5997:19:::0;;;:12:::1;:19;::::0;;;;:27;;-1:-1:-1;;5997:27:14::1;::::0;;5861:170::o;6427:228::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6483:20:14::1;::::0;;;::::1;;;:28;;6507:4;6483:28;6475:97;;;;-1:-1:-1::0;;;6475:97:14::1;;;;;;;:::i;:::-;6590:5;::::0;6598:1:::1;6590:5;::::0;;::::1;:9;6582:49;;;::::0;-1:-1:-1;;;6582:49:14;;27175:2:15;6582:49:14::1;::::0;::::1;27157:21:15::0;27214:2;27194:18;;;27187:30;27253:29;27233:18;;;27226:57;27300:18;;6582:49:14::1;26973:351:15::0;6582:49:14::1;6641:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6427:228::o:0;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;27711:2:15;1998:73:0::1;::::0;::::1;27693:21:15::0;27750:2;27730:18;;;27723:30;27789:34;27769:18;;;27762:62;-1:-1:-1;;;27840:18:15;;;27833:36;27886:19;;1998:73:0::1;27509:402:15::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;945:123:9:-:0;1032:19;;1050:1;1032:19;;;945:123::o;10995:171:2:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:2;-1:-1:-1;;;;;11069:29:2;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:2;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;7536:73;;;;-1:-1:-1;;;7536:73:2;;28118:2:15;7536:73:2;;;28100:21:15;28157:2;28137:18;;;28130:30;28196:34;28176:18;;;28169:62;-1:-1:-1;;;28247:18:15;;;28240:42;28299:19;;7536:73:2;27916:408:15;7536:73:2;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:2;:7;-1:-1:-1;;;;;7676:16:2;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:2;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:2;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:2:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:2;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:2;;10443:85;;;;-1:-1:-1;;;10443:85:2;;28531:2:15;10443:85:2;;;28513:21:15;28570:2;28550:18;;;28543:30;28609:34;28589:18;;;28582:62;-1:-1:-1;;;28660:18:15;;;28653:39;28709:19;;10443:85:2;28329:405:15;10443:85:2;-1:-1:-1;;;;;10546:16:2;;10538:65;;;;-1:-1:-1;;;10538:65:2;;28941:2:15;10538:65:2;;;28923:21:15;28980:2;28960:18;;;28953:30;29019:34;28999:18;;;28992:62;-1:-1:-1;;;29070:18:15;;;29063:34;29114:19;;10538:65:2;28739:400:15;10538:65:2;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:2;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:2;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:2;-1:-1:-1;;;;;10813:21:2;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;3451:96:13:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:13:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;29776:2:15;1669:41:1;;;29758:21:15;29815:2;29795:18;;;29788:30;-1:-1:-1;;;29834:18:15;;;29827:50;29894:18;;1669:41:1;29574:344:15;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:8::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1874:32:15;;;1856:51;;1844:2;1829:18;2198:22:1::1;;;;;;;2110:117::o:0;9652:348:2:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:2;;;;;;:9;:16;;;;;:21;;9907:1;;9887:16;:21;;9907:1;;9887:21;:::i;:::-;;;;-1:-1:-1;;9925:16:2;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:2;;;9957:36;9933:7;;9925:16;-1:-1:-1;;;;;9957:36:2;;;;;9925:16;;9957:36;9701:299;9652:348;:::o;8101:108::-;8176:26;8186:2;8190:7;8176:26;;;;;;;;;;;;:9;:26::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:8::0;;640:96;11301:307:2;11451:8;-1:-1:-1;;;;;11442:17:2;:5;-1:-1:-1;;;;;11442:17:2;;;11434:55;;;;-1:-1:-1;;;11434:55:2;;30125:2:15;11434:55:2;;;30107:21:15;30164:2;30144:18;;;30137:30;30203:27;30183:18;;;30176:55;30248:18;;11434:55:2;29923:349:15;11434:55:2;-1:-1:-1;;;;;11499:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:2;;;;;;;;;;11560:41;;722::15;;;11560::2;;695:18:15;11560:41:2;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:2;;;;;;;:::i;328:703:10:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;9313:175:14;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;8430:311:2:-;8555:18;8561:2;8565:7;8555:5;:18::i;:::-;8604:54;8635:1;8639:2;8643:7;8652:5;8604:22;:54::i;:::-;8583:151;;;;-1:-1:-1;;;8583:151:2;;;;;;;:::i;12161:778::-;12311:4;-1:-1:-1;;;;;12331:13:2;;1087:20:7;1133:8;12327:606:2;;12366:72;;-1:-1:-1;;;12366:72:2;;-1:-1:-1;;;;;12366:36:2;;;;;:72;;719:10:8;;12417:4:2;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:2;;;;;;;;-1:-1:-1;;12366:72:2;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:2;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:2;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:2;-1:-1:-1;;;12488:51:2;;-1:-1:-1;12481:58:2;;12327:606;-1:-1:-1;12918:4:2;12161:778;;;;;;:::o;9063:372::-;-1:-1:-1;;;;;9142:16:2;;9134:61;;;;-1:-1:-1;;;9134:61:2;;31763:2:15;9134:61:2;;;31745:21:15;;;31782:18;;;31775:30;31841:34;31821:18;;;31814:62;31893:18;;9134:61:2;31561:356:15;9134:61:2;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;:30;9205:58;;;;-1:-1:-1;;;9205:58:2;;32124:2:15;9205:58:2;;;32106:21:15;32163:2;32143:18;;;32136:30;32202;32182:18;;;32175:58;32250:18;;9205:58:2;31922:352:15;9205:58:2;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:2;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:2;-1:-1:-1;;;;;9358:21:2;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:131:15;-1:-1:-1;;;;;;270:32:15;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:258::-;846:1;856:113;870:6;867:1;864:13;856:113;;;946:11;;;940:18;927:11;;;920:39;892:2;885:10;856:113;;;987:6;984:1;981:13;978:48;;;-1:-1:-1;;1022:1:15;1004:16;;997:27;774:258::o;1037:::-;1079:3;1117:5;1111:12;1144:6;1139:3;1132:19;1160:63;1216:6;1209:4;1204:3;1200:14;1193:4;1186:5;1182:16;1160:63;:::i;:::-;1277:2;1256:15;-1:-1:-1;;1252:29:15;1243:39;;;;1284:4;1239:50;;1037:258;-1:-1:-1;;1037:258:15:o;1300:220::-;1449:2;1438:9;1431:21;1412:4;1469:45;1510:2;1499:9;1495:18;1487:6;1469:45;:::i;1525:180::-;1584:6;1637:2;1625:9;1616:7;1612:23;1608:32;1605:52;;;1653:1;1650;1643:12;1605:52;-1:-1:-1;1676:23:15;;1525:180;-1:-1:-1;1525:180:15:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:15;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:186::-;2155:6;2208:2;2196:9;2187:7;2183:23;2179:32;2176:52;;;2224:1;2221;2214:12;2176:52;2247:29;2266:9;2247:29;:::i;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:15:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:275;2938:2;2932:9;3003:2;2984:13;;-1:-1:-1;;2980:27:15;2968:40;;3038:18;3023:34;;3059:22;;;3020:62;3017:88;;;3085:18;;:::i;:::-;3121:2;3114:22;2867:275;;-1:-1:-1;2867:275:15:o;3147:407::-;3212:5;3246:18;3238:6;3235:30;3232:56;;;3268:18;;:::i;:::-;3306:57;3351:2;3330:15;;-1:-1:-1;;3326:29:15;3357:4;3322:40;3306:57;:::i;:::-;3297:66;;3386:6;3379:5;3372:21;3426:3;3417:6;3412:3;3408:16;3405:25;3402:45;;;3443:1;3440;3433:12;3402:45;3492:6;3487:3;3480:4;3473:5;3469:16;3456:43;3546:1;3539:4;3530:6;3523:5;3519:18;3515:29;3508:40;3147:407;;;;;:::o;3559:451::-;3628:6;3681:2;3669:9;3660:7;3656:23;3652:32;3649:52;;;3697:1;3694;3687:12;3649:52;3737:9;3724:23;3770:18;3762:6;3759:30;3756:50;;;3802:1;3799;3792:12;3756:50;3825:22;;3878:4;3870:13;;3866:27;-1:-1:-1;3856:55:15;;3907:1;3904;3897:12;3856:55;3930:74;3996:7;3991:2;3978:16;3973:2;3969;3965:11;3930:74;:::i;4015:183::-;4075:4;4108:18;4100:6;4097:30;4094:56;;;4130:18;;:::i;:::-;-1:-1:-1;4175:1:15;4171:14;4187:4;4167:25;;4015:183::o;4203:668::-;4257:5;4310:3;4303:4;4295:6;4291:17;4287:27;4277:55;;4328:1;4325;4318:12;4277:55;4364:6;4351:20;4390:4;4414:60;4430:43;4470:2;4430:43;:::i;:::-;4414:60;:::i;:::-;4508:15;;;4594:1;4590:10;;;;4578:23;;4574:32;;;4539:12;;;;4618:15;;;4615:35;;;4646:1;4643;4636:12;4615:35;4682:2;4674:6;4670:15;4694:148;4710:6;4705:3;4702:15;4694:148;;;4776:23;4795:3;4776:23;:::i;:::-;4764:36;;4820:12;;;;4727;;4694:148;;;-1:-1:-1;4860:5:15;4203:668;-1:-1:-1;;;;;;4203:668:15:o;4876:348::-;4960:6;5013:2;5001:9;4992:7;4988:23;4984:32;4981:52;;;5029:1;5026;5019:12;4981:52;5069:9;5056:23;5102:18;5094:6;5091:30;5088:50;;;5134:1;5131;5124:12;5088:50;5157:61;5210:7;5201:6;5190:9;5186:22;5157:61;:::i;5229:328::-;5306:6;5314;5322;5375:2;5363:9;5354:7;5350:23;5346:32;5343:52;;;5391:1;5388;5381:12;5343:52;5414:29;5433:9;5414:29;:::i;:::-;5404:39;;5462:38;5496:2;5485:9;5481:18;5462:38;:::i;:::-;5452:48;;5547:2;5536:9;5532:18;5519:32;5509:42;;5229:328;;;;;:::o;5562:156::-;5628:20;;5688:4;5677:16;;5667:27;;5657:55;;5708:1;5705;5698:12;5723:182;5780:6;5833:2;5821:9;5812:7;5808:23;5804:32;5801:52;;;5849:1;5846;5839:12;5801:52;5872:27;5889:9;5872:27;:::i;5910:1140::-;6026:6;6034;6087:2;6075:9;6066:7;6062:23;6058:32;6055:52;;;6103:1;6100;6093:12;6055:52;6143:9;6130:23;6172:18;6213:2;6205:6;6202:14;6199:34;;;6229:1;6226;6219:12;6199:34;6252:61;6305:7;6296:6;6285:9;6281:22;6252:61;:::i;:::-;6242:71;;6332:2;6322:12;;6387:2;6376:9;6372:18;6359:32;6416:2;6406:8;6403:16;6400:36;;;6432:1;6429;6422:12;6400:36;6455:24;;;-1:-1:-1;6510:4:15;6502:13;;6498:27;-1:-1:-1;6488:55:15;;6539:1;6536;6529:12;6488:55;6575:2;6562:16;6598:60;6614:43;6654:2;6614:43;:::i;6598:60::-;6692:15;;;6774:1;6770:10;;;;6762:19;;6758:28;;;6723:12;;;;6798:19;;;6795:39;;;6830:1;6827;6820:12;6795:39;6854:11;;;;6874:146;6890:6;6885:3;6882:15;6874:146;;;6956:21;6973:3;6956:21;:::i;:::-;6944:34;;6907:12;;;;6998;;;;6874:146;;;7039:5;7029:15;;;;;;;5910:1140;;;;;:::o;7055:347::-;7120:6;7128;7181:2;7169:9;7160:7;7156:23;7152:32;7149:52;;;7197:1;7194;7187:12;7149:52;7220:29;7239:9;7220:29;:::i;:::-;7210:39;;7299:2;7288:9;7284:18;7271:32;7346:5;7339:13;7332:21;7325:5;7322:32;7312:60;;7368:1;7365;7358:12;7312:60;7391:5;7381:15;;;7055:347;;;;;:::o;7407:256::-;7473:6;7481;7534:2;7522:9;7513:7;7509:23;7505:32;7502:52;;;7550:1;7547;7540:12;7502:52;7573:27;7590:9;7573:27;:::i;:::-;7563:37;;7619:38;7653:2;7642:9;7638:18;7619:38;:::i;:::-;7609:48;;7407:256;;;;;:::o;7668:667::-;7763:6;7771;7779;7787;7840:3;7828:9;7819:7;7815:23;7811:33;7808:53;;;7857:1;7854;7847:12;7808:53;7880:29;7899:9;7880:29;:::i;:::-;7870:39;;7928:38;7962:2;7951:9;7947:18;7928:38;:::i;:::-;7918:48;;8013:2;8002:9;7998:18;7985:32;7975:42;;8068:2;8057:9;8053:18;8040:32;8095:18;8087:6;8084:30;8081:50;;;8127:1;8124;8117:12;8081:50;8150:22;;8203:4;8195:13;;8191:27;-1:-1:-1;8181:55:15;;8232:1;8229;8222:12;8181:55;8255:74;8321:7;8316:2;8303:16;8298:2;8294;8290:11;8255:74;:::i;:::-;8245:84;;;7668:667;;;;;;;:::o;8340:260::-;8408:6;8416;8469:2;8457:9;8448:7;8444:23;8440:32;8437:52;;;8485:1;8482;8475:12;8437:52;8508:29;8527:9;8508:29;:::i;8605:380::-;8684:1;8680:12;;;;8727;;;8748:61;;8802:4;8794:6;8790:17;8780:27;;8748:61;8855:2;8847:6;8844:14;8824:18;8821:38;8818:161;;;8901:10;8896:3;8892:20;8889:1;8882:31;8936:4;8933:1;8926:15;8964:4;8961:1;8954:15;8818:161;;8605:380;;;:::o;10230:356::-;10432:2;10414:21;;;10451:18;;;10444:30;10510:34;10505:2;10490:18;;10483:62;10577:2;10562:18;;10230:356::o;10946:127::-;11007:10;11002:3;10998:20;10995:1;10988:31;11038:4;11035:1;11028:15;11062:4;11059:1;11052:15;11078:125;11118:4;11146:1;11143;11140:8;11137:34;;;11151:18;;:::i;:::-;-1:-1:-1;11188:9:15;;11078:125::o;11558:127::-;11619:10;11614:3;11610:20;11607:1;11600:31;11650:4;11647:1;11640:15;11674:4;11671:1;11664:15;11690:135;11729:3;-1:-1:-1;;11750:17:15;;11747:43;;;11770:18;;:::i;:::-;-1:-1:-1;11817:1:15;11806:13;;11690:135::o;11830:413::-;12032:2;12014:21;;;12071:2;12051:18;;;12044:30;12110:34;12105:2;12090:18;;12083:62;-1:-1:-1;;;12176:2:15;12161:18;;12154:47;12233:3;12218:19;;11830:413::o;15739:340::-;15941:2;15923:21;;;15980:2;15960:18;;;15953:30;-1:-1:-1;;;16014:2:15;15999:18;;15992:46;16070:2;16055:18;;15739:340::o;16906:406::-;17108:2;17090:21;;;17147:2;17127:18;;;17120:30;17186:34;17181:2;17166:18;;17159:62;-1:-1:-1;;;17252:2:15;17237:18;;17230:40;17302:3;17287:19;;16906:406::o;17669:204::-;17707:3;17743:4;17740:1;17736:12;17775:4;17772:1;17768:12;17810:3;17804:4;17800:14;17795:3;17792:23;17789:49;;;17818:18;;:::i;:::-;17854:13;;17669:204;-1:-1:-1;;;17669:204:15:o;18998:128::-;19038:3;19069:1;19065:6;19062:1;19059:13;19056:39;;;19075:18;;:::i;:::-;-1:-1:-1;19111:9:15;;18998:128::o;22343:420::-;22545:2;22527:21;;;22584:2;22564:18;;;22557:30;22623:34;22618:2;22603:18;;22596:62;22694:26;22689:2;22674:18;;22667:54;22753:3;22738:19;;22343:420::o;24473:973::-;24558:12;;24523:3;;24613:1;24633:18;;;;24686;;;;24713:61;;24767:4;24759:6;24755:17;24745:27;;24713:61;24793:2;24841;24833:6;24830:14;24810:18;24807:38;24804:161;;;24887:10;24882:3;24878:20;24875:1;24868:31;24922:4;24919:1;24912:15;24950:4;24947:1;24940:15;24804:161;24981:18;25008:104;;;;25126:1;25121:319;;;;24974:466;;25008:104;-1:-1:-1;;25041:24:15;;25029:37;;25086:16;;;;-1:-1:-1;25008:104:15;;25121:319;24420:1;24413:14;;;24457:4;24444:18;;25215:1;25229:165;25243:6;25240:1;25237:13;25229:165;;;25321:14;;25308:11;;;25301:35;25364:16;;;;25258:10;;25229:165;;;25233:3;;25423:6;25418:3;25414:16;25407:23;;24974:466;;;;;;;24473:973;;;;:::o;25451:456::-;25672:3;25700:38;25734:3;25726:6;25700:38;:::i;:::-;25767:6;25761:13;25783:52;25828:6;25824:2;25817:4;25809:6;25805:17;25783:52;:::i;:::-;25851:50;25893:6;25889:2;25885:15;25877:6;25851:50;:::i;:::-;25844:57;25451:456;-1:-1:-1;;;;;;;25451:456:15:o;27329:175::-;27366:3;27410:4;27403:5;27399:16;27439:4;27430:7;27427:17;27424:43;;;27447:18;;:::i;:::-;27496:1;27483:15;;27329:175;-1:-1:-1;;27329:175:15:o;29144:168::-;29184:7;29250:1;29246;29242:6;29238:14;29235:1;29232:21;29227:1;29220:9;29213:17;29209:45;29206:71;;;29257:18;;:::i;:::-;-1:-1:-1;29297:9:15;;29144:168::o;29317:127::-;29378:10;29373:3;29369:20;29366:1;29359:31;29409:4;29406:1;29399:15;29433:4;29430:1;29423:15;29449:120;29489:1;29515;29505:35;;29520:18;;:::i;:::-;-1:-1:-1;29554:9:15;;29449:120::o;30277:414::-;30479:2;30461:21;;;30518:2;30498:18;;;30491:30;30557:34;30552:2;30537:18;;30530:62;-1:-1:-1;;;30623:2:15;30608:18;;30601:48;30681:3;30666:19;;30277:414::o;30696:112::-;30728:1;30754;30744:35;;30759:18;;:::i;:::-;-1:-1:-1;30793:9:15;;30696:112::o;30813:489::-;-1:-1:-1;;;;;31082:15:15;;;31064:34;;31134:15;;31129:2;31114:18;;31107:43;31181:2;31166:18;;31159:34;;;31229:3;31224:2;31209:18;;31202:31;;;31007:4;;31250:46;;31276:19;;31268:6;31250:46;:::i;:::-;31242:54;30813:489;-1:-1:-1;;;;;;30813:489:15:o;31307:249::-;31376:6;31429:2;31417:9;31408:7;31404:23;31400:32;31397:52;;;31445:1;31442;31435:12;31397:52;31477:9;31471:16;31496:30;31520:5;31496:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    414,
    9491
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3AC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78231978 GT PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE6CBB6B1 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEE3743AB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEE3743AB EQ PUSH2 0xAC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAD7 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xAF7 JUMPI DUP1 PUSH4 0xFCAA7664 EQ PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE6CBB6B1 EQ PUSH2 0xA2A JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xA59 JUMPI DUP1 PUSH4 0xED931E17 EQ PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA3EF23F GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xE59A2F99 EQ PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x96C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0xB3CAAD01 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x8E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x901 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x86A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0xB1214392 EQ PUSH2 0x8AB JUMPI DUP1 PUSH4 0xB3A196E9 EQ PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7FD JUMPI DUP1 PUSH4 0x865054ED EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78231978 EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BDF4AC6 GT PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x622E4E78 GT PUSH2 0x26A JUMPI DUP1 PUSH4 0x6EC55DBC GT PUSH2 0x239 JUMPI DUP1 PUSH4 0x6EC55DBC EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0x6ECD2306 EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0x61869A93 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BDF4AC6 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0C312D GT PUSH2 0x34F JUMPI DUP1 PUSH4 0x23957C66 GT PUSH2 0x31E JUMPI DUP1 PUSH4 0x23957C66 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x30CC7AE0 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x3549345E EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0C312D EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x20841A6A EQ PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x38B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x94E4072 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xE7FA8 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x40A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x31BD JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3295 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x335E JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xE5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x343D JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x3472 JUMP JUMPDEST PUSH2 0xF92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x10D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0x1158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x131D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x3472 JUMP JUMPDEST PUSH2 0x1357 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x66B CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x1372 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x335E JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x3FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x44C SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x34BF JUMP JUMPDEST PUSH2 0x147D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x70B CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x14C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x1540 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x15CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0x755 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0x778 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BF JUMP JUMPDEST PUSH2 0x162A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x798 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH2 0x1C81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x1D08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x7E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x1D42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x1D77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x1E7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x82D CALLDATASIZE PUSH1 0x4 PUSH2 0x34DA JUMP JUMPDEST PUSH2 0x1EB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x1FCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3FA SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x8A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x359C JUMP JUMPDEST PUSH2 0x1FDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x44C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x8FC CALLDATASIZE PUSH1 0x4 PUSH2 0x35D8 JUMP JUMPDEST PUSH2 0x1FE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x91C CALLDATASIZE PUSH1 0x4 PUSH2 0x360B JUMP JUMPDEST PUSH2 0x21D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3FA SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x220B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x2218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x99C CALLDATASIZE PUSH1 0x4 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x2225 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x22D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x9D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x335E JUMP JUMPDEST PUSH2 0x2332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x2375 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x4AA SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0xA25 CALLDATASIZE PUSH1 0x4 PUSH2 0x3687 JUMP JUMPDEST PUSH2 0x238C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x4AA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x23FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH2 0xA74 CALLDATASIZE PUSH1 0x4 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0xABD CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH2 0x24F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0x25AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH2 0xAF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH2 0x2690 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xB56 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB71 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xB86 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBB2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBE2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE DUP3 PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xD38 JUMPI POP PUSH2 0xD38 DUP2 CALLER PUSH2 0xA74 JUMP JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xDB4 DUP4 DUP4 PUSH2 0x2737 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE56 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x310E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE67 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x3729 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x283932B9B0B6329034B99031B7B731B63AB232B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE56 JUMPI PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xF8A DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xF9D CALLER JUMPDEST DUP3 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3771 JUMP JUMPDEST PUSH2 0xDB4 DUP4 DUP4 DUP4 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206973206E6F74206F6E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x283932B9B0B6329034B99031B7B731B63AB232B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11FE PUSH1 0x64 PUSH2 0x11F8 SELFBALANCE PUSH1 0x32 PUSH2 0x2A47 JUMP JUMPDEST SWAP1 PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x123F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH2 0x1355 PUSH2 0x2A66 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDB4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x137B CALLER PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x2AF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE56 SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x154D SWAP1 PUSH2 0x36A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1579 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x159B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15D9 PUSH2 0xE5A JUMP JUMPDEST GT PUSH2 0x161F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xE71 PUSH2 0x70B PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x37B71039BA30B3B29018101434B734BA1497 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x1886 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E746572206E6F742077686974656C69737465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 PUSH2 0x17E0 SWAP2 AND DUP4 PUSH2 0x3836 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x1847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20657863656564732072656D61696E696E67207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6974656C697374206D696E7473 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1869 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x3836 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x11 SLOAD PUSH2 0x18A4 SWAP1 PUSH1 0xFF DUP4 AND PUSH2 0x2A47 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x194A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F74206F6E2070726573616C65206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 PUSH1 0xFF AND PUSH2 0x1959 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST GT ISZERO PUSH2 0x19BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E2065786365656473207072652D73616C6520737570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x706C79 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x12 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 PUSH2 0x19E1 SWAP2 AND DUP4 PUSH2 0x3836 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E2065786365656473206D617820616C6C6F77656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x70726573616C65206D696E7473 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1869 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x3836 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1AF5 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x385B JUMP JUMPDEST GT ISZERO PUSH2 0x1B56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C42 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1B86 SWAP1 PUSH1 0xFF DUP4 AND PUSH2 0x2A47 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 PUSH1 0xFF AND PUSH2 0x1BDC PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x1BE6 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST GT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xE56 JUMPI PUSH2 0x1C61 CALLER PUSH2 0x1C5C PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0x1C6F PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1C79 DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1D38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH2 0x1355 PUSH1 0x0 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1D72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD PUSH2 0x1DB6 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1E05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1EAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH2 0x1355 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1EE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x1F3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xDB4 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F5C JUMPI PUSH2 0x1F5C PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1F7A JUMPI PUSH2 0x1F7A PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1FC5 SWAP1 PUSH2 0x3756 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB86 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH2 0xE56 CALLER DUP4 DUP4 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2017 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2045 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3873 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x2 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2830B9BA103BB434BA32B634B9BA1039B0B63297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x20C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x2131 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST GT ISZERO PUSH2 0x2199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642070726573616C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BAB838363C97 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xDB4 JUMPI PUSH2 0x21B3 DUP3 PUSH2 0x1C5C PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21C1 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x21CB DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x219C JUMP JUMPDEST PUSH2 0x21DD CALLER DUP4 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x21F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3771 JUMP JUMPDEST PUSH2 0x2205 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2D3B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x154D SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x154D SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x9 PUSH2 0x22AF DUP4 PUSH2 0x2D6E JUMP JUMPDEST PUSH1 0xA PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22E4 PUSH2 0xE5A JUMP JUMPDEST GT PUSH2 0x232A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xE71 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE56 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x23BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x242A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD PUSH2 0x2439 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x2488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x258C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74206F6E2070726573616C65206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x25DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x260B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3873 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x2662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20737461676573206166746572207075626C69632073616C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x2675 DUP4 PUSH2 0x399D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x26C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x2BBA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x276C DUP3 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x281E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2829 DUP4 PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2864 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2859 DUP5 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2894 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28AF DUP3 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x2984 DUP4 DUP4 DUP4 PUSH2 0x2E6C JUMP JUMPDEST PUSH2 0x298F PUSH1 0x0 DUP3 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x29B8 SWAP1 DUP5 SWAP1 PUSH2 0x3729 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x29E6 SWAP1 DUP5 SWAP1 PUSH2 0x385B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A53 DUP3 DUP5 PUSH2 0x39BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A53 DUP3 DUP5 PUSH2 0x39F2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x2AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B04 DUP3 PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B12 DUP2 PUSH1 0x0 DUP5 PUSH2 0x2E6C JUMP JUMPDEST PUSH2 0x2B1D PUSH1 0x0 DUP4 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2B46 SWAP1 DUP5 SWAP1 PUSH2 0x3729 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE56 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2ADC CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2CCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2D46 DUP5 DUP5 DUP5 PUSH2 0x289C JUMP JUMPDEST PUSH2 0x2D52 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2EC2 JUMP JUMPDEST PUSH2 0x2205 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3A06 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2D92 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2DBC JUMPI DUP1 PUSH2 0x2DA6 DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x39F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DD7 JUMPI PUSH2 0x2DD7 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E01 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2E16 PUSH1 0x1 DUP4 PUSH2 0x3729 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E23 PUSH1 0xA DUP7 PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x2E2E SWAP1 PUSH1 0x30 PUSH2 0x385B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E43 JUMPI PUSH2 0x2E43 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2E65 PUSH1 0xA DUP7 PUSH2 0x39F2 JUMP JUMPDEST SWAP5 POP PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x37C2 JUMP JUMPDEST PUSH2 0x2E99 DUP4 DUP4 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x2EA6 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2EC2 JUMP JUMPDEST PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3A06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2FB5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2F06 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A6C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2F41 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2F3E SWAP2 DUP2 ADD SWAP1 PUSH2 0x3AA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2F9B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2F6F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2F93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP1 PUSH2 0x3A06 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2894 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3016 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x307B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x3087 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x30B0 SWAP1 DUP5 SWAP1 PUSH2 0x385B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x311A SWAP1 PUSH2 0x36A3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x313C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3182 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3155 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3182 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3182 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3182 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3167 JUMP JUMPDEST POP PUSH2 0x318E SWAP3 SWAP2 POP PUSH2 0x3192 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x318E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A53 DUP2 PUSH2 0x31A7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31F5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31DD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2205 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x321E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x31DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2A53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x328C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A53 DUP3 PUSH2 0x325E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B1 DUP4 PUSH2 0x325E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x32FE JUMPI PUSH2 0x32FE PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x3320 JUMPI PUSH2 0x3320 PUSH2 0x32BF JUMP JUMPDEST PUSH2 0x3333 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x32D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2894 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3306 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33C1 JUMPI PUSH2 0x33C1 PUSH2 0x32BF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x33F1 PUSH2 0x33EC DUP4 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x32D5 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3425 DUP2 PUSH2 0x325E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3414 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x344F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2894 DUP5 DUP3 DUP6 ADD PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3490 DUP5 PUSH2 0x325E JUMP JUMPDEST SWAP3 POP PUSH2 0x349E PUSH1 0x20 DUP6 ADD PUSH2 0x325E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A53 DUP3 PUSH2 0x34AE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3511 DUP7 DUP4 DUP8 ADD PUSH2 0x33CB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x353B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3549 PUSH2 0x33EC DUP3 PUSH2 0x33A7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x358D JUMPI PUSH2 0x357E DUP5 PUSH2 0x34AE JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x356D JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B8 DUP4 PUSH2 0x325E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x35CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35F4 DUP4 PUSH2 0x34AE JUMP JUMPDEST SWAP2 POP PUSH2 0x3602 PUSH1 0x20 DUP5 ADD PUSH2 0x325E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x362A DUP6 PUSH2 0x325E JUMP JUMPDEST SWAP4 POP PUSH2 0x3638 PUSH1 0x20 DUP7 ADD PUSH2 0x325E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x365B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x366C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x367B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3306 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x369A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35F4 DUP4 PUSH2 0x325E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x36B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x36D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x373B JUMPI PUSH2 0x373B PUSH2 0x3713 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x376A JUMPI PUSH2 0x376A PUSH2 0x3713 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3930B739B0B1BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3853 JUMPI PUSH2 0x3853 PUSH2 0x3713 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x386E JUMPI PUSH2 0x386E PUSH2 0x3713 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x38EA JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x390C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3920 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3931 JUMPI PUSH2 0x395E JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x395E JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3956 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x393D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3976 DUP3 DUP7 PUSH2 0x38D0 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x3986 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x31DA JUMP JUMPDEST PUSH2 0x3992 DUP2 DUP4 ADD DUP7 PUSH2 0x38D0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x39B4 JUMPI PUSH2 0x39B4 PUSH2 0x3713 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x39D7 JUMPI PUSH2 0x39D7 PUSH2 0x3713 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A01 JUMPI PUSH2 0x3A01 PUSH2 0x39DC JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A67 JUMPI PUSH2 0x3A67 PUSH2 0x39DC JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3A9F SWAP1 DUP4 ADD DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A53 DUP2 PUSH2 0x31A7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE8 DUP7 0xB1 SHL SWAP5 PUSH29 0x134A2C0B73D19CF0150A19485677458BC7AF3FAB5BF9901CB864736F6C PUSH4 0x4300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "LT",
      "path": "14"
    },
    "9": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AC"
    },
    "12": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "SHR",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78231978"
    },
    "25": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E7"
    },
    "29": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D"
    },
    "40": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "41": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE6CBB6B1"
    },
    "47": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "48": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "52": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "53": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xEE3743AB"
    },
    "58": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "59": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "63": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "64": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xEE3743AB"
    },
    "69": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "70": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAC2"
    },
    "73": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "74": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "75": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "81": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "84": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "85": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "86": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "92": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAF7"
    },
    "95": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "96": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "97": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFCAA7664"
    },
    "102": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB0D"
    },
    "106": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "107": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "111": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "112": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "113": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE6CBB6B1"
    },
    "118": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "119": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA2A"
    },
    "122": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "123": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "124": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "130": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA44"
    },
    "133": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "134": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "135": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "141": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA59"
    },
    "144": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "145": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "146": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xED931E17"
    },
    "151": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA2"
    },
    "155": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "156": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "160": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "162": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDA3EF23F"
    },
    "167": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "168": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "173": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDA3EF23F"
    },
    "178": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "179": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9B6"
    },
    "182": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "184": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDE5F9866"
    },
    "189": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "190": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9D6"
    },
    "193": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "194": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "195": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDE7FCB1D"
    },
    "200": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9EB"
    },
    "204": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "205": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "206": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE59A2F99"
    },
    "211": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA0A"
    },
    "215": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "216": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "220": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "221": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "222": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "228": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x957"
    },
    "231": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "232": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "233": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "239": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96C"
    },
    "242": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "243": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "244": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "250": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x981"
    },
    "253": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "254": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "255": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD6D67A09"
    },
    "260": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "261": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9A1"
    },
    "264": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "265": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "268": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "269": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "270": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "271": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9A2A9C3D"
    },
    "276": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "277": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "281": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "282": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB3CAAD01"
    },
    "287": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "288": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "292": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "293": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB3CAAD01"
    },
    "298": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "299": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8E1"
    },
    "302": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "303": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "304": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB88D4FDE"
    },
    "309": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "310": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x901"
    },
    "313": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "314": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "315": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC29DE630"
    },
    "320": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "321": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x921"
    },
    "324": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "325": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "326": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3214581"
    },
    "331": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "332": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x941"
    },
    "335": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "336": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "339": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "340": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "341": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "342": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9A2A9C3D"
    },
    "347": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "348": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x86A"
    },
    "351": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "352": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "353": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA22CB465"
    },
    "358": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "359": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x88B"
    },
    "362": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "363": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "364": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB1214392"
    },
    "369": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "370": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8AB"
    },
    "373": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "374": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "375": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB3A196E9"
    },
    "380": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "381": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8CB"
    },
    "384": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "385": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "388": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "389": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "390": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "391": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8456CB59"
    },
    "396": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "397": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "401": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "402": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8456CB59"
    },
    "407": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "408": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7FD"
    },
    "411": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "412": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "413": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x865054ED"
    },
    "418": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "419": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x812"
    },
    "422": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "423": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "424": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "429": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "430": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x832"
    },
    "433": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "434": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "435": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "440": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "441": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x855"
    },
    "444": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "445": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "448": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "449": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "450": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "451": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78231978"
    },
    "456": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "457": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7B2"
    },
    "460": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "461": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "462": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x791A2519"
    },
    "467": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "468": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7C8"
    },
    "471": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "472": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "473": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x81C162F2"
    },
    "478": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "479": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7E8"
    },
    "482": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "483": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "485": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "486": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "487": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "488": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "489": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3BDF4AC6"
    },
    "494": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "495": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D7"
    },
    "498": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "499": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "500": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x622E4E78"
    },
    "505": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "506": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26A"
    },
    "509": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "510": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "511": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6EC55DBC"
    },
    "516": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "517": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x239"
    },
    "520": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "521": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "522": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6EC55DBC"
    },
    "527": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "528": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x73A"
    },
    "531": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "532": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "533": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6ECD2306"
    },
    "538": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "539": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x76A"
    },
    "542": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "543": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "544": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "549": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "550": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x77D"
    },
    "553": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "554": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "555": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x715018A6"
    },
    "560": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "561": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x79D"
    },
    "564": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "565": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "567": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "568": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "569": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "570": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "571": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x622E4E78"
    },
    "576": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "577": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6D0"
    },
    "580": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "581": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "582": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6352211E"
    },
    "587": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "588": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F0"
    },
    "591": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "592": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "593": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C0360EB"
    },
    "598": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "599": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x710"
    },
    "602": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "603": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "604": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6CBB8985"
    },
    "609": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "610": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x725"
    },
    "613": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "614": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "616": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "617": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "618": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "619": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "620": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42966C68"
    },
    "625": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "626": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A6"
    },
    "629": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "630": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "631": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42966C68"
    },
    "636": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "637": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x650"
    },
    "640": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "641": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "642": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x55F804B3"
    },
    "647": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "648": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x670"
    },
    "651": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "652": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "653": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5C975ABB"
    },
    "658": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "659": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x690"
    },
    "662": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "663": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "664": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x61869A93"
    },
    "669": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "670": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A8"
    },
    "673": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "674": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "676": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "677": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "678": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "679": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "680": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3BDF4AC6"
    },
    "685": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "686": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E3"
    },
    "689": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "690": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "691": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3CCFD60B"
    },
    "696": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "697": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "700": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "701": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "702": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3F4BA83A"
    },
    "707": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "708": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61B"
    },
    "711": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "712": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "713": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "718": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "719": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x630"
    },
    "722": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "723": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "725": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "726": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "727": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "728": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "729": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0C312D"
    },
    "734": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "735": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34F"
    },
    "738": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "739": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "740": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23957C66"
    },
    "745": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "746": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x31E"
    },
    "749": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "750": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "751": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23957C66"
    },
    "756": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "757": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x563"
    },
    "760": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "761": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "762": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "767": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "768": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "771": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "772": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "773": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x30CC7AE0"
    },
    "778": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "779": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5A3"
    },
    "782": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "783": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "784": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3549345E"
    },
    "789": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "790": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5C3"
    },
    "793": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "794": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "796": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "797": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "798": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "799": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "800": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0C312D"
    },
    "805": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "806": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DE"
    },
    "809": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "810": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "811": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10969523"
    },
    "816": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "817": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50E"
    },
    "820": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "821": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "822": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "827": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "828": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x52E"
    },
    "831": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "832": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "833": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20841A6A"
    },
    "838": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "839": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x543"
    },
    "842": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "843": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "845": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "846": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "847": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "848": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "849": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x81812FC"
    },
    "854": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "GT",
      "path": "14"
    },
    "855": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38B"
    },
    "858": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "859": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "860": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x81812FC"
    },
    "865": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "866": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x42C"
    },
    "869": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "870": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "871": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x88139A6"
    },
    "876": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "877": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "880": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "881": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "882": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x94E4072"
    },
    "887": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "888": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x47A"
    },
    "891": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "892": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "893": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "898": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "899": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4BC"
    },
    "902": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "903": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "905": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "906": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "907": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "908": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "909": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE7FA8"
    },
    "913": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "914": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B1"
    },
    "917": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "918": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "919": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "924": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "925": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3DA"
    },
    "928": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "929": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "930": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "935": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "EQ",
      "path": "14"
    },
    "936": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x40A"
    },
    "939": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "940": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "941": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "943": {
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "DUP1",
      "path": "14"
    },
    "944": {
      "first_revert": true,
      "fn": null,
      "offset": [
        414,
        9491
      ],
      "op": "REVERT",
      "path": "14"
    },
    "945": {
      "offset": [
        1500,
        1540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "946": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "947": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "948": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "949": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BD"
    },
    "952": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "953": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "955": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "956": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "REVERT",
      "path": "14"
    },
    "957": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "958": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "POP",
      "path": "14"
    },
    "959": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "962": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "964": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "965": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "DUP2",
      "path": "14"
    },
    "966": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "967": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "968": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "970": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "971": {
      "op": "SWAP1"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "MSTORE"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "offset": [
        1500,
        1540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "978": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "980": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "981": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "982": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "983": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "SUB",
      "path": "14"
    },
    "984": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "985": {
      "fn": null,
      "offset": [
        1500,
        1540
      ],
      "op": "RETURN",
      "path": "14"
    },
    "986": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "987": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "988": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "989": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "990": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E6"
    },
    "993": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "994": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "996": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "997": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "REVERT",
      "path": "2"
    },
    "998": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FA"
    },
    "1003": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1007": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1009": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31BD"
    },
    "1012": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1013": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1014": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB25"
    },
    "1017": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1018": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1019": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1021": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1022": {
      "op": "SWAP1"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "ISZERO"
    },
    "1025": {
      "op": "DUP2"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D1"
    },
    "1033": {
      "op": "JUMP"
    },
    "1034": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1035": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1036": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1037": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1038": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x416"
    },
    "1041": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1042": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1044": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1045": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1046": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1047": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "2"
    },
    "1048": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41F"
    },
    "1051": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB77"
    },
    "1054": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1055": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1056": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1058": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1059": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D1"
    },
    "1062": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1063": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1064": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3232"
    },
    "1067": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1071": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1072": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x438"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1076": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1080": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44C"
    },
    "1085": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1088": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1089": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1091": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3245"
    },
    "1094": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1095": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC09"
    },
    "1099": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1100": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1101": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1103": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "op": "SWAP1"
    },
    "1113": {
      "op": "SWAP2"
    },
    "1114": {
      "op": "AND"
    },
    "1115": {
      "op": "DUP2"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D1"
    },
    "1123": {
      "op": "JUMP"
    },
    "1124": {
      "offset": [
        1745,
        1773
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1125": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1126": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1127": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1128": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x470"
    },
    "1131": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1132": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1134": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1135": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1136": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1137": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "POP",
      "path": "14"
    },
    "1138": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "1141": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "1143": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1144": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1145": {
      "fn": "ERC721.getApproved",
      "offset": [
        1745,
        1773
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1146": {
      "offset": [
        1601,
        1650
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1147": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1148": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1149": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1150": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x486"
    },
    "1153": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1154": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1156": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1157": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1158": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "1163": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x495"
    },
    "1166": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1167": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1169": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "1172": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1173": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1174": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "1176": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1178": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1179": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1181": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1182": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1183": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1184": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1186": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1187": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1188": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1189": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1191": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "AND",
      "path": "14"
    },
    "1192": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1193": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1194": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1195": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1197": {
      "fn": "ERC721.getApproved",
      "offset": [
        1601,
        1650
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1200": {
      "op": "SWAP1"
    },
    "1201": {
      "op": "SWAP2"
    },
    "1202": {
      "op": "AND"
    },
    "1203": {
      "op": "DUP2"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "offset": [
        1601,
        1650
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D1"
    },
    "1211": {
      "op": "JUMP"
    },
    "1212": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1214": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1215": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1216": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C8"
    },
    "1219": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1220": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1222": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1223": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1224": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "1229": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D7"
    },
    "1232": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1233": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1235": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3295"
    },
    "1238": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1239": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1240": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA3"
    },
    "1243": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1244": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1245": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "2"
    },
    "1246": {
      "offset": [
        1393,
        1437
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1247": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1248": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1249": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1250": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4EA"
    },
    "1253": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1254": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1256": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1257": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1258": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3FA"
    },
    "1263": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F9"
    },
    "1266": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1267": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1269": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "1272": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        1393,
        1437
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1273": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1274": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "1276": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1278": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1279": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1282": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1283": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1284": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1286": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1287": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1288": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1289": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1291": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "AND",
      "path": "14"
    },
    "1292": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1293": {
      "fn": "ERC721.approve",
      "offset": [
        1393,
        1437
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1294": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1295": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1296": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1297": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1298": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x51A"
    },
    "1301": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1302": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1304": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1305": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1306": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1311": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x529"
    },
    "1314": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1315": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1317": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x335E"
    },
    "1320": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1321": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1322": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDB9"
    },
    "1325": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1326": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1327": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1328": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1329": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1330": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x53A"
    },
    "1333": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1334": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1336": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1337": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1338": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1339": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "POP",
      "path": "14"
    },
    "1340": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "1343": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "1346": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1347": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1348": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1349": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1350": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1351": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x54F"
    },
    "1354": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1355": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1357": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1358": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1359": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1364": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x55E"
    },
    "1367": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1368": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1370": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3245"
    },
    "1373": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1374": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1375": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE76"
    },
    "1378": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1379": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1380": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1381": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1382": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1383": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56F"
    },
    "1386": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1387": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1389": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1390": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1391": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1396": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x57E"
    },
    "1399": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1400": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1402": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x343D"
    },
    "1405": {
      "fn": "CryptidToken.setPresaleUsers",
      "jump": "i",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1406": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1407": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEAB"
    },
    "1410": {
      "fn": "CryptidToken.setPresaleUsers",
      "jump": "i",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1411": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1412": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1413": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1414": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1415": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58F"
    },
    "1418": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1419": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1421": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1422": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1423": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "1428": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59E"
    },
    "1431": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1432": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1434": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3472"
    },
    "1437": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1438": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1439": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF92"
    },
    "1442": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1443": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1444": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1445": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1446": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1447": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5AF"
    },
    "1450": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1451": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1453": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1454": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1455": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1460": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5BE"
    },
    "1463": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1464": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1466": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "1469": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "i",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1470": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1471": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFC4"
    },
    "1474": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "i",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1475": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1476": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1477": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1478": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1479": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5CF"
    },
    "1482": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1483": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1485": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1486": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1487": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1492": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5DE"
    },
    "1495": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1496": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1498": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3245"
    },
    "1501": {
      "fn": "CryptidToken.setPresalePrice",
      "jump": "i",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1502": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1503": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D4"
    },
    "1506": {
      "fn": "CryptidToken.setPresalePrice",
      "jump": "i",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1507": {
      "offset": [
        1305,
        1356
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1508": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1509": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1510": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1511": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5EF"
    },
    "1514": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1515": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1517": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1518": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1519": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "1524": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5FE"
    },
    "1527": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1528": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1530": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "1533": {
      "fn": "CryptidToken.setPresalePrice",
      "jump": "i",
      "offset": [
        1305,
        1356
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1534": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1535": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "1537": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1539": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1540": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1542": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1543": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1544": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1545": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1547": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1548": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1549": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1550": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1552": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "AND",
      "path": "14"
    },
    "1553": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1554": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        1305,
        1356
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1555": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7956,
        8351
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1556": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7956,
        8351
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1559": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7956,
        8351
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1158"
    },
    "1562": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7956,
        8351
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1563": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1564": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1565": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1566": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1567": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x627"
    },
    "1570": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1571": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1573": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1574": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1575": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1576": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "POP",
      "path": "14"
    },
    "1577": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1580": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x131D"
    },
    "1583": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1584": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1585": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1587": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63C"
    },
    "1591": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1592": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1594": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1595": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64B"
    },
    "1604": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1607": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3472"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1612": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1357"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1616": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1617": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1618": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1619": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1620": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x65C"
    },
    "1623": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1624": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1626": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1627": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1628": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DC"
    },
    "1633": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66B"
    },
    "1636": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1637": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1639": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3245"
    },
    "1642": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1643": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1644": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1372"
    },
    "1647": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1648": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1649": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1650": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1651": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1652": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67C"
    },
    "1655": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1656": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1658": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1659": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1660": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1665": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x68B"
    },
    "1668": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1669": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1671": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x335E"
    },
    "1674": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1675": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1676": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13EC"
    },
    "1679": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1680": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1681": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1682": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1683": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1684": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69C"
    },
    "1687": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1688": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1690": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1691": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1692": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x6"
    },
    "1696": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1697": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1699": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1700": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FA"
    },
    "1703": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1704": {
      "offset": [
        899,
        972
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1705": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1706": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1707": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1708": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B4"
    },
    "1711": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1712": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1714": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1715": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1716": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "offset": [
        899,
        972
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1720": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1721": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x44C"
    },
    "1724": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1725": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "PUSH5",
      "path": "14",
      "value": "0x100000000"
    },
    "1731": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1732": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "DIV",
      "path": "14"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "offset": [
        899,
        972
      ],
      "op": "AND",
      "path": "14"
    },
    "1742": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1743": {
      "fn": "Pausable.paused",
      "offset": [
        899,
        972
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1744": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1745": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1746": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1747": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1748": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6DC"
    },
    "1751": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1752": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1754": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1755": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1756": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1761": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6EB"
    },
    "1764": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1765": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1767": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34BF"
    },
    "1770": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1771": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1772": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x147D"
    },
    "1775": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1776": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FC"
    },
    "1783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1786": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44C"
    },
    "1793": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70B"
    },
    "1796": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1797": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1799": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3245"
    },
    "1802": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1803": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1804": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "1807": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1808": {
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1809": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1810": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1811": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1812": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71C"
    },
    "1815": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1816": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1818": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1819": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1820": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1821": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "1822": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41F"
    },
    "1825": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1540"
    },
    "1828": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        673,
        699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1829": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1830": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1831": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1832": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1833": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x731"
    },
    "1836": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1837": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1839": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1840": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1841": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1842": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "POP",
      "path": "14"
    },
    "1843": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x44C"
    },
    "1846": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15CE"
    },
    "1849": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8386,
        8550
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1850": {
      "offset": [
        1252,
        1299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1851": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1852": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1853": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1854": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x746"
    },
    "1857": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1858": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1860": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1861": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1862": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "1867": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x755"
    },
    "1870": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1871": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1873": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "1876": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        1252,
        1299
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1877": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1878": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "1880": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1882": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1883": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1885": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1886": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1887": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1888": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1890": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1891": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1892": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1893": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1895": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "AND",
      "path": "14"
    },
    "1896": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1897": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        1252,
        1299
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1898": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1899": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "1902": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x778"
    },
    "1905": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1906": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1908": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34BF"
    },
    "1911": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2431,
        4306
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1912": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1913": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162A"
    },
    "1916": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2431,
        4306
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1917": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1918": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1919": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1920": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1921": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x789"
    },
    "1924": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1925": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1927": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1928": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1929": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "1934": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x798"
    },
    "1937": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1938": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1940": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x327A"
    },
    "1943": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1944": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1945": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C81"
    },
    "1948": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1951": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1952": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A9"
    },
    "1956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1957": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1959": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1962": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DC"
    },
    "1966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D08"
    },
    "1969": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1970": {
      "offset": [
        1852,
        1882
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1971": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1972": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1973": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1974": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7BE"
    },
    "1977": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1978": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1980": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1981": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1982": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1983": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "POP",
      "path": "14"
    },
    "1984": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "1987": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "1989": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1990": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1852,
        1882
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1992": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1993": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1994": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1995": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1996": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7D4"
    },
    "1999": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2000": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2002": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2003": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2004": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2009": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7E3"
    },
    "2012": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2013": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2015": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3245"
    },
    "2018": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2019": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2020": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D42"
    },
    "2023": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2024": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2025": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2026": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2027": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2028": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F4"
    },
    "2031": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2032": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2034": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2035": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2036": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2037": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "POP",
      "path": "14"
    },
    "2038": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2041": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D77"
    },
    "2044": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2045": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2046": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2047": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2048": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2049": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x809"
    },
    "2052": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2053": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2055": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2056": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2057": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2058": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "POP",
      "path": "14"
    },
    "2059": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2062": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E7F"
    },
    "2065": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4334,
        4393
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2066": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2067": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2068": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2069": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2070": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x81E"
    },
    "2073": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2074": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2076": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2077": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2078": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2083": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x82D"
    },
    "2086": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2087": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2089": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34DA"
    },
    "2092": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2093": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2094": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EB7"
    },
    "2097": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2098": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2099": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2100": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2101": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2102": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83E"
    },
    "2105": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2106": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2108": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2109": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2110": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2111": {
      "op": "POP"
    },
    "2112": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x6"
    },
    "2114": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2115": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2118": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2119": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2129": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44C"
    },
    "2132": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2135": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2136": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2145": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2146": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "2"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41F"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FCD"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2154": {
      "offset": [
        853,
        893
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2156": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2157": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x876"
    },
    "2161": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2164": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2165": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2166": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "offset": [
        853,
        893
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2170": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3FA"
    },
    "2174": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2175": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "2180": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "DIV",
      "path": "14"
    },
    "2182": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2184": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "AND",
      "path": "14"
    },
    "2185": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2186": {
      "fn": "ERC721.symbol",
      "offset": [
        853,
        893
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2187": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2188": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2189": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2190": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2191": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x897"
    },
    "2194": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2195": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2197": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2198": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2199": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A6"
    },
    "2207": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2208": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2210": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359C"
    },
    "2213": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2214": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2215": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FDC"
    },
    "2218": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2219": {
      "offset": [
        978,
        1051
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2220": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2223": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8B7"
    },
    "2226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2227": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2229": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2230": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "offset": [
        978,
        1051
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "2235": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2236": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x44C"
    },
    "2239": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "SUB"
    },
    "2248": {
      "offset": [
        978,
        1051
      ],
      "op": "AND",
      "path": "14"
    },
    "2249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        978,
        1051
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2251": {
      "offset": [
        1443,
        1471
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2252": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2254": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D7"
    },
    "2258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2259": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2261": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2263": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "POP",
      "path": "14"
    },
    "2265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "2268": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "2270": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2271": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2272": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1443,
        1471
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2273": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2274": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2275": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2276": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8ED"
    },
    "2280": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2281": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2283": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2284": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2285": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2290": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8FC"
    },
    "2293": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2294": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2296": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x35D8"
    },
    "2299": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2300": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2301": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE7"
    },
    "2304": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2305": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2306": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2307": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2308": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2309": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90D"
    },
    "2312": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2313": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2315": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2316": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2317": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "2322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91C"
    },
    "2325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2326": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2328": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x360B"
    },
    "2331": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D3"
    },
    "2336": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2337": {
      "offset": [
        813,
        847
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2338": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2340": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2341": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92D"
    },
    "2344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2345": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "offset": [
        813,
        847
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2353": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2354": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3FA"
    },
    "2357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2358": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10000"
    },
    "2362": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "DIV",
      "path": "14"
    },
    "2364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "AND",
      "path": "14"
    },
    "2367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        813,
        847
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2369": {
      "offset": [
        1684,
        1713
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2372": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x94D"
    },
    "2376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2380": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2381": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "POP",
      "path": "14"
    },
    "2383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "2386": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x14"
    },
    "2388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1684,
        1713
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2391": {
      "offset": [
        705,
        742
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2392": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2393": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x963"
    },
    "2398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2401": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2404": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "POP",
      "path": "14"
    },
    "2405": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41F"
    },
    "2408": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x220B"
    },
    "2411": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        705,
        742
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2412": {
      "offset": [
        639,
        667
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2414": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2415": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x978"
    },
    "2419": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2423": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2424": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "POP",
      "path": "14"
    },
    "2426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41F"
    },
    "2429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2218"
    },
    "2432": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        639,
        667
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2433": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2434": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2435": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2436": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2437": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "2440": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2441": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2443": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2444": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2445": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41F"
    },
    "2450": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x99C"
    },
    "2453": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2454": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2456": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3245"
    },
    "2459": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2460": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2461": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2225"
    },
    "2464": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2465": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2466": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2467": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2468": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2469": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AD"
    },
    "2472": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2473": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2475": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2476": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2477": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2478": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "POP",
      "path": "14"
    },
    "2479": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "2482": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22D9"
    },
    "2485": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8556,
        8707
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2486": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2487": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2488": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2489": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2490": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9C2"
    },
    "2493": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2494": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2496": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2497": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2498": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2499": {
      "op": "POP"
    },
    "2500": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2503": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9D1"
    },
    "2506": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2507": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2509": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x335E"
    },
    "2512": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2513": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2514": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2332"
    },
    "2517": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2518": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2519": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2520": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2521": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2522": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E2"
    },
    "2525": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2526": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2528": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2529": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2530": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2531": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "POP",
      "path": "14"
    },
    "2532": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "2535": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2375"
    },
    "2538": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9110,
        9220
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2539": {
      "offset": [
        777,
        802
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2540": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2541": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2542": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2543": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9F7"
    },
    "2546": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2547": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2549": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2550": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2551": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "offset": [
        777,
        802
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2555": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2556": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "2559": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2560": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2563": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2564": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "DIV",
      "path": "14"
    },
    "2565": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2567": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "AND",
      "path": "14"
    },
    "2568": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2569": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        777,
        802
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2570": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2571": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2572": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2573": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2574": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA16"
    },
    "2577": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2578": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2580": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2581": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2583": {
      "op": "POP"
    },
    "2584": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2587": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA25"
    },
    "2590": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2591": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2593": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3687"
    },
    "2596": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2597": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2598": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x238C"
    },
    "2601": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2602": {
      "offset": [
        1546,
        1577
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2603": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2604": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2605": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2606": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA36"
    },
    "2609": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2610": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2612": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2613": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2614": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "offset": [
        1546,
        1577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "2618": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2619": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2623": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2625": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "AND",
      "path": "14"
    },
    "2626": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2627": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        1546,
        1577
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2628": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2629": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2630": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2631": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2632": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA50"
    },
    "2635": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2636": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2638": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2639": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2640": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2641": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "POP",
      "path": "14"
    },
    "2642": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2645": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23FA"
    },
    "2648": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2649": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2650": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "2651": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2652": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2653": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA65"
    },
    "2656": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2657": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2659": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2660": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2661": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FA"
    },
    "2666": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA74"
    },
    "2669": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2670": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2672": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3687"
    },
    "2675": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2676": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2683": {
      "op": "SHL"
    },
    "2684": {
      "op": "SUB"
    },
    "2685": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 2
    },
    "2686": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2687": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "2688": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2690": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2691": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2692": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2693": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2695": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2697": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2698": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2699": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2700": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2702": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2703": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2704": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2705": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2706": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2707": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2708": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2709": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2710": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2711": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2712": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2713": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2714": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2715": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2716": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2717": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2719": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2720": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2721": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2722": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2723": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2724": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2725": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2726": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "2729": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2730": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2732": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2733": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2734": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2739": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xABD"
    },
    "2742": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2743": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2745": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x327A"
    },
    "2748": {
      "fn": "CryptidToken.removePresaleUser",
      "jump": "i",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2749": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2750": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24F4"
    },
    "2753": {
      "fn": "CryptidToken.removePresaleUser",
      "jump": "i",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2754": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2755": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2756": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2757": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2758": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xACE"
    },
    "2761": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2762": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2764": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2765": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2766": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2767": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "POP",
      "path": "14"
    },
    "2768": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DC"
    },
    "2771": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25AD"
    },
    "2774": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2778": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE3"
    },
    "2782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2785": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DC"
    },
    "2792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF2"
    },
    "2795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x327A"
    },
    "2801": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2690"
    },
    "2806": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2807": {
      "offset": [
        1809,
        1846
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB03"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "POP",
      "path": "14"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C7"
    },
    "2824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "2826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1809,
        1846
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2829": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2830": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2831": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2832": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2833": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB19"
    },
    "2836": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2837": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2839": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2840": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2841": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9295,
        9300
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0xB"
    },
    "2845": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9295,
        9300
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2846": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9295,
        9300
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2848": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9295,
        9300
      ],
      "op": "AND",
      "path": "14"
    },
    "2849": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4AA"
    },
    "2852": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9230,
        9307
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2853": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2854": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "op": "NOT"
    },
    "2865": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 4
    },
    "2866": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "2"
    },
    "2867": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "2"
    },
    "2876": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2877": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB56"
    },
    "2880": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2881": {
      "op": "POP"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "SUB"
    },
    "2890": {
      "op": "NOT"
    },
    "2891": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2892": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "2"
    },
    "2893": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2900": {
      "op": "SHL"
    },
    "2901": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "2"
    },
    "2902": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2903": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2904": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB71"
    },
    "2907": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "op": "NOT"
    },
    "2926": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 5
    },
    "2927": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "11"
    },
    "2928": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "11"
    },
    "2929": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2930": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2931": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2935": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2936": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2938": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "2940": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2941": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2942": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB86"
    },
    "2945": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2946": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A3"
    },
    "2949": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2950": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2951": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2952": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2954": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2955": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2957": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2958": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2959": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "2960": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "2961": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2963": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2964": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2966": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2967": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2968": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2969": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2970": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2972": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2973": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2974": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2975": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2976": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2977": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2978": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2979": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2980": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2982": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "2983": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2984": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2985": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2986": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB2"
    },
    "2989": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2990": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A3"
    },
    "2993": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2994": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2995": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2996": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2997": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFF"
    },
    "3000": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3001": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3002": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3004": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "2"
    },
    "3005": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD4"
    },
    "3008": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3009": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3012": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3013": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3014": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3015": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "3016": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "3017": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3018": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3019": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3020": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3022": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3023": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3024": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFF"
    },
    "3027": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3028": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3029": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3030": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3031": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3032": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3033": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3035": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3036": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3038": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3040": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3041": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3042": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3043": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3044": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3045": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3046": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3047": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3048": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3050": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3051": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3052": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3054": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3055": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3056": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3057": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "2"
    },
    "3058": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE2"
    },
    "3061": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3062": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3063": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3064": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "2"
    },
    "3065": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3067": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "2"
    },
    "3068": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3069": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "3070": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3071": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3072": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3073": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3074": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3075": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3076": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3077": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3078": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "3079": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3080": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3081": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3082": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3084": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "3085": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3086": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3087": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3089": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3091": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3092": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3094": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3095": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3096": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "3106": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0xC87"
    },
    "3109": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3110": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3112": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3119": {
      "op": "SHL"
    },
    "3120": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3121": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3126": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3127": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "2"
    },
    "3128": {
      "op": "MSTORE"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "op": "MSTORE"
    },
    "3136": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3171": {
      "op": "DUP3"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "MSTORE"
    },
    "3174": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3192": {
      "op": "DUP3"
    },
    "3193": {
      "op": "ADD"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3199": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3201": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3202": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3203": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3204": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "2"
    },
    "3205": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3206": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3207": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x0"
    },
    "3211": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3212": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3213": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3214": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3216": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3218": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3219": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3221": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3222": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3223": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "SUB"
    },
    "3232": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "2"
    },
    "3233": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3234": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3235": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3236": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3238": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAE"
    },
    "3241": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3242": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "3245": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3246": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3247": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3248": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "2"
    },
    "3249": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 10
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3259": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "op": "SUB"
    },
    "3268": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "3269": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "2"
    },
    "3270": {
      "branch": 188,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3271": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1C"
    },
    "3274": {
      "branch": 188,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3275": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3277": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3284": {
      "op": "SHL"
    },
    "3285": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3286": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3289": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3291": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3292": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "2"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3336": {
      "op": "DUP3"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "3355": {
      "op": "JUMP"
    },
    "3356": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3357": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "3367": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "2"
    },
    "3368": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "2"
    },
    "3369": {
      "branch": 189,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3370": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD38"
    },
    "3373": {
      "branch": 189,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD38"
    },
    "3378": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3379": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA74"
    },
    "3383": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3384": {
      "branch": 190,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3385": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDAA"
    },
    "3388": {
      "branch": 190,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3389": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3391": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3400": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3403": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3405": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3406": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "2"
    },
    "3407": {
      "op": "MSTORE"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3412": {
      "op": "DUP3"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "MSTORE"
    },
    "3415": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3488": {
      "op": "DUP3"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "MSTORE"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "3497": {
      "op": "JUMP"
    },
    "3498": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3499": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xDB4"
    },
    "3502": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3503": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3504": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2737"
    },
    "3507": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3508": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3509": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3510": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3511": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "3512": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3513": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3514": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3516": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3529": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3530": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3531": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3532": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3533": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3534": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE9"
    },
    "3537": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3547": {
      "op": "SHL"
    },
    "3548": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3549": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3550": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3552": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3553": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "3556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3557": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "3560": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3561": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3562": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0xB"
    },
    "3564": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3565": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "3570": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3571": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "DIV",
      "path": "14"
    },
    "3572": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3574": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7432,
        7452
      ],
      "op": "AND",
      "path": "14"
    },
    "3575": {
      "branch": 151,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7431,
        7452
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3576": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE43"
    },
    "3579": {
      "branch": 151,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3580": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3582": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3589": {
      "op": "SHL"
    },
    "3590": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3591": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3596": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3597": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "ADD",
      "path": "14"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3603": {
      "op": "DUP3"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "MSTORE"
    },
    "3606": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3641": {
      "op": "DUP3"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "MSTORE"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3646": {
      "op": "ADD"
    },
    "3647": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "3650": {
      "op": "JUMP"
    },
    "3651": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7423,
        7483
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3652": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 15
    },
    "3653": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3654": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "3657": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3658": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7507
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3660": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7507
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3661": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3663": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3664": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "ADD",
      "path": "14"
    },
    "3665": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3666": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310E"
    },
    "3669": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7493,
        7525
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3670": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3671": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7493,
        7525
      ],
      "op": "POP",
      "path": "14"
    },
    "3672": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7338,
        7532
      ],
      "op": "POP",
      "path": "14"
    },
    "3673": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        7338,
        7532
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3674": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3675": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8757,
        8764
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3677": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8811,
        8812
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x1"
    },
    "3679": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8808
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE67"
    },
    "3682": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8798
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3684": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 17
    },
    "3685": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3686": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3687": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8808
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3688": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8812
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE71"
    },
    "3691": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8812
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3692": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8812
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3693": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8812
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3729"
    },
    "3696": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        8783,
        8812
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3697": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8783,
        8812
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3698": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8776,
        8812
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3699": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8776,
        8812
      ],
      "op": "POP",
      "path": "14"
    },
    "3700": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        8713,
        8819
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3701": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        8713,
        8819
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3702": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3717": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3718": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3719": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3720": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3721": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3722": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3723": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA6"
    },
    "3726": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3729": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3738": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3742": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "3745": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3746": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "3749": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3751": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6747,
        6761
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x14"
    },
    "3753": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6747,
        6782
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3754": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        6665,
        6789
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3755": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5401,
        5613
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3756": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3758": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "SUB"
    },
    "3767": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3770": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3772": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3773": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3774": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3775": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3776": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDB"
    },
    "3779": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "3798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "3802": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3804": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 19,
      "value": "0xB"
    },
    "3806": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3807": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5494,
        5495
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3809": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3811": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3812": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3813": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5491
      ],
      "op": "AND",
      "path": "14"
    },
    "3814": {
      "branch": 152,
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5486,
        5495
      ],
      "op": "LT",
      "path": "14"
    },
    "3815": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF2A"
    },
    "3818": {
      "branch": 152,
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3819": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3821": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3830": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3833": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3835": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3836": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "ADD",
      "path": "14"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "MSTORE"
    },
    "3845": {
      "op": "PUSH21",
      "value": "0x283932B9B0B6329034B99031B7B731B63AB232B217"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "3881": {
      "op": "JUMP"
    },
    "3882": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5478,
        5521
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3883": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5535,
        5544
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3885": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3886": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5549,
        5555
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3887": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5549,
        5562
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3888": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5547,
        5548
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3889": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5547,
        5562
      ],
      "op": "LT",
      "path": "14"
    },
    "3890": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3891": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "3894": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3895": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5602,
        5606
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 20,
      "value": "0x1"
    },
    "3897": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5588
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "3899": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3901": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5595
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3902": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5596,
        5597
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3903": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3904": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3905": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3906": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "LT",
      "path": "14"
    },
    "3907": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF4E"
    },
    "3910": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3911": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF4E"
    },
    "3914": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3740"
    },
    "3917": {
      "fn": "CryptidToken.setPresaleUsers",
      "jump": "i",
      "offset": [
        5589,
        5598
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3918": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3919": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3921": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3922": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3923": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "MUL",
      "path": "14"
    },
    "3924": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3925": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3926": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3927": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "ADD",
      "path": "14"
    },
    "3928": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3929": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "ADD",
      "path": "14"
    },
    "3930": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5589,
        5598
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "AND",
      "path": "14"
    },
    "3940": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3941": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3942": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3943": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3944": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3945": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3946": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3947": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3948": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3950": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3953": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5599
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3954": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3955": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3958": {
      "op": "NOT"
    },
    "3959": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "AND",
      "path": "14"
    },
    "3960": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3961": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3962": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3963": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3964": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3965": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3966": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "OR",
      "path": "14"
    },
    "3967": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3968": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5576,
        5606
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3969": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 21
    },
    "3970": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF8A"
    },
    "3973": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3974": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3756"
    },
    "3977": {
      "fn": "CryptidToken.setPresaleUsers",
      "jump": "i",
      "offset": [
        5563,
        5566
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3978": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3979": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3980": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "POP",
      "path": "14"
    },
    "3981": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5563,
        5566
      ],
      "op": "POP",
      "path": "14"
    },
    "3982": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF2D"
    },
    "3985": {
      "fn": "CryptidToken.setPresaleUsers",
      "offset": [
        5531,
        5606
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3986": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3987": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0xF9D"
    },
    "3990": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3991": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4931
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3992": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3993": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A5"
    },
    "3996": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3997": {
      "branch": 191,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3998": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB9"
    },
    "4001": {
      "branch": 191,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4002": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4004": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4013": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4014": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4016": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "2"
    },
    "4017": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "4020": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4021": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3771"
    },
    "4024": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4025": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4026": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0xDB4"
    },
    "4029": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4030": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4031": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4032": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289C"
    },
    "4035": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4036": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4037": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4039": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4051": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4052": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4053": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4054": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4055": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4056": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4057": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF4"
    },
    "4060": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4061": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "4079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "4083": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4085": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 24,
      "value": "0xB"
    },
    "4087": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4088": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5706,
        5707
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "4090": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4092": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4093": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4094": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5703
      ],
      "op": "AND",
      "path": "14"
    },
    "4095": {
      "branch": 153,
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5698,
        5707
      ],
      "op": "LT",
      "path": "14"
    },
    "4096": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x104B"
    },
    "4099": {
      "branch": 153,
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4100": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4102": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4111": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4114": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4116": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4117": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "ADD",
      "path": "14"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4170": {
      "op": "JUMP"
    },
    "4171": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5690,
        5740
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "SUB"
    },
    "4180": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 25
    },
    "4181": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "AND",
      "path": "14"
    },
    "4182": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5782,
        5783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4184": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4185": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4186": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4187": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5772
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "4189": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4191": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4192": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4194": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4195": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4196": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4197": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4199": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5758,
        5779
      ],
      "op": "AND",
      "path": "14"
    },
    "4200": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B3"
    },
    "4203": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4204": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4206": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4215": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4218": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4220": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4221": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "ADD",
      "path": "14"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4227": {
      "op": "DUP3"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "op": "MSTORE"
    },
    "4230": {
      "op": "PUSH32",
      "value": "0x55736572206973206E6F74206F6E2077686974656C6973742E00000000000000"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4274": {
      "op": "JUMP"
    },
    "4275": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5750,
        5813
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "AND",
      "path": "14",
      "statement": 26
    },
    "4285": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5847,
        5848
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4287": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4288": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4289": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4290": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5837
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "4292": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4294": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4295": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4297": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4298": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5844
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4299": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4300": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5848
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4303": {
      "op": "NOT"
    },
    "4304": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5848
      ],
      "op": "AND",
      "path": "14"
    },
    "4305": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5848
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4306": {
      "fn": "CryptidToken.removeWhitelistUser",
      "offset": [
        5823,
        5848
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4307": {
      "fn": "CryptidToken.removeWhitelistUser",
      "jump": "o",
      "offset": [
        5619,
        5855
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4308": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4309": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4311": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4318": {
      "op": "SHL"
    },
    "4319": {
      "op": "SUB"
    },
    "4320": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4323": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4324": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4325": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4326": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4327": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4328": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4329": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "4332": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4333": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4335": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4342": {
      "op": "SHL"
    },
    "4343": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4345": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "4351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4352": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "4355": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4356": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4357": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 27,
      "value": "0xB"
    },
    "4359": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4360": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7021,
        7022
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "4362": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4364": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4365": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4366": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7018
      ],
      "op": "AND",
      "path": "14"
    },
    "4367": {
      "branch": 154,
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7013,
        7022
      ],
      "op": "LT",
      "path": "14"
    },
    "4368": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1153"
    },
    "4371": {
      "branch": 154,
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4372": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4374": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4383": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4386": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4388": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4389": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "ADD",
      "path": "14"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH21",
      "value": "0x283932B9B0B6329034B99031B7B731B63AB232B217"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "MSTORE"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4434": {
      "op": "JUMP"
    },
    "4435": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7005,
        7048
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4436": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7058,
        7070
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 28,
      "value": "0x11"
    },
    "4438": {
      "fn": "CryptidToken.setPresalePrice",
      "offset": [
        7058,
        7089
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4439": {
      "fn": "CryptidToken.setPresalePrice",
      "jump": "o",
      "offset": [
        6927,
        7096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4440": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7956,
        8351
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4443": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4450": {
      "op": "SHL"
    },
    "4451": {
      "op": "SUB"
    },
    "4452": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4456": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4458": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4459": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4460": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4461": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1188"
    },
    "4464": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "4483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4484": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "4487": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4488": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4489": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8043,
        8044
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 29,
      "value": "0x0"
    },
    "4491": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8019,
        8040
      ],
      "op": "SELFBALANCE",
      "path": "14"
    },
    "4492": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8019,
        8044
      ],
      "op": "GT",
      "path": "14"
    },
    "4493": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11D1"
    },
    "4496": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4497": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4499": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4508": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4511": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4513": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4514": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "ADD",
      "path": "14"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4520": {
      "op": "DUP3"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4556": {
      "op": "ADD"
    },
    "4557": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4560": {
      "op": "JUMP"
    },
    "4561": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8011,
        8071
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4562": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "4564": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4565": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8082,
        8089
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4567": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8082,
        8089
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4568": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "PUSH5",
      "path": "14",
      "value": "0x100000000"
    },
    "4574": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4575": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "DIV",
      "path": "14"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8103,
        8116
      ],
      "op": "AND",
      "path": "14"
    },
    "4585": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8168
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11FE"
    },
    "4588": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8164,
        8167
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4590": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8159
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F8"
    },
    "4593": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8151
      ],
      "op": "SELFBALANCE",
      "path": "14"
    },
    "4594": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8156,
        8158
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x32"
    },
    "4596": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8155
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A47"
    },
    "4599": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8130,
        8159
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4600": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8159
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4601": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8163
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4602": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8163
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A5A"
    },
    "4605": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8130,
        8168
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4606": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8130,
        8168
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4607": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4609": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4612": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4613": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4614": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4615": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4616": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4617": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "GAS",
      "path": "14"
    },
    "4618": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "CALL",
      "path": "14"
    },
    "4619": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4620": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4621": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4622": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4623": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4624": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4625": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4627": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4628": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "EQ",
      "path": "14"
    },
    "4629": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123A"
    },
    "4632": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4633": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4635": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4636": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4637": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4638": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4640": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "NOT",
      "path": "14"
    },
    "4641": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "4643": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4644": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "ADD",
      "path": "14"
    },
    "4645": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "AND",
      "path": "14"
    },
    "4646": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4647": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "ADD",
      "path": "14"
    },
    "4648": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4650": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4651": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4652": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4653": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4654": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4655": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4657": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4659": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4660": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "ADD",
      "path": "14"
    },
    "4661": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4662": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123F"
    },
    "4665": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4666": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4667": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4669": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4670": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4671": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4672": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8095,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4673": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8081,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4674": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8081,
        8173
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4675": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8081,
        8173
      ],
      "op": "POP",
      "path": "14"
    },
    "4676": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8191,
        8193
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 30
    },
    "4677": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1285"
    },
    "4680": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4681": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4683": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4690": {
      "op": "SHL"
    },
    "4691": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4692": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4695": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4697": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4698": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "ADD",
      "path": "14"
    },
    "4699": {
      "op": "MSTORE"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4704": {
      "op": "DUP3"
    },
    "4705": {
      "op": "ADD"
    },
    "4706": {
      "op": "MSTORE"
    },
    "4707": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C4819985A5B1959"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4728": {
      "op": "SHL"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4731": {
      "op": "DUP3"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "op": "MSTORE"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4736": {
      "op": "ADD"
    },
    "4737": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4740": {
      "op": "JUMP"
    },
    "4741": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8183,
        8216
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4742": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8248,
        8261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "4744": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8248,
        8261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4745": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4747": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4748": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8227,
        8234
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4750": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8227,
        8234
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4757": {
      "op": "SHL"
    },
    "4758": {
      "op": "SUB"
    },
    "4759": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8248,
        8261
      ],
      "op": "AND",
      "path": "14"
    },
    "4760": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8248,
        8261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4761": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8296
      ],
      "op": "SELFBALANCE",
      "path": "14"
    },
    "4762": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8296
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4763": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8227,
        8234
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4764": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4765": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8227,
        8234
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4766": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4767": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8275,
        8296
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4768": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8248,
        8261
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4769": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "GAS",
      "path": "14"
    },
    "4770": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "CALL",
      "path": "14"
    },
    "4771": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4772": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4773": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4774": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4775": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4776": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4777": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4779": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4780": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "EQ",
      "path": "14"
    },
    "4781": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12D2"
    },
    "4784": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4785": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4787": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4788": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4789": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4790": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4792": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "NOT",
      "path": "14"
    },
    "4793": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "4795": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4796": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "ADD",
      "path": "14"
    },
    "4797": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "AND",
      "path": "14"
    },
    "4798": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4799": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "ADD",
      "path": "14"
    },
    "4800": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4802": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4803": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4804": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4805": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4806": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4807": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4809": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4811": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4812": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "ADD",
      "path": "14"
    },
    "4813": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4814": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12D7"
    },
    "4817": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4818": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4819": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4821": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4822": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4823": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4824": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8240,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4825": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8226,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4826": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8226,
        8301
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4827": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8226,
        8301
      ],
      "op": "POP",
      "path": "14"
    },
    "4828": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8319,
        8321
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 31
    },
    "4829": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "4832": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4833": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4835": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4836": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4842": {
      "op": "SHL"
    },
    "4843": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4844": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4847": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4849": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4850": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "ADD",
      "path": "14"
    },
    "4851": {
      "op": "MSTORE"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4856": {
      "op": "DUP3"
    },
    "4857": {
      "op": "ADD"
    },
    "4858": {
      "op": "MSTORE"
    },
    "4859": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C8819985A5B1959"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4880": {
      "op": "SHL"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4883": {
      "op": "DUP3"
    },
    "4884": {
      "op": "ADD"
    },
    "4885": {
      "op": "MSTORE"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4888": {
      "op": "ADD"
    },
    "4889": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8311,
        8344
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "4892": {
      "op": "JUMP"
    },
    "4893": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4896": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "op": "SUB"
    },
    "4905": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4908": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4909": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4910": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4911": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4912": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4913": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4914": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134D"
    },
    "4917": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4920": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4927": {
      "op": "SHL"
    },
    "4928": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4929": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4930": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4932": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4933": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "4936": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4937": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "4940": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4941": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4942": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4445,
        4455
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 32,
      "value": "0x1355"
    },
    "4945": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4445,
        4453
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A66"
    },
    "4948": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4445,
        4455
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4949": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4445,
        4455
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4950": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4399,
        4462
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4951": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0xDB4"
    },
    "4955": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4960": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4961": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4962": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4964": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "2"
    },
    "4965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4968": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4969": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4973": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "2"
    },
    "4974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D3"
    },
    "4977": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4978": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4979": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 34,
      "value": "0x137B"
    },
    "4982": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4983": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        664,
        676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF97"
    },
    "4986": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4987": {
      "branch": 201,
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4988": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E0"
    },
    "4991": {
      "branch": 201,
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4992": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4994": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5003": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5006": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5008": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5009": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "ADD",
      "path": "5"
    },
    "5010": {
      "op": "MSTORE"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5015": {
      "op": "DUP3"
    },
    "5016": {
      "op": "ADD"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "op": "PUSH32",
      "value": "0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5053": {
      "op": "DUP3"
    },
    "5054": {
      "op": "ADD"
    },
    "5055": {
      "op": "MSTORE"
    },
    "5056": {
      "op": "PUSH16",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD9959"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5075": {
      "op": "SHL"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5078": {
      "op": "DUP3"
    },
    "5079": {
      "op": "ADD"
    },
    "5080": {
      "op": "MSTORE"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7E"
    },
    "5087": {
      "op": "JUMP"
    },
    "5088": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5089": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 35,
      "value": "0x13E9"
    },
    "5092": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        755,
        762
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5093": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AF9"
    },
    "5096": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        749,
        763
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5097": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5098": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "POP",
      "path": "5"
    },
    "5099": {
      "fn": "ERC721Burnable.burn",
      "jump": "o",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5100": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6037,
        6195
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5101": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5103": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "op": "SUB"
    },
    "5112": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5115": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5117": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5118": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5119": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5120": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5121": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141C"
    },
    "5124": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5127": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5137": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5139": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "5143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5144": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "5147": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5148": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5149": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 36,
      "value": "0xB"
    },
    "5151": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5152": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10000"
    },
    "5156": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5157": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "DIV",
      "path": "14"
    },
    "5158": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5160": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6134
      ],
      "op": "AND",
      "path": "14"
    },
    "5161": {
      "branch": 158,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6119,
        6134
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5162": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x146A"
    },
    "5165": {
      "branch": 158,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5166": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5168": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5175": {
      "op": "SHL"
    },
    "5176": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5177": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5180": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5182": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5183": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "ADD",
      "path": "14"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5189": {
      "op": "DUP3"
    },
    "5190": {
      "op": "ADD"
    },
    "5191": {
      "op": "MSTORE"
    },
    "5192": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5216": {
      "op": "DUP3"
    },
    "5217": {
      "op": "ADD"
    },
    "5218": {
      "op": "MSTORE"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5221": {
      "op": "ADD"
    },
    "5222": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "5225": {
      "op": "JUMP"
    },
    "5226": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6111,
        6157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5227": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 37
    },
    "5228": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5229": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "5232": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5233": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6174
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5235": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6174
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5236": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5238": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5239": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "ADD",
      "path": "14"
    },
    "5240": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5241": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6167,
        6188
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310E"
    },
    "5244": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6167,
        6188
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5245": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5246": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5248": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5255": {
      "op": "SHL"
    },
    "5256": {
      "op": "SUB"
    },
    "5257": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5260": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5261": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5262": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5263": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5264": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5265": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5266": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AD"
    },
    "5269": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5272": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5279": {
      "op": "SHL"
    },
    "5280": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5281": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5282": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5285": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "5288": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "5292": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5294": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7306
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 38,
      "value": "0xB"
    },
    "5296": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5297": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5298": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5300": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5301": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5302": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "AND",
      "path": "14"
    },
    "5303": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "5306": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "MUL",
      "path": "14"
    },
    "5307": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5310": {
      "op": "NOT"
    },
    "5311": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5312": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5313": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "AND",
      "path": "14"
    },
    "5314": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5315": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5316": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5317": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "OR",
      "path": "14"
    },
    "5318": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5319": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7294,
        7325
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5320": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        7218,
        7332
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5321": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5322": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5324": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5325": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5326": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5336": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "op": "SUB"
    },
    "5345": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "2"
    },
    "5346": {
      "branch": 192,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "5347": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB71"
    },
    "5350": {
      "branch": 192,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5353": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5360": {
      "op": "SHL"
    },
    "5361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5362": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5365": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5367": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5368": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "2"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5374": {
      "op": "DUP3"
    },
    "5375": {
      "op": "ADD"
    },
    "5376": {
      "op": "MSTORE"
    },
    "5377": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5412": {
      "op": "DUP3"
    },
    "5413": {
      "op": "ADD"
    },
    "5414": {
      "op": "MSTORE"
    },
    "5415": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5430": {
      "op": "DUP3"
    },
    "5431": {
      "op": "ADD"
    },
    "5432": {
      "op": "MSTORE"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "5439": {
      "op": "JUMP"
    },
    "5440": {
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5441": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5443": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5444": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5445": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x154D"
    },
    "5448": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5449": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "5452": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        673,
        699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5453": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5454": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5455": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "5457": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5458": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5460": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5461": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5462": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DIV",
      "path": "14"
    },
    "5463": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MUL",
      "path": "14"
    },
    "5464": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5466": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5467": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5469": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5470": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5471": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5472": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5473": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5475": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5476": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5477": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5478": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5479": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5480": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5481": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5482": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5483": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5485": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5486": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5487": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5488": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5489": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1579"
    },
    "5492": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5493": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "5496": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        673,
        699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5497": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5498": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5499": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5500": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15C6"
    },
    "5503": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5504": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5505": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "5507": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "LT",
      "path": "14"
    },
    "5508": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x159B"
    },
    "5511": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5512": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "5515": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5516": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5517": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5518": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DIV",
      "path": "14"
    },
    "5519": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MUL",
      "path": "14"
    },
    "5520": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5521": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5522": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5523": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5525": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5526": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5527": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15C6"
    },
    "5530": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5531": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5532": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5533": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5534": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5535": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5536": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5538": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5539": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5543": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5544": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5545": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5546": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5547": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5548": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5549": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5550": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5551": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5553": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5555": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5558": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5559": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "GT",
      "path": "14"
    },
    "5561": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15A9"
    },
    "5564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5565": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5566": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SUB",
      "path": "14"
    },
    "5568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "5570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "AND",
      "path": "14"
    },
    "5571": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5572": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "ADD",
      "path": "14"
    },
    "5573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "5576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "5577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "5578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "5579": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "POP",
      "path": "14"
    },
    "5580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        673,
        699
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5581": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        673,
        699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5582": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8386,
        8550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5583": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8434,
        8441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5585": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8476,
        8477
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 40
    },
    "5586": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8460,
        8473
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15D9"
    },
    "5589": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8460,
        8471
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "5592": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8460,
        8473
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5593": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8460,
        8473
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5594": {
      "branch": 159,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8460,
        8477
      ],
      "op": "GT",
      "path": "14"
    },
    "5595": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x161F"
    },
    "5598": {
      "branch": 159,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5599": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5601": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5608": {
      "op": "SHL"
    },
    "5609": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5610": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5613": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5615": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5616": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "ADD",
      "path": "14"
    },
    "5617": {
      "op": "MSTORE"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5653": {
      "op": "DUP3"
    },
    "5654": {
      "op": "ADD"
    },
    "5655": {
      "op": "MSTORE"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5658": {
      "op": "ADD"
    },
    "5659": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "5662": {
      "op": "JUMP"
    },
    "5663": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8452,
        8504
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5664": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8521,
        8543
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 41,
      "value": "0xE71"
    },
    "5667": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8529,
        8542
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x70B"
    },
    "5670": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        8529,
        8540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "5673": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        8529,
        8542
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5674": {
      "fn": "CryptidToken.mint",
      "offset": [
        2431,
        4306
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5675": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "5677": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5678": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5680": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "5681": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5682": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164D"
    },
    "5685": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5686": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5688": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5695": {
      "op": "SHL"
    },
    "5696": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5697": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5698": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5700": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "5701": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7E"
    },
    "5704": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5705": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C2"
    },
    "5708": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5709": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5710": {
      "fn": "CryptidToken.mint",
      "offset": [
        2511,
        2516
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 42,
      "value": "0xB"
    },
    "5712": {
      "fn": "CryptidToken.mint",
      "offset": [
        2511,
        2516
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5713": {
      "fn": "CryptidToken.mint",
      "offset": [
        2511,
        2516
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5715": {
      "fn": "CryptidToken.mint",
      "offset": [
        2511,
        2516
      ],
      "op": "AND",
      "path": "14"
    },
    "5716": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16BA"
    },
    "5719": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5720": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5722": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5731": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5734": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5736": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5737": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "ADD",
      "path": "14"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "op": "MSTORE"
    },
    "5746": {
      "op": "PUSH32",
      "value": "0x4D696E74696E67206E6F7420696E697469617465642E2043757272656E6C7920"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5781": {
      "op": "DUP3"
    },
    "5782": {
      "op": "ADD"
    },
    "5783": {
      "op": "MSTORE"
    },
    "5784": {
      "op": "PUSH18",
      "value": "0x37B71039BA30B3B29018101434B734BA1497"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5805": {
      "op": "SHL"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5808": {
      "op": "DUP3"
    },
    "5809": {
      "op": "ADD"
    },
    "5810": {
      "op": "MSTORE"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5813": {
      "op": "ADD"
    },
    "5814": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "5817": {
      "op": "JUMP"
    },
    "5818": {
      "fn": "CryptidToken.mint",
      "offset": [
        2503,
        2575
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5819": {
      "fn": "CryptidToken.mint",
      "offset": [
        2607,
        2608
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 43,
      "value": "0x0"
    },
    "5821": {
      "fn": "CryptidToken.mint",
      "offset": [
        2593,
        2604
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5822": {
      "fn": "CryptidToken.mint",
      "offset": [
        2593,
        2608
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5824": {
      "fn": "CryptidToken.mint",
      "offset": [
        2593,
        2608
      ],
      "op": "AND",
      "path": "14"
    },
    "5825": {
      "branch": 160,
      "fn": "CryptidToken.mint",
      "offset": [
        2593,
        2608
      ],
      "op": "GT",
      "path": "14"
    },
    "5826": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1718"
    },
    "5829": {
      "branch": 160,
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5830": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5832": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5839": {
      "op": "SHL"
    },
    "5840": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5841": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5844": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5846": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5847": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "ADD",
      "path": "14"
    },
    "5848": {
      "op": "MSTORE"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "op": "MSTORE"
    },
    "5856": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5891": {
      "op": "DUP3"
    },
    "5892": {
      "op": "ADD"
    },
    "5893": {
      "op": "MSTORE"
    },
    "5894": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "5899": {
      "op": "SHL"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "MSTORE"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "5911": {
      "op": "JUMP"
    },
    "5912": {
      "fn": "CryptidToken.mint",
      "offset": [
        2585,
        2647
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5913": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0xB"
    },
    "5915": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5916": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5918": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "5921": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5922": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5923": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "DIV",
      "path": "14"
    },
    "5924": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5925": {
      "fn": "CryptidToken.mint",
      "offset": [
        2680,
        2692
      ],
      "op": "AND",
      "path": "14"
    },
    "5926": {
      "fn": "CryptidToken.mint",
      "offset": [
        2665,
        2692
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5927": {
      "fn": "CryptidToken.mint",
      "offset": [
        2665,
        2692
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5928": {
      "fn": "CryptidToken.mint",
      "offset": [
        2665,
        2692
      ],
      "op": "AND",
      "path": "14"
    },
    "5929": {
      "fn": "CryptidToken.mint",
      "offset": [
        2665,
        2692
      ],
      "op": "GT",
      "path": "14"
    },
    "5930": {
      "branch": 161,
      "fn": "CryptidToken.mint",
      "offset": [
        2665,
        2692
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5931": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1746"
    },
    "5934": {
      "branch": 161,
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5935": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5937": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5944": {
      "op": "SHL"
    },
    "5945": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5946": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5947": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5949": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "ADD",
      "path": "14"
    },
    "5950": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "5953": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5954": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x37EC"
    },
    "5957": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2657,
        2739
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5958": {
      "fn": "CryptidToken.mint",
      "offset": [
        2657,
        2739
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5959": {
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2758
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "5961": {
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2758
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5962": {
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2758
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5964": {
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2758
      ],
      "op": "AND",
      "path": "14"
    },
    "5965": {
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2758
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5967": {
      "branch": 162,
      "fn": "CryptidToken.mint",
      "offset": [
        2753,
        2763
      ],
      "op": "EQ",
      "path": "14"
    },
    "5968": {
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5969": {
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1886"
    },
    "5972": {
      "branch": 162,
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5973": {
      "fn": "CryptidToken.mint",
      "offset": [
        2823,
        2833
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 45
    },
    "5974": {
      "fn": "CryptidToken.mint",
      "offset": [
        2837,
        2838
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5976": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5977": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5978": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5979": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "5981": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5983": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5984": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5986": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5987": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5988": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5989": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5991": {
      "fn": "CryptidToken.mint",
      "offset": [
        2808,
        2834
      ],
      "op": "AND",
      "path": "14"
    },
    "5992": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17B3"
    },
    "5995": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5996": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5998": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6005": {
      "op": "SHL"
    },
    "6006": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6007": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6010": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6012": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6013": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "ADD",
      "path": "14"
    },
    "6014": {
      "op": "MSTORE"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6019": {
      "op": "DUP3"
    },
    "6020": {
      "op": "ADD"
    },
    "6021": {
      "op": "MSTORE"
    },
    "6022": {
      "op": "PUSH32",
      "value": "0x4D696E746572206E6F742077686974656C69737465642E000000000000000000"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6057": {
      "op": "DUP3"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6062": {
      "op": "ADD"
    },
    "6063": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6066": {
      "op": "JUMP"
    },
    "6067": {
      "fn": "CryptidToken.mint",
      "offset": [
        2800,
        2866
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6068": {
      "fn": "CryptidToken.mint",
      "offset": [
        2951,
        2961
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 46
    },
    "6069": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6071": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6072": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6073": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6074": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2950
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "6076": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6078": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6079": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6080": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6081": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6083": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6084": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6085": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6086": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6087": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "6089": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6090": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6091": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6092": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6093": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6094": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6095": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6096": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6098": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6099": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6100": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "AND",
      "path": "14"
    },
    "6101": {
      "fn": "CryptidToken.mint",
      "offset": [
        2936,
        2962
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6102": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2932
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17E0"
    },
    "6105": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2932
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6106": {
      "fn": "CryptidToken.mint",
      "offset": [
        2902,
        2932
      ],
      "op": "AND",
      "path": "14"
    },
    "6107": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2899
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6108": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2932
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3836"
    },
    "6111": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        2888,
        2932
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6112": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2932
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6113": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6115": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2962
      ],
      "op": "AND",
      "path": "14"
    },
    "6116": {
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2962
      ],
      "op": "GT",
      "path": "14"
    },
    "6117": {
      "branch": 163,
      "fn": "CryptidToken.mint",
      "offset": [
        2888,
        2962
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6118": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1847"
    },
    "6121": {
      "branch": 163,
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6122": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6124": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6131": {
      "op": "SHL"
    },
    "6132": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6133": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6136": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6138": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6139": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "ADD",
      "path": "14"
    },
    "6140": {
      "op": "MSTORE"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6145": {
      "op": "DUP3"
    },
    "6146": {
      "op": "ADD"
    },
    "6147": {
      "op": "MSTORE"
    },
    "6148": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20657863656564732072656D61696E696E67207768"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6183": {
      "op": "DUP3"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "MSTORE"
    },
    "6186": {
      "op": "PUSH13",
      "value": "0x6974656C697374206D696E7473"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6205": {
      "op": "DUP3"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6214": {
      "op": "JUMP"
    },
    "6215": {
      "fn": "CryptidToken.mint",
      "offset": [
        2880,
        3012
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6216": {
      "fn": "CryptidToken.mint",
      "offset": [
        3045,
        3055
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 47
    },
    "6217": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6219": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6220": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6221": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6222": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3044
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "6224": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6226": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6227": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6229": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6230": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6231": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6232": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6233": {
      "fn": "CryptidToken.mint",
      "offset": [
        3060,
        3071
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6234": {
      "fn": "CryptidToken.mint",
      "offset": [
        3060,
        3071
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6235": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3056
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6236": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1869"
    },
    "6239": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6240": {
      "fn": "CryptidToken.mint",
      "offset": [
        3060,
        3071
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6241": {
      "fn": "CryptidToken.mint",
      "offset": [
        3060,
        3071
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6242": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6244": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "AND",
      "path": "14"
    },
    "6245": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3836"
    },
    "6248": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3026,
        3071
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6249": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6250": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6251": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "POP",
      "path": "14"
    },
    "6252": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "6255": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "EXP",
      "path": "14"
    },
    "6256": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6257": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6258": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6259": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6261": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "MUL",
      "path": "14"
    },
    "6262": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "NOT",
      "path": "14"
    },
    "6263": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "AND",
      "path": "14"
    },
    "6264": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6265": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6266": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6268": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "AND",
      "path": "14"
    },
    "6269": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "MUL",
      "path": "14"
    },
    "6270": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "OR",
      "path": "14"
    },
    "6271": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6272": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6273": {
      "fn": "CryptidToken.mint",
      "offset": [
        3026,
        3071
      ],
      "op": "POP",
      "path": "14"
    },
    "6274": {
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C42"
    },
    "6277": {
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6278": {
      "fn": "CryptidToken.mint",
      "offset": [
        2749,
        4134
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6279": {
      "fn": "CryptidToken.mint",
      "offset": [
        3090,
        3095
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6281": {
      "fn": "CryptidToken.mint",
      "offset": [
        3090,
        3095
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6282": {
      "fn": "CryptidToken.mint",
      "offset": [
        3090,
        3095
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6284": {
      "fn": "CryptidToken.mint",
      "offset": [
        3090,
        3095
      ],
      "op": "AND",
      "path": "14"
    },
    "6285": {
      "fn": "CryptidToken.mint",
      "offset": [
        3099,
        3100
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "6287": {
      "branch": 164,
      "fn": "CryptidToken.mint",
      "offset": [
        3090,
        3100
      ],
      "op": "EQ",
      "path": "14"
    },
    "6288": {
      "fn": "CryptidToken.mint",
      "offset": [
        3086,
        4134
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6289": {
      "fn": "CryptidToken.mint",
      "offset": [
        3086,
        4134
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A6A"
    },
    "6292": {
      "branch": 164,
      "fn": "CryptidToken.mint",
      "offset": [
        3086,
        4134
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6293": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3170
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0x11"
    },
    "6295": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3170
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6296": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18A4"
    },
    "6299": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6300": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6302": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6303": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "AND",
      "path": "14"
    },
    "6304": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3174
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A47"
    },
    "6307": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3158,
        3187
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6308": {
      "fn": "CryptidToken.mint",
      "offset": [
        3158,
        3187
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6309": {
      "fn": "CryptidToken.mint",
      "offset": [
        3145,
        3154
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6310": {
      "fn": "CryptidToken.mint",
      "offset": [
        3145,
        3187
      ],
      "op": "LT",
      "path": "14"
    },
    "6311": {
      "branch": 165,
      "fn": "CryptidToken.mint",
      "offset": [
        3145,
        3187
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6312": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18EB"
    },
    "6315": {
      "branch": 165,
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6316": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6318": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6325": {
      "op": "SHL"
    },
    "6326": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6327": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6330": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6332": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6333": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "ADD",
      "path": "14"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6339": {
      "op": "DUP3"
    },
    "6340": {
      "op": "ADD"
    },
    "6341": {
      "op": "MSTORE"
    },
    "6342": {
      "op": "PUSH21",
      "value": "0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6366": {
      "op": "SHL"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6369": {
      "op": "DUP3"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6378": {
      "op": "JUMP"
    },
    "6379": {
      "fn": "CryptidToken.mint",
      "offset": [
        3137,
        3213
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6380": {
      "fn": "CryptidToken.mint",
      "offset": [
        3248,
        3258
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 49
    },
    "6381": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6383": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6384": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6385": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6386": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3247
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "6388": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6390": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6391": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6393": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6394": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6395": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6396": {
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6398": {
      "branch": 166,
      "fn": "CryptidToken.mint",
      "offset": [
        3235,
        3259
      ],
      "op": "AND",
      "path": "14"
    },
    "6399": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x194A"
    },
    "6402": {
      "branch": 166,
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6403": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6405": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6414": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6417": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6419": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6420": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "ADD",
      "path": "14"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6426": {
      "op": "DUP3"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "op": "MSTORE"
    },
    "6429": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F74206F6E2070726573616C65206C6973740000000000"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6464": {
      "op": "DUP3"
    },
    "6465": {
      "op": "ADD"
    },
    "6466": {
      "op": "MSTORE"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6469": {
      "op": "ADD"
    },
    "6470": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6473": {
      "op": "JUMP"
    },
    "6474": {
      "fn": "CryptidToken.mint",
      "offset": [
        3227,
        3291
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6475": {
      "fn": "CryptidToken.mint",
      "offset": [
        3344,
        3357
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 50,
      "value": "0x10"
    },
    "6477": {
      "fn": "CryptidToken.mint",
      "offset": [
        3344,
        3357
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6478": {
      "fn": "CryptidToken.mint",
      "offset": [
        3329,
        3340
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6479": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6481": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "AND",
      "path": "14"
    },
    "6482": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3326
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1959"
    },
    "6485": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3324
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "6488": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3313,
        3326
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6489": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3326
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6490": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1963"
    },
    "6493": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6494": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6495": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x385B"
    },
    "6498": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3313,
        3340
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6499": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3340
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6500": {
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3357
      ],
      "op": "GT",
      "path": "14"
    },
    "6501": {
      "branch": 167,
      "fn": "CryptidToken.mint",
      "offset": [
        3313,
        3357
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6502": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19BD"
    },
    "6505": {
      "branch": 167,
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6506": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6508": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6515": {
      "op": "SHL"
    },
    "6516": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6517": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6520": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6522": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6523": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "ADD",
      "path": "14"
    },
    "6524": {
      "op": "MSTORE"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6529": {
      "op": "DUP3"
    },
    "6530": {
      "op": "ADD"
    },
    "6531": {
      "op": "MSTORE"
    },
    "6532": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E2065786365656473207072652D73616C6520737570"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "ADD"
    },
    "6569": {
      "op": "MSTORE"
    },
    "6570": {
      "op": "PUSH3",
      "value": "0x706C79"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6576": {
      "op": "SHL"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6579": {
      "op": "DUP3"
    },
    "6580": {
      "op": "ADD"
    },
    "6581": {
      "op": "MSTORE"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6584": {
      "op": "ADD"
    },
    "6585": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6588": {
      "op": "JUMP"
    },
    "6589": {
      "fn": "CryptidToken.mint",
      "offset": [
        3305,
        3397
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6590": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 51,
      "value": "0x12"
    },
    "6592": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6593": {
      "fn": "CryptidToken.mint",
      "offset": [
        3450,
        3460
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6594": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6596": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6597": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6598": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6599": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "6601": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6603": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6604": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6606": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6607": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6608": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6609": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6611": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6612": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6613": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "AND",
      "path": "14"
    },
    "6614": {
      "fn": "CryptidToken.mint",
      "offset": [
        3465,
        3479
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6615": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3461
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19E1"
    },
    "6618": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3461
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6619": {
      "fn": "CryptidToken.mint",
      "offset": [
        3433,
        3461
      ],
      "op": "AND",
      "path": "14"
    },
    "6620": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3430
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6621": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3461
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3836"
    },
    "6624": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3419,
        3461
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6625": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3461
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6626": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3479
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6628": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3479
      ],
      "op": "AND",
      "path": "14"
    },
    "6629": {
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3479
      ],
      "op": "GT",
      "path": "14"
    },
    "6630": {
      "branch": 168,
      "fn": "CryptidToken.mint",
      "offset": [
        3419,
        3479
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6631": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A48"
    },
    "6634": {
      "branch": 168,
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6635": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6637": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6644": {
      "op": "SHL"
    },
    "6645": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6646": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6649": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6651": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6652": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "ADD",
      "path": "14"
    },
    "6653": {
      "op": "MSTORE"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "MSTORE"
    },
    "6661": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E2065786365656473206D617820616C6C6F77656420"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6696": {
      "op": "DUP3"
    },
    "6697": {
      "op": "ADD"
    },
    "6698": {
      "op": "MSTORE"
    },
    "6699": {
      "op": "PUSH13",
      "value": "0x70726573616C65206D696E7473"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6715": {
      "op": "SHL"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6723": {
      "op": "ADD"
    },
    "6724": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6727": {
      "op": "JUMP"
    },
    "6728": {
      "fn": "CryptidToken.mint",
      "offset": [
        3411,
        3529
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6729": {
      "fn": "CryptidToken.mint",
      "offset": [
        3566,
        3576
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 52
    },
    "6730": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6732": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6733": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6734": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6735": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3565
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "6737": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6739": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6740": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6742": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6743": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6744": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6745": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6746": {
      "fn": "CryptidToken.mint",
      "offset": [
        3581,
        3592
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6747": {
      "fn": "CryptidToken.mint",
      "offset": [
        3581,
        3592
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6748": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6749": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1869"
    },
    "6752": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6753": {
      "fn": "CryptidToken.mint",
      "offset": [
        3581,
        3592
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6754": {
      "fn": "CryptidToken.mint",
      "offset": [
        3581,
        3592
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6755": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6757": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "AND",
      "path": "14"
    },
    "6758": {
      "fn": "CryptidToken.mint",
      "offset": [
        3549,
        3592
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3836"
    },
    "6761": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3549,
        3592
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6762": {
      "fn": "CryptidToken.mint",
      "offset": [
        3086,
        4134
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6763": {
      "fn": "CryptidToken.mint",
      "offset": [
        3611,
        3616
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6765": {
      "fn": "CryptidToken.mint",
      "offset": [
        3611,
        3616
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6766": {
      "fn": "CryptidToken.mint",
      "offset": [
        3611,
        3616
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6768": {
      "fn": "CryptidToken.mint",
      "offset": [
        3611,
        3616
      ],
      "op": "AND",
      "path": "14"
    },
    "6769": {
      "fn": "CryptidToken.mint",
      "offset": [
        3620,
        3621
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6771": {
      "branch": 169,
      "fn": "CryptidToken.mint",
      "offset": [
        3611,
        3621
      ],
      "op": "EQ",
      "path": "14"
    },
    "6772": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6773": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B76"
    },
    "6776": {
      "branch": 169,
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6777": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6779": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6786": {
      "op": "SHL"
    },
    "6787": {
      "op": "SUB"
    },
    "6788": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6791": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6792": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6793": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6795": {
      "fn": "CryptidToken.mint",
      "offset": [
        3677,
        3687
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 53
    },
    "6796": {
      "branch": 170,
      "fn": "CryptidToken.mint",
      "offset": [
        3666,
        3687
      ],
      "op": "EQ",
      "path": "14"
    },
    "6797": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AE2"
    },
    "6800": {
      "branch": 170,
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6801": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6803": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6810": {
      "op": "SHL"
    },
    "6811": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6812": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6815": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6817": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6818": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "ADD",
      "path": "14"
    },
    "6819": {
      "op": "MSTORE"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6824": {
      "op": "DUP3"
    },
    "6825": {
      "op": "ADD"
    },
    "6826": {
      "op": "MSTORE"
    },
    "6827": {
      "op": "PUSH32",
      "value": "0x4F6E6C79204F776E65722063616E206D696E7420617420746869732073746167"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6862": {
      "op": "DUP3"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "MSTORE"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6869": {
      "op": "SHL"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6872": {
      "op": "DUP3"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "MSTORE"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6877": {
      "op": "ADD"
    },
    "6878": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6881": {
      "op": "JUMP"
    },
    "6882": {
      "fn": "CryptidToken.mint",
      "offset": [
        3658,
        3725
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6883": {
      "fn": "CryptidToken.mint",
      "offset": [
        3778,
        3792
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 54,
      "value": "0x14"
    },
    "6885": {
      "fn": "CryptidToken.mint",
      "offset": [
        3778,
        3792
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6886": {
      "fn": "CryptidToken.mint",
      "offset": [
        3761,
        3774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "6888": {
      "fn": "CryptidToken.mint",
      "offset": [
        3761,
        3774
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6889": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF5"
    },
    "6892": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6893": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6895": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6896": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "AND",
      "path": "14"
    },
    "6897": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x385B"
    },
    "6900": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3747,
        3774
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6901": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3774
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6902": {
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3792
      ],
      "op": "GT",
      "path": "14"
    },
    "6903": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        3747,
        3792
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6904": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B56"
    },
    "6907": {
      "branch": 171,
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6908": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6910": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6917": {
      "op": "SHL"
    },
    "6918": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6919": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6922": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "6924": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6925": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "ADD",
      "path": "14"
    },
    "6926": {
      "op": "MSTORE"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "ADD"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6969": {
      "op": "DUP3"
    },
    "6970": {
      "op": "ADD"
    },
    "6971": {
      "op": "MSTORE"
    },
    "6972": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6985": {
      "op": "SHL"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6988": {
      "op": "DUP3"
    },
    "6989": {
      "op": "ADD"
    },
    "6990": {
      "op": "MSTORE"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6993": {
      "op": "ADD"
    },
    "6994": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "6997": {
      "op": "JUMP"
    },
    "6998": {
      "fn": "CryptidToken.mint",
      "offset": [
        3739,
        3839
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6999": {
      "fn": "CryptidToken.mint",
      "offset": [
        3876,
        3887
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 55
    },
    "7000": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7002": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "AND",
      "path": "14"
    },
    "7003": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3872
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "7005": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3872
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7007": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7008": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7009": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7010": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B6B"
    },
    "7013": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7014": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7015": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x385B"
    },
    "7018": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3859,
        3887
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7019": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7020": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7021": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7022": {
      "fn": "CryptidToken.mint",
      "offset": [
        3859,
        3887
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7023": {
      "op": "POP"
    },
    "7024": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C42"
    },
    "7027": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7028": {
      "op": "POP"
    },
    "7029": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7030": {
      "fn": "CryptidToken.mint",
      "offset": [
        3607,
        4134
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7031": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3969
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0x16"
    },
    "7033": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3969
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7034": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B86"
    },
    "7037": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7038": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7040": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7041": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "AND",
      "path": "14"
    },
    "7042": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3973
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A47"
    },
    "7045": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        3960,
        3986
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7046": {
      "fn": "CryptidToken.mint",
      "offset": [
        3960,
        3986
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7047": {
      "fn": "CryptidToken.mint",
      "offset": [
        3947,
        3956
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7048": {
      "fn": "CryptidToken.mint",
      "offset": [
        3947,
        3986
      ],
      "op": "LT",
      "path": "14"
    },
    "7049": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        3947,
        3986
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7050": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BCD"
    },
    "7053": {
      "branch": 172,
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7054": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7056": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7063": {
      "op": "SHL"
    },
    "7064": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7065": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7068": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7070": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7071": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "ADD",
      "path": "14"
    },
    "7072": {
      "op": "MSTORE"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7077": {
      "op": "DUP3"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "op": "MSTORE"
    },
    "7080": {
      "op": "PUSH21",
      "value": "0x139BDD08195B9BDD59DA08195D1A195C881CD95B9D"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7104": {
      "op": "SHL"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7107": {
      "op": "DUP3"
    },
    "7108": {
      "op": "ADD"
    },
    "7109": {
      "op": "MSTORE"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7112": {
      "op": "ADD"
    },
    "7113": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "7116": {
      "op": "JUMP"
    },
    "7117": {
      "fn": "CryptidToken.mint",
      "offset": [
        3939,
        4012
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7118": {
      "fn": "CryptidToken.mint",
      "offset": [
        4066,
        4081
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 57,
      "value": "0x17"
    },
    "7120": {
      "fn": "CryptidToken.mint",
      "offset": [
        4066,
        4081
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7121": {
      "fn": "CryptidToken.mint",
      "offset": [
        4051,
        4062
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7122": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7124": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "AND",
      "path": "14"
    },
    "7125": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4047
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BDC"
    },
    "7128": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4045
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "7131": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4034,
        4047
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7132": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4047
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7133": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BE6"
    },
    "7136": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7137": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7138": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x385B"
    },
    "7141": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4034,
        4062
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7142": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4062
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7143": {
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4081
      ],
      "op": "GT",
      "path": "14"
    },
    "7144": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        4034,
        4081
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7145": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C42"
    },
    "7148": {
      "branch": 173,
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7149": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7151": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7152": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7158": {
      "op": "SHL"
    },
    "7159": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7160": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7163": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7165": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7166": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "ADD",
      "path": "14"
    },
    "7167": {
      "op": "MSTORE"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "MSTORE"
    },
    "7175": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7210": {
      "op": "DUP3"
    },
    "7211": {
      "op": "ADD"
    },
    "7212": {
      "op": "MSTORE"
    },
    "7213": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7224": {
      "op": "DUP3"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "op": "MSTORE"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7229": {
      "op": "ADD"
    },
    "7230": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "7233": {
      "op": "JUMP"
    },
    "7234": {
      "fn": "CryptidToken.mint",
      "offset": [
        4026,
        4123
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7235": {
      "fn": "CryptidToken.mint",
      "offset": [
        4160,
        4161
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7237": {
      "fn": "CryptidToken.mint",
      "offset": [
        4143,
        4300
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7238": {
      "fn": "CryptidToken.mint",
      "offset": [
        4168,
        4179
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7239": {
      "fn": "CryptidToken.mint",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7241": {
      "fn": "CryptidToken.mint",
      "offset": [
        4163,
        4179
      ],
      "op": "AND",
      "path": "14"
    },
    "7242": {
      "fn": "CryptidToken.mint",
      "offset": [
        4163,
        4164
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7243": {
      "fn": "CryptidToken.mint",
      "offset": [
        4163,
        4179
      ],
      "op": "GT",
      "path": "14"
    },
    "7244": {
      "fn": "CryptidToken.mint",
      "offset": [
        4143,
        4300
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "7247": {
      "fn": "CryptidToken.mint",
      "offset": [
        4143,
        4300
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7248": {
      "fn": "CryptidToken.mint",
      "offset": [
        4200,
        4248
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 58,
      "value": "0x1C61"
    },
    "7251": {
      "fn": "CryptidToken.mint",
      "offset": [
        4210,
        4220
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7252": {
      "fn": "CryptidToken.mint",
      "offset": [
        4222,
        4247
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C5C"
    },
    "7255": {
      "fn": "CryptidToken.mint",
      "offset": [
        4222,
        4237
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "7257": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7258": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7259": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7260": {
      "fn": "CryptidToken.mint",
      "offset": [
        4222,
        4247
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7261": {
      "fn": "CryptidToken.mint",
      "offset": [
        4200,
        4209
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2BA0"
    },
    "7264": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4200,
        4248
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7265": {
      "fn": "CryptidToken.mint",
      "offset": [
        4200,
        4248
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7266": {
      "fn": "CryptidToken.mint",
      "offset": [
        4262,
        4289
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 59,
      "value": "0x1C6F"
    },
    "7269": {
      "fn": "CryptidToken.mint",
      "offset": [
        4262,
        4277
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "7271": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 60
    },
    "7272": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7273": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7275": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "7276": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7277": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "7278": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7279": {
      "fn": "CryptidToken.mint",
      "offset": [
        4262,
        4289
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7280": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 61
    },
    "7281": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C79"
    },
    "7284": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7285": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3756"
    },
    "7288": {
      "fn": "CryptidToken.mint",
      "jump": "i",
      "offset": [
        4181,
        4184
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7289": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7290": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7291": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "POP",
      "path": "14"
    },
    "7292": {
      "fn": "CryptidToken.mint",
      "offset": [
        4181,
        4184
      ],
      "op": "POP",
      "path": "14"
    },
    "7293": {
      "fn": "CryptidToken.mint",
      "offset": [
        4143,
        4300
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C45"
    },
    "7296": {
      "fn": "CryptidToken.mint",
      "offset": [
        4143,
        4300
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7297": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7298": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7306": {
      "op": "SHL"
    },
    "7307": {
      "op": "SUB"
    },
    "7308": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 62
    },
    "7309": {
      "branch": 193,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "2"
    },
    "7310": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEC"
    },
    "7313": {
      "branch": 193,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7314": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7323": {
      "op": "SHL"
    },
    "7324": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7325": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7328": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7330": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7331": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "2"
    },
    "7332": {
      "op": "MSTORE"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7337": {
      "op": "DUP3"
    },
    "7338": {
      "op": "ADD"
    },
    "7339": {
      "op": "MSTORE"
    },
    "7340": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7375": {
      "op": "DUP3"
    },
    "7376": {
      "op": "ADD"
    },
    "7377": {
      "op": "MSTORE"
    },
    "7378": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7394": {
      "op": "DUP3"
    },
    "7395": {
      "op": "ADD"
    },
    "7396": {
      "op": "MSTORE"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7399": {
      "op": "ADD"
    },
    "7400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "7403": {
      "op": "JUMP"
    },
    "7404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7405": {
      "op": "POP"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "op": "SUB"
    },
    "7414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "2",
      "statement": 63
    },
    "7415": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7422": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7427": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7428": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7429": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7430": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7431": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7432": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7433": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7435": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7442": {
      "op": "SHL"
    },
    "7443": {
      "op": "SUB"
    },
    "7444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7448": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7449": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7450": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7451": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7452": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7453": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D38"
    },
    "7456": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7457": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7466": {
      "op": "SHL"
    },
    "7467": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7469": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "7475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "7479": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7481": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x1355"
    },
    "7484": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BBA"
    },
    "7489": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7490": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7491": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7493": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7500": {
      "op": "SHL"
    },
    "7501": {
      "op": "SUB"
    },
    "7502": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7505": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7506": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7507": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7508": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7509": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7510": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7511": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D72"
    },
    "7514": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7517": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7524": {
      "op": "SHL"
    },
    "7525": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "7533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7534": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "7537": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7539": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7180,
        7189
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 65,
      "value": "0x16"
    },
    "7541": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7180,
        7205
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7542": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        7102,
        7212
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7543": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7544": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7546": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7553": {
      "op": "SHL"
    },
    "7554": {
      "op": "SUB"
    },
    "7555": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7558": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7559": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7560": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7561": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7562": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7563": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7564": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA7"
    },
    "7567": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7568": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7577": {
      "op": "SHL"
    },
    "7578": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7582": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "7586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7587": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "7590": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7592": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7790,
        7791
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 66,
      "value": "0x0"
    },
    "7594": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7765,
        7779
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7596": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7597": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7598": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DB6"
    },
    "7601": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7602": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "7605": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7759,
        7787
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7606": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7607": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7608": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7787
      ],
      "op": "POP",
      "path": "14"
    },
    "7609": {
      "branch": 174,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7759,
        7791
      ],
      "op": "GT",
      "path": "14"
    },
    "7610": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E05"
    },
    "7613": {
      "branch": 174,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7614": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7616": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7623": {
      "op": "SHL"
    },
    "7624": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7625": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7628": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7630": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7631": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "ADD",
      "path": "14"
    },
    "7632": {
      "op": "DUP2"
    },
    "7633": {
      "op": "SWAP1"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7637": {
      "op": "DUP3"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "MSTORE"
    },
    "7640": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7675": {
      "op": "DUP3"
    },
    "7676": {
      "op": "ADD"
    },
    "7677": {
      "op": "MSTORE"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7680": {
      "op": "ADD"
    },
    "7681": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "7684": {
      "op": "JUMP"
    },
    "7685": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7751,
        7828
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7686": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 67,
      "value": "0xB"
    },
    "7688": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7689": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "7694": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7695": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "DIV",
      "path": "14"
    },
    "7696": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7698": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7847,
        7867
      ],
      "op": "AND",
      "path": "14"
    },
    "7699": {
      "branch": 175,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7846,
        7867
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7700": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E6A"
    },
    "7703": {
      "branch": 175,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7704": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7706": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7713": {
      "op": "SHL"
    },
    "7714": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7715": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7718": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7720": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7721": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "ADD",
      "path": "14"
    },
    "7722": {
      "op": "MSTORE"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7727": {
      "op": "DUP3"
    },
    "7728": {
      "op": "ADD"
    },
    "7729": {
      "op": "MSTORE"
    },
    "7730": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7765": {
      "op": "DUP3"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "MSTORE"
    },
    "7768": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7773": {
      "op": "SHL"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7776": {
      "op": "DUP3"
    },
    "7777": {
      "op": "ADD"
    },
    "7778": {
      "op": "MSTORE"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7781": {
      "op": "ADD"
    },
    "7782": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "7785": {
      "op": "JUMP"
    },
    "7786": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7838,
        7906
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7787": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7936
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 68,
      "value": "0xB"
    },
    "7789": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7790": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7791": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "7796": {
      "op": "NOT"
    },
    "7797": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "AND",
      "path": "14"
    },
    "7798": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "7803": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "OR",
      "path": "14"
    },
    "7804": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7805": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7916,
        7943
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7806": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        7692,
        7950
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7807": {
      "fn": "CryptidToken.pause",
      "offset": [
        4334,
        4393
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7808": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7810": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7817": {
      "op": "SHL"
    },
    "7818": {
      "op": "SUB"
    },
    "7819": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7823": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7824": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7825": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7826": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7827": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7828": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EAF"
    },
    "7831": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7832": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7841": {
      "op": "SHL"
    },
    "7842": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7846": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7847": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "7850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7851": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "7854": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7856": {
      "fn": "CryptidToken.pause",
      "offset": [
        4378,
        4386
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 69,
      "value": "0x1355"
    },
    "7859": {
      "fn": "CryptidToken.pause",
      "offset": [
        4378,
        4384
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C14"
    },
    "7862": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4378,
        4386
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7863": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5144,
        5395
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7866": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7873": {
      "op": "SHL"
    },
    "7874": {
      "op": "SUB"
    },
    "7875": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7878": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7879": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7881": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7882": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7883": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7884": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE7"
    },
    "7887": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7897": {
      "op": "SHL"
    },
    "7898": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7902": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7903": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "7906": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "7910": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7912": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 70,
      "value": "0xB"
    },
    "7914": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7915": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5262,
        5263
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "7917": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7919": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7920": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7921": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5259
      ],
      "op": "AND",
      "path": "14"
    },
    "7922": {
      "branch": 176,
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5254,
        5263
      ],
      "op": "LT",
      "path": "14"
    },
    "7923": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F3E"
    },
    "7926": {
      "branch": 176,
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7927": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7929": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7936": {
      "op": "SHL"
    },
    "7937": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7938": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7941": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7943": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7944": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "ADD",
      "path": "14"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "MSTORE"
    },
    "7953": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C6520697320636F6E636C756465642E00000000"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7988": {
      "op": "DUP3"
    },
    "7989": {
      "op": "ADD"
    },
    "7990": {
      "op": "MSTORE"
    },
    "7991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7993": {
      "op": "ADD"
    },
    "7994": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "7997": {
      "op": "JUMP"
    },
    "7998": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5246,
        5296
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7999": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5310,
        5319
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8001": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8002": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5324,
        5330
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8003": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5324,
        5337
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8004": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5322,
        5323
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8005": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5322,
        5337
      ],
      "op": "LT",
      "path": "14"
    },
    "8006": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8007": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDB4"
    },
    "8010": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8011": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5385
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 71
    },
    "8012": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5386,
        5387
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8013": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8014": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8015": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8016": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "LT",
      "path": "14"
    },
    "8017": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5C"
    },
    "8020": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8021": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5C"
    },
    "8024": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3740"
    },
    "8027": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5379,
        5388
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8028": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8029": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8031": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "MUL",
      "path": "14"
    },
    "8032": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8034": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "ADD",
      "path": "14"
    },
    "8035": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "ADD",
      "path": "14"
    },
    "8036": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5379,
        5388
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8037": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5365
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "8039": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8041": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5372
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8042": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5373,
        5374
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8043": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8044": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8045": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8046": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "LT",
      "path": "14"
    },
    "8047": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F7A"
    },
    "8050": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8051": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F7A"
    },
    "8054": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3740"
    },
    "8057": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5366,
        5375
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8058": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8059": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8061": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "MUL",
      "path": "14"
    },
    "8062": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8064": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "ADD",
      "path": "14"
    },
    "8065": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "ADD",
      "path": "14"
    },
    "8066": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5366,
        5375
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8073": {
      "op": "SHL"
    },
    "8074": {
      "op": "SUB"
    },
    "8075": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "AND",
      "path": "14"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8082": {
      "op": "SHL"
    },
    "8083": {
      "op": "SUB"
    },
    "8084": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "AND",
      "path": "14"
    },
    "8085": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8086": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8087": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8089": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "ADD",
      "path": "14"
    },
    "8090": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8091": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8092": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8093": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8095": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "ADD",
      "path": "14"
    },
    "8096": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8098": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8099": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8101": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "8104": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "EXP",
      "path": "14"
    },
    "8105": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8106": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8107": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8108": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8110": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "MUL",
      "path": "14"
    },
    "8111": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "NOT",
      "path": "14"
    },
    "8112": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "AND",
      "path": "14"
    },
    "8113": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8114": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8115": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8117": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "AND",
      "path": "14"
    },
    "8118": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "MUL",
      "path": "14"
    },
    "8119": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "OR",
      "path": "14"
    },
    "8120": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8121": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8122": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5351,
        5388
      ],
      "op": "POP",
      "path": "14"
    },
    "8123": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 72
    },
    "8124": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8125": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FC5"
    },
    "8128": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8129": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3756"
    },
    "8132": {
      "fn": "CryptidToken.setWhitelistUsers",
      "jump": "i",
      "offset": [
        5338,
        5341
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8133": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8134": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8135": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "POP",
      "path": "14"
    },
    "8136": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5338,
        5341
      ],
      "op": "POP",
      "path": "14"
    },
    "8137": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F41"
    },
    "8140": {
      "fn": "CryptidToken.setWhitelistUsers",
      "offset": [
        5306,
        5388
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8141": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8142": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8144": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x1"
    },
    "8146": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8147": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8148": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB86"
    },
    "8151": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8152": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A3"
    },
    "8155": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8156": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8157": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 74,
      "value": "0xE56"
    },
    "8160": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8161": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8162": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8163": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C6C"
    },
    "8166": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8167": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4468,
        5138
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8168": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8170": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8177": {
      "op": "SHL"
    },
    "8178": {
      "op": "SUB"
    },
    "8179": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8182": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8184": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8185": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8186": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8187": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8188": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2017"
    },
    "8191": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "8210": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8211": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "8214": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8215": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8216": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 75,
      "value": "0xB"
    },
    "8218": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8219": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "8224": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8225": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "DIV",
      "path": "14"
    },
    "8226": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8228": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4579
      ],
      "op": "AND",
      "path": "14"
    },
    "8229": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4587
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8230": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4587
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8231": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4583,
        4587
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8233": {
      "branch": 177,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4559,
        4587
      ],
      "op": "EQ",
      "path": "14"
    },
    "8234": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2045"
    },
    "8237": {
      "branch": 177,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8238": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8240": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8247": {
      "op": "SHL"
    },
    "8248": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8249": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8250": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8252": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "ADD",
      "path": "14"
    },
    "8253": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8256": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8257": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3873"
    },
    "8260": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4551,
        4648
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8261": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4551,
        4648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8262": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 76,
      "value": "0xB"
    },
    "8264": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8265": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4674,
        4675
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "8267": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8269": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8270": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8271": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4671
      ],
      "op": "AND",
      "path": "14"
    },
    "8272": {
      "branch": 178,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4666,
        4675
      ],
      "op": "LT",
      "path": "14"
    },
    "8273": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2093"
    },
    "8276": {
      "branch": 178,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8279": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8286": {
      "op": "SHL"
    },
    "8287": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8288": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8291": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8293": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8294": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "ADD",
      "path": "14"
    },
    "8295": {
      "op": "MSTORE"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8300": {
      "op": "DUP3"
    },
    "8301": {
      "op": "ADD"
    },
    "8302": {
      "op": "MSTORE"
    },
    "8303": {
      "op": "PUSH20",
      "value": "0x2830B9BA103BB434BA32B634B9BA1039B0B63297"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8326": {
      "op": "SHL"
    },
    "8327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8329": {
      "op": "DUP3"
    },
    "8330": {
      "op": "ADD"
    },
    "8331": {
      "op": "MSTORE"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8334": {
      "op": "ADD"
    },
    "8335": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8338": {
      "op": "JUMP"
    },
    "8339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4658,
        4700
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8340": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 77,
      "value": "0xB"
    },
    "8342": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8343": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "8348": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8349": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8350": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "DIV",
      "path": "14"
    },
    "8351": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8352": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4733,
        4745
      ],
      "op": "AND",
      "path": "14"
    },
    "8353": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4718,
        4745
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8354": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4718,
        4745
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8355": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4718,
        4745
      ],
      "op": "AND",
      "path": "14"
    },
    "8356": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4718,
        4745
      ],
      "op": "GT",
      "path": "14"
    },
    "8357": {
      "branch": 179,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4718,
        4745
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8358": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C1"
    },
    "8361": {
      "branch": 179,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8362": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8364": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8371": {
      "op": "SHL"
    },
    "8372": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8373": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8374": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8376": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "ADD",
      "path": "14"
    },
    "8377": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8380": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8381": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x37EC"
    },
    "8384": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4710,
        4792
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8385": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4710,
        4792
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8386": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4824,
        4825
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 78,
      "value": "0x0"
    },
    "8388": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4810,
        4821
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8389": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4810,
        4825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8391": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4810,
        4825
      ],
      "op": "AND",
      "path": "14"
    },
    "8392": {
      "branch": 180,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4810,
        4825
      ],
      "op": "GT",
      "path": "14"
    },
    "8393": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2122"
    },
    "8396": {
      "branch": 180,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8397": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8399": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8406": {
      "op": "SHL"
    },
    "8407": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8408": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8411": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8413": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8414": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "ADD",
      "path": "14"
    },
    "8415": {
      "op": "MSTORE"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8420": {
      "op": "DUP3"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "op": "MSTORE"
    },
    "8423": {
      "op": "PUSH32",
      "value": "0x41697264726F7020616D6F756E74206D75737420626520677265617465722074"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8458": {
      "op": "DUP3"
    },
    "8459": {
      "op": "ADD"
    },
    "8460": {
      "op": "MSTORE"
    },
    "8461": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "8469": {
      "op": "SHL"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8472": {
      "op": "DUP3"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "MSTORE"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8477": {
      "op": "ADD"
    },
    "8478": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8481": {
      "op": "JUMP"
    },
    "8482": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4802,
        4867
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8483": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4928
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 79,
      "value": "0x10"
    },
    "8485": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4915,
        4928
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8486": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4900,
        4911
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8487": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8489": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "AND",
      "path": "14"
    },
    "8490": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4898
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2131"
    },
    "8493": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4896
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "8496": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4885,
        4898
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8497": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4898
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8498": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213B"
    },
    "8501": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8502": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8503": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x385B"
    },
    "8506": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        4885,
        4911
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8507": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4911
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8508": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4928
      ],
      "op": "GT",
      "path": "14"
    },
    "8509": {
      "branch": 181,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4885,
        4928
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8510": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2199"
    },
    "8513": {
      "branch": 181,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8514": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8516": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8523": {
      "op": "SHL"
    },
    "8524": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8525": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8528": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8530": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8531": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "ADD",
      "path": "14"
    },
    "8532": {
      "op": "MSTORE"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8537": {
      "op": "DUP3"
    },
    "8538": {
      "op": "ADD"
    },
    "8539": {
      "op": "MSTORE"
    },
    "8540": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642070726573616C6520"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8575": {
      "op": "DUP3"
    },
    "8576": {
      "op": "ADD"
    },
    "8577": {
      "op": "MSTORE"
    },
    "8578": {
      "op": "PUSH7",
      "value": "0x39BAB838363C97"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "8588": {
      "op": "SHL"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8591": {
      "op": "DUP3"
    },
    "8592": {
      "op": "ADD"
    },
    "8593": {
      "op": "MSTORE"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8600": {
      "op": "JUMP"
    },
    "8601": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4877,
        4972
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8602": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4999,
        5000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8604": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4982,
        5132
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8605": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5007,
        5018
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8606": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5002,
        5018
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8608": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5002,
        5018
      ],
      "op": "AND",
      "path": "14"
    },
    "8609": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5002,
        5003
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8610": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5002,
        5018
      ],
      "op": "GT",
      "path": "14"
    },
    "8611": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4982,
        5132
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDB4"
    },
    "8614": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4982,
        5132
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8615": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5039,
        5080
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 80,
      "value": "0x21B3"
    },
    "8618": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5049,
        5052
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8619": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5054,
        5079
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C5C"
    },
    "8622": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5054,
        5069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "8624": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8625": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8626": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8627": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5039,
        5080
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8628": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5094,
        5121
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 81,
      "value": "0x21C1"
    },
    "8631": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5094,
        5109
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "8633": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "8634": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8635": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "8637": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "8638": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8639": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8640": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8641": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5094,
        5121
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8642": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 82
    },
    "8643": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21CB"
    },
    "8646": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8647": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3756"
    },
    "8650": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        5020,
        5023
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8651": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8652": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8653": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "POP",
      "path": "14"
    },
    "8654": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        5020,
        5023
      ],
      "op": "POP",
      "path": "14"
    },
    "8655": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4982,
        5132
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x219C"
    },
    "8658": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        4982,
        5132
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8659": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8660": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 83,
      "value": "0x21DD"
    },
    "8663": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8664": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8665": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A5"
    },
    "8668": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8669": {
      "branch": 194,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8670": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F9"
    },
    "8673": {
      "branch": 194,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8676": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8683": {
      "op": "SHL"
    },
    "8684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8686": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8688": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "2"
    },
    "8689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "8692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3771"
    },
    "8696": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8698": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 84,
      "value": "0x2205"
    },
    "8701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3B"
    },
    "8708": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8709": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8710": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "8714": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8715": {
      "offset": [
        705,
        742
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "8718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x154D"
    },
    "8723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        705,
        742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "8727": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        705,
        742
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8728": {
      "offset": [
        639,
        667
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "8731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x154D"
    },
    "8736": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8737": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        639,
        667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "8740": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        639,
        667
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8741": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8742": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8744": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8745": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8746": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8747": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8749": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8751": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8752": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8754": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8755": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8756": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8757": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8898,
        8911
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8759": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8898,
        8911
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8766": {
      "op": "SHL"
    },
    "8767": {
      "op": "SUB"
    },
    "8768": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "8769": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 85,
      "value": "0x22A4"
    },
    "8772": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8773": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8775": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8782": {
      "op": "SHL"
    },
    "8783": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8784": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8787": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8789": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8790": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "ADD",
      "path": "14"
    },
    "8791": {
      "op": "MSTORE"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8796": {
      "op": "DUP3"
    },
    "8797": {
      "op": "ADD"
    },
    "8798": {
      "op": "MSTORE"
    },
    "8799": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8834": {
      "op": "DUP3"
    },
    "8835": {
      "op": "ADD"
    },
    "8836": {
      "op": "MSTORE"
    },
    "8837": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8855": {
      "op": "SHL"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8858": {
      "op": "DUP3"
    },
    "8859": {
      "op": "ADD"
    },
    "8860": {
      "op": "MSTORE"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8863": {
      "op": "ADD"
    },
    "8864": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "8867": {
      "op": "JUMP"
    },
    "8868": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8923,
        8999
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8869": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9040,
        9047
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 86,
      "value": "0x9"
    },
    "8871": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9049,
        9067
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22AF"
    },
    "8874": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9049,
        9056
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8875": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9049,
        9065
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D6E"
    },
    "8878": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9049,
        9067
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8879": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9049,
        9067
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8880": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9069,
        9082
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "8882": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8884": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8885": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8887": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "ADD",
      "path": "14"
    },
    "8888": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22C3"
    },
    "8891": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8892": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8893": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8894": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8895": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x396A"
    },
    "8898": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9023,
        9083
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8899": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8900": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8902": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8903": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8905": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8906": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8907": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SUB",
      "path": "14"
    },
    "8908": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SUB",
      "path": "14"
    },
    "8909": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8910": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8911": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8912": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8914": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9023,
        9083
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8915": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9009,
        9084
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8916": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9009,
        9084
      ],
      "op": "POP",
      "path": "14"
    },
    "8917": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8918": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8919": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8825,
        9104
      ],
      "op": "POP",
      "path": "14"
    },
    "8920": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        8825,
        9104
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8921": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8556,
        8707
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8922": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8599,
        8606
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8924": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8641,
        8642
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 87
    },
    "8925": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8625,
        8638
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22E4"
    },
    "8928": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8625,
        8636
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "8931": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8625,
        8638
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8932": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8625,
        8638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8933": {
      "branch": 182,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8625,
        8642
      ],
      "op": "GT",
      "path": "14"
    },
    "8934": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x232A"
    },
    "8937": {
      "branch": 182,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8938": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8940": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8947": {
      "op": "SHL"
    },
    "8948": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8949": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8952": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8954": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8955": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "ADD",
      "path": "14"
    },
    "8956": {
      "op": "MSTORE"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8961": {
      "op": "DUP3"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "op": "MSTORE"
    },
    "8964": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "8989": {
      "op": "SHL"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8992": {
      "op": "DUP3"
    },
    "8993": {
      "op": "ADD"
    },
    "8994": {
      "op": "MSTORE"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8997": {
      "op": "ADD"
    },
    "8998": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9001": {
      "op": "JUMP"
    },
    "9002": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8617,
        8669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9003": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8686,
        8699
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 88,
      "value": "0xE71"
    },
    "9006": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8686,
        8697
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "9009": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        8686,
        8699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9010": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6795,
        6921
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9011": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9013": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9020": {
      "op": "SHL"
    },
    "9021": {
      "op": "SUB"
    },
    "9022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9025": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9026": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9027": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9028": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9029": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9030": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9031": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2362"
    },
    "9034": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9044": {
      "op": "SHL"
    },
    "9045": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9046": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9057": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9059": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 89
    },
    "9060": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9061": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE56"
    },
    "9064": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9065": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6894
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "9067": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6894
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9068": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9070": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9071": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "ADD",
      "path": "14"
    },
    "9072": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9073": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6881,
        6914
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310E"
    },
    "9076": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6881,
        6914
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9077": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9110,
        9220
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9078": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9156,
        9163
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9080": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9200,
        9213
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 90,
      "value": "0x237F"
    },
    "9083": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9200,
        9211
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5A"
    },
    "9086": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9200,
        9213
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9087": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9200,
        9213
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9088": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9197
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "9090": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9197
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9091": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9213
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE71"
    },
    "9094": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9213
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9095": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9213
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9096": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9182,
        9213
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3729"
    },
    "9099": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9182,
        9213
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9100": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9101": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9103": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9110": {
      "op": "SHL"
    },
    "9111": {
      "op": "SUB"
    },
    "9112": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9115": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9117": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9118": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9119": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9120": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9121": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23BC"
    },
    "9124": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9127": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9134": {
      "op": "SHL"
    },
    "9135": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9137": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9139": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9144": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9147": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9148": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9149": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7638
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 91,
      "value": "0xB"
    },
    "9151": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9152": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9153": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9163": {
      "op": "SHL"
    },
    "9164": {
      "op": "SUB"
    },
    "9165": {
      "op": "NOT"
    },
    "9166": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "AND",
      "path": "14"
    },
    "9167": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "PUSH5",
      "path": "14",
      "value": "0x100000000"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9179": {
      "op": "SHL"
    },
    "9180": {
      "op": "SUB"
    },
    "9181": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "9182": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9183": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "AND",
      "path": "14"
    },
    "9184": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "MUL",
      "path": "14"
    },
    "9185": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "OR",
      "path": "14"
    },
    "9186": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9187": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7625,
        7647
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9188": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7670
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 92,
      "value": "0xC"
    },
    "9190": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9191": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9198": {
      "op": "SHL"
    },
    "9199": {
      "op": "SUB"
    },
    "9200": {
      "op": "NOT"
    },
    "9201": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "AND",
      "path": "14"
    },
    "9202": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9203": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9204": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9205": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "AND",
      "path": "14"
    },
    "9206": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "OR",
      "path": "14"
    },
    "9207": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9208": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7657,
        7679
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9209": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "o",
      "offset": [
        7538,
        7686
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9210": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9213": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9220": {
      "op": "SHL"
    },
    "9221": {
      "op": "SUB"
    },
    "9222": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9225": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9226": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9227": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9228": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9229": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9230": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9231": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242A"
    },
    "9234": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9244": {
      "op": "SHL"
    },
    "9245": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9249": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9257": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9259": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6290,
        6291
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 93,
      "value": "0x0"
    },
    "9261": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6272,
        6279
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "9263": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9264": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9265": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2439"
    },
    "9268": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9269": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A3"
    },
    "9272": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6266,
        6287
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9273": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9274": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9275": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6287
      ],
      "op": "POP",
      "path": "14"
    },
    "9276": {
      "branch": 183,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6266,
        6291
      ],
      "op": "GT",
      "path": "14"
    },
    "9277": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2488"
    },
    "9280": {
      "branch": 183,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9281": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9283": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9290": {
      "op": "SHL"
    },
    "9291": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9292": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9295": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9297": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9298": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "ADD",
      "path": "14"
    },
    "9299": {
      "op": "MSTORE"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9304": {
      "op": "DUP3"
    },
    "9305": {
      "op": "ADD"
    },
    "9306": {
      "op": "MSTORE"
    },
    "9307": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9342": {
      "op": "DUP3"
    },
    "9343": {
      "op": "ADD"
    },
    "9344": {
      "op": "MSTORE"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9347": {
      "op": "ADD"
    },
    "9348": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9351": {
      "op": "JUMP"
    },
    "9352": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6258,
        6319
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9353": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 94,
      "value": "0xB"
    },
    "9355": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9356": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10000"
    },
    "9360": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9361": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "DIV",
      "path": "14"
    },
    "9362": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9364": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6352
      ],
      "op": "AND",
      "path": "14"
    },
    "9365": {
      "branch": 184,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6337,
        6352
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9366": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24E1"
    },
    "9369": {
      "branch": 184,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9370": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9372": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9379": {
      "op": "SHL"
    },
    "9380": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9381": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9384": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9386": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9387": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "ADD",
      "path": "14"
    },
    "9388": {
      "op": "MSTORE"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "9391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9393": {
      "op": "DUP3"
    },
    "9394": {
      "op": "ADD"
    },
    "9395": {
      "op": "MSTORE"
    },
    "9396": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9431": {
      "op": "DUP3"
    },
    "9432": {
      "op": "ADD"
    },
    "9433": {
      "op": "MSTORE"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9440": {
      "op": "JUMP"
    },
    "9441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6329,
        6383
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9442": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6407
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 95,
      "value": "0xB"
    },
    "9444": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9445": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9446": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "9450": {
      "op": "NOT"
    },
    "9451": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "AND",
      "path": "14"
    },
    "9452": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x10000"
    },
    "9456": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "OR",
      "path": "14"
    },
    "9457": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9458": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6393,
        6414
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9459": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        6206,
        6421
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9460": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9461": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9463": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9470": {
      "op": "SHL"
    },
    "9471": {
      "op": "SUB"
    },
    "9472": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9475": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9476": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9478": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9479": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9480": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9481": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2524"
    },
    "9484": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9485": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9487": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9494": {
      "op": "SHL"
    },
    "9495": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9496": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9499": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9500": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9503": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9504": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9507": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9508": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9515": {
      "op": "SHL"
    },
    "9516": {
      "op": "SUB"
    },
    "9517": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 96
    },
    "9518": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "AND",
      "path": "14"
    },
    "9519": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9521": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9522": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9523": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9524": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5950
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "9526": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9528": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9529": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9531": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9532": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9533": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9534": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9536": {
      "branch": 185,
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5938,
        5957
      ],
      "op": "AND",
      "path": "14"
    },
    "9537": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x258C"
    },
    "9540": {
      "branch": 185,
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9541": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9543": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9550": {
      "op": "SHL"
    },
    "9551": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9552": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9555": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9557": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9558": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "ADD",
      "path": "14"
    },
    "9559": {
      "op": "MSTORE"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9564": {
      "op": "DUP3"
    },
    "9565": {
      "op": "ADD"
    },
    "9566": {
      "op": "MSTORE"
    },
    "9567": {
      "op": "PUSH32",
      "value": "0x55736572206E6F74206F6E2070726573616C65206C6973742E00000000000000"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9602": {
      "op": "DUP3"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "MSTORE"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9607": {
      "op": "ADD"
    },
    "9608": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9611": {
      "op": "JUMP"
    },
    "9612": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5930,
        5987
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9619": {
      "op": "SHL"
    },
    "9620": {
      "op": "SUB"
    },
    "9621": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "AND",
      "path": "14",
      "statement": 97
    },
    "9622": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        6019,
        6024
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9624": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9625": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9626": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9627": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6009
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "9629": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9631": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9632": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9634": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9635": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6016
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9636": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6024
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9637": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6024
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9640": {
      "op": "NOT"
    },
    "9641": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6024
      ],
      "op": "AND",
      "path": "14"
    },
    "9642": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6024
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9643": {
      "fn": "CryptidToken.removePresaleUser",
      "offset": [
        5997,
        6024
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9644": {
      "fn": "CryptidToken.removePresaleUser",
      "jump": "o",
      "offset": [
        5861,
        6031
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9645": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9646": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9648": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9655": {
      "op": "SHL"
    },
    "9656": {
      "op": "SUB"
    },
    "9657": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9661": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9662": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9663": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9664": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9665": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9666": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25DD"
    },
    "9669": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9679": {
      "op": "SHL"
    },
    "9680": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9692": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9694": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 98,
      "value": "0xB"
    },
    "9696": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9697": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1000000"
    },
    "9702": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9703": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "DIV",
      "path": "14"
    },
    "9704": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9706": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6503
      ],
      "op": "AND",
      "path": "14"
    },
    "9707": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6511
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9708": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6511
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9709": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6507,
        6511
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9711": {
      "branch": 186,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6483,
        6511
      ],
      "op": "EQ",
      "path": "14"
    },
    "9712": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x260B"
    },
    "9715": {
      "branch": 186,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9716": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9718": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9725": {
      "op": "SHL"
    },
    "9726": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9727": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9728": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9730": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "ADD",
      "path": "14"
    },
    "9731": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9734": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9735": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3873"
    },
    "9738": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6475,
        6572
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9739": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6475,
        6572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9740": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 99,
      "value": "0xB"
    },
    "9742": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9743": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6598,
        6599
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9745": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9747": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9748": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9749": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6595
      ],
      "op": "AND",
      "path": "14"
    },
    "9750": {
      "branch": 187,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6590,
        6599
      ],
      "op": "LT",
      "path": "14"
    },
    "9751": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2662"
    },
    "9754": {
      "branch": 187,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9755": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9757": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9764": {
      "op": "SHL"
    },
    "9765": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9766": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9769": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9771": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9772": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "ADD",
      "path": "14"
    },
    "9773": {
      "op": "MSTORE"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9778": {
      "op": "DUP3"
    },
    "9779": {
      "op": "ADD"
    },
    "9780": {
      "op": "MSTORE"
    },
    "9781": {
      "op": "PUSH32",
      "value": "0x4E6F20737461676573206166746572207075626C69632073616C650000000000"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9816": {
      "op": "DUP3"
    },
    "9817": {
      "op": "ADD"
    },
    "9818": {
      "op": "MSTORE"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9821": {
      "op": "ADD"
    },
    "9822": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC7E"
    },
    "9825": {
      "op": "JUMP"
    },
    "9826": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6582,
        6631
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9827": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6646
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 100,
      "value": "0xB"
    },
    "9829": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9830": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9831": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9833": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "AND",
      "path": "14"
    },
    "9834": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9835": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9837": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2675"
    },
    "9840": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9841": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x399D"
    },
    "9844": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6641,
        6648
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9845": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9846": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9847": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9848": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "9851": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "EXP",
      "path": "14"
    },
    "9852": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9853": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9854": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9855": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9857": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "MUL",
      "path": "14"
    },
    "9858": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "NOT",
      "path": "14"
    },
    "9859": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "AND",
      "path": "14"
    },
    "9860": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9861": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9862": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9864": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "AND",
      "path": "14"
    },
    "9865": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "MUL",
      "path": "14"
    },
    "9866": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "OR",
      "path": "14"
    },
    "9867": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9868": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9869": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "POP",
      "path": "14"
    },
    "9870": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6641,
        6648
      ],
      "op": "POP",
      "path": "14"
    },
    "9871": {
      "fn": "CryptidToken.nextStage",
      "jump": "o",
      "offset": [
        6427,
        6655
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9873": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9875": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9882": {
      "op": "SHL"
    },
    "9883": {
      "op": "SUB"
    },
    "9884": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9888": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9889": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9890": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9891": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9892": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9893": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C0"
    },
    "9896": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "9915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36DE"
    },
    "9919": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9920": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9927": {
      "op": "SHL"
    },
    "9928": {
      "op": "SUB"
    },
    "9929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 101
    },
    "9930": {
      "branch": 202,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2725"
    },
    "9934": {
      "branch": 202,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9944": {
      "op": "SHL"
    },
    "9945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9953": {
      "op": "MSTORE"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9958": {
      "op": "DUP3"
    },
    "9959": {
      "op": "ADD"
    },
    "9960": {
      "op": "MSTORE"
    },
    "9961": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9996": {
      "op": "DUP3"
    },
    "9997": {
      "op": "ADD"
    },
    "9998": {
      "op": "MSTORE"
    },
    "9999": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10006": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10008": {
      "op": "SHL"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10016": {
      "op": "ADD"
    },
    "10017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "10020": {
      "op": "JUMP"
    },
    "10021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 102,
      "value": "0x13E9"
    },
    "10025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BBA"
    },
    "10029": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10030": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10031": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "9"
    },
    "10032": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "10033": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "10035": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "9"
    },
    "10036": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "10037": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "10038": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10039": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10040": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 103,
      "value": "0x0"
    },
    "10042": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10043": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10044": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10045": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10047": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10049": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10050": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10052": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10053": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10054": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10055": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "op": "SUB"
    },
    "10064": {
      "op": "NOT"
    },
    "10065": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10072": {
      "op": "SHL"
    },
    "10073": {
      "op": "SUB"
    },
    "10074": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10075": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "10076": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10077": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10078": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "2"
    },
    "10079": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10080": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10081": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10082": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10083": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10084": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 104,
      "value": "0x276C"
    },
    "10087": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10088": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "10091": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10092": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10099": {
      "op": "SHL"
    },
    "10100": {
      "op": "SUB"
    },
    "10101": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "2"
    },
    "10102": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10135": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10137": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10138": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10140": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10141": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10142": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10143": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "2"
    },
    "10144": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10145": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "2"
    },
    "10146": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "10147": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "10148": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10152": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10153": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10154": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10155": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10157": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10159": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10160": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10162": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10163": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10164": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10171": {
      "op": "SHL"
    },
    "10172": {
      "op": "SUB"
    },
    "10173": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "10174": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 105,
      "value": "0x281E"
    },
    "10177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10187": {
      "op": "SHL"
    },
    "10188": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10189": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "2"
    },
    "10196": {
      "op": "MSTORE"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10201": {
      "op": "DUP3"
    },
    "10202": {
      "op": "ADD"
    },
    "10203": {
      "op": "MSTORE"
    },
    "10204": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10239": {
      "op": "DUP3"
    },
    "10240": {
      "op": "ADD"
    },
    "10241": {
      "op": "MSTORE"
    },
    "10242": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10257": {
      "op": "SHL"
    },
    "10258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10260": {
      "op": "DUP3"
    },
    "10261": {
      "op": "ADD"
    },
    "10262": {
      "op": "MSTORE"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10265": {
      "op": "ADD"
    },
    "10266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "10269": {
      "op": "JUMP"
    },
    "10270": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2829"
    },
    "10276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "10280": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10281": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10282": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "2"
    },
    "10284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 106
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10291": {
      "op": "SHL"
    },
    "10292": {
      "op": "SUB"
    },
    "10293": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10301": {
      "op": "SHL"
    },
    "10302": {
      "op": "SUB"
    },
    "10303": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "10304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "2"
    },
    "10305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2864"
    },
    "10309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "2"
    },
    "10311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10318": {
      "op": "SHL"
    },
    "10319": {
      "op": "SUB"
    },
    "10320": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2859"
    },
    "10324": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10325": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC09"
    },
    "10328": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10329": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10336": {
      "op": "SHL"
    },
    "10337": {
      "op": "SUB"
    },
    "10338": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "10339": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "2"
    },
    "10340": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2894"
    },
    "10345": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10346": {
      "op": "POP"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10353": {
      "op": "SHL"
    },
    "10354": {
      "op": "SUB"
    },
    "10355": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10356": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10357": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "10358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10362": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10365": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10367": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10369": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10372": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "10388": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "op": "POP"
    },
    "10393": {
      "op": "POP"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10396": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10397": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 107
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10404": {
      "op": "SHL"
    },
    "10405": {
      "op": "SUB"
    },
    "10406": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10407": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28AF"
    },
    "10410": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10411": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "10414": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10415": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10422": {
      "op": "SHL"
    },
    "10423": {
      "op": "SUB"
    },
    "10424": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "10425": {
      "branch": 195,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "2"
    },
    "10426": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2917"
    },
    "10429": {
      "branch": 195,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10430": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10432": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10439": {
      "op": "SHL"
    },
    "10440": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10441": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10444": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10446": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10447": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "2"
    },
    "10448": {
      "op": "MSTORE"
    },
    "10449": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10453": {
      "op": "DUP3"
    },
    "10454": {
      "op": "ADD"
    },
    "10455": {
      "op": "MSTORE"
    },
    "10456": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10491": {
      "op": "DUP3"
    },
    "10492": {
      "op": "ADD"
    },
    "10493": {
      "op": "MSTORE"
    },
    "10494": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10504": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10506": {
      "op": "SHL"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10509": {
      "op": "DUP3"
    },
    "10510": {
      "op": "ADD"
    },
    "10511": {
      "op": "MSTORE"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10514": {
      "op": "ADD"
    },
    "10515": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "10518": {
      "op": "JUMP"
    },
    "10519": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10526": {
      "op": "SHL"
    },
    "10527": {
      "op": "SUB"
    },
    "10528": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 108
    },
    "10529": {
      "branch": 196,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "2"
    },
    "10530": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2979"
    },
    "10533": {
      "branch": 196,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10534": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10536": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10543": {
      "op": "SHL"
    },
    "10544": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10545": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10548": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10550": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10551": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "2"
    },
    "10552": {
      "op": "MSTORE"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10555": {
      "op": "DUP1"
    },
    "10556": {
      "op": "DUP3"
    },
    "10557": {
      "op": "ADD"
    },
    "10558": {
      "op": "MSTORE"
    },
    "10559": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10594": {
      "op": "DUP3"
    },
    "10595": {
      "op": "ADD"
    },
    "10596": {
      "op": "MSTORE"
    },
    "10597": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10604": {
      "op": "SHL"
    },
    "10605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10607": {
      "op": "DUP3"
    },
    "10608": {
      "op": "ADD"
    },
    "10609": {
      "op": "MSTORE"
    },
    "10610": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10612": {
      "op": "ADD"
    },
    "10613": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "10616": {
      "op": "JUMP"
    },
    "10617": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10618": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 109,
      "value": "0x2984"
    },
    "10621": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10622": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10623": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10624": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E6C"
    },
    "10627": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10628": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10629": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 110,
      "value": "0x298F"
    },
    "10632": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10634": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10635": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2737"
    },
    "10638": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10639": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10646": {
      "op": "SHL"
    },
    "10647": {
      "op": "SUB"
    },
    "10648": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 111
    },
    "10649": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "2"
    },
    "10650": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10652": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10653": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10654": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10655": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10657": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10659": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10660": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10662": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10663": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10664": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10665": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10666": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10668": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10669": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10670": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29B8"
    },
    "10673": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10674": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10675": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10676": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3729"
    },
    "10679": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10680": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10681": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10682": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10683": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10684": {
      "op": "POP"
    },
    "10685": {
      "op": "POP"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10692": {
      "op": "SHL"
    },
    "10693": {
      "op": "SUB"
    },
    "10694": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 112
    },
    "10695": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "2"
    },
    "10696": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10698": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10699": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10700": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10701": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10703": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10705": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10706": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10708": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10709": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10710": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10711": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10712": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10714": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10715": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10716": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E6"
    },
    "10719": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10720": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10721": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10722": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x385B"
    },
    "10725": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10726": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10727": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10728": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10729": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10730": {
      "op": "POP"
    },
    "10731": {
      "op": "POP"
    },
    "10732": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 113,
      "value": "0x0"
    },
    "10734": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10735": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10736": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10737": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10739": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10741": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10742": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10744": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10745": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10746": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10747": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10748": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10755": {
      "op": "SHL"
    },
    "10756": {
      "op": "SUB"
    },
    "10757": {
      "op": "NOT"
    },
    "10758": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10765": {
      "op": "SHL"
    },
    "10766": {
      "op": "SUB"
    },
    "10767": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10768": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10769": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "10770": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10771": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10772": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "2"
    },
    "10773": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10774": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10775": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10776": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 114
    },
    "10777": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10778": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10779": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10780": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10781": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10782": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "2"
    },
    "10783": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10784": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10817": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10818": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "2"
    },
    "10819": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10820": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10821": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "10822": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10823": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10824": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10826": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 115,
      "value": "0x2A53"
    },
    "10829": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10830": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10831": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39BD"
    },
    "10834": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10835": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10836": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "10837": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10838": {
      "op": "POP"
    },
    "10839": {
      "op": "POP"
    },
    "10840": {
      "op": "POP"
    },
    "10841": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10842": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10843": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10845": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 116,
      "value": "0x2A53"
    },
    "10848": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10849": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10850": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39F2"
    },
    "10853": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10854": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10855": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "10857": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10858": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10860": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10861": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AAF"
    },
    "10864": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10865": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10867": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10874": {
      "op": "SHL"
    },
    "10875": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10876": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10879": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10881": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10882": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "10883": {
      "op": "MSTORE"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10888": {
      "op": "DUP3"
    },
    "10889": {
      "op": "ADD"
    },
    "10890": {
      "op": "MSTORE"
    },
    "10891": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "10912": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10914": {
      "op": "SHL"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10917": {
      "op": "DUP3"
    },
    "10918": {
      "op": "ADD"
    },
    "10919": {
      "op": "MSTORE"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10922": {
      "op": "ADD"
    },
    "10923": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7E"
    },
    "10926": {
      "op": "JUMP"
    },
    "10927": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10928": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 117,
      "value": "0x6"
    },
    "10930": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10931": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10934": {
      "op": "NOT"
    },
    "10935": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "10936": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10937": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10938": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 118,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "10971": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "10972": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10973": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10975": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10982": {
      "op": "SHL"
    },
    "10983": {
      "op": "SUB"
    },
    "10984": {
      "op": "SWAP1"
    },
    "10985": {
      "op": "SWAP2"
    },
    "10986": {
      "op": "AND"
    },
    "10987": {
      "op": "DUP2"
    },
    "10988": {
      "op": "MSTORE"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10991": {
      "op": "ADD"
    },
    "10992": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10994": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10995": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10996": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10997": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "10998": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10999": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11000": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11001": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11002": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11004": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B04"
    },
    "11007": {
      "fn": "ERC721._burn",
      "offset": [
        9742,
        9749
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11008": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C9"
    },
    "11011": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11012": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11013": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11014": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "POP",
      "path": "2"
    },
    "11015": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 119,
      "value": "0x2B12"
    },
    "11018": {
      "fn": "ERC721._burn",
      "offset": [
        9782,
        9787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11019": {
      "fn": "ERC721._burn",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11021": {
      "fn": "ERC721._burn",
      "offset": [
        9801,
        9808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11022": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E6C"
    },
    "11025": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11026": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11027": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 120,
      "value": "0x2B1D"
    },
    "11030": {
      "fn": "ERC721._burn",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11032": {
      "fn": "ERC721._burn",
      "offset": [
        9868,
        9875
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11033": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2737"
    },
    "11036": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11037": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11044": {
      "op": "SHL"
    },
    "11045": {
      "op": "SUB"
    },
    "11046": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 121
    },
    "11047": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "AND",
      "path": "2"
    },
    "11048": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11050": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11051": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11052": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11053": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11055": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11057": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11058": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11060": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11061": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11062": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11063": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11064": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11066": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11067": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11068": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B46"
    },
    "11071": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11072": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11073": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11074": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3729"
    },
    "11077": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11078": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11079": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11080": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11081": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11082": {
      "op": "POP"
    },
    "11083": {
      "op": "POP"
    },
    "11084": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 122,
      "value": "0x0"
    },
    "11086": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11087": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11088": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11089": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11091": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11093": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11094": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11096": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11097": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11098": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11099": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11100": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11107": {
      "op": "SHL"
    },
    "11108": {
      "op": "SUB"
    },
    "11109": {
      "op": "NOT"
    },
    "11110": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "2"
    },
    "11111": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11112": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11113": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 123
    },
    "11114": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11115": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11116": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11123": {
      "op": "SHL"
    },
    "11124": {
      "op": "SUB"
    },
    "11125": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11126": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "AND",
      "path": "2"
    },
    "11127": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11128": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11161": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11162": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11163": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11164": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "LOG4",
      "path": "2"
    },
    "11165": {
      "fn": "ERC721._burn",
      "offset": [
        9701,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "11166": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "POP",
      "path": "2"
    },
    "11167": {
      "fn": "ERC721._burn",
      "jump": "o",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11168": {
      "fn": "ERC721._safeMint",
      "offset": [
        8101,
        8209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11169": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 124,
      "value": "0xE56"
    },
    "11172": {
      "fn": "ERC721._safeMint",
      "offset": [
        8186,
        8188
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11173": {
      "fn": "ERC721._safeMint",
      "offset": [
        8190,
        8197
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11174": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11176": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11177": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11178": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11180": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "ADD",
      "path": "2"
    },
    "11181": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11183": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11184": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11185": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11187": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11188": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11189": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "11190": {
      "fn": "ERC721._safeMint",
      "offset": [
        8176,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8F"
    },
    "11193": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8176,
        8202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11194": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11195": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "11197": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11198": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11205": {
      "op": "SHL"
    },
    "11206": {
      "op": "SUB"
    },
    "11207": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 125
    },
    "11208": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11209": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11210": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11213": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11214": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "11216": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11223": {
      "op": "SHL"
    },
    "11224": {
      "op": "SUB"
    },
    "11225": {
      "op": "NOT"
    },
    "11226": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11227": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11228": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11229": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11230": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "11231": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11232": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 126,
      "value": "0x40"
    },
    "11234": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11235": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11236": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "11239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11277": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11279": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11281": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11282": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11283": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11284": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11285": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11287": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11288": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11290": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11291": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11292": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C37"
    },
    "11295": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11296": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11298": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11305": {
      "op": "SHL"
    },
    "11306": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11307": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11308": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11310": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11311": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7E"
    },
    "11314": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11315": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C2"
    },
    "11318": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11319": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11320": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 127,
      "value": "0x6"
    },
    "11322": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11323": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11326": {
      "op": "NOT"
    },
    "11327": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "11328": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11330": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "11331": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11332": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11333": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 128,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "11366": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ADC"
    },
    "11369": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "11370": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11371": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11372": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11373": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 129
    },
    "11374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11380": {
      "op": "SHL"
    },
    "11381": {
      "op": "SUB"
    },
    "11382": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11383": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11390": {
      "op": "SHL"
    },
    "11391": {
      "op": "SUB"
    },
    "11392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "11393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "2"
    },
    "11394": {
      "branch": 197,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11395": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CCE"
    },
    "11398": {
      "branch": 197,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11399": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11401": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11408": {
      "op": "SHL"
    },
    "11409": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11410": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11413": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11415": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11416": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "2"
    },
    "11417": {
      "op": "MSTORE"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11422": {
      "op": "DUP3"
    },
    "11423": {
      "op": "ADD"
    },
    "11424": {
      "op": "MSTORE"
    },
    "11425": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11458": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11460": {
      "op": "DUP3"
    },
    "11461": {
      "op": "ADD"
    },
    "11462": {
      "op": "MSTORE"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11465": {
      "op": "ADD"
    },
    "11466": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "11469": {
      "op": "JUMP"
    },
    "11470": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11477": {
      "op": "SHL"
    },
    "11478": {
      "op": "SUB"
    },
    "11479": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 130
    },
    "11480": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11481": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "2"
    },
    "11482": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11484": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11485": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11487": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11493": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11497": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11498": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11499": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11500": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "2"
    },
    "11502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11505": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11506": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11508": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11511": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11512": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11513": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11516": {
      "op": "NOT"
    },
    "11517": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "2"
    },
    "11518": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11519": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11520": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11521": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11522": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11523": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "2"
    },
    "11524": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11525": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11526": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11527": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 131
    },
    "11528": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11529": {
      "op": "SWAP2"
    },
    "11530": {
      "op": "DUP3"
    },
    "11531": {
      "op": "MSTORE"
    },
    "11532": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11565": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11566": {
      "op": "ADD"
    },
    "11567": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11569": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11570": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11571": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11572": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "2"
    },
    "11573": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11574": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "2"
    },
    "11575": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11576": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11577": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "11578": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11579": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11580": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 132,
      "value": "0x2D46"
    },
    "11583": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11584": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11585": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11586": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289C"
    },
    "11589": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11590": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11591": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 133,
      "value": "0x2D52"
    },
    "11594": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11595": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11596": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11597": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11598": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC2"
    },
    "11601": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11602": {
      "branch": 198,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11603": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "11606": {
      "branch": 198,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11607": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11609": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11616": {
      "op": "SHL"
    },
    "11617": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11618": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11619": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11621": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "2"
    },
    "11622": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "11625": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11626": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A06"
    },
    "11629": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11630": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11631": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "11633": {
      "branch": 203,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11634": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D92"
    },
    "11637": {
      "branch": 203,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11638": {
      "op": "POP"
    },
    "11639": {
      "op": "POP"
    },
    "11640": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 134,
      "value": "0x40"
    },
    "11642": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11643": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11644": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11645": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11646": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "11647": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11648": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11649": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11650": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11652": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11653": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11654": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11656": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "11658": {
      "op": "SHL"
    },
    "11659": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11661": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11662": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "10"
    },
    "11663": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11664": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11665": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11666": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11667": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11668": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11670": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11671": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11672": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11673": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DBC"
    },
    "11676": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11677": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 135
    },
    "11678": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DA6"
    },
    "11681": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11682": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3756"
    },
    "11685": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11686": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11687": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11688": {
      "op": "POP"
    },
    "11689": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 136,
      "value": "0x2DB5"
    },
    "11692": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11693": {
      "op": "POP"
    },
    "11694": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11696": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11697": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39F2"
    },
    "11700": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11701": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11702": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11703": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "10"
    },
    "11704": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D96"
    },
    "11707": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11708": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11709": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11711": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11712": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11721": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11722": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "10"
    },
    "11723": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11724": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DD7"
    },
    "11727": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11728": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DD7"
    },
    "11731": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32BF"
    },
    "11734": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11735": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11736": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11738": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11739": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11740": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11741": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11742": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11743": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11744": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "11746": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11747": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "11749": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "10"
    },
    "11750": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "10"
    },
    "11751": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11753": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11754": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11755": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11756": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11758": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11759": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11760": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11761": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E01"
    },
    "11764": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11765": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11767": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11768": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11769": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11770": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11771": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "11772": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11773": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "11774": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "10"
    },
    "11775": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11776": {
      "op": "POP"
    },
    "11777": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11778": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "11779": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11780": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "10"
    },
    "11781": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11782": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11783": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11784": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2894"
    },
    "11787": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11788": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 137,
      "value": "0x2E16"
    },
    "11791": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11793": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11794": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3729"
    },
    "11797": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11798": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11799": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11800": {
      "op": "POP"
    },
    "11801": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 138,
      "value": "0x2E23"
    },
    "11804": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11806": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11807": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A58"
    },
    "11810": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11811": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11812": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E2E"
    },
    "11815": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11816": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "11818": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x385B"
    },
    "11821": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11822": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11823": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF8"
    },
    "11825": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "10"
    },
    "11826": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11827": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11828": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11829": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11830": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11831": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "10"
    },
    "11832": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E43"
    },
    "11835": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11836": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E43"
    },
    "11839": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3740"
    },
    "11842": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11843": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11844": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11846": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "11847": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "10"
    },
    "11848": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11853": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11855": {
      "op": "SHL"
    },
    "11856": {
      "op": "SUB"
    },
    "11857": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "10"
    },
    "11858": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "10"
    },
    "11859": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11860": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11861": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11863": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "10"
    },
    "11864": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11865": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "11866": {
      "op": "POP"
    },
    "11867": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 139,
      "value": "0x2E65"
    },
    "11870": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "11872": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11873": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39F2"
    },
    "11876": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11877": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11878": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11879": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "10"
    },
    "11880": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E05"
    },
    "11883": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11884": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9313,
        9488
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "11885": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11887": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11888": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11890": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11891": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11892": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB4"
    },
    "11895": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11896": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11898": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11905": {
      "op": "SHL"
    },
    "11906": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11907": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11908": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11910": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11911": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7E"
    },
    "11914": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11915": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C2"
    },
    "11918": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11919": {
      "fn": "ERC721._safeMint",
      "offset": [
        8430,
        8741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11920": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 140,
      "value": "0x2E99"
    },
    "11923": {
      "fn": "ERC721._safeMint",
      "offset": [
        8561,
        8563
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11924": {
      "fn": "ERC721._safeMint",
      "offset": [
        8565,
        8572
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11925": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC0"
    },
    "11928": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11929": {
      "fn": "ERC721._safeMint",
      "offset": [
        8555,
        8573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11930": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 141,
      "value": "0x2EA6"
    },
    "11933": {
      "fn": "ERC721._safeMint",
      "offset": [
        8635,
        8636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11935": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11936": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11937": {
      "fn": "ERC721._safeMint",
      "offset": [
        8652,
        8657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11938": {
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC2"
    },
    "11941": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11942": {
      "branch": 199,
      "fn": "ERC721._safeMint",
      "offset": [
        8604,
        8658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11943": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB4"
    },
    "11946": {
      "branch": 199,
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11947": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11949": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11956": {
      "op": "SHL"
    },
    "11957": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11958": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11959": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11961": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "ADD",
      "path": "2"
    },
    "11962": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "11965": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11966": {
      "fn": "ERC721._safeMint",
      "offset": [
        8583,
        8734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A06"
    },
    "11969": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8583,
        8734
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11979": {
      "op": "SHL"
    },
    "11980": {
      "op": "SUB"
    },
    "11981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "2"
    },
    "11983": {
      "op": "EXTCODESIZE"
    },
    "11984": {
      "op": "ISZERO"
    },
    "11985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB5"
    },
    "11988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11992": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11999": {
      "op": "SHL"
    },
    "12000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12008": {
      "op": "SHL"
    },
    "12009": {
      "op": "SUB"
    },
    "12010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "2"
    },
    "12012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "12018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F06"
    },
    "12022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12023": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "12024": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "12025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "2"
    },
    "12026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A6C"
    },
    "12037": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "2"
    },
    "12047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "2"
    },
    "12052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "2"
    },
    "12053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "12057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F41"
    },
    "12062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12063": {
      "op": "POP"
    },
    "12064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12076": {
      "op": "NOT"
    },
    "12077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "2"
    },
    "12078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3E"
    },
    "12086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "12089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AA9"
    },
    "12093": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F9B"
    },
    "12101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6F"
    },
    "12109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "2"
    },
    "12118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "12120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "2"
    },
    "12123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "12138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F74"
    },
    "12142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "12148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12149": {
      "op": "POP"
    },
    "12150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F93"
    },
    "12155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 142,
      "value": "0x40"
    },
    "12158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12165": {
      "op": "SHL"
    },
    "12166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "2"
    },
    "12171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "12174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A06"
    },
    "12178": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "2"
    },
    "12186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12194": {
      "op": "SHL"
    },
    "12195": {
      "op": "SUB"
    },
    "12196": {
      "op": "NOT"
    },
    "12197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "2",
      "statement": 143
    },
    "12198": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12205": {
      "op": "SHL"
    },
    "12206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "2"
    },
    "12207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12208": {
      "op": "POP"
    },
    "12209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2894"
    },
    "12212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12214": {
      "op": "POP"
    },
    "12215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 144,
      "value": "0x1"
    },
    "12217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "12223": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12224": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12231": {
      "op": "SHL"
    },
    "12232": {
      "op": "SUB"
    },
    "12233": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 145
    },
    "12234": {
      "branch": 200,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "2"
    },
    "12235": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3016"
    },
    "12238": {
      "branch": 200,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12239": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12241": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12248": {
      "op": "SHL"
    },
    "12249": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12250": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12253": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12255": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12256": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "2"
    },
    "12257": {
      "op": "DUP2"
    },
    "12258": {
      "op": "SWAP1"
    },
    "12259": {
      "op": "MSTORE"
    },
    "12260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12262": {
      "op": "DUP3"
    },
    "12263": {
      "op": "ADD"
    },
    "12264": {
      "op": "MSTORE"
    },
    "12265": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "12298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12300": {
      "op": "DUP3"
    },
    "12301": {
      "op": "ADD"
    },
    "12302": {
      "op": "MSTORE"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12305": {
      "op": "ADD"
    },
    "12306": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "12309": {
      "op": "JUMP"
    },
    "12310": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12311": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12313": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12314": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12315": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12316": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12318": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12320": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12321": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12323": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12324": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12325": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12332": {
      "op": "SHL"
    },
    "12333": {
      "op": "SUB"
    },
    "12334": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "12335": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12336": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 146,
      "value": "0x307B"
    },
    "12339": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12340": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12342": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12349": {
      "op": "SHL"
    },
    "12350": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12351": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12354": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12356": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12357": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "2"
    },
    "12358": {
      "op": "MSTORE"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "12361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12363": {
      "op": "DUP3"
    },
    "12364": {
      "op": "ADD"
    },
    "12365": {
      "op": "MSTORE"
    },
    "12366": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12401": {
      "op": "DUP3"
    },
    "12402": {
      "op": "ADD"
    },
    "12403": {
      "op": "MSTORE"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12406": {
      "op": "ADD"
    },
    "12407": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7E"
    },
    "12410": {
      "op": "JUMP"
    },
    "12411": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12412": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 147,
      "value": "0x3087"
    },
    "12415": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12417": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12418": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12419": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E6C"
    },
    "12422": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12423": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12430": {
      "op": "SHL"
    },
    "12431": {
      "op": "SUB"
    },
    "12432": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 148
    },
    "12433": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "2"
    },
    "12434": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12436": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12437": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12438": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12439": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12441": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12443": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12444": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12446": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12447": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12448": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12449": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12450": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12452": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12453": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12454": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30B0"
    },
    "12457": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12458": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12459": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12460": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x385B"
    },
    "12463": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12464": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12465": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12466": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12467": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12468": {
      "op": "POP"
    },
    "12469": {
      "op": "POP"
    },
    "12470": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 149,
      "value": "0x0"
    },
    "12472": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12473": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12474": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12475": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12477": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12479": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12480": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12482": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12483": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12484": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12485": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12486": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12493": {
      "op": "SHL"
    },
    "12494": {
      "op": "SUB"
    },
    "12495": {
      "op": "NOT"
    },
    "12496": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12503": {
      "op": "SHL"
    },
    "12504": {
      "op": "SUB"
    },
    "12505": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12506": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "2"
    },
    "12507": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12508": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12509": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "2"
    },
    "12510": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12511": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12512": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12513": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 150
    },
    "12514": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12515": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12516": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12517": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12518": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12551": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12552": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12553": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12554": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12555": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12556": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "2"
    },
    "12557": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12558": {
      "op": "JUMPDEST"
    },
    "12559": {
      "op": "DUP3"
    },
    "12560": {
      "op": "DUP1"
    },
    "12561": {
      "op": "SLOAD"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x311A"
    },
    "12565": {
      "op": "SWAP1"
    },
    "12566": {
      "op": "PUSH2",
      "value": "0x36A3"
    },
    "12569": {
      "jump": "i",
      "op": "JUMP"
    },
    "12570": {
      "op": "JUMPDEST"
    },
    "12571": {
      "op": "SWAP1"
    },
    "12572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12574": {
      "op": "MSTORE"
    },
    "12575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12579": {
      "op": "KECCAK256"
    },
    "12580": {
      "op": "SWAP1"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12583": {
      "op": "ADD"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12586": {
      "op": "SWAP1"
    },
    "12587": {
      "op": "DIV"
    },
    "12588": {
      "op": "DUP2"
    },
    "12589": {
      "op": "ADD"
    },
    "12590": {
      "op": "SWAP3"
    },
    "12591": {
      "op": "DUP3"
    },
    "12592": {
      "op": "PUSH2",
      "value": "0x313C"
    },
    "12595": {
      "op": "JUMPI"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12598": {
      "op": "DUP6"
    },
    "12599": {
      "op": "SSTORE"
    },
    "12600": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12603": {
      "op": "JUMP"
    },
    "12604": {
      "op": "JUMPDEST"
    },
    "12605": {
      "op": "DUP3"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12608": {
      "op": "LT"
    },
    "12609": {
      "op": "PUSH2",
      "value": "0x3155"
    },
    "12612": {
      "op": "JUMPI"
    },
    "12613": {
      "op": "DUP1"
    },
    "12614": {
      "op": "MLOAD"
    },
    "12615": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12617": {
      "op": "NOT"
    },
    "12618": {
      "op": "AND"
    },
    "12619": {
      "op": "DUP4"
    },
    "12620": {
      "op": "DUP1"
    },
    "12621": {
      "op": "ADD"
    },
    "12622": {
      "op": "OR"
    },
    "12623": {
      "op": "DUP6"
    },
    "12624": {
      "op": "SSTORE"
    },
    "12625": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12628": {
      "op": "JUMP"
    },
    "12629": {
      "op": "JUMPDEST"
    },
    "12630": {
      "op": "DUP3"
    },
    "12631": {
      "op": "DUP1"
    },
    "12632": {
      "op": "ADD"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "DUP6"
    },
    "12637": {
      "op": "SSTORE"
    },
    "12638": {
      "op": "DUP3"
    },
    "12639": {
      "op": "ISZERO"
    },
    "12640": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12643": {
      "op": "JUMPI"
    },
    "12644": {
      "op": "SWAP2"
    },
    "12645": {
      "op": "DUP3"
    },
    "12646": {
      "op": "ADD"
    },
    "12647": {
      "op": "JUMPDEST"
    },
    "12648": {
      "op": "DUP3"
    },
    "12649": {
      "op": "DUP2"
    },
    "12650": {
      "op": "GT"
    },
    "12651": {
      "op": "ISZERO"
    },
    "12652": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12655": {
      "op": "JUMPI"
    },
    "12656": {
      "op": "DUP3"
    },
    "12657": {
      "op": "MLOAD"
    },
    "12658": {
      "op": "DUP3"
    },
    "12659": {
      "op": "SSTORE"
    },
    "12660": {
      "op": "SWAP2"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12663": {
      "op": "ADD"
    },
    "12664": {
      "op": "SWAP2"
    },
    "12665": {
      "op": "SWAP1"
    },
    "12666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12668": {
      "op": "ADD"
    },
    "12669": {
      "op": "SWAP1"
    },
    "12670": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "12673": {
      "op": "JUMP"
    },
    "12674": {
      "op": "JUMPDEST"
    },
    "12675": {
      "op": "POP"
    },
    "12676": {
      "op": "PUSH2",
      "value": "0x318E"
    },
    "12679": {
      "op": "SWAP3"
    },
    "12680": {
      "op": "SWAP2"
    },
    "12681": {
      "op": "POP"
    },
    "12682": {
      "op": "PUSH2",
      "value": "0x3192"
    },
    "12685": {
      "jump": "i",
      "op": "JUMP"
    },
    "12686": {
      "op": "JUMPDEST"
    },
    "12687": {
      "op": "POP"
    },
    "12688": {
      "op": "SWAP1"
    },
    "12689": {
      "jump": "o",
      "op": "JUMP"
    },
    "12690": {
      "op": "JUMPDEST"
    },
    "12691": {
      "op": "JUMPDEST"
    },
    "12692": {
      "op": "DUP1"
    },
    "12693": {
      "op": "DUP3"
    },
    "12694": {
      "op": "GT"
    },
    "12695": {
      "op": "ISZERO"
    },
    "12696": {
      "op": "PUSH2",
      "value": "0x318E"
    },
    "12699": {
      "op": "JUMPI"
    },
    "12700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12702": {
      "op": "DUP2"
    },
    "12703": {
      "op": "SSTORE"
    },
    "12704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12706": {
      "op": "ADD"
    },
    "12707": {
      "op": "PUSH2",
      "value": "0x3193"
    },
    "12710": {
      "op": "JUMP"
    },
    "12711": {
      "op": "JUMPDEST"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12718": {
      "op": "SHL"
    },
    "12719": {
      "op": "SUB"
    },
    "12720": {
      "op": "NOT"
    },
    "12721": {
      "op": "DUP2"
    },
    "12722": {
      "op": "AND"
    },
    "12723": {
      "op": "DUP2"
    },
    "12724": {
      "op": "EQ"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "12728": {
      "op": "JUMPI"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12731": {
      "op": "DUP1"
    },
    "12732": {
      "op": "REVERT"
    },
    "12733": {
      "op": "JUMPDEST"
    },
    "12734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12738": {
      "op": "DUP3"
    },
    "12739": {
      "op": "DUP5"
    },
    "12740": {
      "op": "SUB"
    },
    "12741": {
      "op": "SLT"
    },
    "12742": {
      "op": "ISZERO"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x31CF"
    },
    "12746": {
      "op": "JUMPI"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12749": {
      "op": "DUP1"
    },
    "12750": {
      "op": "REVERT"
    },
    "12751": {
      "op": "JUMPDEST"
    },
    "12752": {
      "op": "DUP2"
    },
    "12753": {
      "op": "CALLDATALOAD"
    },
    "12754": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "12757": {
      "op": "DUP2"
    },
    "12758": {
      "op": "PUSH2",
      "value": "0x31A7"
    },
    "12761": {
      "jump": "i",
      "op": "JUMP"
    },
    "12762": {
      "op": "JUMPDEST"
    },
    "12763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12765": {
      "op": "JUMPDEST"
    },
    "12766": {
      "op": "DUP4"
    },
    "12767": {
      "op": "DUP2"
    },
    "12768": {
      "op": "LT"
    },
    "12769": {
      "op": "ISZERO"
    },
    "12770": {
      "op": "PUSH2",
      "value": "0x31F5"
    },
    "12773": {
      "op": "JUMPI"
    },
    "12774": {
      "op": "DUP2"
    },
    "12775": {
      "op": "DUP2"
    },
    "12776": {
      "op": "ADD"
    },
    "12777": {
      "op": "MLOAD"
    },
    "12778": {
      "op": "DUP4"
    },
    "12779": {
      "op": "DUP3"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "MSTORE"
    },
    "12782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12784": {
      "op": "ADD"
    },
    "12785": {
      "op": "PUSH2",
      "value": "0x31DD"
    },
    "12788": {
      "op": "JUMP"
    },
    "12789": {
      "op": "JUMPDEST"
    },
    "12790": {
      "op": "DUP4"
    },
    "12791": {
      "op": "DUP2"
    },
    "12792": {
      "op": "GT"
    },
    "12793": {
      "op": "ISZERO"
    },
    "12794": {
      "op": "PUSH2",
      "value": "0x2205"
    },
    "12797": {
      "op": "JUMPI"
    },
    "12798": {
      "op": "POP"
    },
    "12799": {
      "op": "POP"
    },
    "12800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12802": {
      "op": "SWAP2"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "op": "MSTORE"
    },
    "12805": {
      "jump": "o",
      "op": "JUMP"
    },
    "12806": {
      "op": "JUMPDEST"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12809": {
      "op": "DUP2"
    },
    "12810": {
      "op": "MLOAD"
    },
    "12811": {
      "op": "DUP1"
    },
    "12812": {
      "op": "DUP5"
    },
    "12813": {
      "op": "MSTORE"
    },
    "12814": {
      "op": "PUSH2",
      "value": "0x321E"
    },
    "12817": {
      "op": "DUP2"
    },
    "12818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12820": {
      "op": "DUP7"
    },
    "12821": {
      "op": "ADD"
    },
    "12822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12824": {
      "op": "DUP7"
    },
    "12825": {
      "op": "ADD"
    },
    "12826": {
      "op": "PUSH2",
      "value": "0x31DA"
    },
    "12829": {
      "jump": "i",
      "op": "JUMP"
    },
    "12830": {
      "op": "JUMPDEST"
    },
    "12831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12833": {
      "op": "ADD"
    },
    "12834": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12836": {
      "op": "NOT"
    },
    "12837": {
      "op": "AND"
    },
    "12838": {
      "op": "SWAP3"
    },
    "12839": {
      "op": "SWAP1"
    },
    "12840": {
      "op": "SWAP3"
    },
    "12841": {
      "op": "ADD"
    },
    "12842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12844": {
      "op": "ADD"
    },
    "12845": {
      "op": "SWAP3"
    },
    "12846": {
      "op": "SWAP2"
    },
    "12847": {
      "op": "POP"
    },
    "12848": {
      "op": "POP"
    },
    "12849": {
      "jump": "o",
      "op": "JUMP"
    },
    "12850": {
      "op": "JUMPDEST"
    },
    "12851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12853": {
      "op": "DUP2"
    },
    "12854": {
      "op": "MSTORE"
    },
    "12855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12857": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "12860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12862": {
      "op": "DUP4"
    },
    "12863": {
      "op": "ADD"
    },
    "12864": {
      "op": "DUP5"
    },
    "12865": {
      "op": "PUSH2",
      "value": "0x3206"
    },
    "12868": {
      "jump": "i",
      "op": "JUMP"
    },
    "12869": {
      "op": "JUMPDEST"
    },
    "12870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12874": {
      "op": "DUP3"
    },
    "12875": {
      "op": "DUP5"
    },
    "12876": {
      "op": "SUB"
    },
    "12877": {
      "op": "SLT"
    },
    "12878": {
      "op": "ISZERO"
    },
    "12879": {
      "op": "PUSH2",
      "value": "0x3257"
    },
    "12882": {
      "op": "JUMPI"
    },
    "12883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12885": {
      "op": "DUP1"
    },
    "12886": {
      "op": "REVERT"
    },
    "12887": {
      "op": "JUMPDEST"
    },
    "12888": {
      "op": "POP"
    },
    "12889": {
      "op": "CALLDATALOAD"
    },
    "12890": {
      "op": "SWAP2"
    },
    "12891": {
      "op": "SWAP1"
    },
    "12892": {
      "op": "POP"
    },
    "12893": {
      "jump": "o",
      "op": "JUMP"
    },
    "12894": {
      "op": "JUMPDEST"
    },
    "12895": {
      "op": "DUP1"
    },
    "12896": {
      "op": "CALLDATALOAD"
    },
    "12897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12903": {
      "op": "SHL"
    },
    "12904": {
      "op": "SUB"
    },
    "12905": {
      "op": "DUP2"
    },
    "12906": {
      "op": "AND"
    },
    "12907": {
      "op": "DUP2"
    },
    "12908": {
      "op": "EQ"
    },
    "12909": {
      "op": "PUSH2",
      "value": "0x3275"
    },
    "12912": {
      "op": "JUMPI"
    },
    "12913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12915": {
      "op": "DUP1"
    },
    "12916": {
      "op": "REVERT"
    },
    "12917": {
      "op": "JUMPDEST"
    },
    "12918": {
      "op": "SWAP2"
    },
    "12919": {
      "op": "SWAP1"
    },
    "12920": {
      "op": "POP"
    },
    "12921": {
      "jump": "o",
      "op": "JUMP"
    },
    "12922": {
      "op": "JUMPDEST"
    },
    "12923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12927": {
      "op": "DUP3"
    },
    "12928": {
      "op": "DUP5"
    },
    "12929": {
      "op": "SUB"
    },
    "12930": {
      "op": "SLT"
    },
    "12931": {
      "op": "ISZERO"
    },
    "12932": {
      "op": "PUSH2",
      "value": "0x328C"
    },
    "12935": {
      "op": "JUMPI"
    },
    "12936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12938": {
      "op": "DUP1"
    },
    "12939": {
      "op": "REVERT"
    },
    "12940": {
      "op": "JUMPDEST"
    },
    "12941": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "12944": {
      "op": "DUP3"
    },
    "12945": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "12948": {
      "jump": "i",
      "op": "JUMP"
    },
    "12949": {
      "op": "JUMPDEST"
    },
    "12950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12952": {
      "op": "DUP1"
    },
    "12953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12955": {
      "op": "DUP4"
    },
    "12956": {
      "op": "DUP6"
    },
    "12957": {
      "op": "SUB"
    },
    "12958": {
      "op": "SLT"
    },
    "12959": {
      "op": "ISZERO"
    },
    "12960": {
      "op": "PUSH2",
      "value": "0x32A8"
    },
    "12963": {
      "op": "JUMPI"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12966": {
      "op": "DUP1"
    },
    "12967": {
      "op": "REVERT"
    },
    "12968": {
      "op": "JUMPDEST"
    },
    "12969": {
      "op": "PUSH2",
      "value": "0x32B1"
    },
    "12972": {
      "op": "DUP4"
    },
    "12973": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "12976": {
      "jump": "i",
      "op": "JUMP"
    },
    "12977": {
      "op": "JUMPDEST"
    },
    "12978": {
      "op": "SWAP5"
    },
    "12979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12981": {
      "op": "SWAP4"
    },
    "12982": {
      "op": "SWAP1"
    },
    "12983": {
      "op": "SWAP4"
    },
    "12984": {
      "op": "ADD"
    },
    "12985": {
      "op": "CALLDATALOAD"
    },
    "12986": {
      "op": "SWAP4"
    },
    "12987": {
      "op": "POP"
    },
    "12988": {
      "op": "POP"
    },
    "12989": {
      "op": "POP"
    },
    "12990": {
      "jump": "o",
      "op": "JUMP"
    },
    "12991": {
      "op": "JUMPDEST"
    },
    "12992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12999": {
      "op": "SHL"
    },
    "13000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13002": {
      "op": "MSTORE"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13007": {
      "op": "MSTORE"
    },
    "13008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13012": {
      "op": "REVERT"
    },
    "13013": {
      "op": "JUMPDEST"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13016": {
      "op": "MLOAD"
    },
    "13017": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13019": {
      "op": "DUP3"
    },
    "13020": {
      "op": "ADD"
    },
    "13021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13023": {
      "op": "NOT"
    },
    "13024": {
      "op": "AND"
    },
    "13025": {
      "op": "DUP2"
    },
    "13026": {
      "op": "ADD"
    },
    "13027": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13036": {
      "op": "DUP2"
    },
    "13037": {
      "op": "GT"
    },
    "13038": {
      "op": "DUP3"
    },
    "13039": {
      "op": "DUP3"
    },
    "13040": {
      "op": "LT"
    },
    "13041": {
      "op": "OR"
    },
    "13042": {
      "op": "ISZERO"
    },
    "13043": {
      "op": "PUSH2",
      "value": "0x32FE"
    },
    "13046": {
      "op": "JUMPI"
    },
    "13047": {
      "op": "PUSH2",
      "value": "0x32FE"
    },
    "13050": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "13053": {
      "jump": "i",
      "op": "JUMP"
    },
    "13054": {
      "op": "JUMPDEST"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13057": {
      "op": "MSTORE"
    },
    "13058": {
      "op": "SWAP2"
    },
    "13059": {
      "op": "SWAP1"
    },
    "13060": {
      "op": "POP"
    },
    "13061": {
      "jump": "o",
      "op": "JUMP"
    },
    "13062": {
      "op": "JUMPDEST"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13065": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13074": {
      "op": "DUP4"
    },
    "13075": {
      "op": "GT"
    },
    "13076": {
      "op": "ISZERO"
    },
    "13077": {
      "op": "PUSH2",
      "value": "0x3320"
    },
    "13080": {
      "op": "JUMPI"
    },
    "13081": {
      "op": "PUSH2",
      "value": "0x3320"
    },
    "13084": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "13087": {
      "jump": "i",
      "op": "JUMP"
    },
    "13088": {
      "op": "JUMPDEST"
    },
    "13089": {
      "op": "PUSH2",
      "value": "0x3333"
    },
    "13092": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13094": {
      "op": "DUP5"
    },
    "13095": {
      "op": "ADD"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13098": {
      "op": "NOT"
    },
    "13099": {
      "op": "AND"
    },
    "13100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13102": {
      "op": "ADD"
    },
    "13103": {
      "op": "PUSH2",
      "value": "0x32D5"
    },
    "13106": {
      "jump": "i",
      "op": "JUMP"
    },
    "13107": {
      "op": "JUMPDEST"
    },
    "13108": {
      "op": "SWAP1"
    },
    "13109": {
      "op": "POP"
    },
    "13110": {
      "op": "DUP3"
    },
    "13111": {
      "op": "DUP2"
    },
    "13112": {
      "op": "MSTORE"
    },
    "13113": {
      "op": "DUP4"
    },
    "13114": {
      "op": "DUP4"
    },
    "13115": {
      "op": "DUP4"
    },
    "13116": {
      "op": "ADD"
    },
    "13117": {
      "op": "GT"
    },
    "13118": {
      "op": "ISZERO"
    },
    "13119": {
      "op": "PUSH2",
      "value": "0x3347"
    },
    "13122": {
      "op": "JUMPI"
    },
    "13123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13125": {
      "op": "DUP1"
    },
    "13126": {
      "op": "REVERT"
    },
    "13127": {
      "op": "JUMPDEST"
    },
    "13128": {
      "op": "DUP3"
    },
    "13129": {
      "op": "DUP3"
    },
    "13130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13132": {
      "op": "DUP4"
    },
    "13133": {
      "op": "ADD"
    },
    "13134": {
      "op": "CALLDATACOPY"
    },
    "13135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13139": {
      "op": "DUP5"
    },
    "13140": {
      "op": "DUP4"
    },
    "13141": {
      "op": "ADD"
    },
    "13142": {
      "op": "ADD"
    },
    "13143": {
      "op": "MSTORE"
    },
    "13144": {
      "op": "SWAP4"
    },
    "13145": {
      "op": "SWAP3"
    },
    "13146": {
      "op": "POP"
    },
    "13147": {
      "op": "POP"
    },
    "13148": {
      "op": "POP"
    },
    "13149": {
      "jump": "o",
      "op": "JUMP"
    },
    "13150": {
      "op": "JUMPDEST"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13155": {
      "op": "DUP3"
    },
    "13156": {
      "op": "DUP5"
    },
    "13157": {
      "op": "SUB"
    },
    "13158": {
      "op": "SLT"
    },
    "13159": {
      "op": "ISZERO"
    },
    "13160": {
      "op": "PUSH2",
      "value": "0x3370"
    },
    "13163": {
      "op": "JUMPI"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13166": {
      "op": "DUP1"
    },
    "13167": {
      "op": "REVERT"
    },
    "13168": {
      "op": "JUMPDEST"
    },
    "13169": {
      "op": "DUP2"
    },
    "13170": {
      "op": "CALLDATALOAD"
    },
    "13171": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13180": {
      "op": "DUP2"
    },
    "13181": {
      "op": "GT"
    },
    "13182": {
      "op": "ISZERO"
    },
    "13183": {
      "op": "PUSH2",
      "value": "0x3387"
    },
    "13186": {
      "op": "JUMPI"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13189": {
      "op": "DUP1"
    },
    "13190": {
      "op": "REVERT"
    },
    "13191": {
      "op": "JUMPDEST"
    },
    "13192": {
      "op": "DUP3"
    },
    "13193": {
      "op": "ADD"
    },
    "13194": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13196": {
      "op": "DUP2"
    },
    "13197": {
      "op": "ADD"
    },
    "13198": {
      "op": "DUP5"
    },
    "13199": {
      "op": "SGT"
    },
    "13200": {
      "op": "PUSH2",
      "value": "0x3398"
    },
    "13203": {
      "op": "JUMPI"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13206": {
      "op": "DUP1"
    },
    "13207": {
      "op": "REVERT"
    },
    "13208": {
      "op": "JUMPDEST"
    },
    "13209": {
      "op": "PUSH2",
      "value": "0x2894"
    },
    "13212": {
      "op": "DUP5"
    },
    "13213": {
      "op": "DUP3"
    },
    "13214": {
      "op": "CALLDATALOAD"
    },
    "13215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13217": {
      "op": "DUP5"
    },
    "13218": {
      "op": "ADD"
    },
    "13219": {
      "op": "PUSH2",
      "value": "0x3306"
    },
    "13222": {
      "jump": "i",
      "op": "JUMP"
    },
    "13223": {
      "op": "JUMPDEST"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13226": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13235": {
      "op": "DUP3"
    },
    "13236": {
      "op": "GT"
    },
    "13237": {
      "op": "ISZERO"
    },
    "13238": {
      "op": "PUSH2",
      "value": "0x33C1"
    },
    "13241": {
      "op": "JUMPI"
    },
    "13242": {
      "op": "PUSH2",
      "value": "0x33C1"
    },
    "13245": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "13248": {
      "jump": "i",
      "op": "JUMP"
    },
    "13249": {
      "op": "JUMPDEST"
    },
    "13250": {
      "op": "POP"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13253": {
      "op": "SHL"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13256": {
      "op": "ADD"
    },
    "13257": {
      "op": "SWAP1"
    },
    "13258": {
      "jump": "o",
      "op": "JUMP"
    },
    "13259": {
      "op": "JUMPDEST"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13262": {
      "op": "DUP3"
    },
    "13263": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13265": {
      "op": "DUP4"
    },
    "13266": {
      "op": "ADD"
    },
    "13267": {
      "op": "SLT"
    },
    "13268": {
      "op": "PUSH2",
      "value": "0x33DC"
    },
    "13271": {
      "op": "JUMPI"
    },
    "13272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13274": {
      "op": "DUP1"
    },
    "13275": {
      "op": "REVERT"
    },
    "13276": {
      "op": "JUMPDEST"
    },
    "13277": {
      "op": "DUP2"
    },
    "13278": {
      "op": "CALLDATALOAD"
    },
    "13279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x33F1"
    },
    "13284": {
      "op": "PUSH2",
      "value": "0x33EC"
    },
    "13287": {
      "op": "DUP4"
    },
    "13288": {
      "op": "PUSH2",
      "value": "0x33A7"
    },
    "13291": {
      "jump": "i",
      "op": "JUMP"
    },
    "13292": {
      "op": "JUMPDEST"
    },
    "13293": {
      "op": "PUSH2",
      "value": "0x32D5"
    },
    "13296": {
      "jump": "i",
      "op": "JUMP"
    },
    "13297": {
      "op": "JUMPDEST"
    },
    "13298": {
      "op": "DUP3"
    },
    "13299": {
      "op": "DUP2"
    },
    "13300": {
      "op": "MSTORE"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13303": {
      "op": "SWAP3"
    },
    "13304": {
      "op": "SWAP1"
    },
    "13305": {
      "op": "SWAP3"
    },
    "13306": {
      "op": "SHL"
    },
    "13307": {
      "op": "DUP5"
    },
    "13308": {
      "op": "ADD"
    },
    "13309": {
      "op": "DUP2"
    },
    "13310": {
      "op": "ADD"
    },
    "13311": {
      "op": "SWAP2"
    },
    "13312": {
      "op": "DUP2"
    },
    "13313": {
      "op": "DUP2"
    },
    "13314": {
      "op": "ADD"
    },
    "13315": {
      "op": "SWAP1"
    },
    "13316": {
      "op": "DUP7"
    },
    "13317": {
      "op": "DUP5"
    },
    "13318": {
      "op": "GT"
    },
    "13319": {
      "op": "ISZERO"
    },
    "13320": {
      "op": "PUSH2",
      "value": "0x3410"
    },
    "13323": {
      "op": "JUMPI"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "DUP1"
    },
    "13327": {
      "op": "REVERT"
    },
    "13328": {
      "op": "JUMPDEST"
    },
    "13329": {
      "op": "DUP3"
    },
    "13330": {
      "op": "DUP7"
    },
    "13331": {
      "op": "ADD"
    },
    "13332": {
      "op": "JUMPDEST"
    },
    "13333": {
      "op": "DUP5"
    },
    "13334": {
      "op": "DUP2"
    },
    "13335": {
      "op": "LT"
    },
    "13336": {
      "op": "ISZERO"
    },
    "13337": {
      "op": "PUSH2",
      "value": "0x3432"
    },
    "13340": {
      "op": "JUMPI"
    },
    "13341": {
      "op": "PUSH2",
      "value": "0x3425"
    },
    "13344": {
      "op": "DUP2"
    },
    "13345": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13348": {
      "jump": "i",
      "op": "JUMP"
    },
    "13349": {
      "op": "JUMPDEST"
    },
    "13350": {
      "op": "DUP4"
    },
    "13351": {
      "op": "MSTORE"
    },
    "13352": {
      "op": "SWAP2"
    },
    "13353": {
      "op": "DUP4"
    },
    "13354": {
      "op": "ADD"
    },
    "13355": {
      "op": "SWAP2"
    },
    "13356": {
      "op": "DUP4"
    },
    "13357": {
      "op": "ADD"
    },
    "13358": {
      "op": "PUSH2",
      "value": "0x3414"
    },
    "13361": {
      "op": "JUMP"
    },
    "13362": {
      "op": "JUMPDEST"
    },
    "13363": {
      "op": "POP"
    },
    "13364": {
      "op": "SWAP7"
    },
    "13365": {
      "op": "SWAP6"
    },
    "13366": {
      "op": "POP"
    },
    "13367": {
      "op": "POP"
    },
    "13368": {
      "op": "POP"
    },
    "13369": {
      "op": "POP"
    },
    "13370": {
      "op": "POP"
    },
    "13371": {
      "op": "POP"
    },
    "13372": {
      "jump": "o",
      "op": "JUMP"
    },
    "13373": {
      "op": "JUMPDEST"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13378": {
      "op": "DUP3"
    },
    "13379": {
      "op": "DUP5"
    },
    "13380": {
      "op": "SUB"
    },
    "13381": {
      "op": "SLT"
    },
    "13382": {
      "op": "ISZERO"
    },
    "13383": {
      "op": "PUSH2",
      "value": "0x344F"
    },
    "13386": {
      "op": "JUMPI"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13389": {
      "op": "DUP1"
    },
    "13390": {
      "op": "REVERT"
    },
    "13391": {
      "op": "JUMPDEST"
    },
    "13392": {
      "op": "DUP2"
    },
    "13393": {
      "op": "CALLDATALOAD"
    },
    "13394": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13403": {
      "op": "DUP2"
    },
    "13404": {
      "op": "GT"
    },
    "13405": {
      "op": "ISZERO"
    },
    "13406": {
      "op": "PUSH2",
      "value": "0x3466"
    },
    "13409": {
      "op": "JUMPI"
    },
    "13410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13412": {
      "op": "DUP1"
    },
    "13413": {
      "op": "REVERT"
    },
    "13414": {
      "op": "JUMPDEST"
    },
    "13415": {
      "op": "PUSH2",
      "value": "0x2894"
    },
    "13418": {
      "op": "DUP5"
    },
    "13419": {
      "op": "DUP3"
    },
    "13420": {
      "op": "DUP6"
    },
    "13421": {
      "op": "ADD"
    },
    "13422": {
      "op": "PUSH2",
      "value": "0x33CB"
    },
    "13425": {
      "jump": "i",
      "op": "JUMP"
    },
    "13426": {
      "op": "JUMPDEST"
    },
    "13427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13429": {
      "op": "DUP1"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13434": {
      "op": "DUP5"
    },
    "13435": {
      "op": "DUP7"
    },
    "13436": {
      "op": "SUB"
    },
    "13437": {
      "op": "SLT"
    },
    "13438": {
      "op": "ISZERO"
    },
    "13439": {
      "op": "PUSH2",
      "value": "0x3487"
    },
    "13442": {
      "op": "JUMPI"
    },
    "13443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13445": {
      "op": "DUP1"
    },
    "13446": {
      "op": "REVERT"
    },
    "13447": {
      "op": "JUMPDEST"
    },
    "13448": {
      "op": "PUSH2",
      "value": "0x3490"
    },
    "13451": {
      "op": "DUP5"
    },
    "13452": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13455": {
      "jump": "i",
      "op": "JUMP"
    },
    "13456": {
      "op": "JUMPDEST"
    },
    "13457": {
      "op": "SWAP3"
    },
    "13458": {
      "op": "POP"
    },
    "13459": {
      "op": "PUSH2",
      "value": "0x349E"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13464": {
      "op": "DUP6"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13469": {
      "jump": "i",
      "op": "JUMP"
    },
    "13470": {
      "op": "JUMPDEST"
    },
    "13471": {
      "op": "SWAP2"
    },
    "13472": {
      "op": "POP"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13475": {
      "op": "DUP5"
    },
    "13476": {
      "op": "ADD"
    },
    "13477": {
      "op": "CALLDATALOAD"
    },
    "13478": {
      "op": "SWAP1"
    },
    "13479": {
      "op": "POP"
    },
    "13480": {
      "op": "SWAP3"
    },
    "13481": {
      "op": "POP"
    },
    "13482": {
      "op": "SWAP3"
    },
    "13483": {
      "op": "POP"
    },
    "13484": {
      "op": "SWAP3"
    },
    "13485": {
      "jump": "o",
      "op": "JUMP"
    },
    "13486": {
      "op": "JUMPDEST"
    },
    "13487": {
      "op": "DUP1"
    },
    "13488": {
      "op": "CALLDATALOAD"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13491": {
      "op": "DUP2"
    },
    "13492": {
      "op": "AND"
    },
    "13493": {
      "op": "DUP2"
    },
    "13494": {
      "op": "EQ"
    },
    "13495": {
      "op": "PUSH2",
      "value": "0x3275"
    },
    "13498": {
      "op": "JUMPI"
    },
    "13499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13501": {
      "op": "DUP1"
    },
    "13502": {
      "op": "REVERT"
    },
    "13503": {
      "op": "JUMPDEST"
    },
    "13504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13508": {
      "op": "DUP3"
    },
    "13509": {
      "op": "DUP5"
    },
    "13510": {
      "op": "SUB"
    },
    "13511": {
      "op": "SLT"
    },
    "13512": {
      "op": "ISZERO"
    },
    "13513": {
      "op": "PUSH2",
      "value": "0x34D1"
    },
    "13516": {
      "op": "JUMPI"
    },
    "13517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13519": {
      "op": "DUP1"
    },
    "13520": {
      "op": "REVERT"
    },
    "13521": {
      "op": "JUMPDEST"
    },
    "13522": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "13525": {
      "op": "DUP3"
    },
    "13526": {
      "op": "PUSH2",
      "value": "0x34AE"
    },
    "13529": {
      "jump": "i",
      "op": "JUMP"
    },
    "13530": {
      "op": "JUMPDEST"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13533": {
      "op": "DUP1"
    },
    "13534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13536": {
      "op": "DUP4"
    },
    "13537": {
      "op": "DUP6"
    },
    "13538": {
      "op": "SUB"
    },
    "13539": {
      "op": "SLT"
    },
    "13540": {
      "op": "ISZERO"
    },
    "13541": {
      "op": "PUSH2",
      "value": "0x34ED"
    },
    "13544": {
      "op": "JUMPI"
    },
    "13545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13547": {
      "op": "DUP1"
    },
    "13548": {
      "op": "REVERT"
    },
    "13549": {
      "op": "JUMPDEST"
    },
    "13550": {
      "op": "DUP3"
    },
    "13551": {
      "op": "CALLDATALOAD"
    },
    "13552": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13561": {
      "op": "DUP1"
    },
    "13562": {
      "op": "DUP3"
    },
    "13563": {
      "op": "GT"
    },
    "13564": {
      "op": "ISZERO"
    },
    "13565": {
      "op": "PUSH2",
      "value": "0x3505"
    },
    "13568": {
      "op": "JUMPI"
    },
    "13569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13571": {
      "op": "DUP1"
    },
    "13572": {
      "op": "REVERT"
    },
    "13573": {
      "op": "JUMPDEST"
    },
    "13574": {
      "op": "PUSH2",
      "value": "0x3511"
    },
    "13577": {
      "op": "DUP7"
    },
    "13578": {
      "op": "DUP4"
    },
    "13579": {
      "op": "DUP8"
    },
    "13580": {
      "op": "ADD"
    },
    "13581": {
      "op": "PUSH2",
      "value": "0x33CB"
    },
    "13584": {
      "jump": "i",
      "op": "JUMP"
    },
    "13585": {
      "op": "JUMPDEST"
    },
    "13586": {
      "op": "SWAP4"
    },
    "13587": {
      "op": "POP"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13590": {
      "op": "SWAP2"
    },
    "13591": {
      "op": "POP"
    },
    "13592": {
      "op": "DUP2"
    },
    "13593": {
      "op": "DUP6"
    },
    "13594": {
      "op": "ADD"
    },
    "13595": {
      "op": "CALLDATALOAD"
    },
    "13596": {
      "op": "DUP2"
    },
    "13597": {
      "op": "DUP2"
    },
    "13598": {
      "op": "GT"
    },
    "13599": {
      "op": "ISZERO"
    },
    "13600": {
      "op": "PUSH2",
      "value": "0x3528"
    },
    "13603": {
      "op": "JUMPI"
    },
    "13604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13606": {
      "op": "DUP1"
    },
    "13607": {
      "op": "REVERT"
    },
    "13608": {
      "op": "JUMPDEST"
    },
    "13609": {
      "op": "DUP6"
    },
    "13610": {
      "op": "ADD"
    },
    "13611": {
      "op": "SWAP1"
    },
    "13612": {
      "op": "POP"
    },
    "13613": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13615": {
      "op": "DUP2"
    },
    "13616": {
      "op": "ADD"
    },
    "13617": {
      "op": "DUP7"
    },
    "13618": {
      "op": "SGT"
    },
    "13619": {
      "op": "PUSH2",
      "value": "0x353B"
    },
    "13622": {
      "op": "JUMPI"
    },
    "13623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13625": {
      "op": "DUP1"
    },
    "13626": {
      "op": "REVERT"
    },
    "13627": {
      "op": "JUMPDEST"
    },
    "13628": {
      "op": "DUP1"
    },
    "13629": {
      "op": "CALLDATALOAD"
    },
    "13630": {
      "op": "PUSH2",
      "value": "0x3549"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x33EC"
    },
    "13636": {
      "op": "DUP3"
    },
    "13637": {
      "op": "PUSH2",
      "value": "0x33A7"
    },
    "13640": {
      "jump": "i",
      "op": "JUMP"
    },
    "13641": {
      "op": "JUMPDEST"
    },
    "13642": {
      "op": "DUP2"
    },
    "13643": {
      "op": "DUP2"
    },
    "13644": {
      "op": "MSTORE"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13647": {
      "op": "SWAP2"
    },
    "13648": {
      "op": "SWAP1"
    },
    "13649": {
      "op": "SWAP2"
    },
    "13650": {
      "op": "SHL"
    },
    "13651": {
      "op": "DUP3"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "DUP4"
    },
    "13654": {
      "op": "ADD"
    },
    "13655": {
      "op": "SWAP1"
    },
    "13656": {
      "op": "DUP4"
    },
    "13657": {
      "op": "DUP2"
    },
    "13658": {
      "op": "ADD"
    },
    "13659": {
      "op": "SWAP1"
    },
    "13660": {
      "op": "DUP9"
    },
    "13661": {
      "op": "DUP4"
    },
    "13662": {
      "op": "GT"
    },
    "13663": {
      "op": "ISZERO"
    },
    "13664": {
      "op": "PUSH2",
      "value": "0x3568"
    },
    "13667": {
      "op": "JUMPI"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13670": {
      "op": "DUP1"
    },
    "13671": {
      "op": "REVERT"
    },
    "13672": {
      "op": "JUMPDEST"
    },
    "13673": {
      "op": "SWAP3"
    },
    "13674": {
      "op": "DUP5"
    },
    "13675": {
      "op": "ADD"
    },
    "13676": {
      "op": "SWAP3"
    },
    "13677": {
      "op": "JUMPDEST"
    },
    "13678": {
      "op": "DUP3"
    },
    "13679": {
      "op": "DUP5"
    },
    "13680": {
      "op": "LT"
    },
    "13681": {
      "op": "ISZERO"
    },
    "13682": {
      "op": "PUSH2",
      "value": "0x358D"
    },
    "13685": {
      "op": "JUMPI"
    },
    "13686": {
      "op": "PUSH2",
      "value": "0x357E"
    },
    "13689": {
      "op": "DUP5"
    },
    "13690": {
      "op": "PUSH2",
      "value": "0x34AE"
    },
    "13693": {
      "jump": "i",
      "op": "JUMP"
    },
    "13694": {
      "op": "JUMPDEST"
    },
    "13695": {
      "op": "DUP3"
    },
    "13696": {
      "op": "MSTORE"
    },
    "13697": {
      "op": "SWAP3"
    },
    "13698": {
      "op": "DUP5"
    },
    "13699": {
      "op": "ADD"
    },
    "13700": {
      "op": "SWAP3"
    },
    "13701": {
      "op": "SWAP1"
    },
    "13702": {
      "op": "DUP5"
    },
    "13703": {
      "op": "ADD"
    },
    "13704": {
      "op": "SWAP1"
    },
    "13705": {
      "op": "PUSH2",
      "value": "0x356D"
    },
    "13708": {
      "op": "JUMP"
    },
    "13709": {
      "op": "JUMPDEST"
    },
    "13710": {
      "op": "DUP1"
    },
    "13711": {
      "op": "SWAP6"
    },
    "13712": {
      "op": "POP"
    },
    "13713": {
      "op": "POP"
    },
    "13714": {
      "op": "POP"
    },
    "13715": {
      "op": "POP"
    },
    "13716": {
      "op": "POP"
    },
    "13717": {
      "op": "POP"
    },
    "13718": {
      "op": "SWAP3"
    },
    "13719": {
      "op": "POP"
    },
    "13720": {
      "op": "SWAP3"
    },
    "13721": {
      "op": "SWAP1"
    },
    "13722": {
      "op": "POP"
    },
    "13723": {
      "jump": "o",
      "op": "JUMP"
    },
    "13724": {
      "op": "JUMPDEST"
    },
    "13725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13727": {
      "op": "DUP1"
    },
    "13728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13730": {
      "op": "DUP4"
    },
    "13731": {
      "op": "DUP6"
    },
    "13732": {
      "op": "SUB"
    },
    "13733": {
      "op": "SLT"
    },
    "13734": {
      "op": "ISZERO"
    },
    "13735": {
      "op": "PUSH2",
      "value": "0x35AF"
    },
    "13738": {
      "op": "JUMPI"
    },
    "13739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13741": {
      "op": "DUP1"
    },
    "13742": {
      "op": "REVERT"
    },
    "13743": {
      "op": "JUMPDEST"
    },
    "13744": {
      "op": "PUSH2",
      "value": "0x35B8"
    },
    "13747": {
      "op": "DUP4"
    },
    "13748": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13751": {
      "jump": "i",
      "op": "JUMP"
    },
    "13752": {
      "op": "JUMPDEST"
    },
    "13753": {
      "op": "SWAP2"
    },
    "13754": {
      "op": "POP"
    },
    "13755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13757": {
      "op": "DUP4"
    },
    "13758": {
      "op": "ADD"
    },
    "13759": {
      "op": "CALLDATALOAD"
    },
    "13760": {
      "op": "DUP1"
    },
    "13761": {
      "op": "ISZERO"
    },
    "13762": {
      "op": "ISZERO"
    },
    "13763": {
      "op": "DUP2"
    },
    "13764": {
      "op": "EQ"
    },
    "13765": {
      "op": "PUSH2",
      "value": "0x35CD"
    },
    "13768": {
      "op": "JUMPI"
    },
    "13769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13771": {
      "op": "DUP1"
    },
    "13772": {
      "op": "REVERT"
    },
    "13773": {
      "op": "JUMPDEST"
    },
    "13774": {
      "op": "DUP1"
    },
    "13775": {
      "op": "SWAP2"
    },
    "13776": {
      "op": "POP"
    },
    "13777": {
      "op": "POP"
    },
    "13778": {
      "op": "SWAP3"
    },
    "13779": {
      "op": "POP"
    },
    "13780": {
      "op": "SWAP3"
    },
    "13781": {
      "op": "SWAP1"
    },
    "13782": {
      "op": "POP"
    },
    "13783": {
      "jump": "o",
      "op": "JUMP"
    },
    "13784": {
      "op": "JUMPDEST"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13787": {
      "op": "DUP1"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13790": {
      "op": "DUP4"
    },
    "13791": {
      "op": "DUP6"
    },
    "13792": {
      "op": "SUB"
    },
    "13793": {
      "op": "SLT"
    },
    "13794": {
      "op": "ISZERO"
    },
    "13795": {
      "op": "PUSH2",
      "value": "0x35EB"
    },
    "13798": {
      "op": "JUMPI"
    },
    "13799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13801": {
      "op": "DUP1"
    },
    "13802": {
      "op": "REVERT"
    },
    "13803": {
      "op": "JUMPDEST"
    },
    "13804": {
      "op": "PUSH2",
      "value": "0x35F4"
    },
    "13807": {
      "op": "DUP4"
    },
    "13808": {
      "op": "PUSH2",
      "value": "0x34AE"
    },
    "13811": {
      "jump": "i",
      "op": "JUMP"
    },
    "13812": {
      "op": "JUMPDEST"
    },
    "13813": {
      "op": "SWAP2"
    },
    "13814": {
      "op": "POP"
    },
    "13815": {
      "op": "PUSH2",
      "value": "0x3602"
    },
    "13818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13820": {
      "op": "DUP5"
    },
    "13821": {
      "op": "ADD"
    },
    "13822": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13825": {
      "jump": "i",
      "op": "JUMP"
    },
    "13826": {
      "op": "JUMPDEST"
    },
    "13827": {
      "op": "SWAP1"
    },
    "13828": {
      "op": "POP"
    },
    "13829": {
      "op": "SWAP3"
    },
    "13830": {
      "op": "POP"
    },
    "13831": {
      "op": "SWAP3"
    },
    "13832": {
      "op": "SWAP1"
    },
    "13833": {
      "op": "POP"
    },
    "13834": {
      "jump": "o",
      "op": "JUMP"
    },
    "13835": {
      "op": "JUMPDEST"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13838": {
      "op": "DUP1"
    },
    "13839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13841": {
      "op": "DUP1"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13844": {
      "op": "DUP6"
    },
    "13845": {
      "op": "DUP8"
    },
    "13846": {
      "op": "SUB"
    },
    "13847": {
      "op": "SLT"
    },
    "13848": {
      "op": "ISZERO"
    },
    "13849": {
      "op": "PUSH2",
      "value": "0x3621"
    },
    "13852": {
      "op": "JUMPI"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13855": {
      "op": "DUP1"
    },
    "13856": {
      "op": "REVERT"
    },
    "13857": {
      "op": "JUMPDEST"
    },
    "13858": {
      "op": "PUSH2",
      "value": "0x362A"
    },
    "13861": {
      "op": "DUP6"
    },
    "13862": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13865": {
      "jump": "i",
      "op": "JUMP"
    },
    "13866": {
      "op": "JUMPDEST"
    },
    "13867": {
      "op": "SWAP4"
    },
    "13868": {
      "op": "POP"
    },
    "13869": {
      "op": "PUSH2",
      "value": "0x3638"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13874": {
      "op": "DUP7"
    },
    "13875": {
      "op": "ADD"
    },
    "13876": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13879": {
      "jump": "i",
      "op": "JUMP"
    },
    "13880": {
      "op": "JUMPDEST"
    },
    "13881": {
      "op": "SWAP3"
    },
    "13882": {
      "op": "POP"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13885": {
      "op": "DUP6"
    },
    "13886": {
      "op": "ADD"
    },
    "13887": {
      "op": "CALLDATALOAD"
    },
    "13888": {
      "op": "SWAP2"
    },
    "13889": {
      "op": "POP"
    },
    "13890": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13892": {
      "op": "DUP6"
    },
    "13893": {
      "op": "ADD"
    },
    "13894": {
      "op": "CALLDATALOAD"
    },
    "13895": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13904": {
      "op": "DUP2"
    },
    "13905": {
      "op": "GT"
    },
    "13906": {
      "op": "ISZERO"
    },
    "13907": {
      "op": "PUSH2",
      "value": "0x365B"
    },
    "13910": {
      "op": "JUMPI"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13913": {
      "op": "DUP1"
    },
    "13914": {
      "op": "REVERT"
    },
    "13915": {
      "op": "JUMPDEST"
    },
    "13916": {
      "op": "DUP6"
    },
    "13917": {
      "op": "ADD"
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13920": {
      "op": "DUP2"
    },
    "13921": {
      "op": "ADD"
    },
    "13922": {
      "op": "DUP8"
    },
    "13923": {
      "op": "SGT"
    },
    "13924": {
      "op": "PUSH2",
      "value": "0x366C"
    },
    "13927": {
      "op": "JUMPI"
    },
    "13928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13930": {
      "op": "DUP1"
    },
    "13931": {
      "op": "REVERT"
    },
    "13932": {
      "op": "JUMPDEST"
    },
    "13933": {
      "op": "PUSH2",
      "value": "0x367B"
    },
    "13936": {
      "op": "DUP8"
    },
    "13937": {
      "op": "DUP3"
    },
    "13938": {
      "op": "CALLDATALOAD"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13941": {
      "op": "DUP5"
    },
    "13942": {
      "op": "ADD"
    },
    "13943": {
      "op": "PUSH2",
      "value": "0x3306"
    },
    "13946": {
      "jump": "i",
      "op": "JUMP"
    },
    "13947": {
      "op": "JUMPDEST"
    },
    "13948": {
      "op": "SWAP2"
    },
    "13949": {
      "op": "POP"
    },
    "13950": {
      "op": "POP"
    },
    "13951": {
      "op": "SWAP3"
    },
    "13952": {
      "op": "SWAP6"
    },
    "13953": {
      "op": "SWAP2"
    },
    "13954": {
      "op": "SWAP5"
    },
    "13955": {
      "op": "POP"
    },
    "13956": {
      "op": "SWAP3"
    },
    "13957": {
      "op": "POP"
    },
    "13958": {
      "jump": "o",
      "op": "JUMP"
    },
    "13959": {
      "op": "JUMPDEST"
    },
    "13960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13962": {
      "op": "DUP1"
    },
    "13963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13965": {
      "op": "DUP4"
    },
    "13966": {
      "op": "DUP6"
    },
    "13967": {
      "op": "SUB"
    },
    "13968": {
      "op": "SLT"
    },
    "13969": {
      "op": "ISZERO"
    },
    "13970": {
      "op": "PUSH2",
      "value": "0x369A"
    },
    "13973": {
      "op": "JUMPI"
    },
    "13974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13976": {
      "op": "DUP1"
    },
    "13977": {
      "op": "REVERT"
    },
    "13978": {
      "op": "JUMPDEST"
    },
    "13979": {
      "op": "PUSH2",
      "value": "0x35F4"
    },
    "13982": {
      "op": "DUP4"
    },
    "13983": {
      "op": "PUSH2",
      "value": "0x325E"
    },
    "13986": {
      "jump": "i",
      "op": "JUMP"
    },
    "13987": {
      "op": "JUMPDEST"
    },
    "13988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13990": {
      "op": "DUP2"
    },
    "13991": {
      "op": "DUP2"
    },
    "13992": {
      "op": "SHR"
    },
    "13993": {
      "op": "SWAP1"
    },
    "13994": {
      "op": "DUP3"
    },
    "13995": {
      "op": "AND"
    },
    "13996": {
      "op": "DUP1"
    },
    "13997": {
      "op": "PUSH2",
      "value": "0x36B7"
    },
    "14000": {
      "op": "JUMPI"
    },
    "14001": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14003": {
      "op": "DUP3"
    },
    "14004": {
      "op": "AND"
    },
    "14005": {
      "op": "SWAP2"
    },
    "14006": {
      "op": "POP"
    },
    "14007": {
      "op": "JUMPDEST"
    },
    "14008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14010": {
      "op": "DUP3"
    },
    "14011": {
      "op": "LT"
    },
    "14012": {
      "op": "DUP2"
    },
    "14013": {
      "op": "EQ"
    },
    "14014": {
      "op": "ISZERO"
    },
    "14015": {
      "op": "PUSH2",
      "value": "0x36D8"
    },
    "14018": {
      "op": "JUMPI"
    },
    "14019": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14024": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14026": {
      "op": "SHL"
    },
    "14027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14029": {
      "op": "MSTORE"
    },
    "14030": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14034": {
      "op": "MSTORE"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14039": {
      "op": "REVERT"
    },
    "14040": {
      "op": "JUMPDEST"
    },
    "14041": {
      "op": "POP"
    },
    "14042": {
      "op": "SWAP2"
    },
    "14043": {
      "op": "SWAP1"
    },
    "14044": {
      "op": "POP"
    },
    "14045": {
      "jump": "o",
      "op": "JUMP"
    },
    "14046": {
      "op": "JUMPDEST"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14049": {
      "op": "DUP1"
    },
    "14050": {
      "op": "DUP3"
    },
    "14051": {
      "op": "MSTORE"
    },
    "14052": {
      "op": "DUP2"
    },
    "14053": {
      "op": "DUP2"
    },
    "14054": {
      "op": "ADD"
    },
    "14055": {
      "op": "MSTORE"
    },
    "14056": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14091": {
      "op": "DUP3"
    },
    "14092": {
      "op": "ADD"
    },
    "14093": {
      "op": "MSTORE"
    },
    "14094": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14096": {
      "op": "ADD"
    },
    "14097": {
      "op": "SWAP1"
    },
    "14098": {
      "jump": "o",
      "op": "JUMP"
    },
    "14099": {
      "op": "JUMPDEST"
    },
    "14100": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14107": {
      "op": "SHL"
    },
    "14108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14110": {
      "op": "MSTORE"
    },
    "14111": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14113": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14115": {
      "op": "MSTORE"
    },
    "14116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14120": {
      "op": "REVERT"
    },
    "14121": {
      "op": "JUMPDEST"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14124": {
      "op": "DUP3"
    },
    "14125": {
      "op": "DUP3"
    },
    "14126": {
      "op": "LT"
    },
    "14127": {
      "op": "ISZERO"
    },
    "14128": {
      "op": "PUSH2",
      "value": "0x373B"
    },
    "14131": {
      "op": "JUMPI"
    },
    "14132": {
      "op": "PUSH2",
      "value": "0x373B"
    },
    "14135": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14138": {
      "jump": "i",
      "op": "JUMP"
    },
    "14139": {
      "op": "JUMPDEST"
    },
    "14140": {
      "op": "POP"
    },
    "14141": {
      "op": "SUB"
    },
    "14142": {
      "op": "SWAP1"
    },
    "14143": {
      "jump": "o",
      "op": "JUMP"
    },
    "14144": {
      "op": "JUMPDEST"
    },
    "14145": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14152": {
      "op": "SHL"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14155": {
      "op": "MSTORE"
    },
    "14156": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14160": {
      "op": "MSTORE"
    },
    "14161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14165": {
      "op": "REVERT"
    },
    "14166": {
      "op": "JUMPDEST"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14171": {
      "op": "NOT"
    },
    "14172": {
      "op": "DUP3"
    },
    "14173": {
      "op": "EQ"
    },
    "14174": {
      "op": "ISZERO"
    },
    "14175": {
      "op": "PUSH2",
      "value": "0x376A"
    },
    "14178": {
      "op": "JUMPI"
    },
    "14179": {
      "op": "PUSH2",
      "value": "0x376A"
    },
    "14182": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14185": {
      "jump": "i",
      "op": "JUMP"
    },
    "14186": {
      "op": "JUMPDEST"
    },
    "14187": {
      "op": "POP"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14190": {
      "op": "ADD"
    },
    "14191": {
      "op": "SWAP1"
    },
    "14192": {
      "jump": "o",
      "op": "JUMP"
    },
    "14193": {
      "op": "JUMPDEST"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14196": {
      "op": "DUP1"
    },
    "14197": {
      "op": "DUP3"
    },
    "14198": {
      "op": "MSTORE"
    },
    "14199": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14201": {
      "op": "SWAP1"
    },
    "14202": {
      "op": "DUP3"
    },
    "14203": {
      "op": "ADD"
    },
    "14204": {
      "op": "MSTORE"
    },
    "14205": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14240": {
      "op": "DUP3"
    },
    "14241": {
      "op": "ADD"
    },
    "14242": {
      "op": "MSTORE"
    },
    "14243": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14261": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14263": {
      "op": "SHL"
    },
    "14264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14266": {
      "op": "DUP3"
    },
    "14267": {
      "op": "ADD"
    },
    "14268": {
      "op": "MSTORE"
    },
    "14269": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14271": {
      "op": "ADD"
    },
    "14272": {
      "op": "SWAP1"
    },
    "14273": {
      "jump": "o",
      "op": "JUMP"
    },
    "14274": {
      "op": "JUMPDEST"
    },
    "14275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14277": {
      "op": "DUP1"
    },
    "14278": {
      "op": "DUP3"
    },
    "14279": {
      "op": "MSTORE"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14282": {
      "op": "SWAP1"
    },
    "14283": {
      "op": "DUP3"
    },
    "14284": {
      "op": "ADD"
    },
    "14285": {
      "op": "MSTORE"
    },
    "14286": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14305": {
      "op": "SHL"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14308": {
      "op": "DUP3"
    },
    "14309": {
      "op": "ADD"
    },
    "14310": {
      "op": "MSTORE"
    },
    "14311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14313": {
      "op": "ADD"
    },
    "14314": {
      "op": "SWAP1"
    },
    "14315": {
      "jump": "o",
      "op": "JUMP"
    },
    "14316": {
      "op": "JUMPDEST"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14319": {
      "op": "DUP1"
    },
    "14320": {
      "op": "DUP3"
    },
    "14321": {
      "op": "MSTORE"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "14324": {
      "op": "SWAP1"
    },
    "14325": {
      "op": "DUP3"
    },
    "14326": {
      "op": "ADD"
    },
    "14327": {
      "op": "MSTORE"
    },
    "14328": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F77656420616D6F756E74207065722074"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14363": {
      "op": "DUP3"
    },
    "14364": {
      "op": "ADD"
    },
    "14365": {
      "op": "MSTORE"
    },
    "14366": {
      "op": "PUSH10",
      "value": "0x3930B739B0B1BA34B7B7"
    },
    "14377": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "14379": {
      "op": "SHL"
    },
    "14380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14382": {
      "op": "DUP3"
    },
    "14383": {
      "op": "ADD"
    },
    "14384": {
      "op": "MSTORE"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14387": {
      "op": "ADD"
    },
    "14388": {
      "op": "SWAP1"
    },
    "14389": {
      "jump": "o",
      "op": "JUMP"
    },
    "14390": {
      "op": "JUMPDEST"
    },
    "14391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14393": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14395": {
      "op": "DUP3"
    },
    "14396": {
      "op": "AND"
    },
    "14397": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14399": {
      "op": "DUP5"
    },
    "14400": {
      "op": "AND"
    },
    "14401": {
      "op": "DUP1"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14404": {
      "op": "SUB"
    },
    "14405": {
      "op": "DUP3"
    },
    "14406": {
      "op": "GT"
    },
    "14407": {
      "op": "ISZERO"
    },
    "14408": {
      "op": "PUSH2",
      "value": "0x3853"
    },
    "14411": {
      "op": "JUMPI"
    },
    "14412": {
      "op": "PUSH2",
      "value": "0x3853"
    },
    "14415": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14418": {
      "jump": "i",
      "op": "JUMP"
    },
    "14419": {
      "op": "JUMPDEST"
    },
    "14420": {
      "op": "ADD"
    },
    "14421": {
      "op": "SWAP4"
    },
    "14422": {
      "op": "SWAP3"
    },
    "14423": {
      "op": "POP"
    },
    "14424": {
      "op": "POP"
    },
    "14425": {
      "op": "POP"
    },
    "14426": {
      "jump": "o",
      "op": "JUMP"
    },
    "14427": {
      "op": "JUMPDEST"
    },
    "14428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14430": {
      "op": "DUP3"
    },
    "14431": {
      "op": "NOT"
    },
    "14432": {
      "op": "DUP3"
    },
    "14433": {
      "op": "GT"
    },
    "14434": {
      "op": "ISZERO"
    },
    "14435": {
      "op": "PUSH2",
      "value": "0x386E"
    },
    "14438": {
      "op": "JUMPI"
    },
    "14439": {
      "op": "PUSH2",
      "value": "0x386E"
    },
    "14442": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14445": {
      "jump": "i",
      "op": "JUMP"
    },
    "14446": {
      "op": "JUMPDEST"
    },
    "14447": {
      "op": "POP"
    },
    "14448": {
      "op": "ADD"
    },
    "14449": {
      "op": "SWAP1"
    },
    "14450": {
      "jump": "o",
      "op": "JUMP"
    },
    "14451": {
      "op": "JUMPDEST"
    },
    "14452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14454": {
      "op": "DUP1"
    },
    "14455": {
      "op": "DUP3"
    },
    "14456": {
      "op": "MSTORE"
    },
    "14457": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "14459": {
      "op": "SWAP1"
    },
    "14460": {
      "op": "DUP3"
    },
    "14461": {
      "op": "ADD"
    },
    "14462": {
      "op": "MSTORE"
    },
    "14463": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "14496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14498": {
      "op": "DUP3"
    },
    "14499": {
      "op": "ADD"
    },
    "14500": {
      "op": "MSTORE"
    },
    "14501": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "14534": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14536": {
      "op": "DUP3"
    },
    "14537": {
      "op": "ADD"
    },
    "14538": {
      "op": "MSTORE"
    },
    "14539": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14541": {
      "op": "ADD"
    },
    "14542": {
      "op": "SWAP1"
    },
    "14543": {
      "jump": "o",
      "op": "JUMP"
    },
    "14544": {
      "op": "JUMPDEST"
    },
    "14545": {
      "op": "DUP1"
    },
    "14546": {
      "op": "SLOAD"
    },
    "14547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14549": {
      "op": "SWAP1"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14552": {
      "op": "DUP2"
    },
    "14553": {
      "op": "DUP2"
    },
    "14554": {
      "op": "SHR"
    },
    "14555": {
      "op": "SWAP1"
    },
    "14556": {
      "op": "DUP1"
    },
    "14557": {
      "op": "DUP4"
    },
    "14558": {
      "op": "AND"
    },
    "14559": {
      "op": "DUP1"
    },
    "14560": {
      "op": "PUSH2",
      "value": "0x38EA"
    },
    "14563": {
      "op": "JUMPI"
    },
    "14564": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14566": {
      "op": "DUP4"
    },
    "14567": {
      "op": "AND"
    },
    "14568": {
      "op": "SWAP3"
    },
    "14569": {
      "op": "POP"
    },
    "14570": {
      "op": "JUMPDEST"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14573": {
      "op": "DUP1"
    },
    "14574": {
      "op": "DUP5"
    },
    "14575": {
      "op": "LT"
    },
    "14576": {
      "op": "DUP3"
    },
    "14577": {
      "op": "EQ"
    },
    "14578": {
      "op": "ISZERO"
    },
    "14579": {
      "op": "PUSH2",
      "value": "0x390C"
    },
    "14582": {
      "op": "JUMPI"
    },
    "14583": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14590": {
      "op": "SHL"
    },
    "14591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14593": {
      "op": "MSTORE"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14598": {
      "op": "MSTORE"
    },
    "14599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14603": {
      "op": "REVERT"
    },
    "14604": {
      "op": "JUMPDEST"
    },
    "14605": {
      "op": "DUP2"
    },
    "14606": {
      "op": "DUP1"
    },
    "14607": {
      "op": "ISZERO"
    },
    "14608": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "14611": {
      "op": "JUMPI"
    },
    "14612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14614": {
      "op": "DUP2"
    },
    "14615": {
      "op": "EQ"
    },
    "14616": {
      "op": "PUSH2",
      "value": "0x3931"
    },
    "14619": {
      "op": "JUMPI"
    },
    "14620": {
      "op": "PUSH2",
      "value": "0x395E"
    },
    "14623": {
      "op": "JUMP"
    },
    "14624": {
      "op": "JUMPDEST"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14627": {
      "op": "NOT"
    },
    "14628": {
      "op": "DUP7"
    },
    "14629": {
      "op": "AND"
    },
    "14630": {
      "op": "DUP10"
    },
    "14631": {
      "op": "MSTORE"
    },
    "14632": {
      "op": "DUP5"
    },
    "14633": {
      "op": "DUP10"
    },
    "14634": {
      "op": "ADD"
    },
    "14635": {
      "op": "SWAP7"
    },
    "14636": {
      "op": "POP"
    },
    "14637": {
      "op": "PUSH2",
      "value": "0x395E"
    },
    "14640": {
      "op": "JUMP"
    },
    "14641": {
      "op": "JUMPDEST"
    },
    "14642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14644": {
      "op": "DUP9"
    },
    "14645": {
      "op": "DUP2"
    },
    "14646": {
      "op": "MSTORE"
    },
    "14647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14649": {
      "op": "SWAP1"
    },
    "14650": {
      "op": "KECCAK256"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14653": {
      "op": "JUMPDEST"
    },
    "14654": {
      "op": "DUP7"
    },
    "14655": {
      "op": "DUP2"
    },
    "14656": {
      "op": "LT"
    },
    "14657": {
      "op": "ISZERO"
    },
    "14658": {
      "op": "PUSH2",
      "value": "0x3956"
    },
    "14661": {
      "op": "JUMPI"
    },
    "14662": {
      "op": "DUP2"
    },
    "14663": {
      "op": "SLOAD"
    },
    "14664": {
      "op": "DUP12"
    },
    "14665": {
      "op": "DUP3"
    },
    "14666": {
      "op": "ADD"
    },
    "14667": {
      "op": "MSTORE"
    },
    "14668": {
      "op": "SWAP1"
    },
    "14669": {
      "op": "DUP6"
    },
    "14670": {
      "op": "ADD"
    },
    "14671": {
      "op": "SWAP1"
    },
    "14672": {
      "op": "DUP4"
    },
    "14673": {
      "op": "ADD"
    },
    "14674": {
      "op": "PUSH2",
      "value": "0x393D"
    },
    "14677": {
      "op": "JUMP"
    },
    "14678": {
      "op": "JUMPDEST"
    },
    "14679": {
      "op": "POP"
    },
    "14680": {
      "op": "POP"
    },
    "14681": {
      "op": "DUP5"
    },
    "14682": {
      "op": "DUP10"
    },
    "14683": {
      "op": "ADD"
    },
    "14684": {
      "op": "SWAP7"
    },
    "14685": {
      "op": "POP"
    },
    "14686": {
      "op": "JUMPDEST"
    },
    "14687": {
      "op": "POP"
    },
    "14688": {
      "op": "POP"
    },
    "14689": {
      "op": "POP"
    },
    "14690": {
      "op": "POP"
    },
    "14691": {
      "op": "POP"
    },
    "14692": {
      "op": "POP"
    },
    "14693": {
      "op": "SWAP3"
    },
    "14694": {
      "op": "SWAP2"
    },
    "14695": {
      "op": "POP"
    },
    "14696": {
      "op": "POP"
    },
    "14697": {
      "jump": "o",
      "op": "JUMP"
    },
    "14698": {
      "op": "JUMPDEST"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14701": {
      "op": "PUSH2",
      "value": "0x3976"
    },
    "14704": {
      "op": "DUP3"
    },
    "14705": {
      "op": "DUP7"
    },
    "14706": {
      "op": "PUSH2",
      "value": "0x38D0"
    },
    "14709": {
      "jump": "i",
      "op": "JUMP"
    },
    "14710": {
      "op": "JUMPDEST"
    },
    "14711": {
      "op": "DUP5"
    },
    "14712": {
      "op": "MLOAD"
    },
    "14713": {
      "op": "PUSH2",
      "value": "0x3986"
    },
    "14716": {
      "op": "DUP2"
    },
    "14717": {
      "op": "DUP4"
    },
    "14718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14720": {
      "op": "DUP10"
    },
    "14721": {
      "op": "ADD"
    },
    "14722": {
      "op": "PUSH2",
      "value": "0x31DA"
    },
    "14725": {
      "jump": "i",
      "op": "JUMP"
    },
    "14726": {
      "op": "JUMPDEST"
    },
    "14727": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "14730": {
      "op": "DUP2"
    },
    "14731": {
      "op": "DUP4"
    },
    "14732": {
      "op": "ADD"
    },
    "14733": {
      "op": "DUP7"
    },
    "14734": {
      "op": "PUSH2",
      "value": "0x38D0"
    },
    "14737": {
      "jump": "i",
      "op": "JUMP"
    },
    "14738": {
      "op": "JUMPDEST"
    },
    "14739": {
      "op": "SWAP8"
    },
    "14740": {
      "op": "SWAP7"
    },
    "14741": {
      "op": "POP"
    },
    "14742": {
      "op": "POP"
    },
    "14743": {
      "op": "POP"
    },
    "14744": {
      "op": "POP"
    },
    "14745": {
      "op": "POP"
    },
    "14746": {
      "op": "POP"
    },
    "14747": {
      "op": "POP"
    },
    "14748": {
      "jump": "o",
      "op": "JUMP"
    },
    "14749": {
      "op": "JUMPDEST"
    },
    "14750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14752": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14754": {
      "op": "DUP3"
    },
    "14755": {
      "op": "AND"
    },
    "14756": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14758": {
      "op": "DUP2"
    },
    "14759": {
      "op": "EQ"
    },
    "14760": {
      "op": "ISZERO"
    },
    "14761": {
      "op": "PUSH2",
      "value": "0x39B4"
    },
    "14764": {
      "op": "JUMPI"
    },
    "14765": {
      "op": "PUSH2",
      "value": "0x39B4"
    },
    "14768": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14771": {
      "jump": "i",
      "op": "JUMP"
    },
    "14772": {
      "op": "JUMPDEST"
    },
    "14773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14775": {
      "op": "ADD"
    },
    "14776": {
      "op": "SWAP3"
    },
    "14777": {
      "op": "SWAP2"
    },
    "14778": {
      "op": "POP"
    },
    "14779": {
      "op": "POP"
    },
    "14780": {
      "jump": "o",
      "op": "JUMP"
    },
    "14781": {
      "op": "JUMPDEST"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14784": {
      "op": "DUP2"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14787": {
      "op": "NOT"
    },
    "14788": {
      "op": "DIV"
    },
    "14789": {
      "op": "DUP4"
    },
    "14790": {
      "op": "GT"
    },
    "14791": {
      "op": "DUP3"
    },
    "14792": {
      "op": "ISZERO"
    },
    "14793": {
      "op": "ISZERO"
    },
    "14794": {
      "op": "AND"
    },
    "14795": {
      "op": "ISZERO"
    },
    "14796": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "14799": {
      "op": "JUMPI"
    },
    "14800": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "14803": {
      "op": "PUSH2",
      "value": "0x3713"
    },
    "14806": {
      "jump": "i",
      "op": "JUMP"
    },
    "14807": {
      "op": "JUMPDEST"
    },
    "14808": {
      "op": "POP"
    },
    "14809": {
      "op": "MUL"
    },
    "14810": {
      "op": "SWAP1"
    },
    "14811": {
      "jump": "o",
      "op": "JUMP"
    },
    "14812": {
      "op": "JUMPDEST"
    },
    "14813": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14818": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14820": {
      "op": "SHL"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14823": {
      "op": "MSTORE"
    },
    "14824": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14828": {
      "op": "MSTORE"
    },
    "14829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14833": {
      "op": "REVERT"
    },
    "14834": {
      "op": "JUMPDEST"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14837": {
      "op": "DUP3"
    },
    "14838": {
      "op": "PUSH2",
      "value": "0x3A01"
    },
    "14841": {
      "op": "JUMPI"
    },
    "14842": {
      "op": "PUSH2",
      "value": "0x3A01"
    },
    "14845": {
      "op": "PUSH2",
      "value": "0x39DC"
    },
    "14848": {
      "jump": "i",
      "op": "JUMP"
    },
    "14849": {
      "op": "JUMPDEST"
    },
    "14850": {
      "op": "POP"
    },
    "14851": {
      "op": "DIV"
    },
    "14852": {
      "op": "SWAP1"
    },
    "14853": {
      "jump": "o",
      "op": "JUMP"
    },
    "14854": {
      "op": "JUMPDEST"
    },
    "14855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14857": {
      "op": "DUP1"
    },
    "14858": {
      "op": "DUP3"
    },
    "14859": {
      "op": "MSTORE"
    },
    "14860": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14862": {
      "op": "SWAP1"
    },
    "14863": {
      "op": "DUP3"
    },
    "14864": {
      "op": "ADD"
    },
    "14865": {
      "op": "MSTORE"
    },
    "14866": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14901": {
      "op": "DUP3"
    },
    "14902": {
      "op": "ADD"
    },
    "14903": {
      "op": "MSTORE"
    },
    "14904": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14923": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14925": {
      "op": "SHL"
    },
    "14926": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14928": {
      "op": "DUP3"
    },
    "14929": {
      "op": "ADD"
    },
    "14930": {
      "op": "MSTORE"
    },
    "14931": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14933": {
      "op": "ADD"
    },
    "14934": {
      "op": "SWAP1"
    },
    "14935": {
      "jump": "o",
      "op": "JUMP"
    },
    "14936": {
      "op": "JUMPDEST"
    },
    "14937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14939": {
      "op": "DUP3"
    },
    "14940": {
      "op": "PUSH2",
      "value": "0x3A67"
    },
    "14943": {
      "op": "JUMPI"
    },
    "14944": {
      "op": "PUSH2",
      "value": "0x3A67"
    },
    "14947": {
      "op": "PUSH2",
      "value": "0x39DC"
    },
    "14950": {
      "jump": "i",
      "op": "JUMP"
    },
    "14951": {
      "op": "JUMPDEST"
    },
    "14952": {
      "op": "POP"
    },
    "14953": {
      "op": "MOD"
    },
    "14954": {
      "op": "SWAP1"
    },
    "14955": {
      "jump": "o",
      "op": "JUMP"
    },
    "14956": {
      "op": "JUMPDEST"
    },
    "14957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14963": {
      "op": "SHL"
    },
    "14964": {
      "op": "SUB"
    },
    "14965": {
      "op": "DUP6"
    },
    "14966": {
      "op": "DUP2"
    },
    "14967": {
      "op": "AND"
    },
    "14968": {
      "op": "DUP3"
    },
    "14969": {
      "op": "MSTORE"
    },
    "14970": {
      "op": "DUP5"
    },
    "14971": {
      "op": "AND"
    },
    "14972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14974": {
      "op": "DUP3"
    },
    "14975": {
      "op": "ADD"
    },
    "14976": {
      "op": "MSTORE"
    },
    "14977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14979": {
      "op": "DUP2"
    },
    "14980": {
      "op": "ADD"
    },
    "14981": {
      "op": "DUP4"
    },
    "14982": {
      "op": "SWAP1"
    },
    "14983": {
      "op": "MSTORE"
    },
    "14984": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14986": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14988": {
      "op": "DUP3"
    },
    "14989": {
      "op": "ADD"
    },
    "14990": {
      "op": "DUP2"
    },
    "14991": {
      "op": "SWAP1"
    },
    "14992": {
      "op": "MSTORE"
    },
    "14993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14995": {
      "op": "SWAP1"
    },
    "14996": {
      "op": "PUSH2",
      "value": "0x3A9F"
    },
    "14999": {
      "op": "SWAP1"
    },
    "15000": {
      "op": "DUP4"
    },
    "15001": {
      "op": "ADD"
    },
    "15002": {
      "op": "DUP5"
    },
    "15003": {
      "op": "PUSH2",
      "value": "0x3206"
    },
    "15006": {
      "jump": "i",
      "op": "JUMP"
    },
    "15007": {
      "op": "JUMPDEST"
    },
    "15008": {
      "op": "SWAP7"
    },
    "15009": {
      "op": "SWAP6"
    },
    "15010": {
      "op": "POP"
    },
    "15011": {
      "op": "POP"
    },
    "15012": {
      "op": "POP"
    },
    "15013": {
      "op": "POP"
    },
    "15014": {
      "op": "POP"
    },
    "15015": {
      "op": "POP"
    },
    "15016": {
      "jump": "o",
      "op": "JUMP"
    },
    "15017": {
      "op": "JUMPDEST"
    },
    "15018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15022": {
      "op": "DUP3"
    },
    "15023": {
      "op": "DUP5"
    },
    "15024": {
      "op": "SUB"
    },
    "15025": {
      "op": "SLT"
    },
    "15026": {
      "op": "ISZERO"
    },
    "15027": {
      "op": "PUSH2",
      "value": "0x3ABB"
    },
    "15030": {
      "op": "JUMPI"
    },
    "15031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15033": {
      "op": "DUP1"
    },
    "15034": {
      "op": "REVERT"
    },
    "15035": {
      "op": "JUMPDEST"
    },
    "15036": {
      "op": "DUP2"
    },
    "15037": {
      "op": "MLOAD"
    },
    "15038": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "15041": {
      "op": "DUP2"
    },
    "15042": {
      "op": "PUSH2",
      "value": "0x31A7"
    },
    "15045": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "3170a69c62c6335429fe7c17effb2798b22c26f6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol';\n\ncontract CryptidToken is ERC721, Pausable, Ownable, ERC721Burnable{ \n    using Strings for uint256;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 private stage = 0;\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n    address public withdrawDest1 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb;\n    address public withdrawDest2 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n    \n    // ~ Sale stages ~\n    // stage 0: Init \n    // stage 1: Free Whitelist \n    // stage 2: Presale \n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=1)\n    mapping(address => uint8) public whitelistUsers;\n    mapping(address => uint8) public whitelistMintCount;\n\n    // Presale mint (stage=2)\n    mapping(address => bool) public presaleUsers;\n    uint256 public presaleSupply;                       \n    uint256 public presalePrice = 0.04 ether;\n    uint8 public presaleMintMax = 5;                  \n    mapping(address => uint8) public presaleMintCount;\n\n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public salePrice = 0.05 ether;\n    uint256 public totalSaleSupply;         \n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _presaleSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        presaleSupply = _presaleSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    //Public mint function\n    function mint(uint8 _mintAmount) public payable whenNotPaused {\n        require(stage > 0, \"Minting not initiated. Currenly on stage 0 (init).\");\n        require(_mintAmount > 0, \"Mint amount must be greater than 0\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction\");\n        if (stage == 1) {\n        // Whitelist\n            require(whitelistUsers[msg.sender] > 0, \"Minter not whitelisted.\");\n            require(_mintAmount + whitelistMintCount[msg.sender] <= whitelistUsers[msg.sender], \"Transaction exceeds remaining whitelist mints\");\n            whitelistMintCount[msg.sender] += _mintAmount;\n    }   else if (stage == 2) {\n        // Presale  \n            require(msg.value >= presalePrice.mul(_mintAmount), \"Not enough ether sent\");\n            require(presaleUsers[msg.sender], \"Address not on presale list\");\n            require(totalSupply() + _mintAmount <= presaleSupply, \"Transaction exceeds pre-sale supply\");\n            require(_mintAmount + presaleMintCount[msg.sender] <= presaleMintMax, \"Transaction exceeds max allowed presale mints\");      \n            presaleMintCount[msg.sender] += _mintAmount;\n    }   else if (stage == 3) {\n        // Team Sale\n            require(owner() == msg.sender, \"Only Owner can mint at this stage\");\n            require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n            teamMintCount += _mintAmount;\n    }   else {\n        // Public Sale\n            require(msg.value >= salePrice.mul(_mintAmount), \"Not enough ether sent\");\n            require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        }\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function airdropCryptid(uint8 _mintAmount, address _to) public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage < 2, \"Past whitelist sale.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed amount per transaction\");\n        require(_mintAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(totalSupply()+ _mintAmount <= presaleSupply, \"Mint amount will exceed presale supply.\");\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(_to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    function setWhitelistUsers(address[] memory _users, uint8[] memory _mints) public onlyOwner {\n        require(stage < 2, \"Whitelist sale is concluded.\");\n        for(uint256 i=0;i<_users.length;i++)\n        whitelistUsers[_users[i]] = _mints[i];\n    }\n\n    function setPresaleUsers(address[] memory _users) public onlyOwner {\n        require(stage < 3, \"Presale is concluded.\");\n        for(uint256 i=0;i<_users.length;i++)\n        presaleUsers[_users[i]] = true;\n    }\n\n    function removeWhitelistUser(address _user) public onlyOwner {\n        require(stage < 2, \"Whitelist sale is concluded.\");\n        require(whitelistUsers[_user] > 0, \"User is not on whitelist.\");\n        whitelistUsers[_user] = 0;\n    }\n\n    function removePresaleUser(address _user) public onlyOwner {\n        require(presaleUsers[_user], \"User not on presale list.\");\n        presaleUsers[_user] = false;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() public onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function nextStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(stage < 4, \"No stages after public sale\");\n        stage++;\n    }\n    \n    function setTeamMintSupply(uint256 _newTeamMintSupply) public onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setPresalePrice(uint256 _newPresalePrice) public onlyOwner {\n        require(stage < 3, \"Presale is concluded.\");\n        presalePrice = _newPresalePrice;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) public onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) public onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function setWithdrawAddress(address _dest1, address _dest2) public onlyOwner {\n        withdrawDest1 = _dest1;\n        withdrawDest2 = _dest2;\n    }\n\n    function freezeProvenanceHash() public onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool hs, ) = payable(withdrawDest1).call{value: address(this).balance.mul(50).div(100)}(\"\");\n        require(hs, \"withdrawl 1 failed\");\n        (bool os, ) = payable(withdrawDest2).call{value: address(this).balance}(\"\");\n        require(os, \"withdrawl 2 failed\");\n    }\n\n    // Public view functions\n    function lastMintAddress() public view returns (address){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() public view returns (uint256){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return(totalSupply());\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n            \n    }\n\n    function getTokensLeft() public view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function getStage() public view returns (uint8) {\n        return stage;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n}",
  "sourceMap": "673:26:14:-:0;414:9077;673:26;;;-1:-1:-1;414:9077:14;673:26;;;;;;;;:::i;:::-;-1:-1:-1;705:37:14;;;;;;;;;;;;;-1:-1:-1;;;705:37:14;;;;;;;;;;;;:::i;:::-;-1:-1:-1;748:23:14;;;899:73;-1:-1:-1;;;;;;899:73:14;;;;;;978;;;-1:-1:-1;;;;;;978:73:14;1009:42;978:73;;;1530:10;1500:40;;1546:31;;;-1:-1:-1;;1546:31:14;1576:1;1546:31;;;1836:10;1809:37;;1898:500;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:2;;2146:5:14;;2153:7;;1441:13:2;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:8;921:18:0;:32::i;:::-;2172:13:14::1;:30:::0;;;2212:14:::1;:32:::0;;;2254:15:::1;:34:::0;;;2298:12:::1;:28:::0;;-1:-1:-1;;2298:28:14::1;;;::::0;::::1;;;::::0;;2336:18;;::::1;::::0;-1:-1:-1;;2336:18:14::1;::::0;::::1;::::0;::::1;:::i;:::-;;2364:27;:15;:25;;;;;:27;;:::i;:::-;1898:500:::0;;;;;;;414:9077;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:9:-;1032:19;;1050:1;1032:19;;;945:123::o;414:9077:14:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;414:9077:14;;;-1:-1:-1;414:9077:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:15;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:15;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:15:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:15;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;414:9077:14;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}